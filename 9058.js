(self.webpackChunkweb3_wallet = self.webpackChunkweb3_wallet || []).push([ [ 9058 ], {
  15250: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      di: () => getAmountInputFontStyle,
      Vi: () => getBalanceInfo,
      IJ: () => getGasFeeInfo,
      tN: () => send,
      cz: () => sendDAppTransaction
    });
    __webpack_require__(207452), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(194009), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(380115), __webpack_require__(504895), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(714913), __webpack_require__(498741), __webpack_require__(215195), 
    __webpack_require__(269193), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(815852), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(752231), 
    __webpack_require__(219693), __webpack_require__(301772), __webpack_require__(953746), 
    __webpack_require__(520861), __webpack_require__(571905), __webpack_require__(285213), 
    __webpack_require__(97182), __webpack_require__(512279), __webpack_require__(639302), 
    __webpack_require__(770147), __webpack_require__(866217), __webpack_require__(697966), 
    __webpack_require__(735186), __webpack_require__(135944), __webpack_require__(644787), 
    __webpack_require__(950632), __webpack_require__(552278), __webpack_require__(614245), 
    __webpack_require__(252492), __webpack_require__(193266), __webpack_require__(537192), 
    __webpack_require__(237220), __webpack_require__(482432), __webpack_require__(632483), 
    __webpack_require__(536696), __webpack_require__(458083);
    var ed25519_keypair = __webpack_require__(335011), TransactionBlock = __webpack_require__(259032), utils = __webpack_require__(404976), wallet_core = __webpack_require__(259159), gt_on_chain = __webpack_require__(296477), gt_tokens = __webpack_require__(871219), gt_networks = __webpack_require__(660862), calculate = __webpack_require__(745788), sui_types = __webpack_require__(394001), gt_fetch = __webpack_require__(525735), sui_http_transport = __webpack_require__(144888), dist = __webpack_require__(25842), SUI_ERROR_MAP_INSUFFICIENT_BALANCE = 1, gt_api_gas = __webpack_require__(145581), bignumber = __webpack_require__(760346), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var SuiRpc = function() {
      function SuiRpc(wasm, totalNetworkDic, suiProvider, suiSigner, suiAdapter) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, SuiRpc), _defineProperty(this, "wasm", void 0), _defineProperty(this, "totalNetworkDic", void 0), 
        _defineProperty(this, "suiProvider", void 0), _defineProperty(this, "suiSigner", void 0), 
        _defineProperty(this, "suiAdapter", void 0), this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, 
        this.suiProvider = suiProvider, this.suiSigner = suiSigner, this.suiAdapter = suiAdapter;
      }
      var Constructor, protoProps, staticProps, _getSuiTransactionBlock, _signSuiMessage, _init, _getSendNFTGasLimit, _getSuiTokenBalance, _getTokenInfo, _executeSuiTxBlock, _getSuiTxBlockGas, _sendSuiTransactionBlockBySwapPayload, _signSuiTransactionBlock, _sendSui, _getSuiSendGasFee, _getSuiGasFeeByBlocks, _getSuiGasFeeByApi, _getGasUsedByApi;
      return Constructor = SuiRpc, protoProps = [ {
        key: "getGasUsedByApi",
        value: (_getGasUsedByApi = _asyncToGenerator(regeneratorRuntime.mark((function _callee(sender, receiver) {
          var tx, coin, txBytes, data;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return (tx = new TransactionBlock.K).setSender(sender), coin = tx.splitCoins(tx.gas, [ tx.pure(1) ]), 
              tx.transferObjects([ coin ], tx.pure(receiver)), _context.next = 6, tx.build({
                client: this.suiProvider
              });

             case 6:
              return txBytes = _context.sent, data = Buffer.from(txBytes).toString("base64"), 
              _context.next = 10, (0, gt_api_gas.so)({
                data
              });

             case 10:
              return _context.abrupt("return", _context.sent);

             case 11:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x, _x2) {
          return _getGasUsedByApi.apply(this, arguments);
        })
      }, {
        key: "getSuiGasFeeByApi",
        value: (_getSuiGasFeeByApi = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(sender, receiver) {
          var network, coinPrice, gasLimit, transitionFee;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return network = this.totalNetworkDic[SuiRpc.networkKey], _context2.next = 3, (0, 
              gt_tokens.I)(SuiRpc.networkKey);

             case 3:
              return coinPrice = _context2.sent, _context2.next = 6, this.getGasUsedByApi(sender, receiver);

             case 6:
              return gasLimit = _context2.sent, transitionFee = (0, calculate.dataOperation)((0, 
              calculate.dataOperation)((0, calculate.dataOperation)(gasLimit.gas_used, 1.5), 2), Math.pow(10, parseInt(network.networkPrecision)), "/"), 
              (0, bignumber.g)(gasLimit.gas_used).isZero() && gasLimit.needed_gas_amount > 0 && (transitionFee = (0, 
              calculate.dataOperation)(gasLimit.needed_gas_amount, Math.pow(10, parseInt(network.networkPrecision)), "/")), 
              _context2.abrupt("return", {
                gasLimit: gasLimit.gas_used,
                gasFee: transitionFee,
                gasFeeUsd: (0, calculate.dataOperation)(transitionFee, coinPrice)
              });

             case 10:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x3, _x4) {
          return _getSuiGasFeeByApi.apply(this, arguments);
        })
      }, {
        key: "getSuiGasFeeByBlocks",
        value: (_getSuiGasFeeByBlocks = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(sender, receiver, amount, token) {
          var _result$gasBudget, _result$gasFee, _result$gasFee2, network, coinPrecision, coinAddress, coinPrice, coinIsMain, params, result;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return network = this.totalNetworkDic[SuiRpc.networkKey], coinPrecision = network.networkPrecision, 
              coinAddress = (0, gt_tokens.N8)(token, SuiRpc.networkKey, "coinAddress"), _context3.next = 5, 
              (0, gt_tokens.I)(SuiRpc.networkKey);

             case 5:
              return coinPrice = _context3.sent, coinIsMain = (0, gt_tokens.hT)(coinAddress), 
              "-" === coinAddress && (coinAddress = "0x2::sui::SUI"), params = _objectSpread({
                tokenType: coinIsMain ? dist.JS.SUI : dist.JS.SUI20,
                sender,
                from: sender,
                to: receiver,
                amount,
                decimals: parseInt(coinPrecision)
              }, coinIsMain ? {} : {
                tokenAddress: coinAddress
              }), _context3.next = 11, this.suiAdapter.estimateGas(params);

             case 11:
              return result = _context3.sent, _context3.abrupt("return", {
                gasLimit: null == result || null === (_result$gasBudget = result.gasBudget) || void 0 === _result$gasBudget ? void 0 : _result$gasBudget.toNumber(),
                gasFee: null == result || null === (_result$gasFee = result.gasFee) || void 0 === _result$gasFee ? void 0 : _result$gasFee.toString(),
                gasFeeUsd: (0, calculate.dataOperation)(null == result || null === (_result$gasFee2 = result.gasFee) || void 0 === _result$gasFee2 ? void 0 : _result$gasFee2.toString(), coinPrice)
              });

             case 13:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x5, _x6, _x7, _x8) {
          return _getSuiGasFeeByBlocks.apply(this, arguments);
        })
      }, {
        key: "getSuiSendGasFee",
        value: (_getSuiSendGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(sender, receiver, amount, token) {
          var network, errorMsg;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              if (_context4.prev = 0, null != (network = this.totalNetworkDic[SuiRpc.networkKey]) && network.isTest || null != network && network.isCustom) {
                _context4.next = 8;
                break;
              }
              return _context4.next = 5, this.getSuiGasFeeByApi(sender, receiver);

             case 5:
             case 10:
              return _context4.abrupt("return", _context4.sent);

             case 8:
              return _context4.next = 10, this.getSuiGasFeeByBlocks(sender, receiver, amount, token);

             case 11:
              _context4.next = 17;
              break;

             case 13:
              return _context4.prev = 13, _context4.t0 = _context4.catch(0), errorMsg = null === _context4.t0 || void 0 === _context4.t0 ? void 0 : _context4.t0.toString(), 
              _context4.abrupt("return", {
                gasLimit: 0,
                gasFee: "0",
                gasFeeUsd: "0",
                errorMsg,
                errorType: (null == errorMsg ? void 0 : errorMsg.indexOf("GasBalanceTooLow")) >= 0 ? SUI_ERROR_MAP_INSUFFICIENT_BALANCE : 0
              });

             case 17:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this, [ [ 0, 13 ] ]);
        }))), function(_x9, _x10, _x11, _x12) {
          return _getSuiSendGasFee.apply(this, arguments);
        })
      }, {
        key: "sendSui",
        value: (_sendSui = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(params) {
          var receiver, sender, amount, privateKey, token, gasFeeInfo, gasLimit, coinAddress, coinPrecision, coinIsMain, buildParams, gasLimitResult, _gasLimitResult$gasBu, signParams, _yield$this$suiSigner, signature, txBytes, result;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              if (receiver = params.receiver, sender = params.sender, amount = params.amount, 
              privateKey = params.privateKey, token = params.token, gasFeeInfo = params.gasFeeInfo, 
              gasLimit = gasFeeInfo.gasLimit, coinAddress = (0, gt_tokens.N8)(token, SuiRpc.networkKey, "coinAddress"), 
              coinPrecision = (0, gt_tokens.N8)(token, SuiRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, SuiRpc.networkKey, "token_decimal"), coinIsMain = (0, gt_tokens.hT)(coinAddress), 
              "-" === coinAddress && (coinAddress = "0x2::sui::SUI"), buildParams = _objectSpread({
                tokenType: coinIsMain ? dist.JS.SUI : dist.JS.SUI20,
                sender,
                from: sender,
                to: receiver,
                amount,
                decimals: coinPrecision
              }, coinIsMain ? {} : {
                tokenAddress: coinAddress
              }), !gasLimit) {
                _context5.next = 11;
                break;
              }
              buildParams.gasBudget = Math.ceil(1.5 * Number(gasLimit)), _context5.next = 15;
              break;

             case 11:
              return _context5.next = 13, this.suiAdapter.estimateGas(buildParams);

             case 13:
              (gasLimitResult = _context5.sent).gasBudget && (buildParams.gasBudget = null === (_gasLimitResult$gasBu = gasLimitResult.gasBudget) || void 0 === _gasLimitResult$gasBu ? void 0 : _gasLimitResult$gasBu.toNumber());

             case 15:
              return signParams = {
                privateKey,
                data: buildParams
              }, _context5.next = 18, this.suiSigner.signTransaction(signParams);

             case 18:
              return _yield$this$suiSigner = _context5.sent, signature = _yield$this$suiSigner.signature, 
              txBytes = _yield$this$suiSigner.txBytes, _context5.next = 23, this.suiAdapter.sendTransaction(txBytes, signature);

             case 23:
              return result = _context5.sent, _context5.abrupt("return", result.digest || "");

             case 25:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x13) {
          return _sendSui.apply(this, arguments);
        })
      }, {
        key: "signSuiTransactionBlock",
        value: (_signSuiTransactionBlock = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(privateKey, transactionBlock) {
          var tx, keypair, transactionBytes, result;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return _context6.prev = 0, tx = TransactionBlock.K.from(transactionBlock), keypair = ed25519_keypair.h.fromSecretKey((0, 
              utils.aT)(privateKey)), tx.setSenderIfNotSet(keypair.toSuiAddress()), _context6.next = 6, 
              tx.build({
                client: this.suiProvider
              });

             case 6:
              return transactionBytes = _context6.sent, _context6.next = 9, keypair.signTransactionBlock(transactionBytes);

             case 9:
              return result = _context6.sent, _context6.abrupt("return", _objectSpread(_objectSpread({}, result), {}, {
                transactionBlockBytes: null == result ? void 0 : result.bytes
              }));

             case 13:
              return _context6.prev = 13, _context6.t0 = _context6.catch(0), _context6.abrupt("return", {
                bytes: "",
                signature: "",
                transactionBlockBytes: ""
              });

             case 16:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this, [ [ 0, 13 ] ]);
        }))), function(_x14, _x15) {
          return _signSuiTransactionBlock.apply(this, arguments);
        })
      }, {
        key: "sendSuiTransactionBlockBySwapPayload",
        value: (_sendSuiTransactionBlockBySwapPayload = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(privateKey, swapPayload) {
          var tx, keypair, result;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return _context7.prev = 0, tx = TransactionBlock.K.from(Buffer.from(swapPayload, "base64").toString("utf-8")), 
              keypair = ed25519_keypair.h.fromSecretKey((0, utils.aT)(privateKey)), tx.setSenderIfNotSet(keypair.toSuiAddress()), 
              _context7.next = 6, this.suiProvider.signAndExecuteTransactionBlock({
                transactionBlock: tx,
                signer: keypair
              });

             case 6:
              return result = _context7.sent, _context7.abrupt("return", result);

             case 10:
              return _context7.prev = 10, _context7.t0 = _context7.catch(0), _context7.abrupt("return", "");

             case 13:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this, [ [ 0, 10 ] ]);
        }))), function(_x16, _x17) {
          return _sendSuiTransactionBlockBySwapPayload.apply(this, arguments);
        })
      }, {
        key: "getSuiTxBlockGas",
        value: (_getSuiTxBlockGas = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(sender, transactionBlock) {
          var _result$effects, tx, txString, result, gasUsedObject, total, max, gasLimit;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return _context8.prev = 0, (tx = TransactionBlock.K.from(transactionBlock)).setSender(sender), 
              _context8.next = 5, tx.build({
                client: this.suiProvider
              });

             case 5:
              return txString = _context8.sent, _context8.next = 8, this.suiProvider.dryRunTransactionBlock({
                transactionBlock: txString
              });

             case 8:
              return result = _context8.sent, gasUsedObject = null == result || null === (_result$effects = result.effects) || void 0 === _result$effects ? void 0 : _result$effects.gasUsed, 
              total = parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) + parseInt(null == gasUsedObject ? void 0 : gasUsedObject.storageCost) - parseInt(null == gasUsedObject ? void 0 : gasUsedObject.storageRebate), 
              max = parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) > total ? parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) : total, 
              gasLimit = parseInt((0, calculate.dataOperation)(max, 1.3)), _context8.abrupt("return", gasLimit);

             case 16:
              return _context8.prev = 16, _context8.t0 = _context8.catch(0), _context8.abrupt("return", 0);

             case 19:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this, [ [ 0, 16 ] ]);
        }))), function(_x18, _x19) {
          return _getSuiTxBlockGas.apply(this, arguments);
        })
      }, {
        key: "executeSuiTxBlock",
        value: (_executeSuiTxBlock = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(sender, privateKey, transactionBlock, gasLimit, rpcUrl) {
          var keypair, tx, result, getInfo;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return keypair = ed25519_keypair.h.fromSecretKey((0, utils.aT)(privateKey)), (tx = TransactionBlock.K.from(transactionBlock)).setSender(sender), 
              tx.setGasBudget(BigInt(gasLimit)), _context10.next = 6, this.suiProvider.signAndExecuteTransactionBlock({
                transactionBlock: tx,
                signer: keypair
              });

             case 6:
              if (result = _context10.sent, getInfo = function() {
                var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee9() {
                  var res;
                  return regeneratorRuntime.wrap((function(_context9) {
                    for (;;) switch (_context9.prev = _context9.next) {
                     case 0:
                      return _context9.next = 2, SuiRpc.getSuiTransactionBlock(rpcUrl, null == result ? void 0 : result.digest);

                     case 2:
                      if (null == (res = _context9.sent) || !res.result) {
                        _context9.next = 7;
                        break;
                      }
                      return _context9.abrupt("return", null == res ? void 0 : res.result);

                     case 7:
                      return _context9.abrupt("return", {});

                     case 8:
                     case "end":
                      return _context9.stop();
                    }
                  }), _callee9);
                })));
                return function() {
                  return _ref.apply(this, arguments);
                };
              }(), null == result || !result.digest) {
                _context10.next = 14;
                break;
              }
              return _context10.next = 11, getInfo();

             case 11:
              return _context10.abrupt("return", _context10.sent);

             case 14:
              throw new Error("no digest");

             case 15:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x20, _x21, _x22, _x23, _x24) {
          return _executeSuiTxBlock.apply(this, arguments);
        })
      }, {
        key: "getTokenInfo",
        value: (_getTokenInfo = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(token) {
          var coinAddress, res;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return _context11.prev = 0, coinAddress = (0, gt_tokens.N8)(token, SuiRpc.networkKey, "coinAddress"), 
              _context11.next = 4, this.suiProvider.getCoinMetadata({
                coinType: coinAddress
              });

             case 4:
              return res = _context11.sent, _context11.abrupt("return", res);

             case 8:
              return _context11.prev = 8, _context11.t0 = _context11.catch(0), _context11.abrupt("return", null);

             case 11:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this, [ [ 0, 8 ] ]);
        }))), function(_x25) {
          return _getTokenInfo.apply(this, arguments);
        })
      }, {
        key: "getSuiTokenBalance",
        value: (_getSuiTokenBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(owner, token) {
          var coinAddress, result;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return _context12.prev = 0, "-" === (coinAddress = (0, gt_tokens.N8)(token, SuiRpc.networkKey, "coinAddress")) && (coinAddress = "0x2::sui::SUI"), 
              _context12.next = 5, this.suiAdapter.getBalance(owner, coinAddress);

             case 5:
              return result = _context12.sent, _context12.abrupt("return", {
                balance: result.formattedBalance
              });

             case 9:
              return _context12.prev = 9, _context12.t0 = _context12.catch(0), _context12.abrupt("return", {
                balance: "0"
              });

             case 12:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this, [ [ 0, 9 ] ]);
        }))), function(_x26, _x27) {
          return _getSuiTokenBalance.apply(this, arguments);
        })
      }, {
        key: "getSendNFTGasLimit",
        value: (_getSendNFTGasLimit = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(params) {
          var nft, sender, receiver, tx, txBytes, data;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return nft = params.nft, sender = params.sender, receiver = params.receiver, (tx = new TransactionBlock.K).setSender(sender), 
              tx.transferObjects([ tx.object(null == nft ? void 0 : nft.contractAddress) ], tx.pure(receiver)), 
              _context13.next = 6, tx.build({
                client: this.suiProvider
              });

             case 6:
              return txBytes = _context13.sent, data = Buffer.from(txBytes).toString("base64"), 
              _context13.next = 10, (0, gt_api_gas.so)({
                data
              });

             case 10:
              return _context13.abrupt("return", _context13.sent);

             case 11:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x28) {
          return _getSendNFTGasLimit.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var _yield$Promise$all, _yield$Promise$all2, wasm, rpcUrl, suiProvider, transport, suiAdapter, suiSigner;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return _context14.next = 2, Promise.all([ (0, wallet_core.t)(), (0, gt_networks.gL)(totalNetworkDic, SuiRpc.networkKey, null == rpcUrls ? void 0 : rpcUrls[SuiRpc.networkKey], lastGetSuccessRpcTime) ]);

             case 2:
              return _yield$Promise$all = _context14.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              wasm = _yield$Promise$all2[0], rpcUrl = _yield$Promise$all2[1], suiProvider = (0, 
              gt_on_chain.Qp)(SuiRpc.networkKey, totalNetworkDic, rpcUrl), transport = new sui_http_transport.A({
                url: rpcUrl
              }), suiAdapter = new dist.kN({
                transport
              }), suiSigner = new dist.ku({
                customProvider: suiAdapter.getProvider()
              }), _context14.abrupt("return", new SuiRpc(wasm, totalNetworkDic, suiProvider, suiSigner, suiAdapter));

             case 11:
             case "end":
              return _context14.stop();
            }
          }), _callee14);
        }))), function(_x29, _x30, _x31) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "parseAmount",
        value: function(amount, coinPrecision) {
          try {
            return BigInt((0, calculate.cutInteger)((0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision)))).toString());
          } catch (_unused) {
            return BigInt(0).toString();
          }
        }
      }, {
        key: "isSuiAddress",
        value: function(address) {
          return (0, sui_types.AP)(address);
        }
      }, {
        key: "isSuiObjectId",
        value: function(objectId) {
          return (0, sui_types.qD)(objectId);
        }
      }, {
        key: "signSuiMessage",
        value: (_signSuiMessage = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(privateKey, message) {
          var keypair, signedMsg;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return _context15.prev = 0, keypair = ed25519_keypair.h.fromSecretKey((0, utils.aT)(privateKey)), 
              _context15.next = 4, keypair.signPersonalMessage(new Uint8Array(message));

             case 4:
              return signedMsg = _context15.sent, _context15.abrupt("return", signedMsg);

             case 8:
              _context15.prev = 8, _context15.t0 = _context15.catch(0);

             case 10:
             case "end":
              return _context15.stop();
            }
          }), _callee15, null, [ [ 0, 8 ] ]);
        }))), function(_x32, _x33) {
          return _signSuiMessage.apply(this, arguments);
        })
      }, {
        key: "getSuiTransactionBlock",
        value: (_getSuiTransactionBlock = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(rpcUrl, digest) {
          var params, res;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return params = {
                jsonrpc: "2.0",
                id: 1,
                method: "sui_getTransactionBlock",
                params: [ digest, {
                  showInput: !0,
                  showRawInput: !1,
                  showEffects: !0,
                  showEvents: !0,
                  showObjectChanges: !1,
                  showBalanceChanges: !1,
                  showRawEffects: !1
                } ]
              }, _context16.next = 3, (0, gt_fetch.uJ)("POST", rpcUrl, {}, params);

             case 3:
              return res = _context16.sent, _context16.abrupt("return", res);

             case 5:
             case "end":
              return _context16.stop();
            }
          }), _callee16);
        }))), function(_x34, _x35) {
          return _getSuiTransactionBlock.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), SuiRpc;
    }();
    _defineProperty(SuiRpc, "networkKey", "SUI");
    const sui_rpc = SuiRpc;
    var gt_web_cookies = __webpack_require__(370123), system = __webpack_require__(721095), manifest = __webpack_require__(419969), send_receive = __webpack_require__(492774), cosmos_rpc = __webpack_require__(787773), solana_rpc = __webpack_require__(664311), nacl_util = (__webpack_require__(640173), 
    __webpack_require__(80475), __webpack_require__(348825), __webpack_require__(335231), 
    __webpack_require__(259581), __webpack_require__(976386)), nacl_util_default = __webpack_require__.n(nacl_util), bip32_ed25519 = __webpack_require__(444581), bip32_ed25519_default = __webpack_require__.n(bip32_ed25519), safe_buffer = __webpack_require__(192861);
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = function(o, minLen) {
          if (!o) return;
          if ("string" == typeof o) return gt_rpc_arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          "Object" === n && o.constructor && (n = o.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(o);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return gt_rpc_arrayLikeToArray(o, minLen);
        }(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e) {
              throw _e;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e2) {
          didErr = !0, err = _e2;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function gt_rpc_arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function gt_rpc_typeof(obj) {
      return gt_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, gt_rpc_typeof(obj);
    }
    function gt_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function gt_rpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            gt_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            gt_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function gt_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, gt_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function gt_rpc_defineProperty(obj, key, value) {
      return (key = gt_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function gt_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== gt_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== gt_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === gt_rpc_typeof(key) ? key : String(key);
    }
    var GtRpc = function() {
      function GtRpc(wasm, totalNetworkDic, rpcUrl) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, GtRpc), gt_rpc_defineProperty(this, "wasm", void 0), gt_rpc_defineProperty(this, "rpcUrl", void 0), 
        gt_rpc_defineProperty(this, "totalNetworkDic", void 0), this.rpcUrl = rpcUrl, this.totalNetworkDic = totalNetworkDic, 
        this.wasm = wasm;
      }
      var Constructor, protoProps, staticProps, _getSignBytes, _init, _generateGtTransaction, _getTxByHash, _getBlock, _signGT, _getGtGas, _getGtBalance, _getAccountBalance;
      return Constructor = GtRpc, protoProps = [ {
        key: "getAccountBalance",
        value: (_getAccountBalance = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(address) {
          var url, res;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return url = "".concat(this.rpcUrl, "/v1/account/balance/").concat(address), _context.next = 3, 
              (0, gt_fetch.uJ)("GET", url, {}, {}, "data");

             case 3:
              if (!(res = _context.sent).result.length) {
                _context.next = 6;
                break;
              }
              return _context.abrupt("return", res.result[0].amount);

             case 6:
              return _context.abrupt("return", "0");

             case 7:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _getAccountBalance.apply(this, arguments);
        })
      }, {
        key: "getGtBalance",
        value: (_getGtBalance = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(sender) {
          var _this$totalNetworkDic, amount, networkPrecision;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return _context2.next = 2, this.getAccountBalance(sender);

             case 2:
              return amount = _context2.sent, networkPrecision = null === (_this$totalNetworkDic = this.totalNetworkDic[GtRpc.networkKey]) || void 0 === _this$totalNetworkDic ? void 0 : _this$totalNetworkDic.networkPrecision, 
              _context2.abrupt("return", {
                balance: (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision)), "/")
              });

             case 5:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _getGtBalance.apply(this, arguments);
        })
      }, {
        key: "getGtGas",
        value: (_getGtGas = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
          var _this$totalNetworkDic2, sender, receiver, amount, network, minFee, sendAmount, _yield$this$generateG, gas_estimate, gas, networkPrecision, gasFee;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              network = this.totalNetworkDic[GtRpc.networkKey], minFee = "2400000", sendAmount = (0, 
              calculate.dataOperation)(amount, Math.pow(10, parseInt(null == network ? void 0 : network.networkPrecision))), 
              _context3.next = 6, this.generateGtTransaction({
                sender,
                receiver,
                sendAmount,
                simulate: !0
              });

             case 6:
              return _yield$this$generateG = _context3.sent, gas_estimate = _yield$this$generateG.gas_estimate, 
              gas = minFee, Number(gas_estimate) > Number(minFee) && (gas = gas_estimate), networkPrecision = null === (_this$totalNetworkDic2 = this.totalNetworkDic[GtRpc.networkKey]) || void 0 === _this$totalNetworkDic2 ? void 0 : _this$totalNetworkDic2.networkPrecision, 
              gasFee = (0, calculate.dataOperation)(gas, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context3.abrupt("return", {
                gasFee
              });

             case 13:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3) {
          return _getGtGas.apply(this, arguments);
        })
      }, {
        key: "signGT",
        value: (_signGT = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4(params) {
          var _this$totalNetworkDic3, sender, receiver, amount, privateKey, gasFee, networkPrecision, sendAmount, fee, tx, txBytes, signature, publicKey, sig;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              privateKey = params.privateKey, gasFee = params.gasFee, networkPrecision = null === (_this$totalNetworkDic3 = this.totalNetworkDic[GtRpc.networkKey]) || void 0 === _this$totalNetworkDic3 ? void 0 : _this$totalNetworkDic3.networkPrecision, 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision))), 
              fee = (0, calculate.dataOperation)(gasFee, Math.pow(10, parseInt(networkPrecision))), 
              _context4.next = 6, this.generateGtTransaction({
                sender,
                receiver,
                sendAmount,
                fee
              });

             case 6:
              return tx = _context4.sent, _context4.next = 9, GtRpc.getSignBytes(tx);

             case 9:
              return txBytes = _context4.sent, signature = GtRpc.sign(safe_buffer.Buffer.from(privateKey, "hex"), safe_buffer.Buffer.from(GtRpc.uint8ArrayToHex(txBytes), "hex")), 
              publicKey = GtRpc.edPubKey(privateKey.replace(/^0x/, "").substring(0, 64)), sig = {
                pub_key: {
                  type: "gatechain/PubKeyEd25519",
                  value: nacl_util_default().encodeBase64(publicKey)
                },
                signature: nacl_util_default().encodeBase64(signature)
              }, tx.value.signatures = [ sig ], _context4.abrupt("return", {
                tx,
                rpcUrl: this.rpcUrl
              });

             case 15:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x4) {
          return _signGT.apply(this, arguments);
        })
      }, {
        key: "getBlock",
        value: (_getBlock = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5() {
          var blockHeight, url, res, _args5 = arguments;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return blockHeight = _args5.length > 0 && void 0 !== _args5[0] ? _args5[0] : "latest", 
              url = "".concat(this.rpcUrl, "/v1/block/").concat(blockHeight), _context5.next = 4, 
              (0, gt_fetch.uJ)("GET", url, {}, {}, "data");

             case 4:
              return res = _context5.sent, _context5.abrupt("return", res);

             case 6:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function() {
          return _getBlock.apply(this, arguments);
        })
      }, {
        key: "getTxByHash",
        value: (_getTxByHash = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(hash) {
          var url, res;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return url = "".concat(this.rpcUrl, "/v1/tx/").concat(hash), _context6.next = 3, 
              (0, gt_fetch.uJ)("GET", url, {}, {}, "data");

             case 3:
              return res = _context6.sent, _context6.abrupt("return", res);

             case 5:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x5) {
          return _getTxByHash.apply(this, arguments);
        })
      }, {
        key: "generateGtTransaction",
        value: (_generateGtTransaction = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var sender, receiver, sendAmount, _params$fee, fee, _params$simulate, simulate, _yield$this$getBlock, height, url, txParams, res;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, sendAmount = params.sendAmount, 
              _params$fee = params.fee, fee = void 0 === _params$fee ? "100000" : _params$fee, 
              _params$simulate = params.simulate, simulate = void 0 !== _params$simulate && _params$simulate, 
              _context7.next = 3, this.getBlock();

             case 3:
              return _yield$this$getBlock = _context7.sent, height = _yield$this$getBlock.height, 
              url = "".concat(this.rpcUrl, "/v1/tx/send/").concat(receiver), txParams = {
                base_req: {
                  from: sender,
                  memo: "",
                  chain_id: "mainnet",
                  gas: "200000",
                  fees: [ {
                    denom: "NANOGT",
                    amount: fee
                  } ],
                  simulate,
                  valid_height: [ height, (0, calculate.dataOperation)(height, 200, "+").toString() ]
                },
                amount: [ {
                  denom: "NANOGT",
                  amount: sendAmount
                } ]
              }, _context7.next = 9, (0, gt_fetch.uJ)("POST", url, {}, txParams, "data");

             case 9:
              return res = _context7.sent, _context7.abrupt("return", res);

             case 11:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x6) {
          return _generateGtTransaction.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee8(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var wasm, rpcUrl;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return _context8.next = 2, (0, wallet_core.t)();

             case 2:
              if (wasm = _context8.sent, rpcUrl = "", !rpcUrls) {
                _context8.next = 8;
                break;
              }
              return _context8.next = 7, (0, gt_networks.gL)(totalNetworkDic, "GT_ORG", rpcUrls[GtRpc.networkKey], lastGetSuccessRpcTime || 0);

             case 7:
              rpcUrl = _context8.sent;

             case 8:
              return _context8.abrupt("return", new GtRpc(wasm, totalNetworkDic, rpcUrl));

             case 9:
             case "end":
              return _context8.stop();
            }
          }), _callee8);
        }))), function(_x7, _x8, _x9) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "isEthAddress",
        value: function(address) {
          return /^0[xX][0-9a-fA-F]{40}$/.test(address);
        }
      }, {
        key: "add28Mul8",
        value: function(kl, zl) {
          for (var carry = 0, out = new Uint8Array(32), i = 0; i < 28; i++) {
            var r = kl[i] + (zl[i] << 3) + carry;
            out[i] = 255 & r, carry = r >> 8;
          }
          for (var _i = 28; _i < 32; _i++) {
            var _r = kl[_i] + carry;
            out[_i] = 255 & _r, carry = _r >> 8;
          }
          return out;
        }
      }, {
        key: "add256Bits",
        value: function(kr, zr) {
          for (var carry = 0, out = new Uint8Array(32), i = 0; i < 32; i++) {
            var r = kr[i] + zr[i] + carry;
            out[i] = 255 & r, carry = r >> 8;
          }
          return out;
        }
      }, {
        key: "uint8ArrayToHex",
        value: function(uint8Array) {
          return Array.from(uint8Array, (function(_byte) {
            return _byte.toString(16).padStart(2, "0");
          })).join("");
        }
      }, {
        key: "sortObject",
        value: function(obj) {
          if (null === obj || "object" !== gt_rpc_typeof(obj)) return obj;
          if (Array.isArray(obj)) return obj.map(GtRpc.sortObject).sort();
          var _step, result = {}, _iterator = _createForOfIteratorHelper(Object.keys(obj).sort());
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var key = _step.value;
              result[key] = GtRpc.sortObject(obj[key]);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return result;
        }
      }, {
        key: "getNonce",
        value: function() {
          return function(buffer) {
            for (var binary = "", bytes = new Uint8Array(buffer), len = bytes.byteLength, i = 0; i < len; i++) binary += String.fromCharCode(bytes[i]);
            return window.btoa(binary);
          }(function(length) {
            var bytes = new Uint8Array(length);
            return window.crypto.getRandomValues(bytes), bytes;
          }(32));
        }
      }, {
        key: "getSignBytes",
        value: (_getSignBytes = gt_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee9(tx) {
          var message, sortedMessage, encodedMessage, hashBuffer;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return message = {
                chain_id: "mainnet",
                fee: tx.value.fee,
                memo: tx.value.memo,
                msgs: tx.value.msg,
                nonces: tx.value.nonces,
                valid_height: tx.value.valid_height
              }, sortedMessage = GtRpc.sortObject(message), encodedMessage = safe_buffer.Buffer.from(JSON.stringify(sortedMessage)), 
              _context9.next = 5, crypto.subtle.digest("SHA-256", encodedMessage);

             case 5:
              return hashBuffer = _context9.sent, _context9.abrupt("return", new Uint8Array(hashBuffer));

             case 7:
             case "end":
              return _context9.stop();
            }
          }), _callee9);
        }))), function(_x10) {
          return _getSignBytes.apply(this, arguments);
        })
      }, {
        key: "sign",
        value: function(privateKey, message) {
          return bip32_ed25519_default().sign(message, privateKey);
        }
      }, {
        key: "edPubKey",
        value: function(privateKey) {
          return "string" == typeof privateKey && (privateKey = safe_buffer.Buffer.from(privateKey, "hex")), 
          bip32_ed25519_default().toPublic(privateKey);
        }
      } ], protoProps && gt_rpc_defineProperties(Constructor.prototype, protoProps), staticProps && gt_rpc_defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), GtRpc;
    }();
    gt_rpc_defineProperty(GtRpc, "networkKey", "GT_ORG");
    const gt_rpc = GtRpc;
    var substrate_rpc = __webpack_require__(194470), NETWORKKEY_TO_PRIVATEKEY_MAP_APT = (__webpack_require__(196088), 
    __webpack_require__(718636), "d3b355d265b479fef40682f30c20d0e38c64553efad464e711ebbec95b1f3244"), APTOS_NETWORKKEY_TO_GRAPHQL_MAP = {
      APT: "https://api.mainnet.aptoslabs.com/v1/graphql",
      APT_GATETEST: "https://api.testnet.aptoslabs.com/v1/graphql"
    }, aptos_dist = __webpack_require__(213155), constants = __webpack_require__(153341), method = __webpack_require__(326394), node_modules_long = __webpack_require__(274442), index_browser_esm = __webpack_require__(262643), nacl_fast = __webpack_require__(188947), nacl_fast_default = __webpack_require__.n(nacl_fast), type_transfer = __webpack_require__(228972), esm = __webpack_require__(816653);
    function constants_typeof(obj) {
      return constants_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, constants_typeof(obj);
    }
    function constants_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, constants_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function constants_defineProperty(obj, key, value) {
      return (key = constants_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function constants_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== constants_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== constants_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === constants_typeof(key) ? key : String(key);
    }
    var AptosApiConfig = function() {
      function AptosApiConfig() {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, AptosApiConfig);
      }
      var Constructor, protoProps, staticProps;
      return Constructor = AptosApiConfig, staticProps = [ {
        key: "queryBalance",
        value: function(address) {
          var coinAddress = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "0x1::aptos_coin::AptosCoin";
          return "".concat(this.version, "/accounts/").concat(address, "/resource/0x1::coin::CoinStore<").concat(coinAddress, ">");
        }
      }, {
        key: "querySequenceNumber",
        value: function(address) {
          return "".concat(this.version, "/accounts/").concat(address);
        }
      }, {
        key: "accountResource",
        value: function(address, resourceType) {
          return "".concat(this.version, "/accounts/").concat(address, "/resource/").concat(resourceType);
        }
      }, {
        key: "tableItem",
        value: function(handle) {
          return "".concat(this.version, "/tables/").concat(handle, "/item");
        }
      } ], (protoProps = null) && constants_defineProperties(Constructor.prototype, protoProps), 
      staticProps && constants_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), AptosApiConfig;
    }();
    constants_defineProperty(AptosApiConfig, "version", "v1"), constants_defineProperty(AptosApiConfig, "ledgerInfo", AptosApiConfig.version), 
    constants_defineProperty(AptosApiConfig, "gasPrice", "".concat(AptosApiConfig.version, "/estimate_gas_price")), 
    constants_defineProperty(AptosApiConfig, "simulateTransaction", "".concat(AptosApiConfig.version, "/transactions/simulate?estimate_max_gas_amount=true")), 
    constants_defineProperty(AptosApiConfig, "submitTransaction", "".concat(AptosApiConfig.version, "/transactions")), 
    constants_defineProperty(AptosApiConfig, "getTransactionByHash", (function(hash) {
      return "".concat(AptosApiConfig.version, "/transactions/by_hash/").concat(hash);
    }));
    var aptosRpc_Buffer = __webpack_require__(348287).Buffer;
    function aptosRpc_typeof(obj) {
      return aptosRpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, aptosRpc_typeof(obj);
    }
    function aptosRpc_ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function aptosRpc_slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return aptosRpc_arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return aptosRpc_arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function aptosRpc_arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function aptosRpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function aptosRpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            aptosRpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            aptosRpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function aptosRpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, aptosRpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function aptosRpc_defineProperty(obj, key, value) {
      return (key = aptosRpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function aptosRpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== aptosRpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== aptosRpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === aptosRpc_typeof(key) ? key : String(key);
    }
    var AptosRpc = function() {
      function AptosRpc(wasm, totalNetworkDic, networkKey, restUrl, aptosClient) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, AptosRpc), aptosRpc_defineProperty(this, "wasm", void 0), aptosRpc_defineProperty(this, "totalNetworkDic", void 0), 
        aptosRpc_defineProperty(this, "networkKey", void 0), aptosRpc_defineProperty(this, "restUrl", void 0), 
        aptosRpc_defineProperty(this, "aptosClient", void 0), this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, 
        this.networkKey = networkKey, this.restUrl = restUrl, this.aptosClient = aptosClient;
      }
      var Constructor, protoProps, staticProps, _init, _signAndSubmitAptosTransaction, _signAptMultiAgentTransaction, _signAptosTransaction, _signAptos, _signAptosCoin, _sendAptosFungibleToken, _signSendAptosTransaction, _simulateAptosTransaction, _getAptosGasPrice, _getTransactionByHash, _getChainId, _querySequenceNumber, _fetchAptosFungibleBalance, _fetchAptosCoinBalance, _getAptosGasFee, _getAptosCoinGasFee, _getAptosFungibleGasFee, _getAptosBalance;
      return Constructor = AptosRpc, protoProps = [ {
        key: "getAptosBalance",
        value: (_getAptosBalance = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
          var token, sender, coinAddress, coinPrecision, res;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              if (token = params.token, sender = params.sender, "-" === (coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress")) && (coinAddress = void 0), 
              coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), res = "0", "MOVE" !== this.networkKey && "MOVE_GATETEST" !== this.networkKey) {
                _context.next = 11;
                break;
              }
              return _context.next = 8, this.fetchAptosCoinBalance(sender, coinAddress);

             case 8:
              res = _context.sent, _context.next = 14;
              break;

             case 11:
              return _context.next = 13, this.fetchAptosFungibleBalance(sender, coinAddress);

             case 13:
              res = _context.sent;

             case 14:
              return _context.abrupt("return", {
                balance: (0, calculate.dataOperation)(res, Math.pow(10, parseInt(coinPrecision)), "/")
              });

             case 15:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _getAptosBalance.apply(this, arguments);
        })
      }, {
        key: "getAptosFungibleGasFee",
        value: (_getAptosFungibleGasFee = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
          var receiver, amount, token, feeIndex, network, networkPrecision, coinPrecision, coinAddress, sendAmount, client, account, gasPrice, low, medium, high, selectedGasPrice, rawTx, simulation, gas, actualGasUsed, safeMaxGas, gasFee;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              if (_context2.prev = 0, receiver = params.receiver, amount = params.amount, token = params.token, 
              feeIndex = params.feeIndex, network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              receiver && amount && token) {
                _context2.next = 6;
                break;
              }
              throw new Error("Missing required parameters for gas estimation");

             case 6:
              if (coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), (coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress")) && "-" !== coinAddress) {
                _context2.next = 10;
                break;
              }
              throw new Error("Invalid coin address");

             case 10:
              return sendAmount = parseFloat((0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision)))), 
              client = new aptos_dist.M4(this.aptosClient), account = aptos_dist.dI.fromAptosAccountObject({
                privateKeyHex: NETWORKKEY_TO_PRIVATEKEY_MAP_APT
              }), _context2.next = 15, (0, gt_api_gas.u_)();

             case 15:
              return gasPrice = _context2.sent, low = gasPrice.low_octa_per_gas, medium = gasPrice.avg_octa_per_gas, 
              high = gasPrice.fast_octa_per_gas, selectedGasPrice = [ low, medium, high ][feeIndex] || medium, 
              _context2.next = 22, client.generateTransfer(account, coinAddress, receiver, sendAmount, {
                maxGasAmount: BigInt(2e3),
                gasUnitPrice: BigInt(selectedGasPrice)
              });

             case 22:
              return rawTx = _context2.sent, _context2.next = 25, this.aptosClient.simulateTransaction(account, rawTx, {
                estimateMaxGasAmount: !0,
                estimateGasUnitPrice: !0,
                estimatePrioritizedGasUnitPrice: !1
              });

             case 25:
              return simulation = _context2.sent, gas = simulation[0], actualGasUsed = Number(null == gas ? void 0 : gas.gas_used) || 1e3, 
              safeMaxGas = Math.max(Math.ceil(1.3 * actualGasUsed), 1500), gasFee = (0, calculate.dataOperation)((0, 
              calculate.dataOperation)(safeMaxGas, Number(selectedGasPrice)), Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context2.abrupt("return", {
                gasFee,
                gasPrice: selectedGasPrice,
                maxGasAmount: safeMaxGas.toString()
              });

             case 33:
              return _context2.prev = 33, _context2.t0 = _context2.catch(0), _context2.abrupt("return", {
                gasFee: "0.001",
                gasPrice: 100,
                maxGasAmount: "2000"
              });

             case 36:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this, [ [ 0, 33 ] ]);
        }))), function(_x2) {
          return _getAptosFungibleGasFee.apply(this, arguments);
        })
      }, {
        key: "getAptosCoinGasFee",
        value: (_getAptosCoinGasFee = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
          var token, sender, amount, receiver, feeIndex, chainIdPromise, sequenceNumberPromise, byAddressGetWalletPromise, _yield$Promise$all, _yield$Promise$all2, gasPrice, chainId, sequenceNumber, accountInfo, chainData, publicKey, _chainData$find, coinPrecision, coinAddress, sendAmount, coinIsMain, network, networkPrecision, low, medium, high, gasPriceList, selectedGasPrice, gas, gasFee;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return token = params.token, sender = params.sender, amount = params.amount, receiver = params.receiver, 
              feeIndex = params.feeIndex, chainIdPromise = this.getChainId(), sequenceNumberPromise = this.querySequenceNumber(sender), 
              byAddressGetWalletPromise = (0, method.byAddressGetWallet)(sender, this.networkKey, null), 
              _context3.next = 6, Promise.all([ (0, gt_api_gas.u_)(), chainIdPromise, sequenceNumberPromise, byAddressGetWalletPromise ]);

             case 6:
              if (_yield$Promise$all = _context3.sent, _yield$Promise$all2 = aptosRpc_slicedToArray(_yield$Promise$all, 4), 
              gasPrice = _yield$Promise$all2[0], chainId = _yield$Promise$all2[1], sequenceNumber = _yield$Promise$all2[2], 
              accountInfo = _yield$Promise$all2[3].accountInfo, chainData = accountInfo[this.networkKey], 
              publicKey = "", chainData && (null == chainData ? void 0 : chainData.length) > 0 && (publicKey = null === (_chainData$find = chainData.find((function(item) {
                return (null == item ? void 0 : item.accountAddress) == sender;
              }))) || void 0 === _chainData$find ? void 0 : _chainData$find.accountPublicKey), 
              coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, Number(coinPrecision))), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress, this.networkKey), network = this.totalNetworkDic[this.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, !(gasPrice && chainId && sequenceNumber)) {
                _context3.next = 30;
                break;
              }
              return low = gasPrice.low_octa_per_gas, medium = gasPrice.avg_octa_per_gas, high = gasPrice.fast_octa_per_gas, 
              selectedGasPrice = (gasPriceList = [ low, medium, high ])[feeIndex], _context3.next = 27, 
              this.simulateAptosTransaction({
                publicKey,
                sender,
                receiver,
                gasPrice: selectedGasPrice,
                chainId,
                sequenceNumber,
                coinIsMain,
                sendAmount,
                coinAddress
              });

             case 27:
              return gas = _context3.sent, gasFee = (0, calculate.dataOperation)((0, calculate.dataOperation)(null == gas ? void 0 : gas.gas_used, selectedGasPrice), Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context3.abrupt("return", {
                gasFee,
                maxGasAmount: null == gas ? void 0 : gas.max_gas_amount,
                gasPrice: gasPriceList[feeIndex]
              });

             case 30:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3) {
          return _getAptosCoinGasFee.apply(this, arguments);
        })
      }, {
        key: "getAptosGasFee",
        value: (_getAptosGasFee = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4(params) {
          var token, tokenType;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              if (token = params.token, "fungible asset" !== (null == (tokenType = (0, gt_tokens.N8)(token, this.networkKey, "tokenType")) ? void 0 : tokenType.toLowerCase())) {
                _context4.next = 8;
                break;
              }
              return _context4.next = 5, this.getAptosFungibleGasFee(params);

             case 5:
             case 10:
              return _context4.abrupt("return", _context4.sent);

             case 8:
              return _context4.next = 10, this.getAptosCoinGasFee(params);

             case 11:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x4) {
          return _getAptosGasFee.apply(this, arguments);
        })
      }, {
        key: "fetchAptosCoinBalance",
        value: (_fetchAptosCoinBalance = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5(address) {
          var _res$data, _res$data$coin, coinAddress, path, res, _args5 = arguments;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return coinAddress = _args5.length > 1 && void 0 !== _args5[1] ? _args5[1] : "0x1::aptos_coin::AptosCoin", 
              path = "".concat(this.restUrl, "/").concat(AptosApiConfig.queryBalance(address, coinAddress)), 
              _context5.next = 4, (0, gt_fetch.uJ)("GET", path, {}, {}, "data");

             case 4:
              return res = _context5.sent, _context5.abrupt("return", (null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$coin = _res$data.coin) || void 0 === _res$data$coin ? void 0 : _res$data$coin.value) || "0");

             case 6:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x5) {
          return _fetchAptosCoinBalance.apply(this, arguments);
        })
      }, {
        key: "fetchAptosFungibleBalance",
        value: (_fetchAptosFungibleBalance = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(sender, coinAddress) {
          var _res$data2, _res$data2$current_fu, _res$data2$current_fu2, url, data, res;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return url = APTOS_NETWORKKEY_TO_GRAPHQL_MAP[this.networkKey], data = {
                query: "query GetFungibleAssetBalances($owner_address: String, $asset_type: String) {\n          current_fungible_asset_balances(\n            where: {owner_address: {_eq: $owner_address}, _or: [{asset_type_v1: {_eq: $asset_type}}, {asset_type_v2: {_eq: $asset_type}}]}\n            offset: 0\n            limit: 10\n            order_by: {amount: desc}\n          ) {\n            asset_type\n            asset_type_v1\n            asset_type_v2\n            amount\n            amount_v1\n            amount_v2\n            metadata {\n              decimals\n              token_standard\n              name\n              symbol\n            }\n          }\n        }",
                variables: {
                  owner_address: sender,
                  asset_type: coinAddress || "0x1::aptos_coin::AptosCoin"
                }
              }, _context6.next = 7, (0, gt_fetch.Lu)("POST", url, data, {}, void 0, void 0, {
                type: "data"
              });

             case 7:
              return res = _context6.sent, _context6.abrupt("return", null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 || null === (_res$data2$current_fu = _res$data2.current_fungible_asset_balances) || void 0 === _res$data2$current_fu || null === (_res$data2$current_fu2 = _res$data2$current_fu[0]) || void 0 === _res$data2$current_fu2 ? void 0 : _res$data2$current_fu2.amount);

             case 9:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x6, _x7) {
          return _fetchAptosFungibleBalance.apply(this, arguments);
        })
      }, {
        key: "querySequenceNumber",
        value: (_querySequenceNumber = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(address) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(AptosApiConfig.querySequenceNumber(address)), 
              _context7.next = 3, (0, gt_fetch.uJ)("GET", path, {}, {}, "data");

             case 3:
              return res = _context7.sent, _context7.abrupt("return", res.sequence_number);

             case 5:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x8) {
          return _querySequenceNumber.apply(this, arguments);
        })
      }, {
        key: "getChainId",
        value: (_getChainId = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee8() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(AptosApiConfig.ledgerInfo), _context8.next = 3, 
              (0, gt_fetch.uJ)("GET", path, {}, {}, "data");

             case 3:
              return res = _context8.sent, _context8.abrupt("return", res.chain_id);

             case 5:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function() {
          return _getChainId.apply(this, arguments);
        })
      }, {
        key: "getTransactionByHash",
        value: (_getTransactionByHash = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee9(hash) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(AptosApiConfig.getTransactionByHash(hash)), 
              _context9.next = 3, (0, gt_fetch.uJ)("GET", path, {}, {}, "data");

             case 3:
              return res = _context9.sent, _context9.abrupt("return", res);

             case 5:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x9) {
          return _getTransactionByHash.apply(this, arguments);
        })
      }, {
        key: "getAptosGasPrice",
        value: (_getAptosGasPrice = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee10() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(AptosApiConfig.gasPrice), _context10.next = 3, 
              (0, gt_fetch.uJ)("GET", path, {}, {}, "data");

             case 3:
              return res = _context10.sent, _context10.abrupt("return", res);

             case 5:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function() {
          return _getAptosGasPrice.apply(this, arguments);
        })
      }, {
        key: "simulateAptosTransaction",
        value: (_simulateAptosTransaction = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee11(params) {
          var coinIsMain, sendAmount, sender, receiver, gasPrice, sequenceNumber, chainId, publicKey, coinAddress, _this$wasm, AnySigner, CoinType, HDWallet, coinName, coinType, wallet, now, expiration, signParams, _ref, _ref2, accountAddress, module, name, input, encoded, outputData, output, path, paramsMap, res, gas;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return coinIsMain = params.coinIsMain, sendAmount = params.sendAmount, sender = params.sender, 
              receiver = params.receiver, gasPrice = params.gasPrice, sequenceNumber = params.sequenceNumber, 
              chainId = params.chainId, publicKey = params.publicKey, coinAddress = params.coinAddress, 
              _this$wasm = this.wasm, AnySigner = _this$wasm.AnySigner, CoinType = _this$wasm.CoinType, 
              HDWallet = _this$wasm.HDWallet, coinName = constants.s8[this.networkKey], coinType = CoinType[coinName], 
              wallet = HDWallet.create(128, ""), now = new Date, expiration = (new Date).setMinutes(now.getMinutes() + 30), 
              signParams = {
                sender,
                privateKey: wallet.getKeyForCoin(coinType).data(),
                gasUnitPrice: node_modules_long.A.fromNumber(gasPrice),
                expirationTimestampSecs: node_modules_long.A.fromNumber(expiration),
                sequenceNumber: node_modules_long.A.fromString(sequenceNumber),
                chainId
              }, coinIsMain ? signParams.transfer = wallet_core.TW.Aptos.Proto.TransferMessage.create({
                to: receiver,
                amount: node_modules_long.A.fromString(sendAmount)
              }) : (_ref = (null == coinAddress ? void 0 : coinAddress.split("::")) || [], _ref2 = aptosRpc_slicedToArray(_ref, 3), 
              accountAddress = _ref2[0], module = _ref2[1], name = _ref2[2], signParams.tokenTransferCoins = wallet_core.TW.Aptos.Proto.TokenTransferCoinsMessage.create({
                amount: node_modules_long.A.fromString(sendAmount),
                to: receiver,
                function: wallet_core.TW.Aptos.Proto.StructTag.create({
                  accountAddress,
                  module,
                  name
                })
              })), input = wallet_core.TW.Aptos.Proto.SigningInput.create(signParams), encoded = wallet_core.TW.Aptos.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = wallet_core.TW.Aptos.Proto.SigningOutput.decode(outputData), 
              path = "".concat(this.restUrl, "/").concat(AptosApiConfig.simulateTransaction), 
              (paramsMap = JSON.parse(output.json)).signature.public_key = publicKey, paramsMap.signature.signature = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 
              _context11.next = 19, (0, gt_fetch.uJ)("POST", path, {}, paramsMap, "data");

             case 19:
              return res = _context11.sent, gas = {
                max_gas_amount: parseInt(res[0].max_gas_amount.toString()),
                gas_used: parseInt(res[0].gas_used.toString())
              }, _context11.abrupt("return", gas);

             case 22:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x10) {
          return _simulateAptosTransaction.apply(this, arguments);
        })
      }, {
        key: "signSendAptosTransaction",
        value: (_signSendAptosTransaction = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee12(params) {
          var sender, receiver, coinName, gasPrice, coinIsMain, privateKey, sendAmount, coinAddress, maxGasAmount, _this$wasm2, AnySigner, CoinType, HexCoding, sequenceNumber, chainId, coinType, now, expiration, signParams, _ref3, _ref4, accountAddress, module, name, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, coinName = params.coinName, 
              gasPrice = params.gasPrice, coinIsMain = params.coinIsMain, privateKey = params.privateKey, 
              sendAmount = params.sendAmount, coinAddress = params.coinAddress, maxGasAmount = params.maxGasAmount, 
              _this$wasm2 = this.wasm, AnySigner = _this$wasm2.AnySigner, CoinType = _this$wasm2.CoinType, 
              HexCoding = _this$wasm2.HexCoding, _context12.next = 4, this.querySequenceNumber(sender);

             case 4:
              return sequenceNumber = _context12.sent, _context12.next = 7, this.getChainId();

             case 7:
              return chainId = _context12.sent, coinType = CoinType[coinName], now = new Date, 
              expiration = now.setMinutes(now.getMinutes() + 30), signParams = {
                sender,
                privateKey: HexCoding.decode(privateKey),
                gasUnitPrice: node_modules_long.A.fromNumber(gasPrice),
                expirationTimestampSecs: node_modules_long.A.fromNumber(expiration),
                sequenceNumber: node_modules_long.A.fromString(sequenceNumber),
                chainId,
                maxGasAmount
              }, coinIsMain ? signParams.transfer = wallet_core.TW.Aptos.Proto.TransferMessage.create({
                to: receiver,
                amount: node_modules_long.A.fromString(sendAmount)
              }) : (_ref3 = (null == coinAddress ? void 0 : coinAddress.split("::")) || [], _ref4 = aptosRpc_slicedToArray(_ref3, 3), 
              accountAddress = _ref4[0], module = _ref4[1], name = _ref4[2], signParams.tokenTransferCoins = wallet_core.TW.Aptos.Proto.TokenTransferCoinsMessage.create({
                amount: node_modules_long.A.fromString(sendAmount),
                to: receiver,
                function: wallet_core.TW.Aptos.Proto.StructTag.create({
                  accountAddress,
                  module,
                  name
                })
              })), input = wallet_core.TW.Aptos.Proto.SigningInput.create(signParams), encoded = wallet_core.TW.Aptos.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = wallet_core.TW.Aptos.Proto.SigningOutput.decode(outputData), 
              _context12.abrupt("return", output.json);

             case 18:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x11) {
          return _signSendAptosTransaction.apply(this, arguments);
        })
      }, {
        key: "sendAptosFungibleToken",
        value: (_sendAptosFungibleToken = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee13(params) {
          var _data, amount, token, privateKey, receiver, gasFeeInfo, gasPrice, maxGasAmount, coinPrecision, coinAddress, sendAmount, client, account, rawTx, signedTx, res, hash;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return amount = params.amount, token = params.token, privateKey = params.privateKey, 
              receiver = params.receiver, gasFeeInfo = params.gasFeeInfo, gasPrice = gasFeeInfo.gasPrice, 
              maxGasAmount = gasFeeInfo.maxGasAmount, coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              client = new aptos_dist.M4(this.aptosClient), account = aptos_dist.dI.fromAptosAccountObject({
                privateKeyHex: privateKey
              }), _context13.next = 9, client.generateTransfer(account, coinAddress, receiver, parseFloat(sendAmount), {
                maxGasAmount: BigInt(maxGasAmount),
                gasUnitPrice: BigInt(gasPrice)
              });

             case 9:
              return rawTx = _context13.sent, _context13.next = 12, this.aptosClient.signTransaction(account, rawTx);

             case 12:
              return signedTx = _context13.sent, _context13.next = 15, this.aptosClient.submitTransaction(signedTx);

             case 15:
              return res = _context13.sent, hash = (null == res || null === (_data = res.data) || void 0 === _data ? void 0 : _data.hash) || (null == res ? void 0 : res.hash), 
              _context13.abrupt("return", hash);

             case 18:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x12) {
          return _sendAptosFungibleToken.apply(this, arguments);
        })
      }, {
        key: "signAptosCoin",
        value: (_signAptosCoin = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee14(params) {
          var signedTxJson, signedTx;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return _context14.next = 2, this.signSendAptosTransaction(params);

             case 2:
              return signedTxJson = _context14.sent, signedTx = JSON.parse(signedTxJson), _context14.abrupt("return", {
                tx: signedTx,
                rpcUrl: this.restUrl
              });

             case 5:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x13) {
          return _signAptosCoin.apply(this, arguments);
        })
      }, {
        key: "signAptos",
        value: (_signAptos = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee15(params) {
          var token, sender, receiver, gasFee, privateKey, amount, price, gasFeeInfo, gasPrice, maxGasAmount, coinName, coinAddress, coinIsMain, coinPrecision, sendAmount;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return token = params.token, sender = params.sender, receiver = params.receiver, 
              gasFee = params.gasFee, privateKey = params.privateKey, amount = params.amount, 
              price = params.price, gasFeeInfo = params.gasFeeInfo, gasPrice = gasFeeInfo.gasPrice, 
              maxGasAmount = gasFeeInfo.maxGasAmount, coinName = constants.s8[this.networkKey], 
              coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), coinIsMain = (0, 
              gt_tokens.hT)(coinAddress, this.networkKey), coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              _context15.next = 9, this.signAptosCoin({
                sender,
                receiver,
                coinName,
                gasPrice,
                coinIsMain,
                privateKey,
                sendAmount,
                coinAddress,
                amount,
                gasFee,
                price,
                token,
                maxGasAmount
              });

             case 9:
              return _context15.abrupt("return", _context15.sent);

             case 10:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this);
        }))), function(_x14) {
          return _signAptos.apply(this, arguments);
        })
      }, {
        key: "signAptosTransaction",
        value: (_signAptosTransaction = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee16(params) {
          var privateKey, sender, transaction, account, rawTx, aptosAccount, signedTx;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return privateKey = params.privateKey, sender = params.sender, transaction = params.transaction, 
              account = index_browser_esm.AX.fromSeed(new Uint8Array(aptosRpc_Buffer.from(privateKey, "hex"))), 
              _context16.next = 4, this.aptosClient.generateTransaction(sender, transaction);

             case 4:
              return rawTx = _context16.sent, aptosAccount = new aptos_dist.dI(account.secretKey, sender), 
              _context16.next = 8, this.aptosClient.signTransaction(aptosAccount, rawTx);

             case 8:
              return signedTx = _context16.sent, _context16.abrupt("return", signedTx);

             case 10:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this);
        }))), function(_x15) {
          return _signAptosTransaction.apply(this, arguments);
        })
      }, {
        key: "signAptMultiAgentTransaction",
        value: (_signAptMultiAgentTransaction = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee17(params) {
          var _signedtx$signature, privateKey, sender, transaction, account, aptosAccount, signedtx;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return privateKey = params.privateKey, sender = params.sender, transaction = params.transaction, 
              account = index_browser_esm.AX.fromSeed(new Uint8Array(aptosRpc_Buffer.from(privateKey, "hex"))), 
              aptosAccount = new aptos_dist.dI(account.secretKey, sender), _context17.next = 5, 
              this.aptosClient.signMultiTransaction(aptosAccount, transaction);

             case 5:
              return signedtx = _context17.sent, _context17.abrupt("return", null == signedtx || null === (_signedtx$signature = signedtx.signature) || void 0 === _signedtx$signature ? void 0 : _signedtx$signature.value);

             case 7:
             case "end":
              return _context17.stop();
            }
          }), _callee17, this);
        }))), function(_x16) {
          return _signAptMultiAgentTransaction.apply(this, arguments);
        })
      }, {
        key: "signAndSubmitAptosTransaction",
        value: (_signAndSubmitAptosTransaction = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee18(params) {
          var privateKey, sender, transaction, gas, account, aptosAccount, client, rawTx, signedTx, tx, res;
          return regeneratorRuntime.wrap((function(_context18) {
            for (;;) switch (_context18.prev = _context18.next) {
             case 0:
              return privateKey = params.privateKey, sender = params.sender, transaction = params.transaction, 
              gas = params.gas, account = index_browser_esm.AX.fromSeed(new Uint8Array(aptosRpc_Buffer.from(privateKey, "hex"))), 
              aptosAccount = new aptos_dist.dI(account.secretKey, sender), client = new aptos_dist.HN(this.restUrl, null, !1, gt_fetch.XH), 
              _context18.next = 6, client.generateTransaction(sender, transaction, gas);

             case 6:
              return rawTx = _context18.sent, _context18.next = 9, client.signTransaction(aptosAccount, rawTx);

             case 9:
              return signedTx = _context18.sent, _context18.next = 12, client.submitTransaction(signedTx);

             case 12:
              return tx = _context18.sent, _context18.next = 15, client.waitForTransactionWithResult(null == tx ? void 0 : tx.hash);

             case 15:
              return res = _context18.sent, _context18.abrupt("return", res);

             case 17:
             case "end":
              return _context18.stop();
            }
          }), _callee18, this);
        }))), function(_x17) {
          return _signAndSubmitAptosTransaction.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = aptosRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee19(totalNetworkDic, networkKey) {
          var _ref5, _ref5$url, restUrl, wasm, aptosClient;
          return regeneratorRuntime.wrap((function(_context19) {
            for (;;) switch (_context19.prev = _context19.next) {
             case 0:
              return _ref5 = (0, gt_networks.nD)(networkKey, totalNetworkDic) || {}, _ref5$url = _ref5.url, 
              restUrl = void 0 === _ref5$url ? "" : _ref5$url, _context19.next = 3, (0, wallet_core.t)();

             case 3:
              return wasm = _context19.sent, aptosClient = new aptos_dist.HN(restUrl, null, !1, gt_fetch.XH), 
              _context19.abrupt("return", new AptosRpc(wasm, totalNetworkDic, networkKey, restUrl, aptosClient));

             case 6:
             case "end":
              return _context19.stop();
            }
          }), _callee19);
        }))), function(_x18, _x19) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "signAptosMessage",
        value: function(params) {
          var privateKey = params.privateKey, signParams = params.signParams, sender = params.sender, application = params.application, account = index_browser_esm.AX.fromSeed(new Uint8Array(aptosRpc_Buffer.from(privateKey, "hex"))), res = function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = null != arguments[i] ? arguments[i] : {};
              i % 2 ? aptosRpc_ownKeys(Object(source), !0).forEach((function(key) {
                aptosRpc_defineProperty(target, key, source[key]);
              })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : aptosRpc_ownKeys(Object(source)).forEach((function(key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              }));
            }
            return target;
          }({
            sender,
            application,
            chainId: 1,
            prefix: "APTOS"
          }, signParams), fullMessage = "".concat(res.prefix, "\nmessage: ").concat(res.message, "\nnonce: ").concat(res.nonce), encodedMessage = (new TextEncoder).encode(fullMessage), arr = [];
          for (var i in encodedMessage) arr.push(encodedMessage[i]);
          var signatureBuffer = nacl_fast_default().sign.detached(new Uint8Array(aptosRpc_Buffer.from(arr)), account.secretKey), signature = (0, 
          type_transfer.U5)(signatureBuffer);
          return res.fullMessage = fullMessage, res.signature = signature, res;
        }
      } ], protoProps && aptosRpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && aptosRpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), AptosRpc;
    }();
    aptosRpc_defineProperty(AptosRpc, "signAptosAip62Transaction", (function(params) {
      var _signed, hexData = params.hexData, asFeePayer = params.asFeePayer, privateKey = params.privateKey, arr = [];
      for (var i in hexData) arr.push(hexData[i]);
      var array = new Uint8Array(aptosRpc_Buffer.from(arr)), tx = esm.po4.deserialize(new esm.g6s(array)), aptos = new esm.i5T, aptPrivateKey = new esm.W_x(privateKey), account = new esm.TfR({
        privateKey: aptPrivateKey
      });
      return null === (_signed = asFeePayer ? aptos.signAsFeePayer({
        signer: account,
        transaction: tx
      }) : aptos.sign({
        signer: account,
        transaction: tx
      })) || void 0 === _signed ? void 0 : _signed.bcsToBytes();
    })), aptosRpc_defineProperty(AptosRpc, "signAptosAip62Message", (function(params) {
      var _input$chainId, sender = params.sender, input = params.input, chainId = params.chainId, privateKey = params.privateKey, messageToSign = "Aptos\n            ".concat(origin, "\n            ").concat(sender, "\n            ").concat(input.nonce, "\n            ").concat(null !== (_input$chainId = input.chainId) && void 0 !== _input$chainId ? _input$chainId : chainId, "\n            ").concat(input.message), encodedMessageToSign = (new TextEncoder).encode(messageToSign), aptPrivateKey = new esm.W_x(privateKey), signature = new esm.TfR({
        privateKey: aptPrivateKey
      }).sign(encodedMessageToSign);
      return {
        address: sender,
        fullMessage: messageToSign,
        message: input.message,
        nonce: input.nonce,
        prefix: "APTOS",
        signature
      };
    }));
    const aptos_aptosRpc = AptosRpc;
    var tron_rpc = __webpack_require__(349389), ton_rpc = __webpack_require__(813667), core_dist = __webpack_require__(11054), EVER_ABI = {
      "ABI version": 2,
      version: "2.3",
      header: [ "pubkey", "time", "expire" ],
      functions: [ {
        name: "sendTransaction",
        inputs: [ {
          name: "dest",
          type: "address"
        }, {
          name: "value",
          type: "uint128"
        }, {
          name: "bounce",
          type: "bool"
        }, {
          name: "flags",
          type: "uint8"
        }, {
          name: "payload",
          type: "cell"
        } ],
        outputs: []
      }, {
        name: "sendTransactionRaw",
        inputs: [ {
          name: "flags",
          type: "uint8"
        }, {
          name: "message",
          type: "cell"
        } ],
        outputs: []
      } ],
      fields: [ {
        name: "_pubkey",
        type: "uint256"
      }, {
        name: "_timestamp",
        type: "uint64"
      } ]
    }, EVER_CODE = "te6cckEBBgEA/AABFP8A9KQT9LzyyAsBAgEgAgMABNIwAubycdcBAcAA8nqDCNcY7UTQgwfXAdcLP8j4KM8WI88WyfkAA3HXAQHDAJqDB9cBURO68uBk3oBA1wGAINcBgCDXAVQWdfkQ8qj4I7vyeWa++COBBwiggQPoqFIgvLHydAIgghBM7mRsuuMPAcjL/8s/ye1UBAUAmDAC10zQ+kCDBtcBcdcBeNcB10z4AHCAEASqAhSxyMsFUAXPFlAD+gLLaSLQIc8xIddJoIQJuZgzcAHLAFjPFpcwcQHLABLM4skB+wAAPoIQFp4+EbqOEfgAApMg10qXeNcB1AL7AOjRkzLyPOI+zYS/", eversdk_1_45_wasm_js = __webpack_require__(205093);
    function venom_rpc_typeof(obj) {
      return venom_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, venom_rpc_typeof(obj);
    }
    function venom_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function venom_rpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            venom_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            venom_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function venom_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, venom_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function venom_rpc_defineProperty(obj, key, value) {
      return (key = venom_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function venom_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== venom_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== venom_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === venom_rpc_typeof(key) ? key : String(key);
    }
    core_dist.TonClient.useBinaryLibrary(eversdk_1_45_wasm_js.U);
    var VenomRpc = function() {
      function VenomRpc(totalNetworkDic, rpcUrl) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, VenomRpc), venom_rpc_defineProperty(this, "totalNetworkDic", void 0), venom_rpc_defineProperty(this, "rpcUrl", void 0), 
        this.totalNetworkDic = totalNetworkDic, this.rpcUrl = rpcUrl;
      }
      var Constructor, protoProps, staticProps, _getVenomPublcKey, _init, _getVenomAddressByPublicKey, _sendVenomTransaction, _signVenomTransaction, _getVenomGasFee, _getVenomBalance;
      return Constructor = VenomRpc, protoProps = [ {
        key: "getVenomBalance",
        value: (_getVenomBalance = venom_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
          var _res$result, _res$result$data, _res$result$data$bloc, _res$result$data$bloc2, _res$result$data$bloc3, sender, token, config, client, res, balance, coinPrecision, venomBalance;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return sender = params.sender, token = params.token, config = this.getVenomConfig(), 
              client = new core_dist.TonClient(config), _context.next = 5, client.net.query({
                query: "query getBalance($address: String!) {blockchain {account(address: $address) {info {balance}}}}",
                variables: {
                  address: sender
                }
              });

             case 5:
              return res = _context.sent, balance = null == res || null === (_res$result = res.result) || void 0 === _res$result || null === (_res$result$data = _res$result.data) || void 0 === _res$result$data || null === (_res$result$data$bloc = _res$result$data.blockchain) || void 0 === _res$result$data$bloc || null === (_res$result$data$bloc2 = _res$result$data$bloc.account) || void 0 === _res$result$data$bloc2 || null === (_res$result$data$bloc3 = _res$result$data$bloc2.info) || void 0 === _res$result$data$bloc3 ? void 0 : _res$result$data$bloc3.balance, 
              coinPrecision = (0, gt_tokens.N8)(token, VenomRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, VenomRpc.networkKey, "token_decimal"), venomBalance = (0, calculate.dataOperation)(parseInt(balance, 16), Math.pow(10, parseInt(coinPrecision)), "/"), 
              _context.abrupt("return", {
                balance: venomBalance
              });

             case 10:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _getVenomBalance.apply(this, arguments);
        })
      }, {
        key: "getVenomGasFee",
        value: (_getVenomGasFee = venom_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
          var _fromQuery$result, _fromQuery$result$dat, _fromQuery$result$dat2, _fromQuery$result$dat3, _fromQuery$result$dat4, _mockQuery$result, _mockQuery$result$dat, _mockQuery$result$dat2, _mockQuery$result$dat3, _mockQuery$result$dat4, _parseInt, sender, receiver, amount, config, client, network, networkPrecision, sendAmount, keypair, mockFromAddress, getBalanceQuery, fromQuery, mockQuery, accType, accountState, isInit, encodeBoc, initData, encodeStateInit, stateInit, abiParams, messageBody, body, transferMsg, msg, tvmRes, fee, account_fees, gasFee;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              config = this.getVenomConfig(), client = new core_dist.TonClient(config), network = this.totalNetworkDic[VenomRpc.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, sendAmount = (0, 
              calculate.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision))), keypair = {
                public: "1cdd50cfeab67f1e10e71840d4e3c597b2414fc3127312de2b224708abe765fc",
                secret: "8981e648c5e6563cd47762d0331ece0bb2814766844f05e098175e6f6b0dd3b2"
              }, _context2.next = 9, this.getVenomAddressByPublicKey(keypair.public, client);

             case 9:
              return mockFromAddress = _context2.sent, getBalanceQuery = "query getBalance($address: String!) {blockchain {account(address: $address) {info {acc_type,boc}}}}", 
              _context2.next = 13, client.net.query({
                query: getBalanceQuery,
                variables: {
                  address: sender
                }
              });

             case 13:
              return fromQuery = _context2.sent, _context2.next = 16, client.net.query({
                query: getBalanceQuery,
                variables: {
                  address: mockFromAddress
                }
              });

             case 16:
              return mockQuery = _context2.sent, accType = null == fromQuery || null === (_fromQuery$result = fromQuery.result) || void 0 === _fromQuery$result || null === (_fromQuery$result$dat = _fromQuery$result.data) || void 0 === _fromQuery$result$dat || null === (_fromQuery$result$dat2 = _fromQuery$result$dat.blockchain) || void 0 === _fromQuery$result$dat2 || null === (_fromQuery$result$dat3 = _fromQuery$result$dat2.account) || void 0 === _fromQuery$result$dat3 || null === (_fromQuery$result$dat4 = _fromQuery$result$dat3.info) || void 0 === _fromQuery$result$dat4 ? void 0 : _fromQuery$result$dat4.boc, 
              accountState = null == mockQuery || null === (_mockQuery$result = mockQuery.result) || void 0 === _mockQuery$result || null === (_mockQuery$result$dat = _mockQuery$result.data) || void 0 === _mockQuery$result$dat || null === (_mockQuery$result$dat2 = _mockQuery$result$dat.blockchain) || void 0 === _mockQuery$result$dat2 || null === (_mockQuery$result$dat3 = _mockQuery$result$dat2.account) || void 0 === _mockQuery$result$dat3 || null === (_mockQuery$result$dat4 = _mockQuery$result$dat3.info) || void 0 === _mockQuery$result$dat4 ? void 0 : _mockQuery$result$dat4.boc, 
              isInit = VenomRpc.isActive(accType), _context2.next = 22, client.abi.encode_boc({
                params: [ {
                  name: "publicKey",
                  type: "uint256"
                }, {
                  name: "timestamp",
                  type: "uint64"
                } ],
                data: {
                  publicKey: (0, type_transfer.mu)(keypair.public),
                  timestamp: 0
                }
              });

             case 22:
              return encodeBoc = _context2.sent, initData = null == encodeBoc ? void 0 : encodeBoc.boc, 
              _context2.next = 26, client.boc.encode_state_init({
                code: EVER_CODE,
                data: initData
              });

             case 26:
              return encodeStateInit = _context2.sent, stateInit = null == encodeStateInit ? void 0 : encodeStateInit.state_init, 
              abiParams = VenomRpc.getAbiParams(), _context2.next = 31, client.abi.encode_message_body({
                abi: abiParams,
                address: mockFromAddress,
                call_set: {
                  function_name: "sendTransaction",
                  input: {
                    dest: receiver,
                    value: null === (_parseInt = parseInt(sendAmount)) || void 0 === _parseInt ? void 0 : _parseInt.toString(),
                    bounce: !1,
                    flags: 3,
                    payload: ""
                  }
                },
                is_internal: !1,
                signer: {
                  keys: {
                    secret: (0, type_transfer.LL)(keypair.secret),
                    public: (0, type_transfer.LL)(keypair.public)
                  },
                  type: "Keys"
                }
              });

             case 31:
              return messageBody = _context2.sent, body = null == messageBody ? void 0 : messageBody.body, 
              _context2.next = 35, client.boc.encode_external_in_message({
                dst: mockFromAddress,
                body,
                init: isInit ? void 0 : stateInit
              });

             case 35:
              return transferMsg = _context2.sent, msg = null == transferMsg ? void 0 : transferMsg.message, 
              _context2.next = 39, client.tvm.run_executor({
                message: msg,
                skip_transaction_check: !0,
                account: (0, core_dist.accountForExecutorAccount)(accountState, !0),
                abi: abiParams,
                return_updated_account: !0
              });

             case 39:
              return tvmRes = _context2.sent, fee = tvmRes.fees, account_fees = null != fee && fee.account_fees ? fee.account_fees.toString() : "0", 
              gasFee = (0, calculate.dataOperation)(account_fees, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context2.abrupt("return", {
                gasFee
              });

             case 44:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _getVenomGasFee.apply(this, arguments);
        })
      }, {
        key: "signVenomTransaction",
        value: (_signVenomTransaction = venom_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
          var _resultOfQuery$result, _resultOfQuery$result2, _resultOfQuery$result3, _resultOfQuery$result4, _resultOfQuery$result5, sender, receiver, amount, privateKey, token, coinPrecision, sendAmount, config, client, publicKey, resultOfQuery, accountType, isInit, encodeBoc, initData, encodeStateInit, stateInit, abiParams, messageBody, body, transferMsg;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              privateKey = params.privateKey, token = params.token, coinPrecision = (0, gt_tokens.N8)(token, VenomRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, VenomRpc.networkKey, "token_decimal"), sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              config = this.getVenomConfig(), client = new core_dist.TonClient(config), _context3.next = 7, 
              VenomRpc.getVenomPublcKey(sender);

             case 7:
              return publicKey = _context3.sent, _context3.next = 11, client.net.query({
                query: "query getBalance($address: String!) {blockchain {account(address: $address) {info {acc_type}}}}",
                variables: {
                  address: sender
                }
              });

             case 11:
              return resultOfQuery = _context3.sent, accountType = null == resultOfQuery || null === (_resultOfQuery$result = resultOfQuery.result) || void 0 === _resultOfQuery$result || null === (_resultOfQuery$result2 = _resultOfQuery$result.data) || void 0 === _resultOfQuery$result2 || null === (_resultOfQuery$result3 = _resultOfQuery$result2.blockchain) || void 0 === _resultOfQuery$result3 || null === (_resultOfQuery$result4 = _resultOfQuery$result3.account) || void 0 === _resultOfQuery$result4 || null === (_resultOfQuery$result5 = _resultOfQuery$result4.info) || void 0 === _resultOfQuery$result5 ? void 0 : _resultOfQuery$result5.acc_type, 
              isInit = VenomRpc.isActive(accountType), _context3.next = 16, client.abi.encode_boc({
                params: [ {
                  name: "publicKey",
                  type: "uint256"
                }, {
                  name: "timestamp",
                  type: "uint64"
                } ],
                data: {
                  publicKey: (0, type_transfer.mu)(publicKey),
                  timestamp: 0
                }
              });

             case 16:
              return encodeBoc = _context3.sent, initData = null == encodeBoc ? void 0 : encodeBoc.boc, 
              _context3.next = 20, client.boc.encode_state_init({
                code: EVER_CODE,
                data: initData
              });

             case 20:
              return encodeStateInit = _context3.sent, stateInit = null == encodeStateInit ? void 0 : encodeStateInit.state_init, 
              abiParams = VenomRpc.getAbiParams(), _context3.next = 25, client.abi.encode_message_body({
                abi: abiParams,
                address: sender,
                call_set: {
                  function_name: "sendTransaction",
                  input: {
                    dest: receiver,
                    value: sendAmount,
                    bounce: !1,
                    flags: 3,
                    payload: ""
                  }
                },
                is_internal: !1,
                signer: {
                  keys: {
                    secret: (0, type_transfer.LL)(privateKey),
                    public: (0, type_transfer.LL)(publicKey)
                  },
                  type: "Keys"
                }
              });

             case 25:
              return messageBody = _context3.sent, body = null == messageBody ? void 0 : messageBody.body, 
              _context3.next = 29, client.boc.encode_external_in_message({
                dst: sender,
                body,
                init: isInit ? void 0 : stateInit
              });

             case 29:
              return transferMsg = _context3.sent, _context3.abrupt("return", {
                tx: null == transferMsg ? void 0 : transferMsg.message,
                rpcUrl: this.rpcUrl
              });

             case 31:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3) {
          return _signVenomTransaction.apply(this, arguments);
        })
      }, {
        key: "sendVenomTransaction",
        value: (_sendVenomTransaction = venom_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4(params) {
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _context4.next = 2, this.signVenomTransaction(params);

             case 2:
              _context4.sent;

             case 3:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x4) {
          return _sendVenomTransaction.apply(this, arguments);
        })
      }, {
        key: "getVenomConfig",
        value: function() {
          return {
            network: {
              endpoints: [ this.rpcUrl ],
              message_retries_count: 5,
              message_processing_timeout: 4e4,
              wait_for_timeout: 4e4,
              out_of_sync_threshold: 15e3,
              access_key: ""
            },
            crypto: {},
            abi: {
              message_expiration_timeout: 4e4,
              message_expiration_timeout_grow_factor: 1.5
            }
          };
        }
      }, {
        key: "getVenomAddressByPublicKey",
        value: (_getVenomAddressByPublicKey = venom_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5(publicKey, client) {
          var encodeBoc, initData, encodeStateInit, stateInit, hash, address;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.next = 2, client.abi.encode_boc({
                params: [ {
                  name: "publicKey",
                  type: "uint256"
                }, {
                  name: "timestamp",
                  type: "uint64"
                } ],
                data: {
                  publicKey: (0, type_transfer.mu)(publicKey),
                  timestamp: 0
                }
              });

             case 2:
              return encodeBoc = _context5.sent, initData = null == encodeBoc ? void 0 : encodeBoc.boc, 
              _context5.next = 6, client.boc.encode_state_init({
                code: EVER_CODE,
                data: initData
              });

             case 6:
              return encodeStateInit = _context5.sent, stateInit = null == encodeStateInit ? void 0 : encodeStateInit.state_init, 
              _context5.next = 10, client.boc.get_boc_hash({
                boc: stateInit
              });

             case 10:
              return hash = _context5.sent, address = "0:".concat(null == hash ? void 0 : hash.hash), 
              _context5.abrupt("return", address);

             case 13:
             case "end":
              return _context5.stop();
            }
          }), _callee5);
        }))), function(_x5, _x6) {
          return _getVenomAddressByPublicKey.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = venom_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var rpcUrl;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return _context6.next = 2, (0, gt_networks.gL)(totalNetworkDic, VenomRpc.networkKey, rpcUrls[VenomRpc.networkKey], lastGetSuccessRpcTime);

             case 2:
              return rpcUrl = _context6.sent, _context6.abrupt("return", new VenomRpc(totalNetworkDic, rpcUrl));

             case 4:
             case "end":
              return _context6.stop();
            }
          }), _callee6);
        }))), function(_x7, _x8, _x9) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "getAbiParams",
        value: function() {
          return (0, core_dist.abiContract)(EVER_ABI);
        }
      }, {
        key: "getVenomPublcKey",
        value: (_getVenomPublcKey = venom_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(address) {
          var _accountInfo$VenomRpc, _accountInfo$VenomRpc2, _yield$byAddressGetWa, accountInfo, accountPublicKey;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return _context7.next = 2, (0, method.byAddressGetWallet)(address, "VENOM", null);

             case 2:
              return _yield$byAddressGetWa = _context7.sent, accountInfo = _yield$byAddressGetWa.accountInfo, 
              accountPublicKey = null == accountInfo || null === (_accountInfo$VenomRpc = accountInfo[VenomRpc.networkKey]) || void 0 === _accountInfo$VenomRpc || null === (_accountInfo$VenomRpc2 = _accountInfo$VenomRpc[0]) || void 0 === _accountInfo$VenomRpc2 ? void 0 : _accountInfo$VenomRpc2.accountPublicKey, 
              _context7.abrupt("return", accountPublicKey);

             case 6:
             case "end":
              return _context7.stop();
            }
          }), _callee7);
        }))), function(_x10) {
          return _getVenomPublcKey.apply(this, arguments);
        })
      }, {
        key: "isActive",
        value: function(state) {
          return 1 === state;
        }
      } ], protoProps && venom_rpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && venom_rpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), VenomRpc;
    }();
    venom_rpc_defineProperty(VenomRpc, "networkKey", "VENOM");
    const venom_rpc = VenomRpc;
    var ckb_rpc = __webpack_require__(862881), ada_rpc_Buffer = __webpack_require__(348287).Buffer;
    function ada_rpc_typeof(obj) {
      return ada_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, ada_rpc_typeof(obj);
    }
    function ada_rpc_slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || ada_rpc_unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function ada_rpc_createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = ada_rpc_unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e2) {
              throw _e2;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e3) {
          didErr = !0, err = _e3;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function ada_rpc_unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return ada_rpc_arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ada_rpc_arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function ada_rpc_arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ada_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function ada_rpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            ada_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            ada_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function ada_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, ada_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function ada_rpc_defineProperty(obj, key, value) {
      return (key = ada_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function ada_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== ada_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== ada_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === ada_rpc_typeof(key) ? key : String(key);
    }
    var Cardano = wallet_core.TW.Cardano, AdaRpc = function() {
      function AdaRpc(wasm, totalNetworkDic, rpcUrl) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, AdaRpc), ada_rpc_defineProperty(this, "wasm", void 0), ada_rpc_defineProperty(this, "totalNetworkDic", void 0), 
        ada_rpc_defineProperty(this, "rpcUrl", void 0), this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, 
        this.rpcUrl = rpcUrl;
      }
      var Constructor, protoProps, staticProps, _init, _signAda, _getAdaGasFee, _getAdaBalance, _getRecentBlockInfo, _signAdaTransaction, _estimateAdaFee, _getAdaUTXOByApi, _fetchAdaBalance;
      return Constructor = AdaRpc, protoProps = [ {
        key: "fetchAdaBalance",
        value: (_fetchAdaBalance = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(address) {
          var _res$data, url, res;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return url = "".concat(this.rpcUrl, "/app/web3/transactions/ada/balance"), _context.next = 3, 
              (0, gt_fetch.uJ)("GET", url, {
                address,
                chainName: AdaRpc.networkKey
              }, {}, "data");

             case 3:
              return res = _context.sent, _context.abrupt("return", null == res || null === (_res$data = res.data) || void 0 === _res$data ? void 0 : _res$data.balance);

             case 5:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _fetchAdaBalance.apply(this, arguments);
        })
      }, {
        key: "getAdaUTXOByApi",
        value: (_getAdaUTXOByApi = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(address) {
          var _utxo$data, url, utxo, info;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return url = "".concat(this.rpcUrl, "/app/web3/transactions/ada/utxo/list"), _context2.next = 3, 
              (0, gt_fetch.uJ)("GET", url, {
                address,
                chainName: "ADA"
              }, {}, "data");

             case 3:
              return utxo = _context2.sent, info = null == utxo || null === (_utxo$data = utxo.data) || void 0 === _utxo$data ? void 0 : _utxo$data.map((function(element) {
                return {
                  address,
                  tx_hash: element.txId,
                  tx_index: element.index,
                  output_index: element.index,
                  amount: [ {
                    unit: "lovelace",
                    quantity: element.amount
                  } ],
                  block: "",
                  data_hash: "",
                  inline_datum: "",
                  reference_script_hash: ""
                };
              })), _context2.abrupt("return", info);

             case 6:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _getAdaUTXOByApi.apply(this, arguments);
        })
      }, {
        key: "estimateAdaFee",
        value: (_estimateAdaFee = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
          var _hd$getKeyForCoin, sender, receiver, amount, token, utxos, _this$wasm, HDWallet, CoinType, HexCoding, coinPrecision, sendAmount, hd, privateKey, raw, fee;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              token = params.token, utxos = params.utxos, _this$wasm = this.wasm, HDWallet = _this$wasm.HDWallet, 
              CoinType = _this$wasm.CoinType, HexCoding = _this$wasm.HexCoding, coinPrecision = (0, 
              gt_tokens.N8)(token, AdaRpc.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, AdaRpc.networkKey, "token_decimal"), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              hd = HDWallet.create(128, ""), privateKey = HexCoding.encode(null === (_hd$getKeyForCoin = hd.getKeyForCoin(CoinType.cardano)) || void 0 === _hd$getKeyForCoin ? void 0 : _hd$getKeyForCoin.data()), 
              _context3.next = 8, this.signAdaTransaction({
                sender,
                privateKey,
                receiver,
                sendAmount,
                utxos
              });

             case 8:
              return raw = _context3.sent, fee = 155881 + 44.046 * raw.length, _context3.abrupt("return", Math.ceil(fee));

             case 13:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3) {
          return _estimateAdaFee.apply(this, arguments);
        })
      }, {
        key: "signAdaTransaction",
        value: (_signAdaTransaction = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4(params) {
          var sender, receiver, sendAmount, utxos, _params$unit, unit, privateKey, _this$wasm2, PrivateKey, AnySigner, CoinType, HexCoding, blockSlot, message, txUtxos, input, encoded, signed, output, res;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, sendAmount = params.sendAmount, 
              utxos = params.utxos, _params$unit = params.unit, unit = void 0 === _params$unit ? "lovelace" : _params$unit, 
              privateKey = params.privateKey, _this$wasm2 = this.wasm, PrivateKey = _this$wasm2.PrivateKey, 
              AnySigner = _this$wasm2.AnySigner, CoinType = _this$wasm2.CoinType, HexCoding = _this$wasm2.HexCoding, 
              _context4.next = 4, this.getRecentBlockInfo();

             case 4:
              return blockSlot = _context4.sent, message = Cardano.Proto.Transfer.create({
                changeAddress: sender,
                amount: node_modules_long.A.fromString(sendAmount),
                toAddress: receiver
              }), txUtxos = [], utxos.forEach((function(element) {
                var _element$amount, _element$amount$find, _step, tokenAmounts = [], _iterator = ada_rpc_createForOfIteratorHelper(element.amount);
                try {
                  for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                    var token = _step.value;
                    if ("lovelace" != token.unit) {
                      var tokenAmount = new Cardano.Proto.TokenAmount({
                        policyId: token.unit.substring(0, 56),
                        amount: new Uint8Array(ada_rpc_Buffer.from([ Number(token.quantity) ])),
                        assetNameHex: token.unit.substring(56)
                      });
                      tokenAmounts.push(tokenAmount);
                    }
                  }
                } catch (err) {
                  _iterator.e(err);
                } finally {
                  _iterator.f();
                }
                var input = Cardano.Proto.TxInput.create({
                  address: element.address,
                  outPoint: Cardano.Proto.OutPoint.create({
                    txHash: new Uint8Array(ada_rpc_Buffer.from(element.tx_hash, "hex")),
                    outputIndex: node_modules_long.A.fromNumber(element.output_index)
                  }),
                  amount: node_modules_long.A.fromNumber((null === (_element$amount = element.amount) || void 0 === _element$amount || null === (_element$amount$find = _element$amount.find((function(element) {
                    return element.unit == unit;
                  }))) || void 0 === _element$amount$find ? void 0 : _element$amount$find.quantity) || 0),
                  tokenAmount: tokenAmounts
                });
                txUtxos.push(input);
              })), input = Cardano.Proto.SigningInput.create({
                utxos: txUtxos,
                privateKey: [ PrivateKey.createWithData(HexCoding.decode(privateKey)).data() ],
                transferMessage: message,
                ttl: node_modules_long.A.fromNumber(blockSlot + 2e3)
              }), encoded = Cardano.Proto.SigningInput.encode(input).finish(), signed = AnySigner.sign(encoded, CoinType.cardano), 
              output = Cardano.Proto.SigningOutput.decode(signed), res = (0, type_transfer.U5)(output.encoded), 
              _context4.abrupt("return", res);

             case 14:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x4) {
          return _signAdaTransaction.apply(this, arguments);
        })
      }, {
        key: "getRecentBlockInfo",
        value: (_getRecentBlockInfo = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5() {
          var _blockInfo$data, url, blockInfo;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return url = "".concat(this.rpcUrl, "/app/web3/transactions/ada/getCardanoTip?chainName=ADA"), 
              _context5.next = 3, (0, gt_fetch.uJ)("GET", url, {}, {}, "data");

             case 3:
              return blockInfo = _context5.sent, _context5.abrupt("return", parseInt(null == blockInfo || null === (_blockInfo$data = blockInfo.data) || void 0 === _blockInfo$data ? void 0 : _blockInfo$data.slotNo));

             case 5:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function() {
          return _getRecentBlockInfo.apply(this, arguments);
        })
      }, {
        key: "getAdaBalance",
        value: (_getAdaBalance = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
          var token, sender, coinAddress, coinIsMain, coinPrecision, res;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              if (token = params.token, sender = params.sender, coinAddress = (0, gt_tokens.N8)(token, AdaRpc.networkKey, "coinAddress"), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress, AdaRpc.networkKey), coinPrecision = (0, 
              gt_tokens.N8)(token, AdaRpc.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, AdaRpc.networkKey, "token_decimal"), 
              !coinIsMain) {
                _context6.next = 9;
                break;
              }
              return _context6.next = 7, this.fetchAdaBalance(sender);

             case 7:
              return res = _context6.sent, _context6.abrupt("return", {
                balance: (0, calculate.dataOperation)(res, Math.pow(10, parseInt(coinPrecision)), "/")
              });

             case 9:
              return _context6.abrupt("return", {
                balance: "0"
              });

             case 10:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x5) {
          return _getAdaBalance.apply(this, arguments);
        })
      }, {
        key: "getAdaGasFee",
        value: (_getAdaGasFee = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var sender, receiver, token, amount, network, networkPrecision, info, fee, gasFee;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, token = params.token, 
              amount = params.amount, network = this.totalNetworkDic[AdaRpc.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              _context7.next = 5, this.getAdaUTXOByApi(sender);

             case 5:
              return info = _context7.sent, _context7.next = 8, this.estimateAdaFee({
                sender,
                receiver,
                amount,
                utxos: info,
                token
              });

             case 8:
              return fee = _context7.sent, gasFee = (0, calculate.dataOperation)(fee, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context7.abrupt("return", {
                gasFee,
                utxos: info
              });

             case 11:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x6) {
          return _getAdaGasFee.apply(this, arguments);
        })
      }, {
        key: "signAda",
        value: (_signAda = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee8(params) {
          var token, amount, sender, receiver, privateKey, gasFeeInfo, coinPrecision, sendAmount, raw;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return token = params.token, amount = params.amount, sender = params.sender, receiver = params.receiver, 
              privateKey = params.privateKey, gasFeeInfo = params.gasFeeInfo, coinPrecision = (0, 
              gt_tokens.N8)(token, AdaRpc.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, AdaRpc.networkKey, "token_decimal"), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              _context8.next = 5, this.signAdaTransaction({
                sender,
                privateKey,
                receiver,
                sendAmount,
                utxos: null == gasFeeInfo ? void 0 : gasFeeInfo.utxos
              });

             case 5:
              return raw = _context8.sent, _context8.abrupt("return", {
                tx: raw,
                rpcUrl: this.rpcUrl
              });

             case 7:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x7) {
          return _signAda.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = ada_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee9(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var _yield$Promise$all, _yield$Promise$all2, wasm, rpcUrl;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return _context9.t0 = Promise, _context9.next = 3, (0, wallet_core.t)();

             case 3:
              return _context9.t1 = _context9.sent, _context9.t2 = (0, gt_networks.gL)(totalNetworkDic, AdaRpc.networkKey, rpcUrls[AdaRpc.networkKey], lastGetSuccessRpcTime), 
              _context9.t3 = [ _context9.t1, _context9.t2 ], _context9.next = 8, _context9.t0.all.call(_context9.t0, _context9.t3);

             case 8:
              return _yield$Promise$all = _context9.sent, _yield$Promise$all2 = ada_rpc_slicedToArray(_yield$Promise$all, 2), 
              wasm = _yield$Promise$all2[0], rpcUrl = _yield$Promise$all2[1], _context9.abrupt("return", new AdaRpc(wasm, totalNetworkDic, rpcUrl));

             case 13:
             case "end":
              return _context9.stop();
            }
          }), _callee9);
        }))), function(_x8, _x9, _x10) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && ada_rpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && ada_rpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), AdaRpc;
    }();
    ada_rpc_defineProperty(AdaRpc, "networkKey", "ADA");
    const ada_rpc = AdaRpc;
    var btc_rpc = __webpack_require__(299433), evm_rpc = __webpack_require__(911405), btc_constants = __webpack_require__(24865);
    function gt_send_receive_typeof(obj) {
      return gt_send_receive_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, gt_send_receive_typeof(obj);
    }
    function gt_send_receive_ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function gt_send_receive_objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? gt_send_receive_ownKeys(Object(source), !0).forEach((function(key) {
          gt_send_receive_defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : gt_send_receive_ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function gt_send_receive_defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== gt_send_receive_typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== gt_send_receive_typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === gt_send_receive_typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function gt_send_receive_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function gt_send_receive_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            gt_send_receive_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            gt_send_receive_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function gt_send_receive_slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return gt_send_receive_arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return gt_send_receive_arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function gt_send_receive_arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var getAmountInputFontStyle = function(value, coinSimpleName) {
      for (var _value$split, fontSizes = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [ [ 9, 40 ], [ 12, 32 ], [ 14, 28 ], [ 19, 20 ], [ 25, 14 ], [ 1e3, 12 ] ], fontSize = fontSizes[0][1], coinLen = (null == coinSimpleName ? void 0 : coinSimpleName.length) || 0, len = ((null == value ? void 0 : value.length) || 0) + coinLen, pointNum = Math.max((null === (_value$split = value.split(".")) || void 0 === _value$split ? void 0 : _value$split.length) - 1, 0), charNum = ((null == value ? void 0 : value.length) || 0) - pointNum, width = "".concat(charNum + .5 * pointNum, "ch"), i = 0; i < fontSizes.length; ) {
        var _fontSizes$i = gt_send_receive_slicedToArray(fontSizes[i], 2), maxLen = _fontSizes$i[0], _maxFontSize = _fontSizes$i[1];
        if (len <= maxLen) {
          fontSize = _maxFontSize;
          break;
        }
        i++;
      }
      return {
        fontSize,
        width,
        unitMaxWidth: (null == coinSimpleName ? void 0 : coinSimpleName.length) > 6 ? "".concat(8, "ch") : ""
      };
    }, getBalanceInfo = function() {
      var _ref = gt_send_receive_asyncToGenerator(regeneratorRuntime.mark((function _callee(params, dispatch) {
        var _ref2, networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, sender, originToken, needMainToken, token, _token$network, network, networkPreision, _ref3, chainArchitecture, res, evmRpc, suiRpc, solanaRpc, aptosRpc, btcRpc, tronRpc, cosmosRpc, adaRpc, gtRpc, substrateRpc, tonRpc, venomRpc, ckbRpc;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            if (networkKey = (_ref2 = params).networkKey, totalNetworkDic = _ref2.totalNetworkDic, 
            rpcUrls = _ref2.rpcUrls, lastGetSuccessRpcTime = _ref2.lastGetSuccessRpcTime, sender = _ref2.sender, 
            originToken = _ref2.token, needMainToken = _ref2.needMainToken, token = JSON.parse(JSON.stringify(originToken)), 
            needMainToken && (network = totalNetworkDic[networkKey], networkPreision = null == network ? void 0 : network.networkPrecision, 
            token.coinPrecision = networkPreision, null != token && null !== (_token$network = token.network) && void 0 !== _token$network && _token$network[networkKey] ? (token.network[networkKey].coinPrecision = networkPreision, 
            token.network[networkKey].coinAddress = "-", token.network[networkKey].tokenType = "", 
            token.network[networkKey].protocolLabel = "", token.protocolLabel = "") : null != token && token[networkKey] && (token[networkKey].coinPrecision = networkPreision, 
            token[networkKey].coinAddress = "-", token[networkKey].tokenType = "", token[networkKey].protocolLabel = "", 
            token.protocolLabel = "")), _ref3 = totalNetworkDic[networkKey] || {}, "EVM" !== (chainArchitecture = _ref3.chainArchitecture) && "QUAI" !== chainArchitecture) {
              _context.next = 13;
              break;
            }
            return _context.next = 7, evm_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime, dispatch);

           case 7:
            return evmRpc = _context.sent, _context.next = 10, evmRpc.getEvmBalance({
              sender,
              token
            });

           case 10:
            res = _context.sent, _context.next = 122;
            break;

           case 13:
            if ("SUI" !== networkKey) {
              _context.next = 22;
              break;
            }
            return _context.next = 16, sui_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 16:
            return suiRpc = _context.sent, _context.next = 19, suiRpc.getSuiTokenBalance(sender, token);

           case 19:
            res = _context.sent, _context.next = 122;
            break;

           case 22:
            if ("SOL" !== chainArchitecture) {
              _context.next = 31;
              break;
            }
            return _context.next = 25, solana_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 25:
            return solanaRpc = _context.sent, _context.next = 28, solanaRpc.getSolanaBlance(token, sender);

           case 28:
            res = _context.sent, _context.next = 122;
            break;

           case 31:
            if ("APT" !== chainArchitecture) {
              _context.next = 40;
              break;
            }
            return _context.next = 34, aptos_aptosRpc.init(totalNetworkDic, networkKey);

           case 34:
            return aptosRpc = _context.sent, _context.next = 37, aptosRpc.getAptosBalance({
              token,
              sender
            });

           case 37:
            res = _context.sent, _context.next = 122;
            break;

           case 40:
            if ("BTC" !== chainArchitecture) {
              _context.next = 49;
              break;
            }
            return _context.next = 43, btc_rpc.A.init(totalNetworkDic, networkKey);

           case 43:
            return btcRpc = _context.sent, _context.next = 46, btcRpc.getBtcBalance({
              sender,
              token,
              rpcUrls,
              lastGetSuccessRpcTime
            });

           case 46:
            res = _context.sent, _context.next = 122;
            break;

           case 49:
            if ("TRX" !== networkKey) {
              _context.next = 58;
              break;
            }
            return _context.next = 52, tron_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 52:
            return tronRpc = _context.sent, _context.next = 55, tronRpc.getTronBalance({
              sender,
              token
            });

           case 55:
            res = _context.sent, _context.next = 122;
            break;

           case 58:
            if ("COSMOS" !== chainArchitecture) {
              _context.next = 67;
              break;
            }
            return _context.next = 61, cosmos_rpc.A.init(totalNetworkDic, networkKey);

           case 61:
            return cosmosRpc = _context.sent, _context.next = 64, cosmosRpc.getCosmosBalance(sender, token);

           case 64:
            res = _context.sent, _context.next = 122;
            break;

           case 67:
            if ("ADA" !== networkKey) {
              _context.next = 76;
              break;
            }
            return _context.next = 70, ada_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 70:
            return adaRpc = _context.sent, _context.next = 73, adaRpc.getAdaBalance({
              sender,
              token
            });

           case 73:
            res = _context.sent, _context.next = 122;
            break;

           case 76:
            if ("GT_ORG" !== networkKey) {
              _context.next = 85;
              break;
            }
            return _context.next = 79, gt_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 79:
            return gtRpc = _context.sent, _context.next = 82, gtRpc.getGtBalance(sender);

           case 82:
            res = _context.sent, _context.next = 122;
            break;

           case 85:
            if ("SUBSTRATE" !== chainArchitecture) {
              _context.next = 94;
              break;
            }
            return _context.next = 88, substrate_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 88:
            return substrateRpc = _context.sent, _context.next = 91, substrateRpc.getSubstrateInfo({
              sender,
              token
            });

           case 91:
            res = _context.sent, _context.next = 122;
            break;

           case 94:
            if ("TON" !== networkKey) {
              _context.next = 103;
              break;
            }
            return _context.next = 97, ton_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 97:
            return tonRpc = _context.sent, _context.next = 100, tonRpc.getTonBalance({
              sender,
              token
            });

           case 100:
            res = _context.sent, _context.next = 122;
            break;

           case 103:
            if ("VENOM" !== networkKey) {
              _context.next = 112;
              break;
            }
            return _context.next = 106, venom_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 106:
            return venomRpc = _context.sent, _context.next = 109, venomRpc.getVenomBalance({
              sender,
              token
            });

           case 109:
            res = _context.sent, _context.next = 122;
            break;

           case 112:
            if ("CKB" !== networkKey) {
              _context.next = 121;
              break;
            }
            return _context.next = 115, ckb_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 115:
            return ckbRpc = _context.sent, _context.next = 118, ckbRpc.getCkbBalance({
              token,
              sender
            });

           case 118:
            res = _context.sent, _context.next = 122;
            break;

           case 121:
            res = {
              balance: "0"
            };

           case 122:
            return _context.abrupt("return", res);

           case 123:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }(), getGasFeeInfo = function() {
      var _ref4 = gt_send_receive_asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
        var _totalNetworkDic$netw, totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime, sender, receiver, amount, token, feeIndex, isMax, brcUtxoList, tbcUnspent, chainArchitecture, res, evmRpc, cosmosRpc, substrateRpc, aptosRpc, btcRpc, suiRpc, solanaRpc, _solanaRpc, gtRpc, tronRpc, tonRpc, venomRpc, ckbRpc, adaRpc;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            if (totalNetworkDic = params.totalNetworkDic, networkKey = params.networkKey, rpcUrls = params.rpcUrls, 
            lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, sender = params.sender, receiver = params.receiver, 
            amount = params.amount, token = params.token, feeIndex = params.feeIndex, isMax = params.isMax, 
            brcUtxoList = params.brcUtxoList, tbcUnspent = params.tbcUnspent, "EVM" !== (chainArchitecture = null === (_totalNetworkDic$netw = totalNetworkDic[networkKey]) || void 0 === _totalNetworkDic$netw ? void 0 : _totalNetworkDic$netw.chainArchitecture) && "QUAI" !== chainArchitecture) {
              _context2.next = 11;
              break;
            }
            return _context2.next = 5, evm_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 5:
            return evmRpc = _context2.sent, _context2.next = 8, evmRpc.getEvmSendGasFee({
              sender,
              receiver,
              amount,
              token
            });

           case 8:
            res = _context2.sent, _context2.next = 124;
            break;

           case 11:
            if ("COSMOS" !== chainArchitecture) {
              _context2.next = 20;
              break;
            }
            return _context2.next = 14, cosmos_rpc.A.init(totalNetworkDic, networkKey);

           case 14:
            return cosmosRpc = _context2.sent, _context2.next = 17, cosmosRpc.getCosmosFee({
              sender,
              receiver,
              token,
              amount
            });

           case 17:
            res = _context2.sent, _context2.next = 124;
            break;

           case 20:
            if ("SUBSTRATE" !== chainArchitecture) {
              _context2.next = 29;
              break;
            }
            return _context2.next = 23, substrate_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 23:
            return substrateRpc = _context2.sent, _context2.next = 26, substrateRpc.getSubstrateGasFee({
              sender,
              receiver,
              token,
              amount
            });

           case 26:
            res = _context2.sent, _context2.next = 124;
            break;

           case 29:
            if ("APT" !== chainArchitecture) {
              _context2.next = 38;
              break;
            }
            return _context2.next = 32, aptos_aptosRpc.init(totalNetworkDic, networkKey);

           case 32:
            return aptosRpc = _context2.sent, _context2.next = 35, aptosRpc.getAptosGasFee({
              sender,
              receiver,
              token,
              amount,
              feeIndex
            });

           case 35:
            res = _context2.sent, _context2.next = 124;
            break;

           case 38:
            if ("BTC" !== chainArchitecture) {
              _context2.next = 47;
              break;
            }
            return _context2.next = 41, btc_rpc.A.init(totalNetworkDic, networkKey);

           case 41:
            return btcRpc = _context2.sent, _context2.next = 44, btcRpc.getBtcSendGasFee({
              token,
              sender,
              receiver,
              feeIndex,
              amount,
              rpcUrls,
              lastGetSuccessRpcTime,
              brcUtxoList,
              tbcUnspent
            });

           case 44:
            res = _context2.sent, _context2.next = 124;
            break;

           case 47:
            if ("SUI" !== networkKey) {
              _context2.next = 56;
              break;
            }
            return _context2.next = 50, sui_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 50:
            return suiRpc = _context2.sent, _context2.next = 53, suiRpc.getSuiSendGasFee(sender, receiver, amount, token);

           case 53:
            res = _context2.sent, _context2.next = 124;
            break;

           case 56:
            if ("SOL" !== chainArchitecture) {
              _context2.next = 65;
              break;
            }
            return _context2.next = 59, solana_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 59:
            return solanaRpc = _context2.sent, _context2.next = 62, solanaRpc.getSolanaGasFee(sender, receiver, token);

           case 62:
            res = _context2.sent, _context2.next = 124;
            break;

           case 65:
            if ("SONIC_GATETEST" !== networkKey) {
              _context2.next = 74;
              break;
            }
            return _context2.next = 68, solana_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 68:
            return _solanaRpc = _context2.sent, _context2.next = 71, _solanaRpc.getSonicGasFee();

           case 71:
            res = _context2.sent, _context2.next = 124;
            break;

           case 74:
            if ("GT_ORG" !== networkKey) {
              _context2.next = 83;
              break;
            }
            return _context2.next = 77, gt_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 77:
            return gtRpc = _context2.sent, _context2.next = 80, gtRpc.getGtGas({
              sender,
              receiver,
              amount
            });

           case 80:
            res = _context2.sent, _context2.next = 124;
            break;

           case 83:
            if ("TRX" !== networkKey) {
              _context2.next = 92;
              break;
            }
            return _context2.next = 86, tron_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 86:
            return tronRpc = _context2.sent, _context2.next = 89, tronRpc.getSendTronGasFee({
              sender,
              receiver,
              token,
              amount
            });

           case 89:
            res = _context2.sent, _context2.next = 124;
            break;

           case 92:
            if ("TON" !== networkKey) {
              _context2.next = 101;
              break;
            }
            return _context2.next = 95, ton_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 95:
            return tonRpc = _context2.sent, _context2.next = 98, tonRpc.getTonGasFee({
              token,
              sender,
              receiver,
              amount
            });

           case 98:
            res = _context2.sent, _context2.next = 124;
            break;

           case 101:
            if ("VENOM" !== networkKey) {
              _context2.next = 110;
              break;
            }
            return _context2.next = 104, venom_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 104:
            return venomRpc = _context2.sent, _context2.next = 107, venomRpc.getVenomGasFee({
              sender,
              receiver,
              amount
            });

           case 107:
            res = _context2.sent, _context2.next = 124;
            break;

           case 110:
            if ("CKB" !== networkKey) {
              _context2.next = 117;
              break;
            }
            return _context2.next = 113, ckb_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 113:
            ckbRpc = _context2.sent, res = ckbRpc.getCkbGasFee({
              token,
              amount,
              sender,
              receiver,
              isMax
            }), _context2.next = 124;
            break;

           case 117:
            if ("ADA" !== networkKey) {
              _context2.next = 124;
              break;
            }
            return _context2.next = 120, ada_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 120:
            return adaRpc = _context2.sent, _context2.next = 123, adaRpc.getAdaGasFee({
              token,
              amount,
              sender,
              receiver
            });

           case 123:
            res = _context2.sent;

           case 124:
            return _context2.abrupt("return", res);

           case 125:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x4) {
        return _ref4.apply(this, arguments);
      };
    }(), send = function() {
      var _ref5 = gt_send_receive_asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
        var _totalNetworkDic$netw2, _res, _totalNetworkDic$netw3, _totalNetworkDic$netw4, _res3, networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, sender, receiver, amount, privateKey, token, gasFeeInfo, balanceInfo, accountFormat, options, _ref6, chainArchitecture, res, suiRpc, _hash, gtRpc, substrateRpc, _ref7, balance, activeLimit, solanaRpc, cosmosRpc, btcRpc, aptosRpc, tokenType, _hash2, tronRpc, adaRpc, tonRpc, venomRpc, ckbRpc, evmRpc, _res2, hash, result, isUtxo, _result;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            if (networkKey = params.networkKey, totalNetworkDic = params.totalNetworkDic, rpcUrls = params.rpcUrls, 
            lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, sender = params.sender, receiver = params.receiver, 
            amount = params.amount, privateKey = params.privateKey, token = params.token, gasFeeInfo = params.gasFeeInfo, 
            balanceInfo = params.balanceInfo, accountFormat = params.accountFormat, options = params.options, 
            _ref6 = totalNetworkDic[networkKey] || {}, chainArchitecture = _ref6.chainArchitecture, 
            res = {
              tx: "",
              nonce: 0
            }, "SUI" !== networkKey) {
              _context3.next = 13;
              break;
            }
            return _context3.next = 6, sui_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 6:
            return suiRpc = _context3.sent, _context3.next = 9, suiRpc.sendSui({
              sender,
              receiver,
              gasFeeInfo,
              amount,
              privateKey,
              token
            });

           case 9:
            return _hash = _context3.sent, _context3.abrupt("return", {
              hash: _hash
            });

           case 13:
            if ("GT_ORG" !== networkKey) {
              _context3.next = 22;
              break;
            }
            return _context3.next = 16, gt_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 16:
            return gtRpc = _context3.sent, _context3.next = 19, gtRpc.signGT(params);

           case 19:
            res = _context3.sent, _context3.next = 128;
            break;

           case 22:
            if ("SUBSTRATE" !== (null === (_totalNetworkDic$netw2 = totalNetworkDic[networkKey]) || void 0 === _totalNetworkDic$netw2 ? void 0 : _totalNetworkDic$netw2.chainArchitecture)) {
              _context3.next = 32;
              break;
            }
            return _context3.next = 25, substrate_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 25:
            return substrateRpc = _context3.sent, balance = (_ref7 = balanceInfo).balance, activeLimit = _ref7.activeLimit, 
            _context3.next = 29, substrateRpc.sendSubstrate(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              balance,
              activeLimit,
              accountFormat
            }));

           case 29:
            res = _context3.sent, _context3.next = 128;
            break;

           case 32:
            if ("SOL" !== chainArchitecture) {
              _context3.next = 41;
              break;
            }
            return _context3.next = 35, solana_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 35:
            return solanaRpc = _context3.sent, _context3.next = 38, solanaRpc.signSolana(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              gasFeeInfo: null == params ? void 0 : params.gasFeeInfo
            }));

           case 38:
            res = _context3.sent, _context3.next = 128;
            break;

           case 41:
            if ("COSMOS" !== chainArchitecture) {
              _context3.next = 50;
              break;
            }
            return _context3.next = 44, cosmos_rpc.A.init(totalNetworkDic, networkKey);

           case 44:
            return cosmosRpc = _context3.sent, _context3.next = 47, cosmosRpc.signCosmos(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              gasFeeInfo: null == params ? void 0 : params.gasFeeInfo
            }));

           case 47:
            res = _context3.sent, _context3.next = 128;
            break;

           case 50:
            if ("BTC" !== chainArchitecture) {
              _context3.next = 59;
              break;
            }
            return _context3.next = 53, btc_rpc.A.init(totalNetworkDic, networkKey);

           case 53:
            return btcRpc = _context3.sent, _context3.next = 56, btcRpc.signBtcSend(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              gasFeeInfo: null == params ? void 0 : params.gasFeeInfo
            }));

           case 56:
            res = _context3.sent, _context3.next = 128;
            break;

           case 59:
            if ("APT" !== chainArchitecture) {
              _context3.next = 76;
              break;
            }
            return _context3.next = 62, aptos_aptosRpc.init(totalNetworkDic, networkKey);

           case 62:
            if (aptosRpc = _context3.sent, "fungible asset" !== (null == (tokenType = (0, gt_tokens.N8)(token, networkKey, "tokenType")) ? void 0 : tokenType.toLowerCase())) {
              _context3.next = 71;
              break;
            }
            return _context3.next = 67, aptosRpc.sendAptosFungibleToken(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              gasFeeInfo: null == params ? void 0 : params.gasFeeInfo
            }));

           case 67:
            return _hash2 = _context3.sent, _context3.abrupt("return", {
              hash: _hash2
            });

           case 71:
            return _context3.next = 73, aptosRpc.signAptos(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              gasFeeInfo: null == params ? void 0 : params.gasFeeInfo
            }));

           case 73:
            res = _context3.sent;

           case 74:
            _context3.next = 128;
            break;

           case 76:
            if ("TRX" !== networkKey) {
              _context3.next = 85;
              break;
            }
            return _context3.next = 79, tron_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 79:
            return tronRpc = _context3.sent, _context3.next = 82, tronRpc.signSendTransaction(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              hardware: null == options ? void 0 : options.hardware
            }));

           case 82:
            res = _context3.sent, _context3.next = 128;
            break;

           case 85:
            if ("ADA" !== networkKey) {
              _context3.next = 94;
              break;
            }
            return _context3.next = 88, ada_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 88:
            return adaRpc = _context3.sent, _context3.next = 91, adaRpc.signAda(params);

           case 91:
            res = _context3.sent, _context3.next = 128;
            break;

           case 94:
            if ("TON" !== networkKey) {
              _context3.next = 103;
              break;
            }
            return _context3.next = 97, ton_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 97:
            return tonRpc = _context3.sent, _context3.next = 100, tonRpc.signTonTransaction(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              comment: null == params ? void 0 : params.memo
            }));

           case 100:
            res = _context3.sent, _context3.next = 128;
            break;

           case 103:
            if ("VENOM" !== networkKey) {
              _context3.next = 112;
              break;
            }
            return _context3.next = 106, venom_rpc.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 106:
            return venomRpc = _context3.sent, _context3.next = 109, venomRpc.signVenomTransaction(params);

           case 109:
            res = _context3.sent, _context3.next = 128;
            break;

           case 112:
            if ("CKB" !== networkKey) {
              _context3.next = 121;
              break;
            }
            return _context3.next = 115, ckb_rpc.A.init(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 115:
            return ckbRpc = _context3.sent, _context3.next = 118, ckbRpc.signCkb(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              gasFeeInfo: null == params ? void 0 : params.gasFeeInfo
            }));

           case 118:
            res = _context3.sent, _context3.next = 128;
            break;

           case 121:
            if ("EVM" !== chainArchitecture && "QUAI" !== chainArchitecture) {
              _context3.next = 128;
              break;
            }
            return _context3.next = 124, evm_rpc.A.init(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime);

           case 124:
            return evmRpc = _context3.sent, _context3.next = 127, evmRpc.signEvm(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), {}, {
              gasFeeInfo: null == params ? void 0 : params.gasFeeInfo
            }));

           case 127:
            res = _context3.sent;

           case 128:
            if (null !== (_res = res) && void 0 !== _res && _res.tx) {
              _context3.next = 130;
              break;
            }
            throw new Error("signed failed");

           case 130:
            if (null == options || !options.isReturnRaw) {
              _context3.next = 132;
              break;
            }
            return _context3.abrupt("return", null === (_res2 = res) || void 0 === _res2 ? void 0 : _res2.tx);

           case 132:
            if (hash = "", !((null === (_totalNetworkDic$netw3 = totalNetworkDic[networkKey]) || void 0 === _totalNetworkDic$netw3 ? void 0 : _totalNetworkDic$netw3.isTest) || (null === (_totalNetworkDic$netw4 = totalNetworkDic[networkKey]) || void 0 === _totalNetworkDic$netw4 ? void 0 : _totalNetworkDic$netw4.isCustom))) {
              _context3.next = 141;
              break;
            }
            return _context3.next = 137, sendCustomNetworkRawTransaction(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), res));

           case 137:
            result = _context3.sent, hash = null == result ? void 0 : result.hash_id, _context3.next = 146;
            break;

           case 141:
            return isUtxo = "BTC" === chainArchitecture, _context3.next = 144, sendRawTransaction(gt_send_receive_objectSpread(gt_send_receive_objectSpread(gt_send_receive_objectSpread({}, params), res), {}, {
              isUtxo
            }));

           case 144:
            _result = _context3.sent, hash = null == _result ? void 0 : _result.hash;

           case 146:
            if (hash) {
              _context3.next = 148;
              break;
            }
            throw new Error("No hash returned");

           case 148:
            return _context3.abrupt("return", {
              hash,
              nonce: null === (_res3 = res) || void 0 === _res3 ? void 0 : _res3.nonce
            });

           case 149:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x5) {
        return _ref5.apply(this, arguments);
      };
    }(), sendRawTransaction = function() {
      var _ref8 = gt_send_receive_asyncToGenerator(regeneratorRuntime.mark((function _callee4(sendParams) {
        var _sendWalletAccountInf, _token$coinPrecision, _Math$floor, totalNetworkDic, networkKey, tx, sender, receiver, token, amount, price, nonce, gasFee, _sendParams$memo, memo, _sendParams$memoName, memoName, _sendParams$platformO, platformOperation, _sendParams$platformN, platformName, sendWalletAccountInfo, rpcUrl, isUtxo, network, userInfo, userId, chainType, coinAddress, coinFullName, coinSimpleName, tokenType, accountId, trace, trans_min_unit_amount, history, params, tick, protocolLabel, res, result;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return totalNetworkDic = sendParams.totalNetworkDic, networkKey = sendParams.networkKey, 
            tx = sendParams.tx, sender = sendParams.sender, receiver = sendParams.receiver, 
            token = sendParams.token, amount = sendParams.amount, price = sendParams.price, 
            nonce = sendParams.nonce, gasFee = sendParams.gasFee, _sendParams$memo = sendParams.memo, 
            memo = void 0 === _sendParams$memo ? "" : _sendParams$memo, _sendParams$memoName = sendParams.memoName, 
            memoName = void 0 === _sendParams$memoName ? "" : _sendParams$memoName, _sendParams$platformO = sendParams.platformOperation, 
            platformOperation = void 0 === _sendParams$platformO ? "" : _sendParams$platformO, 
            _sendParams$platformN = sendParams.platformName, platformName = void 0 === _sendParams$platformN ? "" : _sendParams$platformN, 
            sendWalletAccountInfo = sendParams.sendWalletAccountInfo, rpcUrl = sendParams.rpcUrl, 
            isUtxo = sendParams.isUtxo, network = totalNetworkDic[networkKey], _context4.next = 4, 
            (0, gt_web_cookies.pZ)("uid");

           case 4:
            if (userInfo = _context4.sent, userId = null == userInfo ? void 0 : userInfo.checkValue, 
            chainType = "EVM" === (null == network ? void 0 : network.chainArchitecture) ? "EVM" : networkKey, 
            coinAddress = (0, gt_tokens.N8)(token, networkKey, "coinAddress"), coinFullName = null == token ? void 0 : token.coinFullName, 
            coinSimpleName = null == token ? void 0 : token.coinSimpleName, tokenType = (0, 
            gt_tokens.N8)(token, networkKey, "tokenType"), accountId = null == sendWalletAccountInfo || null === (_sendWalletAccountInf = sendWalletAccountInfo.account) || void 0 === _sendWalletAccountInf ? void 0 : _sendWalletAccountInf.accountID, 
            trace = {
              user_id: userId,
              wallet_address: sender,
              wallet_network: chainType,
              wallet_source: "plug",
              system_type: (0, system.R)(),
              device_name: "google",
              system_version: manifest.version || "pc",
              app_version: manifest.version || "pc"
            }, trans_min_unit_amount = (0, bignumber.A)(amount).times(Math.pow(10, Number(null !== (_token$coinPrecision = null == token ? void 0 : token.coinPrecision) && void 0 !== _token$coinPrecision ? _token$coinPrecision : "0"))).integerValue(bignumber.A.ROUND_FLOOR), 
            history = {
              chain_type: chainType,
              address: sender,
              chain_name: networkKey,
              token_addr: coinAddress,
              token_name: coinFullName,
              token_short_name: coinSimpleName,
              trans_type: "send",
              trans_time: null === (_Math$floor = Math.floor((new Date).getTime() / 1e3)) || void 0 === _Math$floor ? void 0 : _Math$floor.toString(),
              trans_balance: amount,
              trans_balance_usd: price,
              trans_oppo_address: receiver,
              nonce,
              is_contra: "0",
              trans_gas_fee: gasFee,
              trans_min_unit_amount: trans_min_unit_amount.toString(),
              memo,
              memo_name: memoName,
              platform_operation: platformOperation,
              platform_name: platformName,
              token_type: tokenType
            }, params = {
              chain_name: networkKey,
              params: tx,
              trace,
              history_data: history,
              rpc_address: rpcUrl,
              manually: "",
              account_id: accountId
            }, !isUtxo || "TBC" === networkKey) {
              _context4.next = 29;
              break;
            }
            return tick = (0, gt_tokens.N8)(token, networkKey, "tick"), protocolLabel = (0, 
            gt_tokens.N8)(token, networkKey, "protocolLabel"), _context4.next = 21, (0, gt_fetch.uJ)("POST", "".concat(rpcUrl).concat(btc_constants.id.sendTransaction), {}, {
              chainName: networkKey,
              coinName: tick,
              userId,
              fromAddress: sender,
              toAddress: receiver,
              amount,
              rawTx: tx,
              type: "1",
              ignoreHistory: !1,
              protocol: protocolLabel,
              trans_gas_fee: gasFee
            }, "data");

           case 21:
            if (1e3 !== (null == (res = _context4.sent) ? void 0 : res.code) || null == res || !res.data) {
              _context4.next = 26;
              break;
            }
            return _context4.abrupt("return", {
              hash: null == res ? void 0 : res.data
            });

           case 26:
            throw new Error("send failed");

           case 27:
            _context4.next = 33;
            break;

           case 29:
            return _context4.next = 31, (0, send_receive.r2)(params);

           case 31:
            return result = _context4.sent, _context4.abrupt("return", result);

           case 33:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x6) {
        return _ref8.apply(this, arguments);
      };
    }(), sendCustomNetworkRawTransaction = function() {
      var _ref9 = gt_send_receive_asyncToGenerator(regeneratorRuntime.mark((function _callee5(sendParams) {
        var _totalNetworkDic$netw5, networkKey, totalNetworkDic, rpcUrl, sender, receiver, token, amount, price, nonce, gasFee, domain, tx, _ref10, isTest, isGateRecommon, networkChainID, networkChainSimpleName, coinAddress, coinFullName, coinSimpleName, protocolLabel, coinIsMain, isEVM, userInfo, userId, trace, params, result;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return networkKey = sendParams.networkKey, totalNetworkDic = sendParams.totalNetworkDic, 
            rpcUrl = sendParams.rpcUrl, sender = sendParams.sender, receiver = sendParams.receiver, 
            token = sendParams.token, amount = sendParams.amount, price = sendParams.price, 
            nonce = sendParams.nonce, gasFee = sendParams.gasFee, domain = sendParams.domain, 
            tx = sendParams.tx, _ref10 = totalNetworkDic[networkKey] || {}, isTest = _ref10.isTest, 
            isGateRecommon = _ref10.isGateRecommon, networkChainID = _ref10.networkChainID, 
            networkChainSimpleName = _ref10.networkChainSimpleName, coinAddress = (0, gt_tokens.N8)(token, networkKey, "coinAddress"), 
            coinFullName = null == token ? void 0 : token.coinFullName, coinSimpleName = null == token ? void 0 : token.coinSimpleName, 
            protocolLabel = (0, gt_tokens.N8)(token, networkKey, "protocolLabel"), coinIsMain = (0, 
            gt_tokens.hT)(coinAddress), isEVM = "EVM" === (null === (_totalNetworkDic$netw5 = totalNetworkDic[networkKey]) || void 0 === _totalNetworkDic$netw5 ? void 0 : _totalNetworkDic$netw5.chainArchitecture), 
            _context5.next = 10, (0, gt_web_cookies.pZ)("uid");

           case 10:
            return userInfo = _context5.sent, userId = null == userInfo ? void 0 : userInfo.checkValue, 
            trace = {
              user_id: userId,
              wallet_address: sender,
              wallet_network: isEVM ? "EVM" : networkChainSimpleName,
              wallet_source: "plug",
              system_type: (0, system.R)(),
              device_name: "google",
              system_version: manifest.version || "pc",
              app_version: manifest.version || "pc"
            }, params = {
              address: sender,
              chain_name: networkChainSimpleName,
              chain_type: isEVM ? "EVM" : networkChainSimpleName,
              chain_id: networkChainID,
              network_key: networkKey,
              token_addr: coinAddress,
              token_name: coinFullName,
              token_short_name: coinSimpleName,
              trans_type: "BLOB-20" === protocolLabel ? "transfer" : "send",
              trans_time: Math.floor((new Date).getTime() / 1e3),
              trans_balance: amount,
              trans_balance_usd: price,
              trans_oppo_address: receiver,
              nonce,
              is_contra: coinIsMain ? 0 : 1,
              trans_gas_fee: gasFee,
              type: isTest ? 2 : isGateRecommon ? 3 : 1,
              domain,
              rpc_address: "QUAI_GATETEST" === networkKey ? "".concat(rpcUrl, "/cyprus1") : rpcUrl,
              params: tx,
              trace
            }, _context5.next = 16, (0, send_receive.ij)(params);

           case 16:
            return result = _context5.sent, _context5.abrupt("return", result);

           case 18:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })));
      return function(_x7) {
        return _ref9.apply(this, arguments);
      };
    }(), sendDAppTransaction = function() {
      var _ref11 = gt_send_receive_asyncToGenerator(regeneratorRuntime.mark((function _callee6(totalNetworkDic, networkKey, tx, sender) {
        var userInfo, userId, network, chainType, trace, params, result;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _context6.next = 2, (0, gt_web_cookies.pZ)("uid");

           case 2:
            return userInfo = _context6.sent, userId = null == userInfo ? void 0 : userInfo.checkValue, 
            network = totalNetworkDic[networkKey], chainType = "EVM" === (null == network ? void 0 : network.chainArchitecture) ? "EVM" : networkKey, 
            trace = {
              user_id: userId,
              wallet_address: sender,
              wallet_network: chainType,
              wallet_source: "plug",
              system_type: (0, system.R)(),
              device_name: "google",
              system_version: manifest.version || "pc",
              app_version: manifest.version || "pc"
            }, params = {
              chain_name: networkKey,
              params: tx,
              trace
            }, _context6.next = 10, (0, send_receive.r2)(params);

           case 10:
            return result = _context6.sent, _context6.abrupt("return", result);

           case 12:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x8, _x9, _x10, _x11) {
        return _ref11.apply(this, arguments);
      };
    }();
  },
  24865: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Ov: () => BTC_FEE_COEFFICIENT_LIST,
      id: () => BTCApiConfig,
      q2: () => BtcOutputCount
    });
    __webpack_require__(380115), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(505086), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var BTCApiConfig = function() {
      function BTCApiConfig() {
        _classCallCheck(this, BTCApiConfig);
      }
      var Constructor, protoProps, staticProps;
      return Constructor = BTCApiConfig, staticProps = [ {
        key: "brc20NFTUtxoList",
        value: function(address, chain, nftId) {
          return "/transaction/nft/getUTXOById?address=".concat(address, "&chain=").concat(chain, "&nftId=").concat(nftId);
        }
      } ], (protoProps = null) && _defineProperties(Constructor.prototype, protoProps), 
      staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), BTCApiConfig;
    }();
    _defineProperty(BTCApiConfig, "addressTypeList", "/app/web3/userAddress/addressTypeList"), 
    _defineProperty(BTCApiConfig, "addAddress", "/app/web3/userAddress/add"), _defineProperty(BTCApiConfig, "queryBalance", "/app/web3/userAddress/balance"), 
    _defineProperty(BTCApiConfig, "userAddressList", "/app/web3/userAddress/list"), 
    _defineProperty(BTCApiConfig, "chainInfoList", "/app/web3/chainInfo/list"), _defineProperty(BTCApiConfig, "coinInfoList", "/app/web3/coinInfo/list"), 
    _defineProperty(BTCApiConfig, "transactions", "/app/web3/transactions/page"), _defineProperty(BTCApiConfig, "utxoList", "/app/web3/transactions/utxo/list"), 
    _defineProperty(BTCApiConfig, "utxoListAvailable", "/app/web3/transactions/utxo/listAvailable"), 
    _defineProperty(BTCApiConfig, "sendTransaction", "/app/web3/transactions/sendRawTransaction"), 
    _defineProperty(BTCApiConfig, "transactionFee", "/app/web3/transactions/fee"), _defineProperty(BTCApiConfig, "brc20UtxoList", "/app/web3/transactions/brc20/transfer/utxo"), 
    _defineProperty(BTCApiConfig, "brc20Balance", "/app/web3/userAddress/brc20/balance"), 
    _defineProperty(BTCApiConfig, "queryBalanceV2", "/app/web3/userAddress/balanceV2"), 
    _defineProperty(BTCApiConfig, "lockedUTXOList", "/app/web3/transactions/lockedUtxoList"), 
    _defineProperty(BTCApiConfig, "brc20Tick", "/app/web3/transactions/utxo/getTick"), 
    _defineProperty(BTCApiConfig, "runesUtxoList", "/v1/defi/runes/utxoList"), _defineProperty(BTCApiConfig, "runesBalance", "/v1/defi/runes/runeBalance"), 
    _defineProperty(BTCApiConfig, "runesUtxos", "/v1/defi/runes/utxos"), _defineProperty(BTCApiConfig, "runesBtcUtxo", "/v1/defi/runes/btcUtxo"), 
    _defineProperty(BTCApiConfig, "brc100UtxoList", "/v1/defi/brc100/address/inscriptions/transferrable"), 
    _defineProperty(BTCApiConfig, "brc100Balance", "/v1/defi/brc100/address/balance"), 
    _defineProperty(BTCApiConfig, "brc100UtxoByInscriptionId", "/v1/defi/brc100/getInscriptionUtxo?inscriptionId"), 
    _defineProperty(BTCApiConfig, "queryTbcUnspent", (function(address) {
      return "/v1/tbc/main/address/".concat(address, "/unspent");
    }));
    var BtcOutputCount = function BtcOutputCount() {
      _classCallCheck(this, BtcOutputCount), _defineProperty(this, "p2pkhCount", 0), _defineProperty(this, "p2shCount", 0), 
      _defineProperty(this, "p2wpkhCount", 0), _defineProperty(this, "p2trCount", 0), 
      _defineProperty(this, "opreturnCount", 0);
    }, BTC_FEE_COEFFICIENT_LIST = [ 1, 1, 1.2 ];
  },
  56128: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => __WEBPACK_DEFAULT_EXPORT__
    });
    __webpack_require__(815852), __webpack_require__(804632), __webpack_require__(64189), 
    __webpack_require__(741412), __webpack_require__(734606), __webpack_require__(597755), 
    __webpack_require__(269193), __webpack_require__(407899), __webpack_require__(219693), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(103101), __webpack_require__(936012), 
    __webpack_require__(564216), __webpack_require__(207452), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(906048), __webpack_require__(418665), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(630789), 
    __webpack_require__(380115), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(194009);
    var _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(525735), _rgbpp_sdk_service__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(290375), lodash_pickBy__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(971086), lodash_pickBy__WEBPACK_IMPORTED_MODULE_32___default = __webpack_require__.n(lodash_pickBy__WEBPACK_IMPORTED_MODULE_32__), rgbpp__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(330096), _excluded = [ "requireToken", "allow404", "method", "headers", "params" ];
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (null == source) return {};
      var key, i, target = function(source, excluded) {
        if (null == source) return {};
        var key, i, target = {}, sourceKeys = Object.keys(source);
        for (i = 0; i < sourceKeys.length; i++) key = sourceKeys[i], excluded.indexOf(key) >= 0 || (target[key] = source[key]);
        return target;
      }(source, excluded);
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) key = sourceSymbolKeys[i], excluded.indexOf(key) >= 0 || Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return _assertThisInitialized(self);
        }(this, result);
      };
    }
    function _assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    const __WEBPACK_DEFAULT_EXPORT__ = function(_BtcAssetsApi) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(BTCAssetsAPI, _BtcAssetsApi);
      var Constructor, protoProps, staticProps, fn, _request, _super = _createSuper(BTCAssetsAPI);
      function BTCAssetsAPI(_ref) {
        var _this, url = _ref.url, token = _ref.token, origin = _ref.origin;
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, BTCAssetsAPI), _defineProperty(_assertThisInitialized(_this = _super.call(this, {
          url,
          token,
          origin
        })), "_token", void 0), _this._token = token, _this;
      }
      return Constructor = BTCAssetsAPI, protoProps = [ {
        key: "tryParseBody",
        value: function(body) {
          try {
            return "string" == typeof body ? JSON.parse(body) : body;
          } catch (_unused) {
            return body;
          }
        }
      }, {
        key: "request",
        value: (fn = regeneratorRuntime.mark((function _callee(route, options) {
          var _json2, _ref2, _ref2$requireToken, requireToken, _ref2$allow, allow404, _ref2$method, method, headers, params, otherOptions, packedParams, withOriginHeaders, withAuthHeaders, url, res, text, json, ok, _ref3, _json$ok, _json, comment, status, context, _ref4, _ref5, _json$code, _json$error, _json$error$error, _json$message, _json$error2, _json$error2$error, code, message;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              if (_ref2$requireToken = (_ref2 = null != options ? options : {}).requireToken, 
              requireToken = void 0 === _ref2$requireToken || _ref2$requireToken, _ref2$allow = _ref2.allow404, 
              allow404 = void 0 !== _ref2$allow && _ref2$allow, _ref2$method = _ref2.method, method = void 0 === _ref2$method ? "GET" : _ref2$method, 
              headers = _ref2.headers, params = _ref2.params, otherOptions = _objectWithoutProperties(_ref2, _excluded), 
              !requireToken || this._token || this.app && this.domain) {
                _context.next = 3;
                break;
              }
              throw rgbpp__WEBPACK_IMPORTED_MODULE_33__.hF.withComment(_rgbpp_sdk_service__WEBPACK_IMPORTED_MODULE_31__.ErrorCodes.ASSETS_API_INVALID_PARAM, "app, domain");

             case 3:
              if (!requireToken || this._token) {
                _context.next = 6;
                break;
              }
              return _context.next = 6, this.init();

             case 6:
              return packedParams = params ? "?" + new URLSearchParams(lodash_pickBy__WEBPACK_IMPORTED_MODULE_32___default()(params, (function(val) {
                return void 0 !== val;
              }))).toString() : "", withOriginHeaders = this.origin ? {
                origin: this.origin
              } : {}, withAuthHeaders = requireToken && this._token ? {
                Authorization: "Bearer ".concat(this._token)
              } : {}, url = "".concat(this.url).concat(route).concat(packedParams), _context.next = 12, 
              (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_30__.Lu)(method, url, otherOptions.body, _objectSpread(_objectSpread(_objectSpread({}, withOriginHeaders), withAuthHeaders), headers));

             case 12:
              return res = _context.sent, text = "", ok = !1, _context.prev = 15, _context.next = 18, 
              res.text();

             case 18:
              text = _context.sent, json = JSON.parse(text), ok = null !== (_ref3 = null !== (_json$ok = null === (_json = json) || void 0 === _json ? void 0 : _json.ok) && void 0 !== _json$ok ? _json$ok : res.ok) && void 0 !== _ref3 && _ref3, 
              _context.next = 25;
              break;

             case 23:
              _context.prev = 23, _context.t0 = _context.catch(15);

             case 25:
              if (comment = "", status = res.status, context = {
                request: {
                  url,
                  params,
                  body: this.tryParseBody(otherOptions.body)
                },
                response: {
                  status,
                  data: null !== (_json2 = json) && void 0 !== _json2 ? _json2 : text
                }
              }, json || (comment = text ? "(".concat(status, ") ").concat(text) : "".concat(status)), 
              json && !ok && (code = null !== (_ref4 = null !== (_ref5 = null !== (_json$code = json.code) && void 0 !== _json$code ? _json$code : json.statusCode) && void 0 !== _ref5 ? _ref5 : null === (_json$error = json.error) || void 0 === _json$error || null === (_json$error$error = _json$error.error) || void 0 === _json$error$error ? void 0 : _json$error$error.code) && void 0 !== _ref4 ? _ref4 : res.status, 
              message = null !== (_json$message = json.message) && void 0 !== _json$message ? _json$message : "string" == typeof json.error ? json.error : null === (_json$error2 = json.error) || void 0 === _json$error2 || null === (_json$error2$error = _json$error2.error) || void 0 === _json$error2$error ? void 0 : _json$error2$error.message, 
              comment = message ? code ? "(".concat(code, ") ").concat(message) : message : JSON.stringify(json)), 
              200 !== status || json) {
                _context.next = 32;
                break;
              }
              throw rgbpp__WEBPACK_IMPORTED_MODULE_33__.hF.withComment(_rgbpp_sdk_service__WEBPACK_IMPORTED_MODULE_31__.ErrorCodes.ASSETS_API_RESPONSE_DECODE_ERROR, comment, context);

             case 32:
              if (401 !== status) {
                _context.next = 34;
                break;
              }
              throw rgbpp__WEBPACK_IMPORTED_MODULE_33__.hF.withComment(_rgbpp_sdk_service__WEBPACK_IMPORTED_MODULE_31__.ErrorCodes.ASSETS_API_UNAUTHORIZED, comment, context);

             case 34:
              if (404 !== status || allow404) {
                _context.next = 36;
                break;
              }
              throw rgbpp__WEBPACK_IMPORTED_MODULE_33__.hF.withComment(_rgbpp_sdk_service__WEBPACK_IMPORTED_MODULE_31__.ErrorCodes.ASSETS_API_RESOURCE_NOT_FOUND, comment, context);

             case 36:
              if (200 === status || 404 === status || allow404) {
                _context.next = 38;
                break;
              }
              throw rgbpp__WEBPACK_IMPORTED_MODULE_33__.hF.withComment(_rgbpp_sdk_service__WEBPACK_IMPORTED_MODULE_31__.ErrorCodes.ASSETS_API_RESPONSE_ERROR, comment, context);

             case 38:
              if (200 === status) {
                _context.next = 40;
                break;
              }
              return _context.abrupt("return", void 0);

             case 40:
              return _context.abrupt("return", json);

             case 41:
             case "end":
              return _context.stop();
            }
          }), _callee, this, [ [ 15, 23 ] ]);
        })), _request = function() {
          var self = this, args = arguments;
          return new Promise((function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          }));
        }, function(_x, _x2) {
          return _request.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), BTCAssetsAPI;
    }(rgbpp__WEBPACK_IMPORTED_MODULE_33__.zW);
  },
  70332: () => {},
  76447: () => {},
  78672: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      oV: () => handelCreateWallet
    });
    __webpack_require__(207452), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(219693), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(259581), __webpack_require__(504895), __webpack_require__(447746), 
    __webpack_require__(43148), __webpack_require__(579389), __webpack_require__(992157), 
    __webpack_require__(168763), __webpack_require__(418665), __webpack_require__(505086), 
    __webpack_require__(14602), __webpack_require__(269193), __webpack_require__(929979), 
    __webpack_require__(380115), __webpack_require__(718636), __webpack_require__(683396), 
    __webpack_require__(687136), __webpack_require__(678636), __webpack_require__(752231), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(110678), __webpack_require__(103101), __webpack_require__(936012), 
    __webpack_require__(714913), __webpack_require__(498741), __webpack_require__(215195), 
    __webpack_require__(564216);
    var _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(315733), _popup_lib_tool_backup__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(578131), _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(291842), _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(532437), _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(212864), _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(660862), _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(639319), _bg_utils_gt_wallet_helper_reportWalletData__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(985120), _gate_gui__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(279386), uuid__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(844597);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e2) {
              throw _e2;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e3) {
          didErr = !0, err = _e3;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var isOnLine = function() {
      return window.navigator.onLine;
    }, repeatingData = function(obj1, obj2) {
      var keyValue = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "accountPrivateKey", arr1 = [], arr2 = [];
      return Object.keys(obj1).map((function(key) {
        var _obj1$key, _obj1$key$;
        null !== (_obj1$key = obj1[key]) && void 0 !== _obj1$key && null !== (_obj1$key$ = _obj1$key[0]) && void 0 !== _obj1$key$ && _obj1$key$[keyValue] && arr1.push(key);
      })), Object.keys(obj2).map((function(key) {
        var _obj2$key, _obj2$key$;
        null !== (_obj2$key = obj2[key]) && void 0 !== _obj2$key && null !== (_obj2$key$ = _obj2$key[0]) && void 0 !== _obj2$key$ && _obj2$key$[keyValue] && arr2.push(key);
      })), arr1.filter((function(val) {
        return arr2.indexOf(val) > -1;
      }));
    };
    var dealDefiniteChain = function(data, totalNetworkDic) {
      var chainData = {};
      if (data && "{}" !== JSON.stringify(data)) {
        var itemKey = Object.keys(data);
        (null == itemKey ? void 0 : itemKey.length) > 0 && itemKey.forEach((function(Item) {
          if ("ETH" === Item) {
            var cData = (0, _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_42__.Fv)(totalNetworkDic).ETH;
            (null == cData ? void 0 : cData.length) > 0 && cData.forEach((function(i) {
              chainData = _objectSpread(_objectSpread({}, chainData), _defineProperty({}, i, data.ETH));
            }));
          } else chainData = _objectSpread(_objectSpread({}, chainData), _defineProperty({}, Item, data[Item]));
        }));
      }
      return chainData;
    }, dealWalletAccount = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(name) {
        var _net, index, amount, type, mnemonicData, pValue, walletInfo, selectWalletItem, bigNetworkKeys, totalNetworkDic, isExistAccountId, isExistAccountName, _selectWalletItem$wal, _selectWalletItem$wal2, _index, chainInfo, walletAccount, _pValue$lock, _yield$getPageCookies, checkValue, net, netItem, _chainInfo$SOL, solAddress, _chainInfo$SOL$, _index2, i, _netItem$i, _netItem$i$, _args = arguments;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            if (index = _args.length > 1 && void 0 !== _args[1] ? _args[1] : 0, amount = _args.length > 2 && void 0 !== _args[2] ? _args[2] : 0, 
            type = _args.length > 3 ? _args[3] : void 0, mnemonicData = _args.length > 4 ? _args[4] : void 0, 
            pValue = _args.length > 5 && void 0 !== _args[5] ? _args[5] : {}, walletInfo = _args.length > 6 ? _args[6] : void 0, 
            selectWalletItem = _args.length > 7 ? _args[7] : void 0, bigNetworkKeys = _args.length > 8 ? _args[8] : void 0, 
            totalNetworkDic = _args.length > 9 ? _args[9] : void 0, isExistAccountId = "", isExistAccountName = "", 
            "{}" !== JSON.stringify(selectWalletItem) && (_index = "" === index ? 0 : index, 
            isExistAccountId = null == selectWalletItem || null === (_selectWalletItem$wal = selectWalletItem.walletAccountArr[_index]) || void 0 === _selectWalletItem$wal ? void 0 : _selectWalletItem$wal.accountID, 
            isExistAccountName = null == selectWalletItem || null === (_selectWalletItem$wal2 = selectWalletItem.walletAccountArr[_index]) || void 0 === _selectWalletItem$wal2 ? void 0 : _selectWalletItem$wal2.accountName), 
            chainInfo = {}, (null == bigNetworkKeys ? void 0 : bigNetworkKeys.length) > 0 && (null == walletInfo ? void 0 : walletInfo.length) > 0 && bigNetworkKeys.forEach((function(chainItem) {
              walletInfo.forEach((function(accountItem) {
                var _accountItem$chainKey;
                if ((null == chainItem ? void 0 : chainItem.toUpperCase()) === (null == accountItem || null === (_accountItem$chainKey = accountItem.chainKey) || void 0 === _accountItem$chainKey ? void 0 : _accountItem$chainKey.toUpperCase())) {
                  var _accountItem$chainAcc, chainInfoItem = [];
                  if ((null == accountItem || null === (_accountItem$chainAcc = accountItem.chainAccounts) || void 0 === _accountItem$chainAcc ? void 0 : _accountItem$chainAcc.length) > 0) null == accountItem || accountItem.chainAccounts.forEach((function(item) {
                    var itemInfo = {
                      accountAddress: null == item ? void 0 : item.address,
                      accountPrivateKey: (null == item ? void 0 : item.wipPrivateKey) || (null == item ? void 0 : item.privateKey),
                      accountFormat: null == item ? void 0 : item.accountFormat,
                      accountPublicKey: null == item ? void 0 : item.publicKey,
                      walletExtendPath: null == item ? void 0 : item.derivationPath,
                      accountDeriveIndex: null != item && item.accountDeriveIndex ? null == item ? void 0 : item.accountDeriveIndex : ""
                    };
                    chainInfoItem.push(itemInfo);
                  })), chainInfo = _objectSpread(_objectSpread({}, chainInfo), _defineProperty({}, chainItem, chainInfoItem)); else {
                    var _privateKey = null == accountItem ? void 0 : accountItem.privateKey;
                    _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_39__.cI.includes(null == accountItem ? void 0 : accountItem.chainKey) && (_privateKey = null == accountItem ? void 0 : accountItem.secretKey), 
                    "DASH" !== (null == accountItem ? void 0 : accountItem.chainKey) && "DOGE" !== (null == accountItem ? void 0 : accountItem.chainKey) || (_privateKey = null == accountItem ? void 0 : accountItem.wipPrivateKey), 
                    chainInfoItem.push({
                      accountAddress: null == accountItem ? void 0 : accountItem.address,
                      accountPrivateKey: _privateKey,
                      accountFormat: (null == accountItem ? void 0 : accountItem.accountFormat) || "",
                      accountPublicKey: null == accountItem ? void 0 : accountItem.publicKey,
                      walletExtendPath: null == accountItem ? void 0 : accountItem.extendedPath,
                      accountDeriveIndex: null != accountItem && accountItem.accountDeriveIndex ? null == accountItem ? void 0 : accountItem.accountDeriveIndex : ""
                    }), chainInfo = _objectSpread(_objectSpread({}, chainInfo), _defineProperty({}, chainItem, chainInfoItem));
                  }
                }
              }));
            })), chainInfo = dealDefiniteChain(chainInfo, totalNetworkDic), walletAccount = {
              accountID: isExistAccountId,
              accountIndex: index,
              accountName: isExistAccountName || name,
              accountAmount: amount,
              accountCoinArr: [],
              walletCreateTime: (new Date).getTime()
            }, 2 !== type && 3 !== type) {
              _context.next = 21;
              break;
            }
            return _context.next = 18, (0, _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__.pZ)("uid");

           case 18:
            _yield$getPageCookies = _context.sent, checkValue = _yield$getPageCookies.checkValue, 
            walletAccount = _objectSpread(_objectSpread({}, walletAccount), {
              mnemonic: mnemonicData,
              errcode: 16 === (null == pValue || null === (_pValue$lock = pValue.lock) || void 0 === _pValue$lock ? void 0 : _pValue$lock.length) ? (0, 
              _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__.dT)(null == pValue ? void 0 : pValue.lock) : null == pValue ? void 0 : pValue.lock,
              errcode_type: 1,
              walletCloudBackup: !1,
              u_number: checkValue || ""
            });

           case 21:
            if (net = Object.keys(totalNetworkDic), netItem = {}, net && (null === (_net = net) || void 0 === _net ? void 0 : _net.length) > 0 && (2 === type && (solAddress = "", 
            "SOL" in chainInfo && (null === (_chainInfo$SOL = chainInfo.SOL) || void 0 === _chainInfo$SOL ? void 0 : _chainInfo$SOL.length) > 0 && (solAddress = null === (_chainInfo$SOL$ = chainInfo.SOL[0]) || void 0 === _chainInfo$SOL$ ? void 0 : _chainInfo$SOL$.accountAddress), 
            solAddress ? net = net.filter((function(item) {
              return _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_39__.cI.includes(item);
            })) : (_index2 = net.findIndex((function(item) {
              return "SOL" === item;
            }))) > -1 && net.splice(_index2, 1)), net.forEach((function(item) {
              netItem[item] = chainInfo[item];
            }))), "{}" !== JSON.stringify(netItem)) for (i in netItem) netItem[i] && (null === (_netItem$i = netItem[i]) || void 0 === _netItem$i ? void 0 : _netItem$i.length) > 0 && (null === (_netItem$i$ = netItem[i][0]) || void 0 === _netItem$i$ || !_netItem$i$.accountAddress) && delete netItem[i], 
            netItem[i] || delete netItem[i];
            return _context.abrupt("return", _objectSpread(_objectSpread({}, walletAccount), netItem));

           case 26:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), commonAccountCode = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(errorPlaintextCode, errorCode, item, type, mnemonicData, userCookies, repeat, walletInfo, bigNetworkKeys, totalNetworkDic, _walletArr) {
        var walletAccountArr, errcode_type, _walletAccountArr, name, _walletInfo$, existingAccountName, firstAddress, i, account, chainKey, chainAccounts, _iterator, _step, _chainAccount$account, chainAccount, globalAccountCounter, _walletAccountArrItem, found;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            if (walletAccountArr = item.walletAccountArr, errcode_type = item.errcode_type, 
            (_walletAccountArr = walletAccountArr).length, 1 != repeat) {
              _context2.next = 45;
              break;
            }
            if (existingAccountName = "", !((null == walletInfo ? void 0 : walletInfo.length) > 0 && null !== (_walletInfo$ = walletInfo[0]) && void 0 !== _walletInfo$ && _walletInfo$.address)) {
              _context2.next = 42;
              break;
            }
            firstAddress = walletInfo[0].address, i = 0;

           case 8:
            if (!(i < _walletAccountArr.length)) {
              _context2.next = 42;
              break;
            }
            account = _walletAccountArr[i], _context2.t0 = regeneratorRuntime.keys(account);

           case 11:
            if ((_context2.t1 = _context2.t0()).done) {
              _context2.next = 37;
              break;
            }
            if (chainKey = _context2.t1.value, !(Array.isArray(account[chainKey]) && account[chainKey].length > 0)) {
              _context2.next = 35;
              break;
            }
            chainAccounts = account[chainKey], _iterator = _createForOfIteratorHelper(chainAccounts), 
            _context2.prev = 16, _iterator.s();

           case 18:
            if ((_step = _iterator.n()).done) {
              _context2.next = 25;
              break;
            }
            if (chainAccount = _step.value, (null === (_chainAccount$account = chainAccount.accountAddress) || void 0 === _chainAccount$account ? void 0 : _chainAccount$account.toLowerCase()) !== (null == firstAddress ? void 0 : firstAddress.toLowerCase())) {
              _context2.next = 23;
              break;
            }
            return existingAccountName = account.accountName, _context2.abrupt("break", 25);

           case 23:
            _context2.next = 18;
            break;

           case 25:
            _context2.next = 30;
            break;

           case 27:
            _context2.prev = 27, _context2.t2 = _context2.catch(16), _iterator.e(_context2.t2);

           case 30:
            return _context2.prev = 30, _iterator.f(), _context2.finish(30);

           case 33:
            if (!existingAccountName) {
              _context2.next = 35;
              break;
            }
            return _context2.abrupt("break", 37);

           case 35:
            _context2.next = 11;
            break;

           case 37:
            if (!existingAccountName) {
              _context2.next = 39;
              break;
            }
            return _context2.abrupt("break", 42);

           case 39:
            i++, _context2.next = 8;
            break;

           case 42:
            name = existingAccountName || "".concat((0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)(2 == type ? "私钥钱包" : 3 == type ? "Keystore钱包" : "硬件钱包"), "01"), 
            _context2.next = 47;
            break;

           case 45:
            globalAccountCounter = getGlobalAccountCounter(_walletArr, type), name = "".concat((0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)(2 === type ? "私钥钱包" : 3 === type ? "Keystore钱包" : "硬件钱包")) + globalAccountCounter;

           case 47:
            return _context2.next = 49, dealWalletAccount(name, "", "", type, mnemonicData, {
              type: errcode_type,
              lock: errorCode
            }, walletInfo, null, bigNetworkKeys, totalNetworkDic);

           case 49:
            if (_walletAccountArrItem = _context2.sent, 4 === type) {
              _context2.next = 64;
              break;
            }
            if (!isOnLine()) {
              _context2.next = 57;
              break;
            }
            return _context2.next = 54, _popup_lib_tool_backup__WEBPACK_IMPORTED_MODULE_38__.createWalletEncrypt(errorPlaintextCode, errorCode, _walletAccountArrItem, userCookies, bigNetworkKeys, totalNetworkDic);

           case 54:
            _walletAccountArrItem = _context2.sent, _context2.next = 64;
            break;

           case 57:
            if (1 != errcode_type) {
              _context2.next = 63;
              break;
            }
            return _context2.next = 60, _popup_lib_tool_backup__WEBPACK_IMPORTED_MODULE_38__.createWalletEncrypt(errorPlaintextCode, errorCode, _walletAccountArrItem, userCookies, bigNetworkKeys, totalNetworkDic);

           case 60:
            _walletAccountArrItem = _context2.sent, _context2.next = 64;
            break;

           case 63:
            (0, _gate_gui__WEBPACK_IMPORTED_MODULE_45__.Ds)({
              type: "error",
              message: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("无法连接网络")
            });

           case 64:
            return 1 == repeat ? (found = !1, _walletAccountArr.forEach((function(a, b) {
              var data1, data2, arr1, arr2, intersection, result, isExist = (data1 = a, data2 = _walletAccountArrItem, 
              arr1 = Object.keys(data1), arr2 = Object.keys(data2), intersection = arr1.filter((function(val) {
                return arr2.indexOf(val) > -1;
              })), result = !1, (null == intersection ? void 0 : intersection.length) > 0 && intersection.forEach((function(i) {
                var _data1$i$, _data2$i$, _data1$i$2, _data1$i$2$accountAdd, _data2$i$2, _data2$i$2$accountAdd;
                null !== (_data1$i$ = data1[i][0]) && void 0 !== _data1$i$ && _data1$i$.accountAddress && null !== (_data2$i$ = data2[i][0]) && void 0 !== _data2$i$ && _data2$i$.accountAddress && (null === (_data1$i$2 = data1[i][0]) || void 0 === _data1$i$2 || null === (_data1$i$2$accountAdd = _data1$i$2.accountAddress) || void 0 === _data1$i$2$accountAdd ? void 0 : _data1$i$2$accountAdd.toLowerCase()) == (null === (_data2$i$2 = data2[i][0]) || void 0 === _data2$i$2 || null === (_data2$i$2$accountAdd = _data2$i$2.accountAddress) || void 0 === _data2$i$2$accountAdd ? void 0 : _data2$i$2$accountAdd.toLowerCase()) && (result = !0);
              })), result);
              isExist && (_walletAccountArr[b] = _walletAccountArrItem, found = !0);
            })), found || _walletAccountArr.push(_walletAccountArrItem)) : _walletAccountArr.push(_walletAccountArrItem), 
            _context2.abrupt("return", {
              selectedItem: {
                walletID: item.walletID,
                accountID: _walletAccountArrItem.accountID
              },
              item
            });

           case 66:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 16, 27, 30, 33 ] ]);
      })));
      return function(_x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12) {
        return _ref2.apply(this, arguments);
      };
    }(), handelCreateWallet = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(errorPlaintextCode, errorCode, walletInfo, type, mnemonicData) {
        var _mnemonicArr, repeat, selectWalletItem, cacheData, bigNetworkKeys, totalNetworkDic, _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, checkValue, cookiesStr, defiData, pValue, defiWallet, walletArr, selectedWalletDic, _selectedWalletDic, _walletArr, isPrivate, isKeystore, isHardware, selectedWalletItem, index, _yield$commonAccountC, selectedItem, item, _index3, _yield$commonAccountC2, _selectedItem, _item, _index4, _yield$commonAccountC3, _selectedItem2, _item2, _pValue$lock2, _selectWalletItem$wal3, _selectWalletItem$wal4, _selectWalletItem$wal5, _walletArrItem2, globalCounter, walletName, firstModalAddress, findWallet, walletArrItem, bigChainInfo, name, _item3, NO_KEYSTORE_CHAINS, copyWalletArr, privateKeyArr, mnemonicArr, old_walletArr, new_walletArr, wallet, _wallet$walletAccount, account, _args3 = arguments;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return repeat = _args3.length > 5 && void 0 !== _args3[5] ? _args3[5] : 0, selectWalletItem = _args3.length > 6 && void 0 !== _args3[6] ? _args3[6] : {}, 
            cacheData = _args3.length > 7 ? _args3[7] : void 0, bigNetworkKeys = _args3.length > 8 ? _args3[8] : void 0, 
            totalNetworkDic = _args3.length > 9 ? _args3[9] : void 0, _context3.next = 7, Promise.all([ (0, 
            _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__.pZ)("uid"), (0, _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_43__.fw)(), (0, 
            _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_37__.jq)((0, _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__.dT)(errorCode)) ]);

           case 7:
            if (_yield$Promise$all = _context3.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3), 
            _yield$Promise$all2$ = _yield$Promise$all2[0], checkValue = _yield$Promise$all2$.checkValue, 
            cookiesStr = _yield$Promise$all2$.cookiesStr, defiData = _yield$Promise$all2[1], 
            pValue = _yield$Promise$all2[2].pValue, defiWallet = defiData, walletArr = defiData.walletArr, 
            selectedWalletDic = defiData.selectedWalletDic, _selectedWalletDic = JSON.parse(JSON.stringify(selectedWalletDic)), 
            _walletArr = JSON.parse(JSON.stringify(walletArr)), isPrivate = 0, isKeystore = 0, 
            isHardware = 0, _walletArr.length > 0 && (isPrivate = _walletArr.filter((function(item) {
              return 2 == item.walletCreateType;
            })).length, isKeystore = _walletArr.filter((function(item) {
              return 3 == item.walletCreateType;
            })).length, isHardware = _walletArr.filter((function(item) {
              return 4 == item.walletCreateType;
            })).length), selectedWalletItem = {}, !(isPrivate > 0 && 2 == type)) {
              _context3.next = 39;
              break;
            }
            index = 0;

           case 25:
            if (!(index < _walletArr.length)) {
              _context3.next = 37;
              break;
            }
            if (2 != _walletArr[index].walletCreateType) {
              _context3.next = 34;
              break;
            }
            return _context3.next = 29, commonAccountCode(errorPlaintextCode, errorCode, _walletArr[index], type, mnemonicData, cookiesStr, repeat, walletInfo, bigNetworkKeys, totalNetworkDic, _walletArr);

           case 29:
            _yield$commonAccountC = _context3.sent, selectedItem = _yield$commonAccountC.selectedItem, 
            item = _yield$commonAccountC.item, _walletArr[index] = item, selectedWalletItem = selectedItem;

           case 34:
            index++, _context3.next = 25;
            break;

           case 37:
            _context3.next = 103;
            break;

           case 39:
            if (!(isKeystore > 0 && 3 == type)) {
              _context3.next = 55;
              break;
            }
            _index3 = 0;

           case 41:
            if (!(_index3 < _walletArr.length)) {
              _context3.next = 53;
              break;
            }
            if (3 != _walletArr[_index3].walletCreateType) {
              _context3.next = 50;
              break;
            }
            return _context3.next = 45, commonAccountCode(errorPlaintextCode, errorCode, _walletArr[_index3], type, mnemonicData, cookiesStr, repeat, walletInfo, bigNetworkKeys, totalNetworkDic, _walletArr);

           case 45:
            _yield$commonAccountC2 = _context3.sent, _selectedItem = _yield$commonAccountC2.selectedItem, 
            _item = _yield$commonAccountC2.item, _walletArr[_index3] = _item, selectedWalletItem = _selectedItem;

           case 50:
            _index3++, _context3.next = 41;
            break;

           case 53:
            _context3.next = 103;
            break;

           case 55:
            if (!(isHardware > 0 && 4 == type)) {
              _context3.next = 71;
              break;
            }
            _index4 = 0;

           case 57:
            if (!(_index4 < _walletArr.length)) {
              _context3.next = 69;
              break;
            }
            if (4 != _walletArr[_index4].walletCreateType) {
              _context3.next = 66;
              break;
            }
            return _context3.next = 61, commonAccountCode(errorPlaintextCode, errorCode, _walletArr[_index4], type, mnemonicData, cookiesStr, repeat, walletInfo, bigNetworkKeys, totalNetworkDic, _walletArr);

           case 61:
            _yield$commonAccountC3 = _context3.sent, _selectedItem2 = _yield$commonAccountC3.selectedItem, 
            _item2 = _yield$commonAccountC3.item, _walletArr[_index4] = _item2, selectedWalletItem = _selectedItem2;

           case 66:
            _index4++, _context3.next = 57;
            break;

           case 69:
            _context3.next = 103;
            break;

           case 71:
            return globalCounter = getGlobalWalletCounter(_walletArr), walletName = 2 === type ? "".concat((0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("私钥钱包")) : 3 === type ? "".concat((0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("Keystore钱包")) : 4 === type ? "".concat((0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("硬件钱包")).concat(globalCounter) : "".concat((0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("钱包")).concat(globalCounter), 
            1 === repeat && 1 === type && null != (firstModalAddress = walletInfo[0]) && firstModalAddress.address && (findWallet = _walletArr.find((function(val) {
              var _val$walletAccountArr, _val$walletAccountArr2, _account$, account = null == val || null === (_val$walletAccountArr = val.walletAccountArr) || void 0 === _val$walletAccountArr || null === (_val$walletAccountArr2 = _val$walletAccountArr[0]) || void 0 === _val$walletAccountArr2 ? void 0 : _val$walletAccountArr2[null == firstModalAddress ? void 0 : firstModalAddress.chainKey];
              return (null == account || null === (_account$ = account[0]) || void 0 === _account$ ? void 0 : _account$.accountAddress) === (null == firstModalAddress ? void 0 : firstModalAddress.address);
            })), findWallet && (walletName = findWallet.walletName)), walletArrItem = {
              walletBackupVersion: "2",
              errcode: 16 == (null == pValue || null === (_pValue$lock2 = pValue.lock) || void 0 === _pValue$lock2 ? void 0 : _pValue$lock2.length) ? (0, 
              _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__.dT)(null == pValue ? void 0 : pValue.lock) : null == pValue ? void 0 : pValue.lock,
              errcode_type: 1,
              walletID: null !== (_selectWalletItem$wal3 = null == selectWalletItem ? void 0 : selectWalletItem.walletID) && void 0 !== _selectWalletItem$wal3 ? _selectWalletItem$wal3 : (0, 
              uuid__WEBPACK_IMPORTED_MODULE_46__.A)(),
              walletCreateType: type,
              walletName: null !== (_selectWalletItem$wal4 = null == selectWalletItem ? void 0 : selectWalletItem.walletName) && void 0 !== _selectWalletItem$wal4 ? _selectWalletItem$wal4 : walletName,
              walletMnemonic: (null == walletInfo ? void 0 : walletInfo.length) > 0 ? walletInfo[0].mnemonic : "",
              walletAmount: "",
              walletUnfold: !1,
              walletLocalBackup: !1,
              walletCloudBackup: null !== (_selectWalletItem$wal5 = null == selectWalletItem ? void 0 : selectWalletItem.walletCloudBackup) && void 0 !== _selectWalletItem$wal5 && _selectWalletItem$wal5,
              walletAccountArr: [],
              u_number: checkValue || "",
              walletCreateTime: (new Date).getTime()
            }, bigChainInfo = {}, (null == bigNetworkKeys ? void 0 : bigNetworkKeys.length) > 0 && (null == walletInfo ? void 0 : walletInfo.length) > 0 && bigNetworkKeys.forEach((function(chainItem) {
              walletInfo.forEach((function(accountItem) {
                var _accountItem$chainKey2;
                if ((null == chainItem ? void 0 : chainItem.toUpperCase()) == (null == accountItem || null === (_accountItem$chainKey2 = accountItem.chainKey) || void 0 === _accountItem$chainKey2 ? void 0 : _accountItem$chainKey2.toUpperCase())) {
                  var _accountItem$chainAcc2, chainInfo = [];
                  (null == accountItem || null === (_accountItem$chainAcc2 = accountItem.chainAccounts) || void 0 === _accountItem$chainAcc2 ? void 0 : _accountItem$chainAcc2.length) > 0 ? (null == accountItem || accountItem.chainAccounts.forEach((function(item) {
                    var itemInfo = {
                      walletExtendPath: null == item ? void 0 : item.derivationPath,
                      walletExtendPrivateKey: null == item ? void 0 : item.accountExtendedPrivateKey,
                      accountFormat: null == item ? void 0 : item.accountFormat
                    };
                    chainInfo.push(itemInfo);
                  })), bigChainInfo = _objectSpread(_objectSpread({}, bigChainInfo), _defineProperty({}, chainItem, chainInfo))) : (chainInfo.push({
                    walletExtendPath: null == accountItem ? void 0 : accountItem.extendedPath,
                    walletExtendPrivateKey: null == accountItem ? void 0 : accountItem.accountExtendedPrivateKey,
                    accountFormat: null == accountItem ? void 0 : accountItem.accountFormat
                  }), bigChainInfo = _objectSpread(_objectSpread({}, bigChainInfo), _defineProperty({}, chainItem, chainInfo)));
                }
              }));
            })), walletArrItem = _objectSpread(_objectSpread({}, walletArrItem), bigChainInfo), 
            name = "".concat(2 === type ? (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("私钥钱包") : 3 === type ? (0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("Keystore钱包") : 4 === type ? (0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("硬件钱包") : (0, 
            _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("账户"), "01"), 
            _context3.next = 81, dealWalletAccount(name, "", "", type, mnemonicData, pValue, walletInfo, selectWalletItem, bigNetworkKeys, totalNetworkDic);

           case 81:
            if (_item3 = _context3.sent, walletArrItem.walletAccountArr.push(_item3), 4 === type) {
              _context3.next = 101;
              break;
            }
            if (!isOnLine()) {
              _context3.next = 94;
              break;
            }
            return _context3.next = 88, _popup_lib_tool_backup__WEBPACK_IMPORTED_MODULE_38__.createWalletEncrypt(errorPlaintextCode, errorCode, walletArrItem, cookiesStr, bigNetworkKeys, totalNetworkDic);

           case 88:
            if (_context3.t0 = _context3.sent, _context3.t0) {
              _context3.next = 91;
              break;
            }
            _context3.t0 = walletArrItem;

           case 91:
            walletArrItem = _context3.t0, _context3.next = 101;
            break;

           case 94:
            if (1 != walletArrItem.errcode_type) {
              _context3.next = 100;
              break;
            }
            return _context3.next = 97, (0, _popup_lib_tool_backup__WEBPACK_IMPORTED_MODULE_38__.createWalletEncrypt)(errorPlaintextCode, errorCode, walletArrItem, cookiesStr, bigNetworkKeys, totalNetworkDic);

           case 97:
            walletArrItem = _context3.sent, _context3.next = 101;
            break;

           case 100:
            (0, _gate_gui__WEBPACK_IMPORTED_MODULE_45__.Ds)({
              type: "error",
              message: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("无法连接网络")
            });

           case 101:
            1 != repeat || 1 != type && 0 != type ? _walletArr.push(walletArrItem) : _walletArr.forEach((function(a, b) {
              if (2 != a.walletCreateType && 3 != a.walletCreateType) {
                var _walletArrItem, oldWalletAccountArr = null == a ? void 0 : a.walletAccountArr[0], newWalletAccountArr = null === (_walletArrItem = walletArrItem) || void 0 === _walletArrItem ? void 0 : _walletArrItem.walletAccountArr[0], repeatData = repeatingData(oldWalletAccountArr, newWalletAccountArr);
                if (repeatData.length > 0) {
                  var _oldWalletAccountArr$, _oldWalletAccountArr$2, _newWalletAccountArr$, _newWalletAccountArr$2, repeatDataIndex = repeatData[0];
                  (null === (_oldWalletAccountArr$ = oldWalletAccountArr[repeatDataIndex][0]) || void 0 === _oldWalletAccountArr$ || null === (_oldWalletAccountArr$2 = _oldWalletAccountArr$.accountAddress) || void 0 === _oldWalletAccountArr$2 ? void 0 : _oldWalletAccountArr$2.toLowerCase()) == (null === (_newWalletAccountArr$ = newWalletAccountArr[repeatDataIndex][0]) || void 0 === _newWalletAccountArr$ || null === (_newWalletAccountArr$2 = _newWalletAccountArr$.accountAddress) || void 0 === _newWalletAccountArr$2 ? void 0 : _newWalletAccountArr$2.toLowerCase()) && (_walletArr[b] = walletArrItem);
                }
              }
            })), selectedWalletItem = {
              walletID: null === (_walletArrItem2 = walletArrItem) || void 0 === _walletArrItem2 ? void 0 : _walletArrItem2.walletID,
              accountID: null == _item3 ? void 0 : _item3.accountID
            };

           case 103:
            if ((null == _walletArr ? void 0 : _walletArr.length) > 0 && (NO_KEYSTORE_CHAINS = Object.keys(totalNetworkDic).filter((function(key) {
              var _totalNetworkDic$key;
              return "EVM" !== (null === (_totalNetworkDic$key = totalNetworkDic[key]) || void 0 === _totalNetworkDic$key ? void 0 : _totalNetworkDic$key.chainArchitecture);
            })), _walletArr.forEach((function(item) {
              var _item$walletAccountAr;
              3 == item.walletCreateType && (null == NO_KEYSTORE_CHAINS || NO_KEYSTORE_CHAINS.forEach((function(key) {
                var _item$key;
                null !== (_item$key = item[key]) && void 0 !== _item$key && _item$key[0] && Object.prototype.hasOwnProperty.call(item[key][0], "walletExtendPrivateKey") && delete item[key];
              })), (null == item || null === (_item$walletAccountAr = item.walletAccountArr) || void 0 === _item$walletAccountAr ? void 0 : _item$walletAccountAr.length) > 0 && item.walletAccountArr.forEach((function(iData) {
                null == NO_KEYSTORE_CHAINS || NO_KEYSTORE_CHAINS.forEach((function(key) {
                  var _iData$key;
                  null !== (_iData$key = iData[key]) && void 0 !== _iData$key && _iData$key[0] && Object.prototype.hasOwnProperty.call(iData[key][0], "accountAddress") && delete iData[key];
                }));
              })));
            }))), copyWalletArr = JSON.parse(JSON.stringify(_walletArr)), privateKeyArr = [], 
            mnemonicArr = [], copyWalletArr && (null == copyWalletArr ? void 0 : copyWalletArr.length) > 0 && (privateKeyArr = null == copyWalletArr ? void 0 : copyWalletArr.filter((function(i) {
              return !(null != i && i.walletMnemonic);
            })), mnemonicArr = null == copyWalletArr ? void 0 : copyWalletArr.filter((function(i) {
              return null == i ? void 0 : i.walletMnemonic;
            }))), mnemonicArr && (null === (_mnemonicArr = mnemonicArr) || void 0 === _mnemonicArr ? void 0 : _mnemonicArr.length) > 0 && (mnemonicArr = mnemonicArr.filter((function(item, index) {
              return mnemonicArr.findIndex((function(i) {
                return i.walletMnemonic === item.walletMnemonic;
              })) === index;
            }))), _selectedWalletDic = selectedWalletItem, old_walletArr = [].concat(_toConsumableArray(privateKeyArr), _toConsumableArray(mnemonicArr)), 
            new_walletArr = old_walletArr.map((function(e) {
              return _objectSpread(_objectSpread({}, e), {}, {
                walletAccountArr: (objectsArray = e.walletAccountArr, objectsArray.forEach((function(obj) {
                  for (var key in obj) Array.isArray(obj[key]) && obj[key].forEach((function(nestedObj) {
                    Object.prototype.hasOwnProperty.call(nestedObj, "accountDeriveIndex") || (nestedObj.accountDeriveIndex = "");
                  }));
                })), objectsArray)
              });
              var objectsArray;
            })), defiWallet.walletArr = _toConsumableArray(new_walletArr), defiWallet.selectedWalletDic = _selectedWalletDic, 
            !(wallet = defiWallet.walletArr.find((function(val) {
              return val.walletID === selectedWalletItem.walletID;
            })))) {
              _context3.next = 119;
              break;
            }
            return (account = null == wallet || null === (_wallet$walletAccount = wallet.walletAccountArr) || void 0 === _wallet$walletAccount ? void 0 : _wallet$walletAccount.find((function(val) {
              return val.accountID === selectedWalletItem.accountID;
            }))) && (null == cacheData || cacheData.setSelectedWallet({
              wallet,
              account
            })), _context3.abrupt("return", new Promise((function(resolve, reject) {
              try {
                (0, _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_43__.YP)(defiWallet).then((function() {
                  var _selectedWalletItem;
                  null !== (_selectedWalletItem = selectedWalletItem) && void 0 !== _selectedWalletItem && _selectedWalletItem.walletID ? (0, 
                  _bg_utils_gt_wallet_helper_reportWalletData__WEBPACK_IMPORTED_MODULE_44__.Kb)(totalNetworkDic, {
                    walletIds: [ selectedWalletItem.walletID ],
                    reportType: "partial"
                  }).then((function() {})).catch((function(err) {})).finally((function() {
                    resolve(defiWallet);
                  })) : (0, _bg_utils_gt_wallet_helper_reportWalletData__WEBPACK_IMPORTED_MODULE_44__.Kb)(totalNetworkDic).then((function() {})).catch((function(err) {})).finally((function() {
                    resolve(defiWallet);
                  }));
                })).catch((function(error) {
                  reject(error);
                }));
              } catch (error) {
                reject(error);
              }
            })));

           case 119:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x13, _x14, _x15, _x16, _x17) {
        return _ref3.apply(this, arguments);
      };
    }(), getGlobalWalletCounter = function(walletArr) {
      var maxNumber = 0;
      return walletArr.forEach((function(wallet) {
        if (wallet.walletName) {
          var match = wallet.walletName.match(/(\d{2})$/);
          if (match) {
            var number = parseInt(match[1], 10);
            number > maxNumber && (maxNumber = number);
          }
        }
      })), addZero(maxNumber + 1);
    }, getGlobalAccountCounter = function(walletArr, walletType) {
      var maxNumber = 0, targetTypeName = function(type) {
        switch (type) {
         case 2:
          return (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("私钥钱包");

         case 3:
          return (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("Keystore钱包");

         case 4:
          return (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_41__.lang_string)("硬件钱包");

         default:
          return "";
        }
      }(walletType);
      return targetTypeName ? (walletArr.forEach((function(wallet) {
        wallet.walletCreateType === walletType && wallet.walletAccountArr && wallet.walletAccountArr.forEach((function(account) {
          var _account$accountName;
          if (null !== (_account$accountName = account.accountName) && void 0 !== _account$accountName && _account$accountName.includes(targetTypeName)) {
            var match = account.accountName.match(/(\d+)$/);
            if (match) {
              var number = parseInt(match[1], 10);
              number > maxNumber && (maxNumber = number);
            }
          }
        }));
      })), addZero(maxNumber + 1)) : "01";
    }, addZero = function(num) {
      return num < 10 ? "0" + num : "" + num;
    };
  },
  84477: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      defineContract: () => defineContract,
      getAllTokenInfo: () => getAllTokenInfo,
      getContractDecimals: () => getContractDecimals,
      getContractName: () => getContractName,
      getContractSymbol: () => getContractSymbol,
      getNonce: () => getNonce,
      getTokenBalance: () => getTokenBalance,
      isEffectiveAddress: () => isEffectiveAddress,
      isEffectiveContractAddress: () => isEffectiveContractAddress,
      tron2HexAddress: () => tron2HexAddress
    });
    __webpack_require__(498741), __webpack_require__(418665), __webpack_require__(505086), 
    __webpack_require__(269193), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(754989), __webpack_require__(714913), __webpack_require__(752231), 
    __webpack_require__(868329), __webpack_require__(447746), __webpack_require__(43148), 
    __webpack_require__(579389), __webpack_require__(906048), __webpack_require__(380115), 
    __webpack_require__(504895), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(215195), __webpack_require__(207452);
    var _model_contractAbi__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(157943), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(326394), _solana_web3_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(262643), _mysten_sui_js_utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(394001), _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(426451), _substrate_subSend__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(495437), _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(620107), _popup_lib_tool_sui_suiWeb3__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(100397), _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(84477), _const__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(498050), _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(291842), _gt_org_PYGateMethod__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(711593), _api_api__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(653360), quais__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(834034), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(259159), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(660862);
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var defineContract = function(web3, address) {
      var res = null;
      try {
        res = new web3.eth.Contract(_model_contractAbi__WEBPACK_IMPORTED_MODULE_21__.p5, address);
      } catch (error) {
        res = null;
      }
      return res;
    }, getContractSymbol = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(contractData) {
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, contractData.methods.symbol().call((function(error, result) {
              return result || null;
            })).catch((function(error) {
              return null;
            }));

           case 2:
            return _context.abrupt("return", _context.sent);

           case 3:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), getContractDecimals = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(contractData) {
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, contractData.methods.decimals().call((function(error, result) {
              return result || null;
            })).catch((function(error) {
              return null;
            }));

           case 2:
            return _context2.abrupt("return", _context2.sent);

           case 3:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x2) {
        return _ref2.apply(this, arguments);
      };
    }(), getContractName = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(contractData) {
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, contractData.methods.name().call((function(error, result) {
              return result || null;
            })).catch((function(error) {
              return null;
            }));

           case 2:
            return _context3.abrupt("return", _context3.sent);

           case 3:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x3) {
        return _ref3.apply(this, arguments);
      };
    }(), getAllTokenInfo = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(contractData) {
        var contractSymbol, contractDecimals, contractName;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            if (!contractData) {
              _context4.next = 6;
              break;
            }
            return _context4.next = 3, getContractSymbol(contractData);

           case 3:
            _context4.t0 = _context4.sent, _context4.next = 7;
            break;

           case 6:
            _context4.t0 = "";

           case 7:
            if (contractSymbol = _context4.t0, !contractData) {
              _context4.next = 14;
              break;
            }
            return _context4.next = 11, getContractDecimals(contractData);

           case 11:
            _context4.t1 = _context4.sent, _context4.next = 15;
            break;

           case 14:
            _context4.t1 = "";

           case 15:
            if (contractDecimals = _context4.t1, !contractData) {
              _context4.next = 22;
              break;
            }
            return _context4.next = 19, getContractName(contractData);

           case 19:
            _context4.t2 = _context4.sent, _context4.next = 23;
            break;

           case 22:
            _context4.t2 = "";

           case 23:
            return contractName = _context4.t2, _context4.abrupt("return", Promise.all([ contractSymbol, contractDecimals, contractName ]));

           case 25:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x4) {
        return _ref4.apply(this, arguments);
      };
    }(), tron2HexAddress = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(trxAddress) {
        var _yield$getWasm, HexCoding, Base58;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return _context5.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_35__.t)();

           case 2:
            if (_yield$getWasm = _context5.sent, HexCoding = _yield$getWasm.HexCoding, Base58 = _yield$getWasm.Base58, 
            null == trxAddress || !trxAddress.startsWith("T")) {
              _context5.next = 9;
              break;
            }
            return _context5.abrupt("return", HexCoding.encode(Base58.decode(trxAddress)).substring(2));

           case 9:
            return _context5.abrupt("return", trxAddress);

           case 10:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })));
      return function(_x5) {
        return _ref5.apply(this, arguments);
      };
    }(), getTokenBalance = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(item, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _coinAddress, isMainCoin, _networkKey, web3, accountAddress, val, _networkPrecision, _res$data, _res$data$data, res, contractData, contractDecimals;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _coinAddress = null != item && item.coinAddress ? null == item ? void 0 : item.coinAddress : null == item ? void 0 : item.coinContractAddress, 
            isMainCoin = !_coinAddress || "-" == _coinAddress, _networkKey = null != item && item.networkKey ? null == item ? void 0 : item.networkKey : null == item ? void 0 : item.coinNetworkKey, 
            _context6.next = 5, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_25__.Qp(_networkKey, null, "TRX" !== _networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 5:
            if (web3 = _context6.sent, _context6.t0 = null == item ? void 0 : item.coinTransferFromAddress, 
            _context6.t0) {
              _context6.next = 11;
              break;
            }
            return _context6.next = 10, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_22__.getWalletAddress(_networkKey);

           case 10:
            _context6.t0 = _context6.sent;

           case 11:
            if (accountAddress = _context6.t0, "TRX" != _networkKey) {
              _context6.next = 21;
              break;
            }
            return _context6.next = 15, tron2HexAddress(_coinAddress);

           case 15:
            return _coinAddress = (_coinAddress = _context6.sent).slice(2), _context6.next = 19, 
            tron2HexAddress(accountAddress);

           case 19:
            accountAddress = (accountAddress = _context6.sent).slice(2);

           case 21:
            if (!isMainCoin) {
              _context6.next = 36;
              break;
            }
            return val = "", _context6.prev = 23, _context6.next = 26, web3.eth.getBalance(accountAddress);

           case 26:
            (val = _context6.sent) && (_networkPrecision = null != item && item.networkPrecision ? null == item ? void 0 : item.networkPrecision : null == item ? void 0 : item.coinNetworkPrecision, 
            val = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_22__.dataOperation(val, Math.pow(10, parseInt(_networkPrecision)), "division", !0, 4)), 
            _context6.next = 33;
            break;

           case 30:
            _context6.prev = 30, _context6.t1 = _context6.catch(23), val = "";

           case 33:
            return _context6.abrupt("return", val || "");

           case 36:
            if ("BLOB-20" != (null == item ? void 0 : item.protocolLabel)) {
              _context6.next = 41;
              break;
            }
            return _context6.next = 39, (0, _api_api__WEBPACK_IMPORTED_MODULE_33__.getBlob20Balance)({
              tick: null == item ? void 0 : item.coinTick,
              address: accountAddress
            });

           case 39:
            return res = _context6.sent, _context6.abrupt("return", (null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$data = _res$data.data) || void 0 === _res$data$data ? void 0 : _res$data$data.balance) || "");

           case 41:
            if (contractData = "", contractDecimals = "", !web3) {
              _context6.next = 53;
              break;
            }
            if (!(contractData = defineContract(web3, _coinAddress))) {
              _context6.next = 51;
              break;
            }
            return _context6.next = 48, getContractDecimals(contractData);

           case 48:
            _context6.t2 = _context6.sent, _context6.next = 52;
            break;

           case 51:
            _context6.t2 = "";

           case 52:
            contractDecimals = _context6.t2;

           case 53:
            if (contractData) {
              _context6.next = 55;
              break;
            }
            return _context6.abrupt("return", "");

           case 55:
            return _context6.next = 57, contractData.methods.balanceOf(accountAddress).call().then((function(res) {
              return contractDecimals ? _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_22__.dataOperation(res, Math.pow(10, parseInt(contractDecimals)), "division", !0, 4) : "";
            })).catch((function(error) {
              return "";
            }));

           case 57:
            return _context6.abrupt("return", _context6.sent);

           case 58:
           case "end":
            return _context6.stop();
          }
        }), _callee6, null, [ [ 23, 30 ] ]);
      })));
      return function(_x6, _x7, _x8, _x9) {
        return _ref6.apply(this, arguments);
      };
    }(), isEffectiveAddress = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(isSelectNet, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _getNetworkSort, substrateNetworks, standardCosmosNetworks, _address, res, key, _address$toString, _addres$toString, _addres, _totalNetworkDic$isSe, _totalNetworkDic$isSe2, hrp, web3;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            if (_getNetworkSort = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_36__.Fb)(totalNetworkDic), 
            substrateNetworks = _getNetworkSort.substrateNetworks, standardCosmosNetworks = _getNetworkSort.standardCosmosNetworks, 
            _address = null == address ? void 0 : address.trim(), res = !1, "SUI" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 13;
              break;
            }
            return _context7.prev = 4, _context7.abrupt("return", (0, _mysten_sui_js_utils__WEBPACK_IMPORTED_MODULE_24__.AP)(_address));

           case 8:
            _context7.prev = 8, _context7.t0 = _context7.catch(4), res = !1;

           case 11:
            _context7.next = 160;
            break;

           case 13:
            if (!_bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_31__.cI.includes(null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 24;
              break;
            }
            return _context7.prev = 14, key = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_23__.J3(_address), 
            _context7.abrupt("return", !!key);

           case 19:
            _context7.prev = 19, _context7.t1 = _context7.catch(14), res = !1;

           case 22:
            _context7.next = 160;
            break;

           case 24:
            if ("SEI" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 29;
              break;
            }
            null != (_addres = null == _address || null === (_address$toString = _address.toString()) || void 0 === _address$toString ? void 0 : _address$toString.toUpperCase()) && null !== (_addres$toString = _addres.toString()) && void 0 !== _addres$toString && _addres$toString.startsWith("SEI") && (null == _addres ? void 0 : _addres.length) > 40 && (res = !0), 
            _context7.next = 160;
            break;

           case 29:
            if ("BTC" != (null == isSelectNet ? void 0 : isSelectNet.networkKey) && "FB" != (null == isSelectNet ? void 0 : isSelectNet.networkKey) && "TBC" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 46;
              break;
            }
            if ("RGB++" !== (null == isSelectNet ? void 0 : isSelectNet.protocolLabel) && "RGB++" !== (null == isSelectNet ? void 0 : isSelectNet.inscription_type)) {
              _context7.next = 41;
              break;
            }
            return _context7.next = 33, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "bitcoin");

           case 33:
            if (_context7.t2 = _context7.sent, _context7.t2) {
              _context7.next = 38;
              break;
            }
            return _context7.next = 37, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "nervos");

           case 37:
            _context7.t2 = _context7.sent;

           case 38:
            res = _context7.t2, _context7.next = 44;
            break;

           case 41:
            return _context7.next = 43, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "bitcoin");

           case 43:
            res = _context7.sent;

           case 44:
            _context7.next = 160;
            break;

           case 46:
            if ((null == isSelectNet ? void 0 : isSelectNet.networkKey) !== _const__WEBPACK_IMPORTED_MODULE_30__.NETWORK_NAMES.GT_ORG) {
              _context7.next = 56;
              break;
            }
            return _context7.prev = 47, _context7.abrupt("return", _gt_org_PYGateMethod__WEBPACK_IMPORTED_MODULE_32__.a.checkAddres(address));

           case 51:
            return _context7.prev = 51, _context7.t3 = _context7.catch(47), _context7.abrupt("return", !1);

           case 54:
            _context7.next = 160;
            break;

           case 56:
            if (!_const__WEBPACK_IMPORTED_MODULE_30__.APTOS_CHAINS.includes(null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 62;
              break;
            }
            return _context7.next = 59, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "aptos");

           case 59:
            res = _context7.sent, _context7.next = 160;
            break;

           case 62:
            if ("TRX" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 68;
              break;
            }
            return _context7.next = 65, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "tron");

           case 65:
            res = _context7.sent, _context7.next = 160;
            break;

           case 68:
            if ("DASH" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 74;
              break;
            }
            return _context7.next = 71, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "dash");

           case 71:
            res = _context7.sent, _context7.next = 160;
            break;

           case 74:
            if (null == standardCosmosNetworks || !standardCosmosNetworks.includes(null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 79;
              break;
            }
            hrp = null == totalNetworkDic || null === (_totalNetworkDic$isSe = totalNetworkDic[null == isSelectNet ? void 0 : isSelectNet.networkKey]) || void 0 === _totalNetworkDic$isSe || null === (_totalNetworkDic$isSe2 = _totalNetworkDic$isSe.accountCreateParams) || void 0 === _totalNetworkDic$isSe2 ? void 0 : _totalNetworkDic$isSe2.hrp, 
            res = (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.Nv)({
              address: _address,
              hrp
            }), _context7.next = 160;
            break;

           case 79:
            if ("LTC" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 85;
              break;
            }
            return _context7.next = 82, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "litecoin");

           case 82:
            res = _context7.sent, _context7.next = 160;
            break;

           case 85:
            if ("DOGE" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 91;
              break;
            }
            return _context7.next = 88, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "dogecoin");

           case 88:
            res = _context7.sent, _context7.next = 160;
            break;

           case 91:
            if ("BCH" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 97;
              break;
            }
            return _context7.next = 94, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "bitcoinCash");

           case 94:
            res = _context7.sent, _context7.next = 160;
            break;

           case 97:
            if ("BNB_ORG" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 103;
              break;
            }
            return _context7.next = 100, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "binance");

           case 100:
            res = _context7.sent, _context7.next = 160;
            break;

           case 103:
            if ("ADA" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 109;
              break;
            }
            return _context7.next = 106, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "cardano");

           case 106:
            res = _context7.sent, _context7.next = 160;
            break;

           case 109:
            if ("TON" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 115;
              break;
            }
            return _context7.next = 112, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "ton");

           case 112:
            res = _context7.sent, _context7.next = 160;
            break;

           case 115:
            if (!substrateNetworks.includes(null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 119;
              break;
            }
            res = _substrate_subSend__WEBPACK_IMPORTED_MODULE_26__.qy(_address), _context7.next = 160;
            break;

           case 119:
            if ("VENOM" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 125;
              break;
            }
            return _context7.next = 122, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "everscale");

           case 122:
            res = _context7.sent, _context7.next = 160;
            break;

           case 125:
            if ("CKB" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 131;
              break;
            }
            return _context7.next = 128, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "nervos");

           case 128:
            res = _context7.sent, _context7.next = 160;
            break;

           case 131:
            if ("INJ" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 137;
              break;
            }
            return _context7.next = 134, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "nativeInjective");

           case 134:
            res = _context7.sent, _context7.next = 160;
            break;

           case 137:
            if ("SONIC_GATETEST" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 143;
              break;
            }
            return _context7.next = 140, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "sonic");

           case 140:
            res = _context7.sent, _context7.next = 160;
            break;

           case 143:
            if ("QUAI_GATETEST" != (null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 149;
              break;
            }
            return _context7.next = 146, (0, quais__WEBPACK_IMPORTED_MODULE_34__.bu)(_address);

           case 146:
            res = _context7.sent, _context7.next = 160;
            break;

           case 149:
            if (!_const__WEBPACK_IMPORTED_MODULE_30__.EXTRA_TEST_NETWORKS.includes(null == isSelectNet ? void 0 : isSelectNet.networkKey)) {
              _context7.next = 155;
              break;
            }
            return _context7.next = 152, (0, _walletCore_wallet__WEBPACK_IMPORTED_MODULE_27__.$m)(_address, "bitcoinTestnet");

           case 152:
            res = _context7.sent, _context7.next = 160;
            break;

           case 155:
            if (null == isSelectNet || !isSelectNet.networkKey) {
              _context7.next = 160;
              break;
            }
            return _context7.next = 158, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_25__.Qp(null == isSelectNet ? void 0 : isSelectNet.networkKey, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 158:
            web3 = _context7.sent;
            try {
              res = web3.utils.isAddress(_address);
            } catch (error) {
              res = !1;
            }

           case 160:
            return _context7.abrupt("return", res);

           case 161:
           case "end":
            return _context7.stop();
          }
        }), _callee7, null, [ [ 4, 8 ], [ 14, 19 ], [ 47, 51 ] ]);
      })));
      return function(_x10, _x11, _x12, _x13, _x14) {
        return _ref7.apply(this, arguments);
      };
    }(), isEffectiveContractAddress = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(accountInfo, isSelectNet, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _isSelectNet$networkK, res, netName, NORMAL_WALLET_CORE_CHAINS, accountAddress, suiToken, _suiToken$, web3;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            if (address) {
              _context8.next = 2;
              break;
            }
            return _context8.abrupt("return", !0);

           case 2:
            if (res = !0, netName = null == isSelectNet || null === (_isSelectNet$networkK = isSelectNet.networkKey) || void 0 === _isSelectNet$networkK ? void 0 : _isSelectNet$networkK.toUpperCase(), 
            NORMAL_WALLET_CORE_CHAINS = [ "TON", "VENOM", "NIBI", "ATOM" ].concat(_toConsumableArray(_bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_31__.cI)), 
            "SUI" != netName) {
              _context8.next = 15;
              break;
            }
            return _context8.next = 8, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_22__.getMatchAddress(accountInfo && accountInfo.walletID, accountInfo && accountInfo.accountID, netName);

           case 8:
            return accountAddress = _context8.sent, _context8.next = 11, _popup_lib_tool_sui_suiWeb3__WEBPACK_IMPORTED_MODULE_28__.getSuiTokenInfo(accountAddress, isSelectNet, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 11:
            (null == (suiToken = _context8.sent) ? void 0 : suiToken.length) > 0 && ((null === (_suiToken$ = suiToken[0]) || void 0 === _suiToken$ ? void 0 : _suiToken$.symbol) || (res = !1)), 
            _context8.next = 44;
            break;

           case 15:
            if (!NORMAL_WALLET_CORE_CHAINS.includes(netName)) {
              _context8.next = 21;
              break;
            }
            return _context8.next = 18, isEffectiveAddress(isSelectNet, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 18:
            res = _context8.sent, _context8.next = 44;
            break;

           case 21:
            if ("APT" != netName) {
              _context8.next = 24;
              break;
            }
            _context8.next = 44;
            break;

           case 24:
            if ("TRX" != netName) {
              _context8.next = 27;
              break;
            }
            _context8.next = 44;
            break;

           case 27:
            if ("TIA" != netName) {
              _context8.next = 30;
              break;
            }
            _context8.next = 44;
            break;

           case 30:
            if ("BNB_ORG" != netName) {
              _context8.next = 33;
              break;
            }
            _context8.next = 44;
            break;

           case 33:
            if ("ADA" != netName) {
              _context8.next = 36;
              break;
            }
            _context8.next = 44;
            break;

           case 36:
            if ("GT_ORG" != netName) {
              _context8.next = 39;
              break;
            }
            _context8.next = 44;
            break;

           case 39:
            return _context8.next = 41, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_25__.Qp(netName, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 41:
            web3 = _context8.sent, _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_29__.defineContract(web3, address) || (res = !1);

           case 44:
            return _context8.abrupt("return", res);

           case 45:
           case "end":
            return _context8.stop();
          }
        }), _callee8);
      })));
      return function(_x15, _x16, _x17, _x18, _x19, _x20) {
        return _ref8.apply(this, arguments);
      };
    }(), getNonce = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(item, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var networkKey, currentAddress, _getNetworkSort2, res, web3, nonce;
        return regeneratorRuntime.wrap((function(_context9) {
          for (;;) switch (_context9.prev = _context9.next) {
           case 0:
            if (networkKey = null == item ? void 0 : item.coinNetworkKey, currentAddress = null == item ? void 0 : item.coinTransferFromAddress, 
            _context9.prev = 2, _getNetworkSort2 = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_36__.Fb)(totalNetworkDic), 
            !_getNetworkSort2.substrateNetworks.includes(networkKey)) {
              _context9.next = 11;
              break;
            }
            return _context9.next = 7, (0, _substrate_subSend__WEBPACK_IMPORTED_MODULE_26__.Ey)(currentAddress, networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 7:
            return res = _context9.sent, _context9.abrupt("return", res);

           case 11:
            return _context9.next = 13, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_25__.Qp(networkKey, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 13:
            return web3 = _context9.sent, _context9.next = 16, web3.eth.getTransactionCount(currentAddress, "latest");

           case 16:
            return nonce = _context9.sent, _context9.abrupt("return", nonce);

           case 18:
            _context9.next = 23;
            break;

           case 20:
            return _context9.prev = 20, _context9.t0 = _context9.catch(2), _context9.abrupt("return", "");

           case 23:
           case "end":
            return _context9.stop();
          }
        }), _callee9, null, [ [ 2, 20 ] ]);
      })));
      return function(_x21, _x22, _x23, _x24) {
        return _ref9.apply(this, arguments);
      };
    }();
  },
  91903: () => {},
  94801: () => {},
  98751: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Zu: () => createMnemonic,
      mG: () => privateKeystore
    });
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(259581), 
    __webpack_require__(447746), __webpack_require__(43148), __webpack_require__(207452), 
    __webpack_require__(248434);
    var _substrate_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(910210), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(660862), _gateweb3_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(649639);
    __webpack_require__(928635);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var ethers = __webpack_require__(650251), createMnemonic = (__webpack_require__(490749), 
    function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
        var mnemonic;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return mnemonic = "", _context.prev = 1, _context.next = 4, _gateweb3_base__WEBPACK_IMPORTED_MODULE_9__.$D.generateMnemonic();

           case 4:
            mnemonic = _context.sent, _context.next = 9;
            break;

           case 7:
            _context.prev = 7, _context.t0 = _context.catch(1);

           case 9:
            return _context.abrupt("return", mnemonic);

           case 10:
           case "end":
            return _context.stop();
          }
        }), _callee, null, [ [ 1, 7 ] ]);
      })));
      return function() {
        return _ref.apply(this, arguments);
      };
    }());
    var privateKeystore = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(privateKey, password, networkKey, totalNetworkDic) {
        var _getNetworkSort2, wallet, _wallet;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            if (_getNetworkSort2 = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_8__.Fb)(totalNetworkDic), 
            !_getNetworkSort2.substrateNetworks.includes(networkKey)) {
              _context4.next = 11;
              break;
            }
            return _context4.next = 4, (0, _substrate_index__WEBPACK_IMPORTED_MODULE_7__.y)(networkKey, !0, totalNetworkDic);

           case 4:
            if (!(wallet = _context4.sent)) {
              _context4.next = 9;
              break;
            }
            return _context4.next = 8, wallet.generateKeystoreFromPrivateKey(privateKey, password).then((function(json) {
              return json;
            })).catch((function(error) {
              return error;
            }));

           case 8:
           case 14:
            return _context4.abrupt("return", _context4.sent);

           case 9:
            _context4.next = 15;
            break;

           case 11:
            return _wallet = new ethers.Wallet(privateKey), _context4.next = 14, _wallet.encrypt(password).then((function(json) {
              return json;
            })).catch((function(error) {
              return error;
            }));

           case 15:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x5, _x6, _x7, _x8) {
        return _ref4.apply(this, arguments);
      };
    }();
  },
  100397: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      getFinalTokenBalance: () => getFinalTokenBalance,
      getSuiTokenInfo: () => getSuiTokenInfo,
      getTokenBalance: () => getTokenBalance,
      getTokenInfo: () => getTokenInfo
    });
    __webpack_require__(418665), __webpack_require__(505086), __webpack_require__(269193), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(207452), 
    __webpack_require__(296540);
    var _popup_lib_model_defiWalletData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(535561), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(326394), _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(426451);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    __webpack_require__(537680), __webpack_require__(922665), __webpack_require__(490749);
    var getTokenInfo = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(network) {
        var address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, provider, _args = arguments;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return address = _args.length > 1 && void 0 !== _args[1] ? _args[1] : "0x2::sui::SUI", 
            totalNetworkDic = _args.length > 2 ? _args[2] : void 0, rpcUrls = _args.length > 3 ? _args[3] : void 0, 
            lastGetSuccessRpcTime = _args.length > 4 ? _args[4] : void 0, _context.next = 6, 
            _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_9__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 6:
            return provider = _context.sent, _context.next = 9, provider.getCoinMetadata({
              coinType: address
            }).then((function(res) {
              return res;
            })).catch((function(err) {
              return null;
            }));

           case 9:
            return _context.abrupt("return", _context.sent);

           case 10:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), getTokenBalance = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(accountAddress, network, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var provider;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            if (accountAddress) {
              _context2.next = 2;
              break;
            }
            return _context2.abrupt("return", null);

           case 2:
            return _context2.next = 4, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_9__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 4:
            return provider = _context2.sent, _context2.next = 7, provider.getBalance({
              owner: accountAddress,
              coinType: address
            }).then((function(res) {
              return res;
            })).catch((function(err) {
              return null;
            }));

           case 7:
            return _context2.abrupt("return", _context2.sent);

           case 8:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x2, _x3, _x4, _x5, _x6, _x7) {
        return _ref2.apply(this, arguments);
      };
    }(), getSuiTokenInfo = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(accountAddress, network) {
        var address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, _args3 = arguments;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return address = _args3.length > 2 && void 0 !== _args3[2] ? _args3[2] : "0x2::sui::SUI", 
            totalNetworkDic = _args3.length > 3 ? _args3[3] : void 0, rpcUrls = _args3.length > 4 ? _args3[4] : void 0, 
            lastGetSuccessRpcTime = _args3.length > 5 ? _args3[5] : void 0, _context3.next = 6, 
            Promise.all([ getTokenInfo(network, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime), getTokenBalance(accountAddress, network, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) ]);

           case 6:
            return _context3.abrupt("return", _context3.sent);

           case 7:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x8, _x9) {
        return _ref3.apply(this, arguments);
      };
    }(), getFinalTokenBalance = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(networkData, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var defiData, selectedWalletDic, accountAddress, walletID, accountID, netKey, contractAddress, suiToken, contractDecimals, tokenBalance, _suiToken$, _suiToken$2, val;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.next = 2, _popup_lib_model_defiWalletData__WEBPACK_IMPORTED_MODULE_7__.$();

           case 2:
            if (defiData = _context4.sent, selectedWalletDic = defiData.defiWallet.selectedWalletDic, 
            accountAddress = "", !selectedWalletDic || "{}" === JSON.stringify(selectedWalletDic)) {
              _context4.next = 11;
              break;
            }
            return walletID = selectedWalletDic.walletID, accountID = selectedWalletDic.accountID, 
            netKey = (null == networkData ? void 0 : networkData.networkKey) || (null == networkData ? void 0 : networkData.coinNetworkKey), 
            _context4.next = 10, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_8__.getMatchAddress(walletID, accountID, netKey);

           case 10:
            accountAddress = _context4.sent;

           case 11:
            if (accountAddress) {
              _context4.next = 13;
              break;
            }
            return _context4.abrupt("return", "");

           case 13:
            return contractAddress = "-" == (null == networkData ? void 0 : networkData.coinContractAddress) || null == networkData ? void 0 : networkData.coinContractAddress, 
            _context4.next = 16, getSuiTokenInfo(accountAddress, networkData, contractAddress, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 16:
            return suiToken = _context4.sent, contractDecimals = "", tokenBalance = "", (null == suiToken ? void 0 : suiToken.length) > 0 && (contractDecimals = (null === (_suiToken$ = suiToken[0]) || void 0 === _suiToken$ ? void 0 : _suiToken$.decimals) || "", 
            tokenBalance = (null === (_suiToken$2 = suiToken[1]) || void 0 === _suiToken$2 ? void 0 : _suiToken$2.totalBalance) || ""), 
            val = "", tokenBalance && contractDecimals && (val = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_8__.dataOperation(tokenBalance, Math.pow(10, contractDecimals), "division", !0, 4)), 
            _context4.abrupt("return", val);

           case 23:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x10, _x11, _x12, _x13) {
        return _ref4.apply(this, arguments);
      };
    }();
  },
  103642: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      b: () => UTXOSummary
    });
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(505086), __webpack_require__(194009), 
    __webpack_require__(815852), __webpack_require__(564216), __webpack_require__(418665), 
    __webpack_require__(929979), __webpack_require__(14602);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var UTXOSummary = function UTXOSummary(opts) {
      !function(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
      }(this, UTXOSummary), _defineProperty(this, "unspentTransactions", []), _defineProperty(this, "totalAmount", 0), 
      this.unspentTransactions = opts.unspentTransactions, this.totalAmount = opts.totalAmount;
    };
  },
  114923: () => {},
  115469: () => {},
  116239: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => __WEBPACK_DEFAULT_EXPORT__
    });
    __webpack_require__(207452), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(407899), __webpack_require__(504895), __webpack_require__(804632), 
    __webpack_require__(64189), __webpack_require__(741412), __webpack_require__(734606), 
    __webpack_require__(597755), __webpack_require__(815852), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(505086), __webpack_require__(194009), __webpack_require__(269193), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602);
    var quais__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(894477), _httpService__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(227383);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, (arg = descriptor.key, 
        key = void 0, key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string"), "symbol" === _typeof(key) ? key : String(key)), descriptor);
      }
      var arg, key;
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return function(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
          }(self);
        }(this, result);
      };
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    const __WEBPACK_DEFAULT_EXPORT__ = function(_JsonRpcProvider) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(CustomJsonRpcProviderQuai, _JsonRpcProvider);
      var Constructor, protoProps, staticProps, fn, _send2, _super = _createSuper(CustomJsonRpcProviderQuai);
      function CustomJsonRpcProviderQuai() {
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CustomJsonRpcProviderQuai), _super.apply(this, arguments);
      }
      return Constructor = CustomJsonRpcProviderQuai, protoProps = [ {
        key: "_send",
        value: (fn = regeneratorRuntime.mark((function _callee(payload, shard) {
          var request, appHeader, response, resp;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return request = this._getConnection(shard), _context.next = 3, (0, _httpService__WEBPACK_IMPORTED_MODULE_23__.getRequestHeader)(request.method, request.url, payload);

             case 3:
              return appHeader = _context.sent, request.body = JSON.stringify(payload), request.setHeader("content-type", "application/json"), 
              Object.keys(appHeader).forEach((function(key) {
                request.setHeader(key, appHeader[key]);
              })), _context.next = 9, request.send();

             case 9:
              return (response = _context.sent).assertOk(), resp = response.bodyJson, Array.isArray(resp) || (resp = [ resp ]), 
              _context.abrupt("return", resp);

             case 14:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        })), _send2 = function() {
          var self = this, args = arguments;
          return new Promise((function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          }));
        }, function(_x, _x2) {
          return _send2.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CustomJsonRpcProviderQuai;
    }(quais__WEBPACK_IMPORTED_MODULE_22__.FR);
  },
  140007: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      w: () => YLChainBNBMethod
    });
    __webpack_require__(207452), __webpack_require__(380115), __webpack_require__(752231), 
    __webpack_require__(579389), __webpack_require__(505086), __webpack_require__(906048), 
    __webpack_require__(754989), __webpack_require__(714913), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(269193), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602);
    var _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(259159), _api_httpService__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(227383), _btc_constant__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(320913), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(700313), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(660862);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _readOnlyError(name) {
      throw new TypeError('"' + name + '" is read-only');
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var YLChainBNBMethod = function() {
      function YLChainBNBMethod(url, wasm) {
        _classCallCheck(this, YLChainBNBMethod), _defineProperty(this, "mRestUrl", ""), 
        _defineProperty(this, "wasm", {}), this.mRestUrl = url, this.wasm = wasm;
      }
      var Constructor, protoProps, staticProps, _init, _getFee, _calculateFee, _simulate, _sendTransaction, _signTransaction, _queryAccountInfo, _getChainId, _getTx, _getBalance;
      return Constructor = YLChainBNBMethod, protoProps = [ {
        key: "getBalance",
        value: (_getBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee(address) {
          var path, accountInfo;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_21__.J.getAccount(address)), 
              _context.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_20__.getData)(path);

             case 3:
              return accountInfo = _context.sent, _context.abrupt("return", accountInfo.data.balances[0].free);

             case 5:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _getBalance.apply(this, arguments);
        })
      }, {
        key: "getTx",
        value: (_getTx = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(hash) {
          var path, accountInfo;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_21__.J.getTx(hash)), 
              _context2.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_20__.getData)(path);

             case 3:
              return accountInfo = _context2.sent, _context2.abrupt("return", accountInfo.data);

             case 5:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _getTx.apply(this, arguments);
        })
      }, {
        key: "getChainId",
        value: (_getChainId = _asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_21__.J.nodeInfo), 
              _context3.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_20__.getData)(path);

             case 3:
              return res = _context3.sent, _context3.abrupt("return", res.data.node_info.network);

             case 5:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function() {
          return _getChainId.apply(this, arguments);
        })
      }, {
        key: "queryAccountInfo",
        value: (_queryAccountInfo = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(address) {
          var path, accountInfo, sequence, accountNumber;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_21__.J.getAccount(address)), 
              _context4.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_20__.getData)(path);

             case 3:
              return accountInfo = _context4.sent, sequence = accountInfo.data.sequence, accountNumber = accountInfo.data.account_number, 
              _context4.abrupt("return", new PYSeiAccountInfo({
                sequence: parseInt(sequence.toString()),
                accountNumber: parseInt(accountNumber.toString())
              }));

             case 7:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x3) {
          return _queryAccountInfo.apply(this, arguments);
        })
      }, {
        key: "signTransaction",
        value: (_signTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(fromAddress, toAddress, privateKeyHex, amount, memo, coinType, denom) {
          var _yield$getWasm, HexCoding, AnyAddress, AnySigner, accountInfo, sequence, accountNumber, chainId, inputsSendOrder, outputsSendOrder, input, encoded, outputData, output, rawTransaction;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.t)();

             case 2:
              return _yield$getWasm = _context5.sent, HexCoding = _yield$getWasm.HexCoding, AnyAddress = _yield$getWasm.AnyAddress, 
              AnySigner = _yield$getWasm.AnySigner, _context5.next = 8, this.queryAccountInfo(fromAddress);

             case 8:
              return accountInfo = _context5.sent, sequence = accountInfo.sequence, accountNumber = accountInfo.accountNumber, 
              _context5.next = 13, this.getChainId();

             case 13:
              return chainId = _context5.sent, inputsSendOrder = [ _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SendOrder.Input.create({
                address: AnyAddress.createWithString(fromAddress, coinType).data(),
                coins: [ _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SendOrder.Token.create({
                  denom,
                  amount: parseInt(amount)
                }) ]
              }) ], outputsSendOrder = [ _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SendOrder.Output.create({
                address: AnyAddress.createWithString(toAddress, coinType).data(),
                coins: [ _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SendOrder.Token.create({
                  denom,
                  amount: parseInt(amount)
                }) ]
              }) ], input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SigningInput.create({
                chainId,
                sequence: parseInt(sequence),
                accountNumber: parseInt(accountNumber),
                privateKey: HexCoding.decode(privateKeyHex),
                memo,
                sendOrder: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SendOrder.create({
                  inputs: inputsSendOrder,
                  outputs: outputsSendOrder
                })
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.TW.Binance.Proto.SigningOutput.decode(outputData), 
              rawTransaction = HexCoding.encode(output.encoded), _context5.abrupt("return", rawTransaction);

             case 22:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x4, _x5, _x6, _x7, _x8, _x9, _x10) {
          return _signTransaction.apply(this, arguments);
        })
      }, {
        key: "sendTransaction",
        value: (_sendTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(rawTx) {
          var result;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return rawTx.length > 2 && rawTx.startsWith("0x") && (rawTx = rawTx.slice(2, rawTx.length)), 
              _context6.next = 3, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_22__.IM)("BNB_ORG", rawTx);

             case 3:
              return result = _context6.sent, _context6.abrupt("return", result.data.data.hash_id);

             case 5:
             case "end":
              return _context6.stop();
            }
          }), _callee6);
        }))), function(_x11) {
          return _sendTransaction.apply(this, arguments);
        })
      }, {
        key: "simulate",
        value: (_simulate = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(txBytes) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_21__.rL.simulate), 
              _context7.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_20__.postJson)(path, {
                tx_bytes: txBytes
              });

             case 3:
              return res = _context7.sent, _context7.abrupt("return", res.data.gas_info);

             case 5:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x12) {
          return _simulate.apply(this, arguments);
        })
      }, {
        key: "calculateFee",
        value: (_calculateFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(fromAddress, toAddress, amount, _ref) {
          var memo, coinType, key, txBytes, res;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return _ref.denom, memo = _ref.memo, coinType = _ref.coinType, key = HDWallet().getKeyForCoin(coinType).data(), 
              _context8.next = 4, this.signTransaction(fromAddress, toAddress, bytesToHex(key), BigInt.parse(amount), memo, coinType);

             case 4:
              return txBytes = _context8.sent, _context8.next = 7, this.simulate(txBytes);

             case 7:
              return res = _context8.sent, _context8.abrupt("return", res.gas_used);

             case 9:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x13, _x14, _x15, _x16) {
          return _calculateFee.apply(this, arguments);
        })
      }, {
        key: "getFee",
        value: (_getFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee9() {
          var path, element;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_21__.J.fee), 
              _context9.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_20__.getData)(path);

             case 3:
              for (element in _context9.sent.data) null != element.fixed_fee_params && (element.fixed_fee_params.fee, 
              _readOnlyError("fee"));
              return _context9.abrupt("return", parseInt(7500..toString()));

             case 8:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function() {
          return _getFee.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(totalNetworkDic) {
          var wasm, _getNetworkRestInfo, url;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return _context10.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.t)();

             case 2:
              return wasm = _context10.sent, _getNetworkRestInfo = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_23__.nD)("BNB_ORG", totalNetworkDic), 
              url = _getNetworkRestInfo.url, _context10.abrupt("return", new YLChainBNBMethod(url, wasm));

             case 5:
             case "end":
              return _context10.stop();
            }
          }), _callee10);
        }))), function(_x17) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), YLChainBNBMethod;
    }(), PYSeiAccountInfo = function PYSeiAccountInfo(opts) {
      _classCallCheck(this, PYSeiAccountInfo), this.sequence = opts.sequence || 0, this.accountNumber = opts.accountNumber || 0;
    };
  },
  144888: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => __WEBPACK_DEFAULT_EXPORT__
    });
    __webpack_require__(418665), __webpack_require__(505086), __webpack_require__(929979), 
    __webpack_require__(410121), __webpack_require__(863051), __webpack_require__(14602), 
    __webpack_require__(804632), __webpack_require__(64189), __webpack_require__(741412), 
    __webpack_require__(734606), __webpack_require__(597755), __webpack_require__(815852), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(269193), 
    __webpack_require__(564216), __webpack_require__(207452);
    var _mysten_sui_js_client__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(957397), _mysten_sui_js_client__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(930467), _api_httpService__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(227383);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, (arg = descriptor.key, 
        key = void 0, key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string"), "symbol" === _typeof(key) ? key : String(key)), descriptor);
      }
      var arg, key;
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return _assertThisInitialized(self);
        }(this, result);
      };
    }
    function _assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    function _classPrivateFieldInitSpec(obj, privateMap, value) {
      !function(obj, privateCollection) {
        if (privateCollection.has(obj)) throw new TypeError("Cannot initialize the same private elements twice on an object");
      }(obj, privateMap), privateMap.set(obj, value);
    }
    function _classPrivateFieldGet(receiver, privateMap) {
      return function(receiver, descriptor) {
        if (descriptor.get) return descriptor.get.call(receiver);
        return descriptor.value;
      }(receiver, _classExtractFieldDescriptor(receiver, privateMap, "get"));
    }
    function _classPrivateFieldSet(receiver, privateMap, value) {
      return function(receiver, descriptor, value) {
        if (descriptor.set) descriptor.set.call(receiver, value); else {
          if (!descriptor.writable) throw new TypeError("attempted to set read only private field");
          descriptor.value = value;
        }
      }(receiver, _classExtractFieldDescriptor(receiver, privateMap, "set"), value), value;
    }
    function _classExtractFieldDescriptor(receiver, privateMap, action) {
      if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
      return privateMap.get(receiver);
    }
    var _requestId = new WeakMap, _options = new WeakMap;
    const __WEBPACK_DEFAULT_EXPORT__ = function(_SuiHTTPTransport) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(CustomSuiHTTPTransport, _SuiHTTPTransport);
      var Constructor, protoProps, staticProps, fn, _request, _super = _createSuper(CustomSuiHTTPTransport);
      function CustomSuiHTTPTransport(options) {
        var _this;
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CustomSuiHTTPTransport), _classPrivateFieldInitSpec(_assertThisInitialized(_this = _super.call(this, options)), _requestId, {
          writable: !0,
          value: 0
        }), _classPrivateFieldInitSpec(_assertThisInitialized(_this), _options, {
          writable: !0,
          value: void 0
        }), _classPrivateFieldSet(_assertThisInitialized(_this), _options, options), _this;
      }
      return Constructor = CustomSuiHTTPTransport, protoProps = [ {
        key: "request",
        value: (fn = regeneratorRuntime.mark((function _callee(input) {
          var res, data;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _classPrivateFieldSet(this, _requestId, _classPrivateFieldGet(this, _requestId) + 1), 
              _context.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.postJson)(_classPrivateFieldGet(this, _options).url, {
                jsonrpc: "2.0",
                id: _classPrivateFieldGet(this, _requestId),
                method: input.method,
                params: input.params
              });

             case 3:
              if (200 === (res = _context.sent).status) {
                _context.next = 6;
                break;
              }
              throw new _mysten_sui_js_client__WEBPACK_IMPORTED_MODULE_21__.Up("Unexpected status code: ".concat(res.status), res.status, res.statusText);

             case 6:
              if (!("error" in (data = res.data)) || null == data.error) {
                _context.next = 9;
                break;
              }
              throw new _mysten_sui_js_client__WEBPACK_IMPORTED_MODULE_21__.Gm(data.error.message, data.error.code);

             case 9:
              return _context.abrupt("return", data.result);

             case 10:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        })), _request = function() {
          var self = this, args = arguments;
          return new Promise((function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          }));
        }, function(_x) {
          return _request.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CustomSuiHTTPTransport;
    }(_mysten_sui_js_client__WEBPACK_IMPORTED_MODULE_20__.t);
  },
  145581: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      J5: () => getGasPriceBTCCash,
      Uh: () => getGasPriceBTC,
      WS: () => getGasPriceLitecoin,
      X0: () => getGasLimitSol,
      bx: () => getGasPriceSol,
      d6: () => getGasPriceEvm,
      eU: () => getGasPriceTBC,
      p3: () => getGasLimitEvm,
      so: () => getGasLimitSui,
      u_: () => getGasPriceApt
    });
    __webpack_require__(380115);
    var _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(525735), ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(358547), getGasApi = function(path, query) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_1__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_2__.lB, "/chain/transaction/gasprice/").concat(path), query);
    }, getGasLimitApi = function(path, params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_1__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_2__.lB, "/chain/transaction/gaslimit/").concat(path), {}, params);
    }, getGasPriceEvm = ((0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_1__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_2__.lB, "/chain/transaction/config/gas_predict_list")), 
    (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_1__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_2__.lB, "/chain/transaction/config/gas_predict_factor")), 
    function(path) {
      var query = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return getGasApi("evm/".concat(path), query);
    }), getGasPriceSol = function() {
      return getGasApi("sol", arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {});
    }, getGasPriceBTC = function() {
      return getGasApi("btc");
    }, getGasPriceTBC = function() {
      return getGasApi("btc/tbc");
    }, getGasPriceBTCCash = function() {
      return getGasApi("btccash");
    }, getGasPriceApt = function() {
      return getGasApi("apt");
    }, getGasPriceLitecoin = function() {
      return getGasApi("litecoin");
    }, getGasLimitEvm = function(path, params) {
      return getGasLimitApi("evm/".concat(path), params);
    }, getGasLimitSol = function(params) {
      return getGasLimitApi("sol", params);
    }, getGasLimitSui = function(params) {
      return getGasLimitApi("sui", params);
    };
  },
  153341: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      SQ: () => SpeedType,
      Uu: () => GasType,
      c2: () => NETWORKKEY_TO_PRIVATEKEY_MAP,
      s8: () => NETWORKKEY_TO_WALLETCORE_NAME_MAP
    });
    var NETWORKKEY_TO_WALLETCORE_NAME_MAP = {
      BTC: "bitcoin",
      FB: "bitcoin",
      LTC: "litecoin",
      BCH: "bitcoinCash",
      DASH: "dash",
      DOGE: "dogecoin",
      ADA: "cardano",
      TBC: "turingBitChain",
      CKB: "ckb",
      SIGNET_TEST_GATETEST: "bitcoinTestnet",
      BTC_TEST4_GATETEST: "bitcoinTestnet",
      APT: "aptos",
      APT_GATETEST: "aptos",
      MOVE: "move",
      MOVE_GATETEST: "move",
      TRX: "tron"
    }, NETWORKKEY_TO_PRIVATEKEY_MAP = {
      BTC: "L3Z6tQ2N2FLfRDZJmRgfAAZ3Tz1W5HmYEoD7jmttNASNzhRZbe9u",
      FB: "L3Z6tQ2N2FLfRDZJmRgfAAZ3Tz1W5HmYEoD7jmttNASNzhRZbe9u",
      LTC: "T5UhGrHCp3BcViH8r359FHT34MhZar1CxsEbtt1fdB59HfXvLhEV",
      BCH: "1LNXc19HsErnVWEUM9Syp24nY6E9nPnvHn",
      DASH: "Xg9C6bXm7RF6ncyPyXqWnVefSm5acEcfky",
      DOGE: "QVp1vYc5bfW7gMew2Fd7zpHt2Cun8KzSPtjYJTfsDHwoce8fS1XF",
      ADA: "f0c83dcac9e6f5d627218e1398daf25899af37bbb0b2a8b5b043bcf93d7cff454f94915f5c111059f7beb9820ce43eb7481e7e808c4abd758d2c92e4e332d01b7615ea0c018585af267a43912c897d63775ae07ec14ea92b80009be9128b0aa2a8f9306fc21698444576416d1db401584fac183b007951e40a3ee6a53b7cff454b65bda79e1269f97b91275305e5cc808dc10e3f08600f489f576c4685abc07c5823969153c3bd390d562dee88b6151d55ea8c9df32e595daed29bdc5f57849d",
      APT: "d3b355d265b479fef40682f30c20d0e38c64553efad464e711ebbec95b1f3244"
    }, GasType = {
      NORMAL: 1,
      LEGACY: 2,
      EIP_1559: 3,
      BTC: 4,
      SOLANA: 5
    }, SpeedType = {
      LOW: 0,
      AVG: 1,
      FAST: 2,
      CUSTOM: 3
    };
  },
  157943: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Hk: () => abiERC1155,
      Fw: () => abiERC721,
      p5: () => contractAbiData
    });
    var abiERC721 = [ {
      constant: !0,
      inputs: [ {
        name: "interfaceID",
        type: "bytes4"
      } ],
      name: "supportsInterface",
      outputs: [ {
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "name",
      outputs: [ {
        name: "_name",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "getApproved",
      outputs: [ {
        name: "",
        type: "address"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_approved",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "approve",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "totalSupply",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_from",
        type: "address"
      }, {
        name: "_to",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "transferFrom",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_owner",
        type: "address"
      }, {
        name: "_index",
        type: "uint256"
      } ],
      name: "tokenOfOwnerByIndex",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_from",
        type: "address"
      }, {
        name: "_to",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "safeTransferFrom",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_index",
        type: "uint256"
      } ],
      name: "tokenByIndex",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "ownerOf",
      outputs: [ {
        name: "",
        type: "address"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_owner",
        type: "address"
      } ],
      name: "balanceOf",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "symbol",
      outputs: [ {
        name: "_symbol",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_operator",
        type: "address"
      }, {
        name: "_approved",
        type: "bool"
      } ],
      name: "setApprovalForAll",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_from",
        type: "address"
      }, {
        name: "_to",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      }, {
        name: "data",
        type: "bytes"
      } ],
      name: "safeTransferFrom",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "tokenURI",
      outputs: [ {
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_owner",
        type: "address"
      }, {
        name: "_operator",
        type: "address"
      } ],
      name: "isApprovedForAll",
      outputs: [ {
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        name: "_from",
        type: "address"
      }, {
        indexed: !0,
        name: "_to",
        type: "address"
      }, {
        indexed: !0,
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "Transfer",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        name: "_owner",
        type: "address"
      }, {
        indexed: !0,
        name: "_approved",
        type: "address"
      }, {
        indexed: !0,
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "Approval",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        name: "_owner",
        type: "address"
      }, {
        indexed: !0,
        name: "_operator",
        type: "address"
      }, {
        indexed: !1,
        name: "_approved",
        type: "bool"
      } ],
      name: "ApprovalForAll",
      type: "event"
    } ], abiERC1155 = [ {
      inputs: [ {
        internalType: "string",
        name: "uri_",
        type: "string"
      } ],
      stateMutability: "nonpayable",
      type: "constructor"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "account",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        indexed: !1,
        internalType: "bool",
        name: "approved",
        type: "bool"
      } ],
      name: "ApprovalForAll",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      }, {
        indexed: !1,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]"
      } ],
      name: "TransferBatch",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      } ],
      name: "TransferSingle",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "string",
        name: "value",
        type: "string"
      }, {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      } ],
      name: "URI",
      type: "event"
    }, {
      inputs: [ {
        internalType: "address",
        name: "account",
        type: "address"
      }, {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      } ],
      name: "balanceOf",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      }, {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      } ],
      name: "balanceOfBatch",
      outputs: [ {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "account",
        type: "address"
      }, {
        internalType: "address",
        name: "operator",
        type: "address"
      } ],
      name: "isApprovedForAll",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      }, {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      }, {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      } ],
      name: "safeBatchTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }, {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      } ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        internalType: "bool",
        name: "approved",
        type: "bool"
      } ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      } ],
      name: "supportsInterface",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "uri",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      stateMutability: "view",
      type: "function"
    } ], contractAbiData = [ {
      inputs: [ {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "constructor"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "guy",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "Approval",
      type: "event"
    }, {
      anonymous: !0,
      inputs: [ {
        indexed: !0,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4"
      }, {
        indexed: !0,
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        indexed: !0,
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32"
      }, {
        indexed: !0,
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32"
      }, {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      } ],
      name: "LogNote",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "Transfer",
      type: "event"
    }, {
      constant: !0,
      inputs: [],
      name: "DOMAIN_SEPARATOR",
      outputs: [ {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "PERMIT_TYPEHASH",
      outputs: [ {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      }, {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "allowance",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "approve",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "balanceOf",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "burn",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "decimals",
      outputs: [ {
        internalType: "uint8",
        name: "",
        type: "uint8"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "guy",
        type: "address"
      } ],
      name: "deny",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "mint",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "move",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "name",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "nonces",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "holder",
        type: "address"
      }, {
        internalType: "address",
        name: "spender",
        type: "address"
      }, {
        internalType: "uint256",
        name: "nonce",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }, {
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }, {
        internalType: "uint8",
        name: "v",
        type: "uint8"
      }, {
        internalType: "bytes32",
        name: "r",
        type: "bytes32"
      }, {
        internalType: "bytes32",
        name: "s",
        type: "bytes32"
      } ],
      name: "permit",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "pull",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "push",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "guy",
        type: "address"
      } ],
      name: "rely",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "symbol",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "totalSupply",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "transfer",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "transferFrom",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "version",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "wards",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    } ];
  },
  163363: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Zr: () => createStandardCosmosSeriesAddressByPublicKeyAndHrp
    });
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(207452), 
    __webpack_require__(426451);
    var _method__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(326394), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(259159);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var bech32 = __webpack_require__(722343).bech32, createStandardCosmosSeriesAddressByPublicKeyAndHrp = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(_ref6) {
        var publicKey, hrp, _yield$getWasm, Hash, hash, words, be32EncodeAddress;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return publicKey = _ref6.publicKey, hrp = _ref6.hrp, _context6.next = 3, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_5__.t)();

           case 3:
            return _yield$getWasm = _context6.sent, Hash = _yield$getWasm.Hash, hash = Hash.sha256RIPEMD((0, 
            _method__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(publicKey)), words = bech32.toWords(hash), 
            be32EncodeAddress = bech32.encode(hrp, words), _context6.abrupt("return", be32EncodeAddress);

           case 9:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x11) {
        return _ref7.apply(this, arguments);
      };
    }();
  },
  185471: () => {},
  194470: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => substrate_rpc
    });
    __webpack_require__(752231), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(196088), __webpack_require__(754989), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(269193), __webpack_require__(564216), __webpack_require__(418665), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(207452);
    var gt_networks = __webpack_require__(660862), decode = __webpack_require__(671897), keyring_keyring = __webpack_require__(150742), ws = __webpack_require__(378604), Api = __webpack_require__(36061), gt_fetch = (__webpack_require__(380115), 
    __webpack_require__(804632), __webpack_require__(64189), __webpack_require__(741412), 
    __webpack_require__(734606), __webpack_require__(597755), __webpack_require__(312091), 
    __webpack_require__(110678), __webpack_require__(504895), __webpack_require__(714913), 
    __webpack_require__(498741), __webpack_require__(215195), __webpack_require__(407899), 
    __webpack_require__(700017), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(525735)), http = __webpack_require__(711025), stringify = __webpack_require__(660205);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    function _get() {
      return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(target, property, receiver) {
        var base = function(object, property) {
          for (;!Object.prototype.hasOwnProperty.call(object, property) && null !== (object = _getPrototypeOf(object)); ) ;
          return object;
        }(target, property);
        if (base) {
          var desc = Object.getOwnPropertyDescriptor(base, property);
          return desc.get ? desc.get.call(arguments.length < 3 ? target : receiver) : desc.value;
        }
      }, _get.apply(this, arguments);
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return function(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
          }(self);
        }(this, result);
      };
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    const custom_http_provider_substrate = function(_HttpProvider) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(CustomHttpProviderSubstrate, _HttpProvider);
      var Constructor, protoProps, staticProps, fn, _send, _super = _createSuper(CustomHttpProviderSubstrate);
      function CustomHttpProviderSubstrate() {
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CustomHttpProviderSubstrate), _super.apply(this, arguments);
      }
      return Constructor = CustomHttpProviderSubstrate, protoProps = [ {
        key: "send",
        value: (fn = regeneratorRuntime.mark((function _callee(method, params, isCacheable) {
          var _this$__internal__cod, _this$__internal__cod2, body, cacheKey, appHeaders, resultPromise;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return this.__internal__stats.total.requests++, _this$__internal__cod = this.__internal__coder.encodeJson(method, params), 
              _this$__internal__cod2 = _slicedToArray(_this$__internal__cod, 2), body = _this$__internal__cod2[1], 
              cacheKey = isCacheable ? "".concat(method, "::").concat((0, stringify.A)(params)) : "", 
              _context.prev = 3, _context.next = 6, (0, gt_fetch.XH)("POST", this.__internal__endpoint, JSON.parse(body), void 0);

             case 6:
              appHeaders = _context.sent, _context.next = 11;
              break;

             case 9:
              _context.prev = 9, _context.t0 = _context.catch(3);

             case 11:
              return this.__internal__headers = _objectSpread(_objectSpread({}, this.__internal__headers || {}), appHeaders || {}), 
              (resultPromise = isCacheable ? this.__internal__callCache.get(cacheKey) : null) ? this.__internal__stats.total.cached++ : (resultPromise = _get(_getPrototypeOf(CustomHttpProviderSubstrate.prototype), "__internal__send", this).call(this, body), 
              isCacheable && this.__internal__callCache.set(cacheKey, resultPromise)), _context.abrupt("return", resultPromise);

             case 15:
             case "end":
              return _context.stop();
            }
          }), _callee, this, [ [ 3, 9 ] ]);
        })), _send = function() {
          var self = this, args = arguments;
          return new Promise((function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          }));
        }, function(_x, _x2, _x3) {
          return _send.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CustomHttpProviderSubstrate;
    }(http.e);
    var bignumber = __webpack_require__(937457), lib_esm = __webpack_require__(647821), calculate = __webpack_require__(745788), gt_tokens = __webpack_require__(871219), bundle = __webpack_require__(63299), toU8a = __webpack_require__(350029), toHex = __webpack_require__(225581), utils = __webpack_require__(473270);
    function substrate_rpc_typeof(obj) {
      return substrate_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, substrate_rpc_typeof(obj);
    }
    function substrate_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function substrate_rpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            substrate_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            substrate_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function substrate_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, substrate_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function substrate_rpc_defineProperty(obj, key, value) {
      return (key = substrate_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function substrate_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== substrate_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== substrate_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === substrate_rpc_typeof(key) ? key : String(key);
    }
    var SubstrateRpc = function() {
      function SubstrateRpc(totalNetworkDic, networkKey, rpcUrl, provider, api) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, SubstrateRpc), substrate_rpc_defineProperty(this, "networkKey", void 0), 
        substrate_rpc_defineProperty(this, "rpcUrl", void 0), substrate_rpc_defineProperty(this, "totalNetworkDic", void 0), 
        substrate_rpc_defineProperty(this, "provider", void 0), substrate_rpc_defineProperty(this, "api", void 0), 
        this.totalNetworkDic = totalNetworkDic, this.networkKey = networkKey, this.rpcUrl = rpcUrl, 
        this.provider = provider, this.api = api;
      }
      var Constructor, protoProps, staticProps, _signRaw, _init, _signPayload, _sendSubstrate, _getSubstrateInfo, _getSubstrateGasFee, _isActiveAddress;
      return Constructor = SubstrateRpc, protoProps = [ {
        key: "isActiveAddress",
        value: (_isActiveAddress = substrate_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(sender) {
          var balanceInfo;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              if (!SubstrateRpc.isSubstrateAddress(sender)) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", !1);

             case 2:
              return _context.next = 4, this.getSubstrateInfo({
                sender
              });

             case 4:
              return balanceInfo = _context.sent, _context.abrupt("return", balanceInfo.isActive);

             case 6:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _isActiveAddress.apply(this, arguments);
        })
      }, {
        key: "getSubstrateGasFee",
        value: (_getSubstrateGasFee = substrate_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
          var _getTokenValue, _parseInt, token, sender, receiver, amount, coinPrecision, sendAmount, transfer, paymentInfo, partialFee, balanceBN, humanReadableBalance;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return token = params.token, sender = params.sender, receiver = params.receiver, 
              amount = params.amount, coinPrecision = null !== (_getTokenValue = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision")) && void 0 !== _getTokenValue ? _getTokenValue : (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), sendAmount = null === (_parseInt = parseInt((0, 
              calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))))) || void 0 === _parseInt ? void 0 : _parseInt.toString(), 
              transfer = this.api.tx.balances.transferKeepAlive(receiver, sendAmount), _context2.next = 6, 
              transfer.paymentInfo(sender);

             case 6:
              return paymentInfo = _context2.sent, partialFee = paymentInfo.partialFee, balanceBN = bignumber.gH.from(partialFee.toString()), 
              humanReadableBalance = lib_esm.formatUnits(balanceBN, coinPrecision), _context2.abrupt("return", {
                gasFee: humanReadableBalance
              });

             case 11:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _getSubstrateGasFee.apply(this, arguments);
        })
      }, {
        key: "getSubstrateInfo",
        value: (_getSubstrateInfo = substrate_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
          var sender, token, coinPrecision, result, existentialDeposit, _ref$data, balance, nonce, balanceBN_exist, existentialDepositBalance, balanceBN, humanReadableBalance, resultData;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return sender = params.sender, token = params.token, coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision"), 
              _context3.next = 4, this.api.query.system.account(sender);

             case 4:
              return result = _context3.sent, existentialDeposit = this.api.consts.balances.existentialDeposit, 
              _ref$data = result.data, balance = _ref$data.free, nonce = _ref$data.nonce, balanceBN_exist = bignumber.gH.from(existentialDeposit.toString()), 
              existentialDepositBalance = lib_esm.formatUnits(balanceBN_exist, coinPrecision), 
              balanceBN = bignumber.gH.from(balance.toString()), humanReadableBalance = lib_esm.formatUnits(balanceBN, coinPrecision), 
              resultData = {
                isActive: balance.gte(existentialDeposit),
                activeLimit: existentialDepositBalance,
                balance: humanReadableBalance,
                nonce: null == nonce ? void 0 : nonce.toString()
              }, _context3.abrupt("return", resultData);

             case 13:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3) {
          return _getSubstrateInfo.apply(this, arguments);
        })
      }, {
        key: "sendSubstrate",
        value: (_sendSubstrate = substrate_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4(params) {
          var receiver, balance, activeLimit, gasFee, amount, token, privateKey, accountFormat, coinPrecision, totalRequired, remainingBalance, chainSS58, keyringPair, keyring, _keyring, amountHex, transfer, tx;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              if (receiver = params.receiver, balance = params.balance, activeLimit = params.activeLimit, 
              gasFee = params.gasFee, amount = params.amount, token = params.token, privateKey = params.privateKey, 
              accountFormat = params.accountFormat, coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision"), 
              totalRequired = (0, calculate.dataOperation)(amount, gasFee, "+"), !(parseFloat(balance) < parseFloat(totalRequired))) {
                _context4.next = 5;
                break;
              }
              throw new Error("Insufficient balance to cover transfer amount and fees");

             case 5:
              if (remainingBalance = (0, calculate.dataOperation)(balance, totalRequired, "-"), 
              !(parseFloat(remainingBalance) > 0 && parseFloat(remainingBalance) < parseFloat(activeLimit))) {
                _context4.next = 8;
                break;
              }
              throw new Error("Transfer would leave account below existential deposit");

             case 8:
              return chainSS58 = this.api.registry.chainSS58, "ed25519" === accountFormat ? (keyring = new keyring_keyring.S({
                type: "ed25519",
                ss58Format: chainSS58
              }), keyringPair = keyring.addFromUri(privateKey)) : (_keyring = new keyring_keyring.S({
                type: "sr25519",
                ss58Format: chainSS58
              }), keyringPair = _keyring.addFromUri(privateKey)), amountHex = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              transfer = this.api.tx.balances.transferKeepAlive(receiver, amountHex), _context4.next = 14, 
              transfer.signAsync(keyringPair);

             case 14:
              return tx = _context4.sent, _context4.abrupt("return", {
                tx,
                rpcUrl: this.rpcUrl
              });

             case 16:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x4) {
          return _sendSubstrate.apply(this, arguments);
        })
      }, {
        key: "signPayload",
        value: (_signPayload = substrate_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5(params) {
          var privateKey, payload, registry, chainSS58, extrinsicPayload, keyring, keypair, signed, call, extrinsic, signedTransaction;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.next = 2, (0, bundle.N9)();

             case 2:
              return privateKey = params.privateKey, payload = params.payload, registry = this.api.registry, 
              chainSS58 = this.api.registry.chainSS58, extrinsicPayload = registry.createType("ExtrinsicPayload", payload, {
                version: payload.version
              }), keyring = new keyring_keyring.S({
                type: "sr25519",
                ss58Format: chainSS58
              }), keypair = keyring.addFromUri(privateKey), signed = extrinsicPayload.sign(keypair), 
              call = registry.createType("Call", payload.method), (extrinsic = registry.createType("Extrinsic", call, {
                version: payload.version
              })).addSignature(payload.address, signed.signature, extrinsicPayload.toU8a()), signedTransaction = extrinsic.toHex(), 
              _context5.abrupt("return", {
                signature: "0x01".concat((0, utils.nF)(signedTransaction)),
                signedTransaction
              });

             case 14:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x5) {
          return _signPayload.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = substrate_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime) {
          var rpcUrl, provider, api;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return _context6.next = 2, (0, gt_networks.gL)(totalNetworkDic, networkKey, rpcUrls[networkKey], lastGetSuccessRpcTime || 0);

             case 2:
              return rpcUrl = _context6.sent, provider = rpcUrl.startsWith("wss://") ? new ws.E(rpcUrl) : new custom_http_provider_substrate(rpcUrl), 
              _context6.next = 6, Api.G.create({
                provider
              });

             case 6:
              return api = _context6.sent, _context6.abrupt("return", new SubstrateRpc(totalNetworkDic, networkKey, rpcUrl, provider, api));

             case 8:
             case "end":
              return _context6.stop();
            }
          }), _callee6);
        }))), function(_x6, _x7, _x8, _x9) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "signRaw",
        value: (_signRaw = substrate_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var privateKey, rawInfo, data, keyring, pair, dataU8a, signatureU8a;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return _context7.next = 2, (0, bundle.N9)();

             case 2:
              return privateKey = params.privateKey, rawInfo = params.rawInfo, data = rawInfo.data, 
              keyring = new keyring_keyring.S({
                type: "sr25519"
              }), pair = keyring.addFromUri(privateKey), dataU8a = (0, toU8a.V)(data), signatureU8a = pair.sign(dataU8a), 
              _context7.abrupt("return", {
                signature: (0, toHex.X)(signatureU8a)
              });

             case 9:
             case "end":
              return _context7.stop();
            }
          }), _callee7);
        }))), function(_x10) {
          return _signRaw.apply(this, arguments);
        })
      } ], protoProps && substrate_rpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && substrate_rpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), SubstrateRpc;
    }();
    substrate_rpc_defineProperty(SubstrateRpc, "isSubstrateAddress", (function(address) {
      try {
        return (0, decode.F)(address), !0;
      } catch (_unused) {
        return !1;
      }
    }));
    const substrate_rpc = SubstrateRpc;
  },
  205093: (module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      U: () => libWeb
    });
    __webpack_require__(207452), __webpack_require__(505086), __webpack_require__(269193), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(630789), __webpack_require__(107918), __webpack_require__(579404), 
    __webpack_require__(39982), __webpack_require__(957399), __webpack_require__(686970), 
    __webpack_require__(811048), __webpack_require__(202236), __webpack_require__(971650), 
    __webpack_require__(326884), __webpack_require__(58710), __webpack_require__(563617), 
    __webpack_require__(383019), __webpack_require__(698657), __webpack_require__(753380), 
    __webpack_require__(301772), __webpack_require__(953746), __webpack_require__(520861), 
    __webpack_require__(571905), __webpack_require__(285213), __webpack_require__(97182), 
    __webpack_require__(512279), __webpack_require__(639302), __webpack_require__(770147), 
    __webpack_require__(866217), __webpack_require__(697966), __webpack_require__(735186), 
    __webpack_require__(135944), __webpack_require__(644787), __webpack_require__(950632), 
    __webpack_require__(552278), __webpack_require__(614245), __webpack_require__(252492), 
    __webpack_require__(193266), __webpack_require__(537192), __webpack_require__(237220), 
    __webpack_require__(482432), __webpack_require__(632483), __webpack_require__(536696), 
    __webpack_require__(458083), __webpack_require__(232982), __webpack_require__(714913), 
    __webpack_require__(647950), __webpack_require__(114758), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(498741), __webpack_require__(504895), 
    __webpack_require__(687136), __webpack_require__(380115), __webpack_require__(312091), 
    __webpack_require__(803446), __webpack_require__(407899), __webpack_require__(579389), 
    __webpack_require__(696316), __webpack_require__(194009), __webpack_require__(564216), 
    __webpack_require__(184095), __webpack_require__(268123), __webpack_require__(637759), 
    __webpack_require__(542006), __webpack_require__(988844), __webpack_require__(906048), 
    __webpack_require__(689560), __webpack_require__(215195);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    module = __webpack_require__.hmd(module);
    var workerScript = "//****************************************************************** WRAPPER BEGIN\nlet wasm;\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedBigInt64Memory0 = null;\n\nfunction getBigInt64Memory0() {\n    if (cachedBigInt64Memory0 === null || cachedBigInt64Memory0.byteLength === 0) {\n        cachedBigInt64Memory0 = new BigInt64Array(wasm.memory.buffer);\n    }\n    return cachedBigInt64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        try {\n            return f(state.a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(state.a, state.b);\n                state.a = 0;\n\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_50(arg0, arg1) {\n    wasm._dyn_core__ops__function__Fn_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__ha3df8f9f7651cae7(arg0, arg1);\n}\n\nfunction __wbg_adapter_53(arg0, arg1, arg2) {\n    wasm.wasm_bindgen__convert__closures__invoke1__h7eb6492e4ae9d8f4(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_56(arg0, arg1) {\n    wasm.wasm_bindgen__convert__closures__invoke0_mut__h00db0869073f9887(arg0, arg1);\n}\n\nfunction __wbg_adapter_59(arg0, arg1, arg2) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.wasm_bindgen__convert__closures__invoke1_mut__h2f1a8c8f391a3e62(retptr, arg0, arg1, addHeapObject(arg2));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        if (r1) {\n            throw takeObject(r0);\n        }\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction __wbg_adapter_62(arg0, arg1, arg2) {\n    wasm.wasm_bindgen__convert__closures__invoke1_mut__h692cf33869442763(arg0, arg1, addHeapObject(arg2));\n}\n\n/**\n* @param {string} config_json\n* @returns {string}\n*/\nfunction core_create_context(config_json) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(config_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.core_create_context(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {number} context\n*/\nfunction core_destroy_context(context) {\n    wasm.core_destroy_context(context);\n}\n\n/**\n* @param {number} context\n* @param {string} function_name\n* @param {any} params\n* @param {number} request_id\n*/\nfunction core_request(context, function_name, params, request_id) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(function_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.core_request(retptr, context, ptr0, len0, addHeapObject(params), request_id);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        if (r1) {\n            throw takeObject(r0);\n        }\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_new_15d3966e9981a196 = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_cf65c07de34b9a08 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_9fb2f11355ecadf5 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_newwithlength_0da6f12fbc1ab6eb = function(arg0) {\n        const ret = new Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_17224bc548dd1d7b = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_newwithu8arraysequence_fede89c6795cc33e = function() { return handleError(function (arg0) {\n        const ret = new Blob(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_get_baf4855f9a986186 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_a69f02ee4c4f5065 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof ArrayBuffer;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_new_537b7341ce90bb31 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_keys_60443f4f867207f9 = function(arg0) {\n        const ret = Object.keys(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_e498fbc24f9c1d4f = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_get_27fe3dac1c4d0224 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_new0_25059e40b1c02766 = function() {\n        const ret = new Date();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getTime_7c59072d1651a3cf = function(arg0) {\n        const ret = getObject(arg0).getTime();\n        return ret;\n    };\n    imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) == getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_bigint = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbg_isSafeInteger_8c4789029e885159 = function(arg0) {\n        const ret = Number.isSafeInteger(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {\n        const v = getObject(arg1);\n        const ret = typeof(v) === 'bigint' ? v : undefined;\n        getBigInt64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? BigInt(0) : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_bigint_from_i64 = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) === getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbg_isArray_39d28997bf6b96b4 = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_iterator_55f114446221aa5a = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_in = function(arg0, arg1) {\n        const ret = getObject(arg0) in getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n        const ret = BigInt.asUintN(64, arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_entries_4e1315b774245952 = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_null = function(arg0) {\n        const ret = getObject(arg0) === null;\n        return ret;\n    };\n    imports.wbg.__wbg_String_91fba7ded13ba54c = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_new_f9876326328f45ed = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_String_fc81d39fcf17362c = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_coreresponsehandler_c9ca7627001f702a = function(arg0, arg1, arg2, arg3) {\n        core_response_handler(arg0 >>> 0, takeObject(arg1), arg2 >>> 0, arg3 !== 0);\n    };\n    imports.wbg.__wbg_message_a95c3ef248e4b57a = function(arg0) {\n        const ret = getObject(arg0).message;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_b525de17f44a8943 = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_f841cc6f2098f4b5 = function() {\n        const ret = new Map();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_388c4c6422704173 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).set(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_set_ceb4a45c9f75ec15 = function(arg0, arg1, arg2) {\n        getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_crypto_d05b68a3572bb8ca = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_process_b02b3570280d0366 = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_c1cb42213cedf0f5 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_43b1089f407e4ec2 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_9a7e0f667ead4995 = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_call_9495de66fdbe016b = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_msCrypto_10fc94afee92bd76 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithlength_b56c882b57805732 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbg_readyState_d9cf5eb3487e31d6 = function(arg0) {\n        const ret = getObject(arg0).readyState;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_setonsuccess_925a7718d3f62bc1 = function(arg0, arg1) {\n        getObject(arg0).onsuccess = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonerror_019196fbce756cc0 = function(arg0, arg1) {\n        getObject(arg0).onerror = getObject(arg1);\n    };\n    imports.wbg.__wbg_result_3a1fef332bc47038 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).result;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_target_b629c177f9bee3da = function(arg0) {\n        const ret = getObject(arg0).target;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_transaction_6d097d62f550220d = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).transaction(getStringFromWasm0(arg1, arg2), takeObject(arg3));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_setoncomplete_f32167d3f84be687 = function(arg0, arg1) {\n        getObject(arg0).oncomplete = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonerror_7cbe775a0abc7a8e = function(arg0, arg1) {\n        getObject(arg0).onerror = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonabort_0e116e0f6f9fc3a6 = function(arg0, arg1) {\n        getObject(arg0).onabort = getObject(arg1);\n    };\n    imports.wbg.__wbg_objectStore_cdc69f65ad4a71eb = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).objectStore(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_item_d5de7e3394624329 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg1).item(arg2 >>> 0);\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_next_88560ec06a094dea = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_1ebec03bbd919843 = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_6ac8da5cc5b3efda = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_95d1ea488d03e4e8 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_next_b7d530c04fd8b217 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_e7c1f827057f6584 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_a09ec664e14b1b81 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_87cbb8506fecf3a9 = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_c85a9259e621f3db = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newnoargs_2b8b6bd7753c76ba = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_17499e8aa4003ebd = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_27a2afe8ab42b09f = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_set_6aa458a4ebdb65cb = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_randomFillSync_b70ccbdf4926a99d = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_subarray_7526649b91a252a6 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_7e42b4fb8779dc6d = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_self_7eede1f4488bf346 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_crypto_c909fb428dcbddb6 = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_msCrypto_511eefefbfc70ae4 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_static_accessor_MODULE_ef3aa2eb251158a5 = function() {\n        const ret = module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_900d5c3984fe7703 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_307049345d0bd88c = function(arg0) {\n        const ret = getObject(arg0).getRandomValues;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_randomFillSync_85b3f4c52c56c313 = function(arg0, arg1, arg2) {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    };\n    imports.wbg.__wbg_getRandomValues_cd175915511f705e = function(arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_01cebe79ca606cca = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Uint8Array;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_setTimeout_6609c9aa64f32bfc = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).setTimeout(getObject(arg1), arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_clearTimeout_b2b8af0f044e02e9 = function(arg0, arg1) {\n        getObject(arg0).clearTimeout(arg1);\n    };\n    imports.wbg.__wbg_newwithstrandinit_c45f0dc6da26fd03 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_headers_ab5251d2727ac41e = function(arg0) {\n        const ret = getObject(arg0).headers;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_a5d34c36a1a4ebd1 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).set(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_fetch_465e8cb61a0f43ea = function(arg0, arg1) {\n        const ret = getObject(arg0).fetch(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Response_fb3a4df648c1859b = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Response;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_text_f61464d781b099f0 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).text();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_status_d483a4ac847f380a = function(arg0) {\n        const ret = getObject(arg0).status;\n        return ret;\n    };\n    imports.wbg.__wbg_message_f15effc8b20828e2 = function(arg0, arg1) {\n        const ret = getObject(arg1).message;\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_delete_d2905418845867ae = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).delete(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_Window_5684341ff6dfe3ad = function(arg0) {\n        const ret = getObject(arg0).Window;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_indexedDB_47544d523ac2a208 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).indexedDB;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_WorkerGlobalScope_e0447ffcae8bb272 = function(arg0) {\n        const ret = getObject(arg0).WorkerGlobalScope;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_indexedDB_83385e4ce65e9054 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).indexedDB;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_open_bd135117d9924392 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).open(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_setonupgradeneeded_8961be061344d04a = function(arg0, arg1) {\n        getObject(arg0).onupgradeneeded = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonversionchange_fd71954420371ad8 = function(arg0, arg1) {\n        getObject(arg0).onversionchange = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonblocked_78e53418c43a7090 = function(arg0, arg1) {\n        getObject(arg0).onblocked = getObject(arg1);\n    };\n    imports.wbg.__wbg_put_fdcda25ee2a99b60 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).put(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_get_18b8195859195e7e = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).get(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_stringify_029a979dfb73aa17 = function() { return handleError(function (arg0) {\n        const ret = JSON.stringify(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_Error_749a7378f4439ee0 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Error;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_new_f127e324c1313064 = function(arg0) {\n        const ret = new Date(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getTimezoneOffset_2a6b27fb18493a56 = function(arg0) {\n        const ret = getObject(arg0).getTimezoneOffset();\n        return ret;\n    };\n    imports.wbg.__wbg_newwithstr_09e6b7baeccb3a5f = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = new WebSocket(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_8ad026ef33da9ab1 = function() { return handleError(function (arg0, arg1) {\n        const ret = new WebSocket(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_setonmessage_5ea7e452fd7a5544 = function(arg0, arg1) {\n        getObject(arg0).onmessage = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonopen_b91a933a10be7d48 = function(arg0, arg1) {\n        getObject(arg0).onopen = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonerror_a6a7413fc33449ef = function(arg0, arg1) {\n        getObject(arg0).onerror = getObject(arg1);\n    };\n    imports.wbg.__wbg_close_546591d4b4350b36 = function() { return handleError(function (arg0) {\n        getObject(arg0).close();\n    }, arguments) };\n    imports.wbg.__wbg_send_36f8bcb566f8afa0 = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).send(getStringFromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_data_af909e5dfe73e68c = function(arg0) {\n        const ret = getObject(arg0).data;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_objectStoreNames_f0884fed45ebc81c = function(arg0) {\n        const ret = getObject(arg0).objectStoreNames;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createObjectStore_ebb17df1a43fd925 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).createObjectStore(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_then_f753623316e2873a = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_ec5db6d509eb475f = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_resolve_fd40f858d9db1a04 = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_error_f64b8d41ed4d2fdc = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).error;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_Window_e266f02eee43b570 = function(arg0) {\n        let result;\n        try {\n            result = true;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_url_8ec2534cdfacb103 = function(arg0, arg1) {\n        const ret = getObject(arg1).url;\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_closure_wrapper892 = function(arg0, arg1, arg2) {\n        const ret = makeClosure(arg0, arg1, 53, __wbg_adapter_50);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper894 = function(arg0, arg1, arg2) {\n        const ret = makeClosure(arg0, arg1, 53, __wbg_adapter_53);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper3765 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 53, __wbg_adapter_56);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper4787 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 53, __wbg_adapter_59);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper6234 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 53, __wbg_adapter_62);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper6237 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 53, __wbg_adapter_62);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper6859 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 53, __wbg_adapter_62);\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedBigInt64Memory0 = null;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\n\n//****************************************************************** WRAPPER END\n\nfunction replaceUndefinedWithNulls(value) {\n    if (value === undefined) {\n        return null;\n    }\n    if (value instanceof Blob) {\n        return value;\n    }\n    if (typeof value === \"object\" && value !== null) {\n        const result = Array.isArray(value) ? [] : {};\n        for (const key in value) {\n            result[key] = replaceUndefinedWithNulls(value[key]);\n        }\n        return result;\n    }\n    return value;\n};\n\nfunction core_response_handler(request_id, params, response_type, finished) {\n    postMessage({\n        type: 'response',\n        requestId: request_id,\n        params: replaceUndefinedWithNulls(params),\n        responseType: response_type,\n        finished,\n    });\n}\n\nasync function replaceBlobsWithArrayBuffers(value) {\n    if (value instanceof Blob) {\n        return await value.arrayBuffer();\n    }\n    if (typeof value === \"bigint\") {\n        if (value < Number.MAX_SAFE_INTEGER && value > Number.MIN_SAFE_INTEGER) {\n            return Number(value);\n        } else {\n            return value.toString();\n        }\n    }\n    if (typeof value === \"object\" && value !== null) {\n        const result = Array.isArray(value) ? [] : {};\n        for (const key in value) {\n            result[key] = await replaceBlobsWithArrayBuffers(value[key]);\n        }\n        return result;\n    }\n    return value;\n}\n\nself.onmessage = (e) => {\n    const message = e.data;\n    switch (message.type) {\n    case 'init':\n        (async () => {\n            await init(message.wasmModule);\n            postMessage({ type: 'init' });\n        })();\n        break;\n\n    case 'createContext':\n        postMessage({\n            type: 'createContext',\n            result: core_create_context(message.configJson),\n            requestId: message.requestId,\n        });\n        break;\n\n    case 'destroyContext':\n        core_destroy_context(message.context);\n        postMessage({\n            type: 'destroyContext'\n        });\n        break;\n\n    case 'request':\n        (async () => {\n            core_request(\n                message.context,\n                message.functionName,\n                await replaceBlobsWithArrayBuffers(message.functionParams),\n                message.requestId,\n            );\n        })();\n        break;\n    }\n};\n", options = null;
    function getLibName() {
      return Promise.resolve("web");
    }
    function debugLog(message) {
      options && options.debugLog && options.debugLog(message);
    }
    function loadModule() {
      return _loadModule.apply(this, arguments);
    }
    function _loadModule() {
      return (_loadModule = _asyncToGenerator(regeneratorRuntime.mark((function _callee7() {
        var startLoadTime, wasmModule, fetched;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            if (startLoadTime = Date.now(), !options || !options.loadModule) {
              _context7.next = 7;
              break;
            }
            return _context7.next = 4, options.loadModule;

           case 4:
            wasmModule = _context7.sent, _context7.next = 23;
            break;

           case 7:
            if (fetched = fetch(options && options.binaryURL || "/eversdk.wasm"), !WebAssembly.compileStreaming) {
              _context7.next = 13;
              break;
            }
            return debugLog("compileStreaming binary"), _context7.next = 12, WebAssembly.compileStreaming(fetched);

           case 12:
            return _context7.abrupt("return", _context7.sent);

           case 13:
            return debugLog("compile binary"), _context7.t0 = WebAssembly, _context7.next = 17, 
            fetched;

           case 17:
            return _context7.next = 19, _context7.sent.arrayBuffer();

           case 19:
            return _context7.t1 = _context7.sent, _context7.next = 22, _context7.t0.compile.call(_context7.t0, _context7.t1);

           case 22:
            wasmModule = _context7.sent;

           case 23:
            return _context7.next = 25, init(wasmModule);

           case 25:
            debugLog("compile time ".concat(Date.now() - startLoadTime));

           case 26:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })))).apply(this, arguments);
    }
    function withSeparateWorker() {
      var workerBlob = new Blob([ workerScript ], {
        type: "application/javascript"
      }), workerUrl = URL.createObjectURL(workerBlob), worker = new Worker(workerUrl), nextCreateContextRequestId = 1, createContextRequests = new Map, initComplete = !1, responseHandler = null;
      return worker.onmessage = function(evt) {
        var message = evt.data;
        switch (message.type) {
         case "init":
          initComplete = !0;
          var _step, _iterator = function(o, allowArrayLike) {
            var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
            if (!it) {
              if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
                it && (o = it);
                var i = 0, F = function() {};
                return {
                  s: F,
                  n: function() {
                    return i >= o.length ? {
                      done: !0
                    } : {
                      done: !1,
                      value: o[i++]
                    };
                  },
                  e: function(_e2) {
                    throw _e2;
                  },
                  f: F
                };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var err, normalCompletion = !0, didErr = !1;
            return {
              s: function() {
                it = it.call(o);
              },
              n: function() {
                var step = it.next();
                return normalCompletion = step.done, step;
              },
              e: function(_e3) {
                didErr = !0, err = _e3;
              },
              f: function() {
                try {
                  normalCompletion || null == it.return || it.return();
                } finally {
                  if (didErr) throw err;
                }
              }
            };
          }(createContextRequests.entries());
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var _step$value = _slicedToArray(_step.value, 2), requestId = _step$value[0], _request = _step$value[1];
              worker.postMessage({
                type: "createContext",
                requestId,
                configJson: _request.configJson
              });
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          break;

         case "createContext":
          var request = createContextRequests.get(message.requestId);
          request && (createContextRequests.delete(message.requestId), request.resolve(message.result));
          break;

         case "destroyContext":
          break;

         case "response":
          responseHandler && responseHandler(message.requestId, message.params, message.responseType, message.finished);
        }
      }, worker.onerror = function(evt) {}, _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.t0 = worker, _context.next = 3, loadModule();

           case 3:
            _context.t1 = _context.sent, _context.t2 = {
              type: "init",
              wasmModule: _context.t1
            }, _context.t0.postMessage.call(_context.t0, _context.t2);

           case 6:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })))(), Promise.resolve({
        getLibName,
        setResponseParamsHandler: function(handler) {
          responseHandler = handler;
        },
        createContext: function(configJson) {
          return new Promise((function(resolve) {
            var requestId = nextCreateContextRequestId;
            nextCreateContextRequestId += 1, createContextRequests.set(requestId, {
              configJson,
              resolve
            }), initComplete && worker.postMessage({
              type: "createContext",
              requestId,
              configJson
            });
          }));
        },
        destroyContext: function(context) {
          worker.postMessage({
            type: "destroyContext",
            context
          });
        },
        sendRequestParams: function(context, requestId, functionName, functionParams) {
          worker.postMessage({
            type: "request",
            context,
            requestId,
            functionName,
            functionParams
          });
        }
      });
    }
    function withoutSeparateWorker() {
      var wasm, cachedTextDecoder = new TextDecoder("utf-8", {
        ignoreBOM: !0,
        fatal: !0
      });
      cachedTextDecoder.decode();
      var cachedUint8Memory0 = null;
      function getUint8Memory0() {
        return null !== cachedUint8Memory0 && 0 !== cachedUint8Memory0.byteLength || (cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer)), 
        cachedUint8Memory0;
      }
      function getStringFromWasm0(ptr, len) {
        return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
      }
      var heap = new Array(128).fill(void 0);
      heap.push(void 0, null, !0, !1);
      var heap_next = heap.length;
      function addHeapObject(obj) {
        heap_next === heap.length && heap.push(heap.length + 1);
        var idx = heap_next;
        return heap_next = heap[idx], heap[idx] = obj, idx;
      }
      function getObject(idx) {
        return heap[idx];
      }
      function takeObject(idx) {
        var ret = getObject(idx);
        return function(idx) {
          idx < 132 || (heap[idx] = heap_next, heap_next = idx);
        }(idx), ret;
      }
      var WASM_VECTOR_LEN = 0, cachedTextEncoder = new TextEncoder("utf-8"), encodeString = "function" == typeof cachedTextEncoder.encodeInto ? function(arg, view) {
        return cachedTextEncoder.encodeInto(arg, view);
      } : function(arg, view) {
        var buf = cachedTextEncoder.encode(arg);
        return view.set(buf), {
          read: arg.length,
          written: buf.length
        };
      };
      function passStringToWasm0(arg, malloc, realloc) {
        if (void 0 === realloc) {
          var buf = cachedTextEncoder.encode(arg), _ptr = malloc(buf.length);
          return getUint8Memory0().subarray(_ptr, _ptr + buf.length).set(buf), WASM_VECTOR_LEN = buf.length, 
          _ptr;
        }
        for (var len = arg.length, ptr = malloc(len), mem = getUint8Memory0(), offset = 0; offset < len; offset++) {
          var code = arg.charCodeAt(offset);
          if (code > 127) break;
          mem[ptr + offset] = code;
        }
        if (offset !== len) {
          0 !== offset && (arg = arg.slice(offset)), ptr = realloc(ptr, len, len = offset + 3 * arg.length);
          var view = getUint8Memory0().subarray(ptr + offset, ptr + len);
          offset += encodeString(arg, view).written;
        }
        return WASM_VECTOR_LEN = offset, ptr;
      }
      function isLikeNone(x) {
        return null == x;
      }
      var cachedInt32Memory0 = null;
      function getInt32Memory0() {
        return null !== cachedInt32Memory0 && 0 !== cachedInt32Memory0.byteLength || (cachedInt32Memory0 = new Int32Array(wasm.memory.buffer)), 
        cachedInt32Memory0;
      }
      var cachedFloat64Memory0 = null;
      var cachedBigInt64Memory0 = null;
      function debugString(val) {
        var type = _typeof(val);
        if ("number" == type || "boolean" == type || null == val) return "".concat(val);
        if ("string" == type) return '"'.concat(val, '"');
        if ("symbol" == type) {
          var description = val.description;
          return null == description ? "Symbol" : "Symbol(".concat(description, ")");
        }
        if ("function" == type) {
          var name = val.name;
          return "string" == typeof name && name.length > 0 ? "Function(".concat(name, ")") : "Function";
        }
        if (Array.isArray(val)) {
          var length = val.length, debug = "[";
          length > 0 && (debug += debugString(val[0]));
          for (var i = 1; i < length; i++) debug += ", " + debugString(val[i]);
          return debug += "]";
        }
        var className, builtInMatches = /\[object ([^\]]+)\]/.exec(toString.call(val));
        if (!(builtInMatches.length > 1)) return toString.call(val);
        if ("Object" == (className = builtInMatches[1])) try {
          return "Object(" + JSON.stringify(val) + ")";
        } catch (_) {
          return "Object";
        }
        return val instanceof Error ? "".concat(val.name, ": ").concat(val.message, "\n").concat(val.stack) : className;
      }
      function makeClosure(arg0, arg1, dtor, f) {
        var state = {
          a: arg0,
          b: arg1,
          cnt: 1,
          dtor
        }, real = function() {
          state.cnt++;
          try {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
            return f.apply(void 0, [ state.a, state.b ].concat(args));
          } finally {
            0 == --state.cnt && (wasm.__wbindgen_export_2.get(state.dtor)(state.a, state.b), 
            state.a = 0);
          }
        };
        return real.original = state, real;
      }
      function __wbg_adapter_50(arg0, arg1) {
        wasm._dyn_core__ops__function__Fn_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__ha3df8f9f7651cae7(arg0, arg1);
      }
      function __wbg_adapter_53(arg0, arg1, arg2) {
        wasm.wasm_bindgen__convert__closures__invoke1__h7eb6492e4ae9d8f4(arg0, arg1, addHeapObject(arg2));
      }
      function makeMutClosure(arg0, arg1, dtor, f) {
        var state = {
          a: arg0,
          b: arg1,
          cnt: 1,
          dtor
        }, real = function() {
          state.cnt++;
          var a = state.a;
          state.a = 0;
          try {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
            return f.apply(void 0, [ a, state.b ].concat(args));
          } finally {
            0 == --state.cnt ? wasm.__wbindgen_export_2.get(state.dtor)(a, state.b) : state.a = a;
          }
        };
        return real.original = state, real;
      }
      function __wbg_adapter_56(arg0, arg1) {
        wasm.wasm_bindgen__convert__closures__invoke0_mut__h00db0869073f9887(arg0, arg1);
      }
      function __wbg_adapter_59(arg0, arg1, arg2) {
        try {
          var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
          wasm.wasm_bindgen__convert__closures__invoke1_mut__h2f1a8c8f391a3e62(retptr, arg0, arg1, addHeapObject(arg2));
          var r0 = getInt32Memory0()[retptr / 4 + 0];
          if (getInt32Memory0()[retptr / 4 + 1]) throw takeObject(r0);
        } finally {
          wasm.__wbindgen_add_to_stack_pointer(16);
        }
      }
      function __wbg_adapter_62(arg0, arg1, arg2) {
        wasm.wasm_bindgen__convert__closures__invoke1_mut__h692cf33869442763(arg0, arg1, addHeapObject(arg2));
      }
      function core_create_context(config_json) {
        try {
          var retptr = wasm.__wbindgen_add_to_stack_pointer(-16), ptr0 = passStringToWasm0(config_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          wasm.core_create_context(retptr, ptr0, len0);
          var r0 = getInt32Memory0()[retptr / 4 + 0], r1 = getInt32Memory0()[retptr / 4 + 1];
          return getStringFromWasm0(r0, r1);
        } finally {
          wasm.__wbindgen_add_to_stack_pointer(16), wasm.__wbindgen_free(r0, r1);
        }
      }
      function core_request(context, function_name, params, request_id) {
        try {
          var retptr = wasm.__wbindgen_add_to_stack_pointer(-16), ptr0 = passStringToWasm0(function_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          wasm.core_request(retptr, context, ptr0, len0, addHeapObject(params), request_id);
          var r0 = getInt32Memory0()[retptr / 4 + 0];
          if (getInt32Memory0()[retptr / 4 + 1]) throw takeObject(r0);
        } finally {
          wasm.__wbindgen_add_to_stack_pointer(16);
        }
      }
      function handleError(f, args) {
        try {
          return f.apply(this, args);
        } catch (e) {
          wasm.__wbindgen_exn_store(addHeapObject(e));
        }
      }
      function load(_x2, _x3) {
        return _load.apply(this, arguments);
      }
      function _load() {
        return _load = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(module, imports) {
          var bytes, instance;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              if (!("function" == typeof Response && module instanceof Response)) {
                _context4.next = 22;
                break;
              }
              if ("function" != typeof WebAssembly.instantiateStreaming) {
                _context4.next = 14;
                break;
              }
              return _context4.prev = 2, _context4.next = 5, WebAssembly.instantiateStreaming(module, imports);

             case 5:
             case 19:
              return _context4.abrupt("return", _context4.sent);

             case 8:
              if (_context4.prev = 8, _context4.t0 = _context4.catch(2), "application/wasm" == module.headers.get("Content-Type")) {
                _context4.next = 13;
                break;
              }
              _context4.next = 14;
              break;

             case 13:
              throw _context4.t0;

             case 14:
              return _context4.next = 16, module.arrayBuffer();

             case 16:
              return bytes = _context4.sent, _context4.next = 19, WebAssembly.instantiate(bytes, imports);

             case 22:
              return _context4.next = 24, WebAssembly.instantiate(module, imports);

             case 24:
              if (!((instance = _context4.sent) instanceof WebAssembly.Instance)) {
                _context4.next = 29;
                break;
              }
              return _context4.abrupt("return", {
                instance,
                module
              });

             case 29:
              return _context4.abrupt("return", instance);

             case 30:
             case "end":
              return _context4.stop();
            }
          }), _callee4, null, [ [ 2, 8 ] ]);
        }))), _load.apply(this, arguments);
      }
      function getImports() {
        var imports = {
          wbg: {}
        };
        return imports.wbg.__wbg_new_15d3966e9981a196 = function(arg0, arg1) {
          return addHeapObject(new Error(getStringFromWasm0(arg0, arg1)));
        }, imports.wbg.__wbindgen_string_new = function(arg0, arg1) {
          return addHeapObject(getStringFromWasm0(arg0, arg1));
        }, imports.wbg.__wbindgen_memory = function() {
          return addHeapObject(wasm.memory);
        }, imports.wbg.__wbg_buffer_cf65c07de34b9a08 = function(arg0) {
          return addHeapObject(getObject(arg0).buffer);
        }, imports.wbg.__wbg_newwithbyteoffsetandlength_9fb2f11355ecadf5 = function(arg0, arg1, arg2) {
          return addHeapObject(new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0));
        }, imports.wbg.__wbindgen_object_drop_ref = function(arg0) {
          takeObject(arg0);
        }, imports.wbg.__wbg_newwithlength_0da6f12fbc1ab6eb = function(arg0) {
          return addHeapObject(new Array(arg0 >>> 0));
        }, imports.wbg.__wbg_set_17224bc548dd1d7b = function(arg0, arg1, arg2) {
          getObject(arg0)[arg1 >>> 0] = takeObject(arg2);
        }, imports.wbg.__wbg_newwithu8arraysequence_fede89c6795cc33e = function() {
          return handleError((function(arg0) {
            return addHeapObject(new Blob(getObject(arg0)));
          }), arguments);
        }, imports.wbg.__wbg_get_baf4855f9a986186 = function() {
          return handleError((function(arg0, arg1) {
            return addHeapObject(Reflect.get(getObject(arg0), getObject(arg1)));
          }), arguments);
        }, imports.wbg.__wbg_instanceof_ArrayBuffer_a69f02ee4c4f5065 = function(arg0) {
          var result;
          try {
            result = getObject(arg0) instanceof ArrayBuffer;
          } catch (_unused) {
            result = !1;
          }
          return result;
        }, imports.wbg.__wbindgen_is_object = function(arg0) {
          var val = getObject(arg0);
          return "object" === _typeof(val) && null !== val;
        }, imports.wbg.__wbg_new_537b7341ce90bb31 = function(arg0) {
          return addHeapObject(new Uint8Array(getObject(arg0)));
        }, imports.wbg.__wbindgen_object_clone_ref = function(arg0) {
          return addHeapObject(getObject(arg0));
        }, imports.wbg.__wbg_keys_60443f4f867207f9 = function(arg0) {
          return addHeapObject(Object.keys(getObject(arg0)));
        }, imports.wbg.__wbg_length_e498fbc24f9c1d4f = function(arg0) {
          return getObject(arg0).length;
        }, imports.wbg.__wbg_get_27fe3dac1c4d0224 = function(arg0, arg1) {
          return addHeapObject(getObject(arg0)[arg1 >>> 0]);
        }, imports.wbg.__wbindgen_string_get = function(arg0, arg1) {
          var obj = getObject(arg1), ret = "string" == typeof obj ? obj : void 0, ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          getInt32Memory0()[arg0 / 4 + 1] = len0, getInt32Memory0()[arg0 / 4 + 0] = ptr0;
        }, imports.wbg.__wbg_new0_25059e40b1c02766 = function() {
          return addHeapObject(new Date);
        }, imports.wbg.__wbg_getTime_7c59072d1651a3cf = function(arg0) {
          return getObject(arg0).getTime();
        }, imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {
          return getObject(arg0) == getObject(arg1);
        }, imports.wbg.__wbindgen_boolean_get = function(arg0) {
          var v = getObject(arg0);
          return "boolean" == typeof v ? v ? 1 : 0 : 2;
        }, imports.wbg.__wbindgen_is_bigint = function(arg0) {
          return "bigint" == typeof getObject(arg0);
        }, imports.wbg.__wbindgen_number_get = function(arg0, arg1) {
          var obj = getObject(arg1), ret = "number" == typeof obj ? obj : void 0;
          (null !== cachedFloat64Memory0 && 0 !== cachedFloat64Memory0.byteLength || (cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer)), 
          cachedFloat64Memory0)[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret, getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);
        }, imports.wbg.__wbg_isSafeInteger_8c4789029e885159 = function(arg0) {
          return Number.isSafeInteger(getObject(arg0));
        }, imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {
          var v = getObject(arg1), ret = "bigint" == typeof v ? v : void 0;
          (null !== cachedBigInt64Memory0 && 0 !== cachedBigInt64Memory0.byteLength || (cachedBigInt64Memory0 = new BigInt64Array(wasm.memory.buffer)), 
          cachedBigInt64Memory0)[arg0 / 8 + 1] = isLikeNone(ret) ? BigInt(0) : ret, getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);
        }, imports.wbg.__wbindgen_bigint_from_i64 = function(arg0) {
          return addHeapObject(arg0);
        }, imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {
          return getObject(arg0) === getObject(arg1);
        }, imports.wbg.__wbg_isArray_39d28997bf6b96b4 = function(arg0) {
          return Array.isArray(getObject(arg0));
        }, imports.wbg.__wbg_iterator_55f114446221aa5a = function() {
          return addHeapObject(Symbol.iterator);
        }, imports.wbg.__wbindgen_in = function(arg0, arg1) {
          return getObject(arg0) in getObject(arg1);
        }, imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {
          return addHeapObject(BigInt.asUintN(64, arg0));
        }, imports.wbg.__wbindgen_error_new = function(arg0, arg1) {
          return addHeapObject(new Error(getStringFromWasm0(arg0, arg1)));
        }, imports.wbg.__wbg_entries_4e1315b774245952 = function(arg0) {
          return addHeapObject(Object.entries(getObject(arg0)));
        }, imports.wbg.__wbindgen_is_undefined = function(arg0) {
          return void 0 === getObject(arg0);
        }, imports.wbg.__wbindgen_is_null = function(arg0) {
          return null === getObject(arg0);
        }, imports.wbg.__wbg_String_91fba7ded13ba54c = function(arg0, arg1) {
          var ptr0 = passStringToWasm0(String(getObject(arg1)), wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          getInt32Memory0()[arg0 / 4 + 1] = len0, getInt32Memory0()[arg0 / 4 + 0] = ptr0;
        }, imports.wbg.__wbg_new_f9876326328f45ed = function() {
          return addHeapObject(new Object);
        }, imports.wbg.__wbindgen_number_new = function(arg0) {
          return addHeapObject(arg0);
        }, imports.wbg.__wbg_String_fc81d39fcf17362c = function(arg0, arg1) {
          var ptr0 = passStringToWasm0(String(getObject(arg1)), wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          getInt32Memory0()[arg0 / 4 + 1] = len0, getInt32Memory0()[arg0 / 4 + 0] = ptr0;
        }, imports.wbg.__wbg_coreresponsehandler_c9ca7627001f702a = function(arg0, arg1, arg2, arg3) {
          !function(request_id, params, response_type, finished) {
            responseHandler && responseHandler(request_id, params, response_type, finished);
          }(arg0 >>> 0, takeObject(arg1), arg2 >>> 0, 0 !== arg3);
        }, imports.wbg.__wbg_message_a95c3ef248e4b57a = function(arg0) {
          return addHeapObject(getObject(arg0).message);
        }, imports.wbg.__wbg_new_b525de17f44a8943 = function() {
          return addHeapObject(new Array);
        }, imports.wbg.__wbg_new_f841cc6f2098f4b5 = function() {
          return addHeapObject(new Map);
        }, imports.wbg.__wbg_set_388c4c6422704173 = function(arg0, arg1, arg2) {
          return addHeapObject(getObject(arg0).set(getObject(arg1), getObject(arg2)));
        }, imports.wbg.__wbindgen_is_string = function(arg0) {
          return "string" == typeof getObject(arg0);
        }, imports.wbg.__wbg_set_ceb4a45c9f75ec15 = function(arg0, arg1, arg2) {
          getObject(arg0)[takeObject(arg1)] = takeObject(arg2);
        }, imports.wbg.__wbg_crypto_d05b68a3572bb8ca = function(arg0) {
          return addHeapObject(getObject(arg0).crypto);
        }, imports.wbg.__wbg_process_b02b3570280d0366 = function(arg0) {
          return addHeapObject(getObject(arg0).process);
        }, imports.wbg.__wbg_versions_c1cb42213cedf0f5 = function(arg0) {
          return addHeapObject(getObject(arg0).versions);
        }, imports.wbg.__wbg_node_43b1089f407e4ec2 = function(arg0) {
          return addHeapObject(getObject(arg0).node);
        }, imports.wbg.__wbg_require_9a7e0f667ead4995 = function() {
          return handleError((function() {
            return addHeapObject(module.require);
          }), arguments);
        }, imports.wbg.__wbindgen_is_function = function(arg0) {
          return "function" == typeof getObject(arg0);
        }, imports.wbg.__wbg_call_9495de66fdbe016b = function() {
          return handleError((function(arg0, arg1, arg2) {
            return addHeapObject(getObject(arg0).call(getObject(arg1), getObject(arg2)));
          }), arguments);
        }, imports.wbg.__wbg_msCrypto_10fc94afee92bd76 = function(arg0) {
          return addHeapObject(getObject(arg0).msCrypto);
        }, imports.wbg.__wbg_newwithlength_b56c882b57805732 = function(arg0) {
          return addHeapObject(new Uint8Array(arg0 >>> 0));
        }, imports.wbg.__wbindgen_cb_drop = function(arg0) {
          var obj = takeObject(arg0).original;
          if (1 == obj.cnt--) return obj.a = 0, !0;
          return !1;
        }, imports.wbg.__wbg_readyState_d9cf5eb3487e31d6 = function(arg0) {
          return addHeapObject(getObject(arg0).readyState);
        }, imports.wbg.__wbg_setonsuccess_925a7718d3f62bc1 = function(arg0, arg1) {
          getObject(arg0).onsuccess = getObject(arg1);
        }, imports.wbg.__wbg_setonerror_019196fbce756cc0 = function(arg0, arg1) {
          getObject(arg0).onerror = getObject(arg1);
        }, imports.wbg.__wbg_result_3a1fef332bc47038 = function() {
          return handleError((function(arg0) {
            return addHeapObject(getObject(arg0).result);
          }), arguments);
        }, imports.wbg.__wbg_target_b629c177f9bee3da = function(arg0) {
          var ret = getObject(arg0).target;
          return isLikeNone(ret) ? 0 : addHeapObject(ret);
        }, imports.wbg.__wbg_transaction_6d097d62f550220d = function() {
          return handleError((function(arg0, arg1, arg2, arg3) {
            return addHeapObject(getObject(arg0).transaction(getStringFromWasm0(arg1, arg2), takeObject(arg3)));
          }), arguments);
        }, imports.wbg.__wbg_setoncomplete_f32167d3f84be687 = function(arg0, arg1) {
          getObject(arg0).oncomplete = getObject(arg1);
        }, imports.wbg.__wbg_setonerror_7cbe775a0abc7a8e = function(arg0, arg1) {
          getObject(arg0).onerror = getObject(arg1);
        }, imports.wbg.__wbg_setonabort_0e116e0f6f9fc3a6 = function(arg0, arg1) {
          getObject(arg0).onabort = getObject(arg1);
        }, imports.wbg.__wbg_objectStore_cdc69f65ad4a71eb = function() {
          return handleError((function(arg0, arg1, arg2) {
            return addHeapObject(getObject(arg0).objectStore(getStringFromWasm0(arg1, arg2)));
          }), arguments);
        }, imports.wbg.__wbg_item_d5de7e3394624329 = function(arg0, arg1, arg2) {
          var ret = getObject(arg1).item(arg2 >>> 0), ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          getInt32Memory0()[arg0 / 4 + 1] = len0, getInt32Memory0()[arg0 / 4 + 0] = ptr0;
        }, imports.wbg.__wbg_next_88560ec06a094dea = function() {
          return handleError((function(arg0) {
            return addHeapObject(getObject(arg0).next());
          }), arguments);
        }, imports.wbg.__wbg_done_1ebec03bbd919843 = function(arg0) {
          return getObject(arg0).done;
        }, imports.wbg.__wbg_value_6ac8da5cc5b3efda = function(arg0) {
          return addHeapObject(getObject(arg0).value);
        }, imports.wbg.__wbg_call_95d1ea488d03e4e8 = function() {
          return handleError((function(arg0, arg1) {
            return addHeapObject(getObject(arg0).call(getObject(arg1)));
          }), arguments);
        }, imports.wbg.__wbg_next_b7d530c04fd8b217 = function(arg0) {
          return addHeapObject(getObject(arg0).next);
        }, imports.wbg.__wbg_self_e7c1f827057f6584 = function() {
          return handleError((function() {
            return addHeapObject(self.self);
          }), arguments);
        }, imports.wbg.__wbg_window_a09ec664e14b1b81 = function() {
          return handleError((function() {
            return addHeapObject(window.window);
          }), arguments);
        }, imports.wbg.__wbg_globalThis_87cbb8506fecf3a9 = function() {
          return handleError((function() {
            return addHeapObject(globalThis.globalThis);
          }), arguments);
        }, imports.wbg.__wbg_global_c85a9259e621f3db = function() {
          return handleError((function() {
            return addHeapObject(__webpack_require__.g.global);
          }), arguments);
        }, imports.wbg.__wbg_newnoargs_2b8b6bd7753c76ba = function(arg0, arg1) {
          return addHeapObject(new Function(getStringFromWasm0(arg0, arg1)));
        }, imports.wbg.__wbg_set_17499e8aa4003ebd = function(arg0, arg1, arg2) {
          getObject(arg0).set(getObject(arg1), arg2 >>> 0);
        }, imports.wbg.__wbg_length_27a2afe8ab42b09f = function(arg0) {
          return getObject(arg0).length;
        }, imports.wbg.__wbg_set_6aa458a4ebdb65cb = function() {
          return handleError((function(arg0, arg1, arg2) {
            return Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));
          }), arguments);
        }, imports.wbg.__wbg_randomFillSync_b70ccbdf4926a99d = function() {
          return handleError((function(arg0, arg1) {
            getObject(arg0).randomFillSync(takeObject(arg1));
          }), arguments);
        }, imports.wbg.__wbg_subarray_7526649b91a252a6 = function(arg0, arg1, arg2) {
          return addHeapObject(getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0));
        }, imports.wbg.__wbg_getRandomValues_7e42b4fb8779dc6d = function() {
          return handleError((function(arg0, arg1) {
            getObject(arg0).getRandomValues(getObject(arg1));
          }), arguments);
        }, imports.wbg.__wbg_self_7eede1f4488bf346 = function() {
          return handleError((function() {
            return addHeapObject(self.self);
          }), arguments);
        }, imports.wbg.__wbg_crypto_c909fb428dcbddb6 = function(arg0) {
          return addHeapObject(getObject(arg0).crypto);
        }, imports.wbg.__wbg_msCrypto_511eefefbfc70ae4 = function(arg0) {
          return addHeapObject(getObject(arg0).msCrypto);
        }, imports.wbg.__wbg_static_accessor_MODULE_ef3aa2eb251158a5 = function() {
          return addHeapObject(module);
        }, imports.wbg.__wbg_require_900d5c3984fe7703 = function(arg0, arg1, arg2) {
          return addHeapObject(getObject(arg0).require(getStringFromWasm0(arg1, arg2)));
        }, imports.wbg.__wbg_getRandomValues_307049345d0bd88c = function(arg0) {
          return addHeapObject(getObject(arg0).getRandomValues);
        }, imports.wbg.__wbg_randomFillSync_85b3f4c52c56c313 = function(arg0, arg1, arg2) {
          var ptr, len;
          getObject(arg0).randomFillSync((ptr = arg1, len = arg2, getUint8Memory0().subarray(ptr / 1, ptr / 1 + len)));
        }, imports.wbg.__wbg_getRandomValues_cd175915511f705e = function(arg0, arg1) {
          getObject(arg0).getRandomValues(getObject(arg1));
        }, imports.wbg.__wbg_instanceof_Uint8Array_01cebe79ca606cca = function(arg0) {
          var result;
          try {
            result = getObject(arg0) instanceof Uint8Array;
          } catch (_unused2) {
            result = !1;
          }
          return result;
        }, imports.wbg.__wbg_setTimeout_6609c9aa64f32bfc = function() {
          return handleError((function(arg0, arg1, arg2) {
            return getObject(arg0).setTimeout(getObject(arg1), arg2);
          }), arguments);
        }, imports.wbg.__wbg_clearTimeout_b2b8af0f044e02e9 = function(arg0, arg1) {
          getObject(arg0).clearTimeout(arg1);
        }, imports.wbg.__wbg_newwithstrandinit_c45f0dc6da26fd03 = function() {
          return handleError((function(arg0, arg1, arg2) {
            return addHeapObject(new Request(getStringFromWasm0(arg0, arg1), getObject(arg2)));
          }), arguments);
        }, imports.wbg.__wbg_headers_ab5251d2727ac41e = function(arg0) {
          return addHeapObject(getObject(arg0).headers);
        }, imports.wbg.__wbg_set_a5d34c36a1a4ebd1 = function() {
          return handleError((function(arg0, arg1, arg2, arg3, arg4) {
            getObject(arg0).set(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));
          }), arguments);
        }, imports.wbg.__wbg_fetch_465e8cb61a0f43ea = function(arg0, arg1) {
          return addHeapObject(getObject(arg0).fetch(getObject(arg1)));
        }, imports.wbg.__wbg_instanceof_Response_fb3a4df648c1859b = function(arg0) {
          var result;
          try {
            result = getObject(arg0) instanceof Response;
          } catch (_unused3) {
            result = !1;
          }
          return result;
        }, imports.wbg.__wbg_text_f61464d781b099f0 = function() {
          return handleError((function(arg0) {
            return addHeapObject(getObject(arg0).text());
          }), arguments);
        }, imports.wbg.__wbg_status_d483a4ac847f380a = function(arg0) {
          return getObject(arg0).status;
        }, imports.wbg.__wbg_message_f15effc8b20828e2 = function(arg0, arg1) {
          var ptr0 = passStringToWasm0(getObject(arg1).message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          getInt32Memory0()[arg0 / 4 + 1] = len0, getInt32Memory0()[arg0 / 4 + 0] = ptr0;
        }, imports.wbg.__wbg_delete_d2905418845867ae = function() {
          return handleError((function(arg0, arg1) {
            return addHeapObject(getObject(arg0).delete(getObject(arg1)));
          }), arguments);
        }, imports.wbg.__wbg_Window_5684341ff6dfe3ad = function(arg0) {
          return addHeapObject(getObject(arg0).Window);
        }, imports.wbg.__wbg_indexedDB_47544d523ac2a208 = function() {
          return handleError((function(arg0) {
            var ret = getObject(arg0).indexedDB;
            return isLikeNone(ret) ? 0 : addHeapObject(ret);
          }), arguments);
        }, imports.wbg.__wbg_WorkerGlobalScope_e0447ffcae8bb272 = function(arg0) {
          return addHeapObject(getObject(arg0).WorkerGlobalScope);
        }, imports.wbg.__wbg_indexedDB_83385e4ce65e9054 = function() {
          return handleError((function(arg0) {
            var ret = getObject(arg0).indexedDB;
            return isLikeNone(ret) ? 0 : addHeapObject(ret);
          }), arguments);
        }, imports.wbg.__wbg_open_bd135117d9924392 = function() {
          return handleError((function(arg0, arg1, arg2) {
            return addHeapObject(getObject(arg0).open(getStringFromWasm0(arg1, arg2)));
          }), arguments);
        }, imports.wbg.__wbg_setonupgradeneeded_8961be061344d04a = function(arg0, arg1) {
          getObject(arg0).onupgradeneeded = getObject(arg1);
        }, imports.wbg.__wbg_setonversionchange_fd71954420371ad8 = function(arg0, arg1) {
          getObject(arg0).onversionchange = getObject(arg1);
        }, imports.wbg.__wbg_setonblocked_78e53418c43a7090 = function(arg0, arg1) {
          getObject(arg0).onblocked = getObject(arg1);
        }, imports.wbg.__wbg_put_fdcda25ee2a99b60 = function() {
          return handleError((function(arg0, arg1, arg2) {
            return addHeapObject(getObject(arg0).put(getObject(arg1), getObject(arg2)));
          }), arguments);
        }, imports.wbg.__wbg_get_18b8195859195e7e = function() {
          return handleError((function(arg0, arg1) {
            return addHeapObject(getObject(arg0).get(getObject(arg1)));
          }), arguments);
        }, imports.wbg.__wbg_stringify_029a979dfb73aa17 = function() {
          return handleError((function(arg0) {
            return addHeapObject(JSON.stringify(getObject(arg0)));
          }), arguments);
        }, imports.wbg.__wbg_instanceof_Error_749a7378f4439ee0 = function(arg0) {
          var result;
          try {
            result = getObject(arg0) instanceof Error;
          } catch (_unused4) {
            result = !1;
          }
          return result;
        }, imports.wbg.__wbg_new_f127e324c1313064 = function(arg0) {
          return addHeapObject(new Date(getObject(arg0)));
        }, imports.wbg.__wbg_getTimezoneOffset_2a6b27fb18493a56 = function(arg0) {
          return getObject(arg0).getTimezoneOffset();
        }, imports.wbg.__wbg_newwithstr_09e6b7baeccb3a5f = function() {
          return handleError((function(arg0, arg1, arg2, arg3) {
            return addHeapObject(new WebSocket(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3)));
          }), arguments);
        }, imports.wbg.__wbg_new_8ad026ef33da9ab1 = function() {
          return handleError((function(arg0, arg1) {
            return addHeapObject(new WebSocket(getStringFromWasm0(arg0, arg1)));
          }), arguments);
        }, imports.wbg.__wbg_setonmessage_5ea7e452fd7a5544 = function(arg0, arg1) {
          getObject(arg0).onmessage = getObject(arg1);
        }, imports.wbg.__wbg_setonopen_b91a933a10be7d48 = function(arg0, arg1) {
          getObject(arg0).onopen = getObject(arg1);
        }, imports.wbg.__wbg_setonerror_a6a7413fc33449ef = function(arg0, arg1) {
          getObject(arg0).onerror = getObject(arg1);
        }, imports.wbg.__wbg_close_546591d4b4350b36 = function() {
          return handleError((function(arg0) {
            getObject(arg0).close();
          }), arguments);
        }, imports.wbg.__wbg_send_36f8bcb566f8afa0 = function() {
          return handleError((function(arg0, arg1, arg2) {
            getObject(arg0).send(getStringFromWasm0(arg1, arg2));
          }), arguments);
        }, imports.wbg.__wbg_data_af909e5dfe73e68c = function(arg0) {
          return addHeapObject(getObject(arg0).data);
        }, imports.wbg.__wbg_objectStoreNames_f0884fed45ebc81c = function(arg0) {
          return addHeapObject(getObject(arg0).objectStoreNames);
        }, imports.wbg.__wbg_createObjectStore_ebb17df1a43fd925 = function() {
          return handleError((function(arg0, arg1, arg2) {
            return addHeapObject(getObject(arg0).createObjectStore(getStringFromWasm0(arg1, arg2)));
          }), arguments);
        }, imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {
          var ptr0 = passStringToWasm0(debugString(getObject(arg1)), wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          getInt32Memory0()[arg0 / 4 + 1] = len0, getInt32Memory0()[arg0 / 4 + 0] = ptr0;
        }, imports.wbg.__wbindgen_throw = function(arg0, arg1) {
          throw new Error(getStringFromWasm0(arg0, arg1));
        }, imports.wbg.__wbg_then_f753623316e2873a = function(arg0, arg1, arg2) {
          return addHeapObject(getObject(arg0).then(getObject(arg1), getObject(arg2)));
        }, imports.wbg.__wbg_then_ec5db6d509eb475f = function(arg0, arg1) {
          return addHeapObject(getObject(arg0).then(getObject(arg1)));
        }, imports.wbg.__wbg_resolve_fd40f858d9db1a04 = function(arg0) {
          return addHeapObject(Promise.resolve(getObject(arg0)));
        }, imports.wbg.__wbg_error_f64b8d41ed4d2fdc = function() {
          return handleError((function(arg0) {
            var ret = getObject(arg0).error;
            return isLikeNone(ret) ? 0 : addHeapObject(ret);
          }), arguments);
        }, imports.wbg.__wbg_instanceof_Window_e266f02eee43b570 = function(arg0) {
          var result;
          try {
            result = !0;
          } catch (_unused5) {
            result = !1;
          }
          return result;
        }, imports.wbg.__wbg_url_8ec2534cdfacb103 = function(arg0, arg1) {
          var ptr0 = passStringToWasm0(getObject(arg1).url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc), len0 = WASM_VECTOR_LEN;
          getInt32Memory0()[arg0 / 4 + 1] = len0, getInt32Memory0()[arg0 / 4 + 0] = ptr0;
        }, imports.wbg.__wbindgen_closure_wrapper892 = function(arg0, arg1, arg2) {
          return addHeapObject(makeClosure(arg0, arg1, 53, __wbg_adapter_50));
        }, imports.wbg.__wbindgen_closure_wrapper894 = function(arg0, arg1, arg2) {
          return addHeapObject(makeClosure(arg0, arg1, 53, __wbg_adapter_53));
        }, imports.wbg.__wbindgen_closure_wrapper3765 = function(arg0, arg1, arg2) {
          return addHeapObject(makeMutClosure(arg0, arg1, 53, __wbg_adapter_56));
        }, imports.wbg.__wbindgen_closure_wrapper4787 = function(arg0, arg1, arg2) {
          return addHeapObject(makeMutClosure(arg0, arg1, 53, __wbg_adapter_59));
        }, imports.wbg.__wbindgen_closure_wrapper6234 = function(arg0, arg1, arg2) {
          return addHeapObject(makeMutClosure(arg0, arg1, 53, __wbg_adapter_62));
        }, imports.wbg.__wbindgen_closure_wrapper6237 = function(arg0, arg1, arg2) {
          return addHeapObject(makeMutClosure(arg0, arg1, 53, __wbg_adapter_62));
        }, imports.wbg.__wbindgen_closure_wrapper6859 = function(arg0, arg1, arg2) {
          return addHeapObject(makeMutClosure(arg0, arg1, 53, __wbg_adapter_62));
        }, imports;
      }
      function finalizeInit(instance, module) {
        return wasm = instance.exports, init.__wbindgen_wasm_module = module, cachedBigInt64Memory0 = null, 
        cachedFloat64Memory0 = null, cachedInt32Memory0 = null, cachedUint8Memory0 = null, 
        wasm;
      }
      function init(_x4) {
        return _init.apply(this, arguments);
      }
      function _init() {
        return _init = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(input) {
          var imports, _yield$load, instance, module;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return imports = getImports(), ("string" == typeof input || "function" == typeof Request && input instanceof Request || "function" == typeof URL && input instanceof URL) && (input = fetch(input)), 
              _context5.t0 = load, _context5.next = 7, input;

             case 7:
              return _context5.t1 = _context5.sent, _context5.t2 = imports, _context5.next = 11, 
              (0, _context5.t0)(_context5.t1, _context5.t2);

             case 11:
              return _yield$load = _context5.sent, instance = _yield$load.instance, module = _yield$load.module, 
              _context5.abrupt("return", finalizeInit(instance, module));

             case 15:
             case "end":
              return _context5.stop();
            }
          }), _callee5);
        }))), _init.apply(this, arguments);
      }
      function replaceBlobsWithArrayBuffers(_x5) {
        return _replaceBlobsWithArrayBuffers.apply(this, arguments);
      }
      function _replaceBlobsWithArrayBuffers() {
        return (_replaceBlobsWithArrayBuffers = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(value) {
          var result, key;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              if (!(value instanceof Blob)) {
                _context6.next = 4;
                break;
              }
              return _context6.next = 3, value.arrayBuffer();

             case 3:
              return _context6.abrupt("return", _context6.sent);

             case 4:
              if ("bigint" != typeof value) {
                _context6.next = 10;
                break;
              }
              if (!(value < Number.MAX_SAFE_INTEGER && value > Number.MIN_SAFE_INTEGER)) {
                _context6.next = 9;
                break;
              }
              return _context6.abrupt("return", Number(value));

             case 9:
              return _context6.abrupt("return", value.toString());

             case 10:
              if ("object" !== _typeof(value) || null === value) {
                _context6.next = 21;
                break;
              }
              result = Array.isArray(value) ? [] : {}, _context6.t0 = regeneratorRuntime.keys(value);

             case 13:
              if ((_context6.t1 = _context6.t0()).done) {
                _context6.next = 20;
                break;
              }
              return key = _context6.t1.value, _context6.next = 17, replaceBlobsWithArrayBuffers(value[key]);

             case 17:
              result[key] = _context6.sent, _context6.next = 13;
              break;

             case 20:
              return _context6.abrupt("return", result);

             case 21:
              return _context6.abrupt("return", value);

             case 22:
             case "end":
              return _context6.stop();
            }
          }), _callee6);
        })))).apply(this, arguments);
      }
      var deferredCreateContext = [], responseHandler = null;
      return _asyncToGenerator(regeneratorRuntime.mark((function _callee2() {
        var _i2, _deferredCreateContex, createContext;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.t0 = init, _context2.next = 3, loadModule();

           case 3:
            return _context2.t1 = _context2.sent, _context2.next = 6, (0, _context2.t0)(_context2.t1);

           case 6:
            for (_i2 = 0, _deferredCreateContex = deferredCreateContext; _i2 < _deferredCreateContex.length; _i2++) (createContext = _deferredCreateContex[_i2]).resolve(core_create_context(createContext.configJson));
            deferredCreateContext = null;

           case 8:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })))(), Promise.resolve({
        getLibName,
        setResponseParamsHandler: function(handler) {
          responseHandler = handler;
        },
        createContext: function(configJson) {
          return null === deferredCreateContext ? Promise.resolve(core_create_context(configJson)) : new Promise((function(resolve) {
            deferredCreateContext.push({
              configJson,
              resolve
            });
          }));
        },
        destroyContext: function(context) {
          !function(context) {
            wasm.core_destroy_context(context);
          }(context);
        },
        sendRequestParams: function(context, requestId, functionName, functionParams) {
          _asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
            return regeneratorRuntime.wrap((function(_context3) {
              for (;;) switch (_context3.prev = _context3.next) {
               case 0:
                return _context3.t0 = core_request, _context3.t1 = context, _context3.t2 = functionName, 
                _context3.next = 5, replaceBlobsWithArrayBuffers(functionParams);

               case 5:
                _context3.t3 = _context3.sent, _context3.t4 = requestId, (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3, _context3.t4);

               case 8:
               case "end":
                return _context3.stop();
              }
            }), _callee3);
          })))();
        }
      });
    }
    function libWeb() {
      return options && options.disableSeparateWorker ? withoutSeparateWorker() : withSeparateWorker();
    }
  },
  213086: () => {},
  214386: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      ConnectIpc: () => ConnectIpc
    });
    __webpack_require__(207452), __webpack_require__(505086), __webpack_require__(269193), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602);
    var web3_providers_ipc__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(982154);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var ConnectIpc = function ConnectIpc() {
      var _this = this, url = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", socketOpt = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, reconnectOpt = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      !function(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
      }(this, ConnectIpc), _defineProperty(this, "isReady", _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.abrupt("return", new Promise((function(resolve) {
              _this.client.once("connect", (function() {
                return resolve(!0);
              }));
            })));

           case 1:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })))), this.client = new web3_providers_ipc__WEBPACK_IMPORTED_MODULE_13__.IpcProvider(url, socketOpt, reconnectOpt), 
      this.client._getChainId = function() {
        return new Promise((function(res) {
          return res([]);
        }));
      }, this.client._getAccounts = function() {
        return new Promise((function(res) {
          return res([]);
        }));
      };
    };
  },
  227383: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      axiosRequest: () => axiosRequest,
      chromeGetData: () => chromeGetData,
      chromePostData: () => chromePostData,
      getData: () => getData,
      getRequestHeader: () => getRequestHeader,
      langChange: () => langChange,
      postGraphQL: () => postGraphQL,
      postJson: () => postJson,
      wsRequest: () => wsRequest,
      wss_connection: () => wss_connection
    });
    __webpack_require__(207452), __webpack_require__(219693), __webpack_require__(418665), 
    __webpack_require__(505086), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(630789), __webpack_require__(687136), __webpack_require__(850785), 
    __webpack_require__(158649), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(407899), __webpack_require__(700017), __webpack_require__(335231), 
    __webpack_require__(259581), __webpack_require__(380115), __webpack_require__(80475), 
    __webpack_require__(269193), __webpack_require__(579389), __webpack_require__(447746), 
    __webpack_require__(504895), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(714913), __webpack_require__(498741), 
    __webpack_require__(215195), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(110678), 
    __webpack_require__(103101), __webpack_require__(936012);
    var axios__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(272505), axios__WEBPACK_IMPORTED_MODULE_35___default = __webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_35__), _gate_gui__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(279386), _popup_components_Modal__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(292690), _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(212864), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(326394), _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(532437), _config__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(289933), _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(419969), _popup_lib_tool_crypto_js_md5__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(27681), _src_utils_gt_device_manager__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(278451);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getCookiesFn = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
        var url, _yield$getPageCookies, checkValue, cookiesStr, cookies, csrftoken, _args = arguments;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return url = _args.length > 0 && void 0 !== _args[0] ? _args[0] : "", _context.next = 3, 
            (0, _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_40__.pZ)("csrftoken");

           case 3:
            return _yield$getPageCookies = _context.sent, checkValue = _yield$getPageCookies.checkValue, 
            cookiesStr = _yield$getPageCookies.cookiesStr, cookies = cookiesStr, csrftoken = checkValue || 1, 
            url.indexOf(_config__WEBPACK_IMPORTED_MODULE_41__.B$) < 0 && url.indexOf(_config__WEBPACK_IMPORTED_MODULE_41__.RI) < 0 && url.indexOf(_config__WEBPACK_IMPORTED_MODULE_41__.$0) < 0 && (cookies = "", 
            csrftoken = ""), _context.abrupt("return", {
              cookies,
              csrftoken
            });

           case 10:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function() {
        return _ref.apply(this, arguments);
      };
    }(), getAppSign = function(method, url, params, header) {
      var _urlObj$search, _Object$keys2, _headerArr$map, bodyNotStringify = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], searchParamsStr = "", paramsStr = "", urlObj = new URL(url), path = urlObj.pathname;
      if ("GET" === method || (null === (_urlObj$search = urlObj.search) || void 0 === _urlObj$search ? void 0 : _urlObj$search.length) > 1) {
        var _Object$keys, _Object$keys$filter, _paramArr$map, search = urlObj.search, searchParams = {};
        if ("GET" === method && params && (searchParams = params), "{}" === JSON.stringify(searchParams) && search) {
          var _search$substring, arr = null == search || null === (_search$substring = search.substring(1)) || void 0 === _search$substring ? void 0 : _search$substring.split("&");
          searchParams = {}, arr.forEach((function(item) {
            var _pair = _slicedToArray(null == item ? void 0 : item.split("="), 2), key = _pair[0], value = _pair[1];
            searchParams[key] = value;
          }));
        }
        var paramArr = null === (_Object$keys = Object.keys(searchParams)) || void 0 === _Object$keys || null === (_Object$keys$filter = _Object$keys.filter((function(key) {
          return void 0 !== searchParams[key] && null !== searchParams[key];
        }))) || void 0 === _Object$keys$filter ? void 0 : _Object$keys$filter.sort();
        searchParamsStr = null == paramArr || null === (_paramArr$map = paramArr.map((function(key) {
          return "".concat(null == key ? void 0 : key.toLowerCase()).concat(searchParams[key]);
        }))) || void 0 === _paramArr$map ? void 0 : _paramArr$map.join("");
      }
      "POST" === method && params && (paramsStr = bodyNotStringify ? params : JSON.stringify(params));
      var headerArr = null === (_Object$keys2 = Object.keys(header || {})) || void 0 === _Object$keys2 ? void 0 : _Object$keys2.sort(), headerStr = null == headerArr || null === (_headerArr$map = headerArr.map((function(key) {
        return "".concat(null == key ? void 0 : key.toLowerCase()).concat(header[key]);
      }))) || void 0 === _headerArr$map ? void 0 : _headerArr$map.join(""), str = "".concat(_config__WEBPACK_IMPORTED_MODULE_41__.ai).concat(method).concat(path).concat(searchParamsStr).concat(paramsStr).concat(headerStr).concat(_config__WEBPACK_IMPORTED_MODULE_41__.Zo);
      return (0, _popup_lib_tool_crypto_js_md5__WEBPACK_IMPORTED_MODULE_43__.F)(str);
    }, getRequestHeader = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(method, url, params) {
        var bodyNotStringify, _md, _yield$Promise$all, _yield$Promise$all2, deviceUuid, deviceToken, _time, lang, header, appSign, _args2 = arguments;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return bodyNotStringify = _args2.length > 3 && void 0 !== _args2[3] && _args2[3], 
            _context2.prev = 1, _context2.next = 4, Promise.all([ (0, _src_utils_gt_device_manager__WEBPACK_IMPORTED_MODULE_44__.getDeviceUuid)(), (0, 
            _src_utils_gt_device_manager__WEBPACK_IMPORTED_MODULE_44__.getDeviceToken)() ]);

           case 4:
            return _yield$Promise$all = _context2.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
            deviceUuid = _yield$Promise$all2[0], deviceToken = _yield$Promise$all2[1], _time = String((new Date).getTime()), 
            lang = "en", localStorage && (lang = langChange(localStorage.getItem("lang"))), 
            header = {
              "x-gtweb3-appKey": _config__WEBPACK_IMPORTED_MODULE_41__.ai,
              "x-gtweb3-random": null === (_md = (0, _popup_lib_tool_crypto_js_md5__WEBPACK_IMPORTED_MODULE_43__.F)("".concat(deviceToken).concat(_time))) || void 0 === _md ? void 0 : _md.substring(0, 10),
              "x-gtweb3-time": _time,
              "x-gtweb3-applang": lang,
              "x-gtweb3-device-type": 5,
              "x-gtweb3-device-id": deviceUuid,
              "x-gtweb3-night": 0,
              "x-gtweb3-sign-version": "web3_v2",
              "x-gtweb3-version": _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_42__.version,
              "x-gtweb3-device-token": deviceToken
            }, appSign = getAppSign(method, url, params, header, bodyNotStringify), header = _objectSpread(_objectSpread({}, header), {}, {
              "x-gtweb3-appsign": appSign
            }), _context2.abrupt("return", header);

           case 17:
            return _context2.prev = 17, _context2.t0 = _context2.catch(1), _context2.abrupt("return", {});

           case 20:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 1, 17 ] ]);
      })));
      return function(_x2, _x3, _x4) {
        return _ref2.apply(this, arguments);
      };
    }(), langChange = function(str) {
      return "cn" === str ? "zh-hans" : "en";
    }, getData = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(url) {
        var data, headers, _yield$Promise$all3, _yield$Promise$all4, _yield$Promise$all4$, cookies, csrftoken, _yield$Promise$all4$2, appHeader, _args3 = arguments;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return data = _args3.length > 1 && void 0 !== _args3[1] ? _args3[1] : {}, headers = _args3.length > 2 && void 0 !== _args3[2] ? _args3[2] : {}, 
            _context3.next = 4, Promise.all([ getCookiesFn(url), getRequestHeader("GET", url, data) ]);

           case 4:
            return _yield$Promise$all3 = _context3.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2), 
            _yield$Promise$all4$ = _yield$Promise$all4[0], cookies = _yield$Promise$all4$.cookies, 
            csrftoken = _yield$Promise$all4$.csrftoken, _yield$Promise$all4$2 = _yield$Promise$all4[1], 
            appHeader = void 0 === _yield$Promise$all4$2 ? {} : _yield$Promise$all4$2, _context3.abrupt("return", new Promise((function(resolve, reject) {
              axios__WEBPACK_IMPORTED_MODULE_35___default()({
                method: "get",
                url,
                params: data,
                timeout: 3e4,
                headers: _objectSpread(_objectSpread({
                  "Content-Type": "multipart/form-data",
                  source: "plug",
                  aa: cookies,
                  version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_42__.version,
                  csrftoken,
                  lang: langChange(localStorage.getItem("lang"))
                }, headers), appHeader)
              }).then((function(resp) {
                resolve(resp);
              })).catch((function(err) {
                500 !== err.status && 404 !== err.status || (0, _gate_gui__WEBPACK_IMPORTED_MODULE_36__.Ds)({
                  type: "error",
                  autoClose: 3e3,
                  message: "服务器错误！"
                }), reject(err);
              }));
            })));

           case 12:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x5) {
        return _ref3.apply(this, arguments);
      };
    }(), wss_connection = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(url) {
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.abrupt("return", new Promise((function(resolve, reject) {
              resolve(new WebSocket(url, [ langChange(localStorage.getItem("lang")) ]));
            })));

           case 1:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x6) {
        return _ref4.apply(this, arguments);
      };
    }(), postJson = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(url) {
        var data, headers, _yield$Promise$all5, _yield$Promise$all6, _yield$Promise$all6$, cookies, csrftoken, _yield$Promise$all6$2, appHeader, _args5 = arguments;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return data = _args5.length > 1 && void 0 !== _args5[1] ? _args5[1] : {}, headers = _args5.length > 2 && void 0 !== _args5[2] ? _args5[2] : {}, 
            _context5.next = 4, Promise.all([ getCookiesFn(url), getRequestHeader("POST", url, data) ]);

           case 4:
            return _yield$Promise$all5 = _context5.sent, _yield$Promise$all6 = _slicedToArray(_yield$Promise$all5, 2), 
            _yield$Promise$all6$ = _yield$Promise$all6[0], cookies = _yield$Promise$all6$.cookies, 
            csrftoken = _yield$Promise$all6$.csrftoken, _yield$Promise$all6$2 = _yield$Promise$all6[1], 
            appHeader = void 0 === _yield$Promise$all6$2 ? {} : _yield$Promise$all6$2, _context5.abrupt("return", new Promise((function(resolve, reject) {
              axios__WEBPACK_IMPORTED_MODULE_35___default()({
                method: "post",
                url,
                data,
                timeout: 3e4,
                headers: _objectSpread(_objectSpread({
                  "Content-Type": "application/json",
                  source: "plug",
                  aa: cookies,
                  version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_42__.version,
                  csrftoken,
                  lang: langChange(localStorage.getItem("lang"))
                }, headers), appHeader)
              }).then((function(resp) {
                resolve(resp);
              })).catch((function(err) {
                500 !== err.status && 404 !== err.status || (0, _gate_gui__WEBPACK_IMPORTED_MODULE_36__.Ds)({
                  type: "error",
                  autoClose: 3e3,
                  message: "服务器错误！"
                }), reject(err);
              }));
            })));

           case 12:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })));
      return function(_x7) {
        return _ref5.apply(this, arguments);
      };
    }(), postGraphQL = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(url, query, variables) {
        var data, appHeaders;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return data = {
              query,
              variables
            }, _context6.next = 3, getRequestHeader("POST", url, data);

           case 3:
            return appHeaders = _context6.sent, _context6.abrupt("return", new Promise((function(resolve, reject) {
              axios__WEBPACK_IMPORTED_MODULE_35___default()({
                method: "post",
                url,
                data,
                headers: _objectSpread({
                  "Content-Type": "application/json"
                }, appHeaders || {})
              }).then((function(resp) {
                resolve(resp);
              })).catch((function(err) {
                reject(err);
              }));
            })));

           case 5:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x8, _x9, _x10) {
        return _ref6.apply(this, arguments);
      };
    }(), axiosRequest = function(method, url) {
      var data = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      return new Promise((function(resolve, reject) {
        getRequestHeader(null == method ? void 0 : method.toUpperCase(), url, data).then((function(appHeader) {
          axios__WEBPACK_IMPORTED_MODULE_35___default()({
            method,
            url,
            data,
            timeout: 3e4,
            headers: appHeader
          }).then((function(resp) {
            resolve(resp);
          })).catch((function(err) {
            reject(err);
          }));
        }));
      }));
    }, wsRequest = function(url) {
      var params = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return new Promise((function(resolve, reject) {
        var ws = new WebSocket(url);
        ws.addEventListener("open", (function() {
          ws.send(JSON.stringify(params));
        })), ws.addEventListener("message", (function(data) {
          ws.close();
          try {
            var res = {
              status: 200,
              data: JSON.parse(data.data)
            };
            resolve(res);
          } catch (err) {
            reject();
          }
        }));
      }));
    }, chromePostData = function(url) {
      var data = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return new Promise((function(resolve) {
        getRequestHeader("POST", url, data).then((function(appHeader) {
          chrome.runtime.sendMessage({
            url,
            data,
            header: appHeader,
            method: "post"
          }, (function(res) {
            var _res$resMsg;
            url.indexOf("/verifySafePwd") > -1 && (res && res instanceof Object && "{}" !== JSON.stringify(res) && 1e4 == res.resMsg.code && _popup_components_Modal__WEBPACK_IMPORTED_MODULE_37__.A.info({
              content: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_38__.lang_string)("跳转至设置资金密码界面"),
              okTxt: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_38__.lang_string)("立即前往"),
              closeShow: !1,
              onOk: function(a) {
                _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_39__.toSecuritySetting();
              }
            }));
            if ([ 4003, 1009, 1001, 1006, 1002, 4702 ].includes(null == res || null === (_res$resMsg = res.resMsg) || void 0 === _res$resMsg ? void 0 : _res$resMsg.code)) {
              var urlInfo = new URL(url);
              "".concat(null == urlInfo ? void 0 : urlInfo.origin).concat(null == urlInfo ? void 0 : urlInfo.pathname) == "".concat(_config__WEBPACK_IMPORTED_MODULE_41__.SH, "/decryptionBatch") && _popup_components_Modal__WEBPACK_IMPORTED_MODULE_37__.A.info({
                content: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_38__.lang_string)("请登录Gate"),
                okTxt: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_38__.lang_string)("去登录"),
                closeShow: !1,
                onOk: function(a) {
                  _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_39__.toLogin();
                }
              });
            }
            resolve(res);
          }));
        }));
      }));
    }, chromeGetData = function(url) {
      var data = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      return new Promise((function(resolve) {
        getRequestHeader("GET", url, data).then((function(appHeader) {
          chrome.runtime.sendMessage({
            url,
            data,
            header: appHeader,
            method: "get"
          }, (function(res) {
            resolve(res);
          }));
        }));
      }));
    };
  },
  228972: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      LL: () => strip0x,
      U5: () => toHexString,
      i3: () => stringToHex,
      mu: () => add0x
    });
    __webpack_require__(700533), __webpack_require__(348825), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(906048), __webpack_require__(754989), 
    __webpack_require__(868329), __webpack_require__(687136), __webpack_require__(640173);
    var toHexString = function(bytes) {
      return bytes.reduce((function(str, _byte) {
        return str + _byte.toString(16).padStart(2, "0");
      }), "");
    }, strip0x = function(str) {
      return str && str.startsWith("0x") ? str.substring(2) : str;
    }, add0x = function(str) {
      return "string" != typeof str || null != str && str.startsWith("0x") ? str : "0x".concat(str);
    }, stringToHex = function(str) {
      for (var hex = "", i = 0; i < str.length; i++) hex += str.charCodeAt(i).toString(16).padStart(2, "0");
      return hex;
    };
  },
  242197: () => {},
  266744: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      P3: () => BTC_ACCOUNT_FORMAT_TO_NAME_MAP,
      QY: () => PYAccountModel,
      hV: () => ACCOUNT_FORMAT_MAP
    });
    __webpack_require__(687136), __webpack_require__(158649), __webpack_require__(640173), 
    __webpack_require__(418665), __webpack_require__(505086), __webpack_require__(269193), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(380115), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(215195), 
    __webpack_require__(301772), __webpack_require__(953746), __webpack_require__(520861), 
    __webpack_require__(571905), __webpack_require__(285213), __webpack_require__(97182), 
    __webpack_require__(512279), __webpack_require__(639302), __webpack_require__(770147), 
    __webpack_require__(866217), __webpack_require__(697966), __webpack_require__(735186), 
    __webpack_require__(135944), __webpack_require__(644787), __webpack_require__(950632), 
    __webpack_require__(552278), __webpack_require__(614245), __webpack_require__(252492), 
    __webpack_require__(193266), __webpack_require__(537192), __webpack_require__(237220), 
    __webpack_require__(482432), __webpack_require__(632483), __webpack_require__(536696), 
    __webpack_require__(458083), __webpack_require__(754989), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(504895), __webpack_require__(564216), __webpack_require__(714913), 
    __webpack_require__(498741), __webpack_require__(207452);
    var _wallet__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(620107), _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(366248), _okxweb3_coin_base__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(573615), _lang_string__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(212864), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(259159);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var wallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_48__.BtcWallet, Twallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_48__.TBtcWallet, BTC_ACCOUNT_FORMAT_TO_NAME_MAP = {
      BIP44: "Legacy",
      BIP49: "Nested Segwit",
      BIP84: "Native Segwit",
      BIP86: "Taproot",
      CashAddr: "CashAddr",
      CASHADDR: "CashAddr",
      test: "test",
      sr25519: (0, _lang_string__WEBPACK_IMPORTED_MODULE_50__.lang_string)("Sr Address"),
      ed25519: (0, _lang_string__WEBPACK_IMPORTED_MODULE_50__.lang_string)("Ed Address")
    }, ACCOUNT_FORMAT_MAP = {
      BTC: [ "BIP44", "BIP49", "BIP84", "BIP86" ]
    }, BTCAccountType = function BTCAccountType() {
      _classCallCheck(this, BTCAccountType);
    };
    _defineProperty(BTCAccountType, "BIP44", 0), _defineProperty(BTCAccountType, "BIP49", 1), 
    _defineProperty(BTCAccountType, "BIP84", 2), _defineProperty(BTCAccountType, "BIP86", 3), 
    _defineProperty(BTCAccountType, "CashAddr", 4);
    var BTCAccount = function BTCAccount(opts) {
      _classCallCheck(this, BTCAccount), this.type = opts.type || BTCAccountType.BIP44, 
      this.privateKey = opts.privateKey || "", this.publicKey = opts.publicKey || "", 
      this.derivationPath = opts.derivationPath || "", this.address = opts.address || "", 
      this.accountExtendedPrivateKey = opts.accountExtendedPrivateKey || "", this.accountExtendedPublicKey = opts.accountExtendedPublicKey || "", 
      this.accountFormat = opts.accountFormat || "", this.wipPrivateKey = opts.wipPrivateKey || "";
    }, PYAccountModel = function() {
      function PYAccountModel(chainKey, accountPosition, address, privateKey, publicKey, accountExtendedPrivateKey, accountExtendedPublicKey, extendedPath, accountPath) {
        _classCallCheck(this, PYAccountModel), this.chainKey = chainKey, this.accountPosition = accountPosition, 
        this.address = address, this.privateKey = privateKey, this.publicKey = publicKey, 
        this.accountExtendedPrivateKey = accountExtendedPrivateKey, this.accountExtendedPublicKey = accountExtendedPublicKey, 
        this.extendedPath = extendedPath, this.accountPath = accountPath, this.wipPrivateKey = "", 
        this.chainAccounts = [], this.extendKey = "";
      }
      var Constructor, protoProps, staticProps, _generateBIP86Address, _extendBitcoinInfoByPrivateKey, _createSubAccount, _haveBip86Address, _haveBip84Address, _haveBip49Address, _extendBitcoinInfo, _extendTuringBitChainInfoByPrivateKey, _generateExtendKey;
      return Constructor = PYAccountModel, protoProps = [ {
        key: "generateExtendKey",
        value: (_generateExtendKey = _asyncToGenerator(regeneratorRuntime.mark((function _callee(coinType, _wasm) {
          var _ref, CoinTypeExt, Blockchain, blockchain;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              if (null == _wasm) {
                _context.next = 4;
                break;
              }
              _context.t0 = _wasm, _context.next = 7;
              break;

             case 4:
              return _context.next = 6, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_51__.t)();

             case 6:
              _context.t0 = _context.sent;

             case 7:
              if (_ref = _context.t0, CoinTypeExt = _ref.CoinTypeExt, Blockchain = _ref.Blockchain, 
              (blockchain = CoinTypeExt.blockchain(coinType)) != Blockchain.solana) {
                _context.next = 17;
                break;
              }
              return _context.next = 14, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.bg)(this.privateKey, this.publicKey);

             case 14:
              this.secretKey = _context.sent, _context.next = 21;
              break;

             case 17:
              if (blockchain != Blockchain.bitcoin && blockchain != Blockchain.bitcoinTestnet && blockchain != Blockchain.bitcoinCash) {
                _context.next = 21;
                break;
              }
              return _context.next = 20, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)(this.privateKey, coinType);

             case 20:
              this.wipPrivateKey = _context.sent;

             case 21:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x, _x2) {
          return _generateExtendKey.apply(this, arguments);
        })
      }, {
        key: "setChainKey",
        value: function(chainKey) {
          this.chainKey = chainKey;
        }
      }, {
        key: "extendTuringBitChainInfoByPrivateKey",
        value: (_extendTuringBitChainInfoByPrivateKey = _asyncToGenerator(regeneratorRuntime.mark((function _callee2() {
          var account44;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              account44 = new BTCAccount({
                type: BTCAccountType.BIP44,
                privateKey: this.privateKey,
                publicKey: this.publicKey,
                address: this.address,
                accountFormat: "BIP44",
                wipPrivateKey: this.wipPrivateKey
              }), this.chainAccounts = [ account44 ];

             case 2:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function() {
          return _extendTuringBitChainInfoByPrivateKey.apply(this, arguments);
        })
      }, {
        key: "extendTuringBitChainInfo",
        value: function(hdWalelt, coinType, wasm) {
          var Purpose = wasm.Purpose, HDVersion = wasm.HDVersion, hd44Xprv = HDVersion.xprv, hd44Xpub = HDVersion.xpub, xpriv = hdWalelt.getExtendedPrivateKey(Purpose.bip44, coinType, hd44Xprv), xpub = hdWalelt.getExtendedPublicKey(Purpose.bip44, coinType, hd44Xpub), account44 = new BTCAccount({
            type: BTCAccountType.BIP44,
            privateKey: this.privateKey,
            publicKey: this.publicKey,
            derivationPath: "m/44'/236'/0'/0/0",
            address: this.address,
            accountExtendedPrivateKey: xpriv,
            accountExtendedPublicKey: xpub,
            accountFormat: "BIP44",
            wipPrivateKey: this.wipPrivateKey
          });
          this.chainAccounts = [ account44 ];
        }
      }, {
        key: "extendBitcoinInfo",
        value: (_extendBitcoinInfo = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(hdWalelt, coinType, wasm, mnemonic, accountPosition) {
          var CoinType, HDVersion, Purpose, CoinTypeExt, Blockchain, blockchain, _CoinType$litecoin, _CoinType$dogecoin, _CoinType$litecoin2, _CoinType$bitcoinCash, networkFlag, dp44, dp49, dp84, dp86, priv44, priv49, priv84, priv86, pub44, pub49, pub84, pub86, addrstr44, addrStr49, addrStr84, hd44Xprv, hd44Xpub, xpriv, xpub, hd49Xprv, hd49Xpub, xpriv49, xpub49, xpriv84, xpub84, xpriv86, xpub86, _yield$Promise$all, _yield$Promise$all2, wipPrivateKey44, wipPrivateKey49, wipPrivateKey84, account44, account49, account84, account86, _wallet, pathParam, path, param, wifPriv86, addrStr86, twallet, tparam, _wifPriv, _addrStr, list, _yield$Promise$all3, _yield$Promise$all4, isHave49, isHave84, isHave86, addrCash, accountCash;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              if (CoinType = wasm.CoinType, HDVersion = wasm.HDVersion, Purpose = wasm.Purpose, 
              CoinTypeExt = wasm.CoinTypeExt, Blockchain = wasm.Blockchain, (blockchain = CoinTypeExt.blockchain(coinType)) != Blockchain.bitcoin && blockchain != Blockchain.bitcoinTestnet && blockchain != Blockchain.bitcoinCash) {
                _context3.next = 98;
                break;
              }
              return networkFlag = (networkFlag = (networkFlag = CoinTypeExt.derivationPath(coinType)).split("/")[2]).replace(/[']/g, ""), 
              dp44 = "m/44'/".concat(networkFlag, "'/0'/0/0"), dp49 = "m/49'/".concat(networkFlag, "'/0'/0/0"), 
              dp84 = "m/84'/".concat(networkFlag, "'/0'/0/0"), dp86 = "m/86'/".concat(networkFlag, "'/0'/0/0"), 
              priv44 = hdWalelt.getKey(coinType, dp44), priv49 = hdWalelt.getKey(coinType, dp49), 
              priv84 = hdWalelt.getKey(coinType, dp84), priv86 = hdWalelt.getKey(coinType, dp86), 
              pub44 = priv44.getPublicKeySecp256k1(!0), pub49 = priv49.getPublicKeySecp256k1(!0), 
              pub84 = priv84.getPublicKeySecp256k1(!0), pub86 = priv86.getPublicKeySecp256k1(!0), 
              addrstr44 = this.generateBIP44Address(pub44, coinType, wasm), addrStr49 = this.generateBIP49Address(pub49, coinType, wasm), 
              addrStr84 = this.generateBIP84Address(pub84, coinType, wasm), hd44Xprv = HDVersion.xprv, 
              hd44Xpub = HDVersion.xpub, (null == coinType ? void 0 : coinType.value) == (null === (_CoinType$litecoin = CoinType.litecoin) || void 0 === _CoinType$litecoin ? void 0 : _CoinType$litecoin.value) ? (hd44Xprv = HDVersion.ltpv, 
              hd44Xpub = HDVersion.ltub) : (null == coinType ? void 0 : coinType.value) == (null === (_CoinType$dogecoin = CoinType.dogecoin) || void 0 === _CoinType$dogecoin ? void 0 : _CoinType$dogecoin.value) && (hd44Xprv = HDVersion.dgpv, 
              hd44Xpub = HDVersion.dgub), xpriv = hdWalelt.getExtendedPrivateKey(Purpose.bip44, coinType, hd44Xprv), 
              xpub = hdWalelt.getExtendedPublicKey(Purpose.bip44, coinType, hd44Xpub), hd49Xprv = HDVersion.yprv, 
              hd49Xpub = HDVersion.ypub, (null == coinType ? void 0 : coinType.value) == (null === (_CoinType$litecoin2 = CoinType.litecoin) || void 0 === _CoinType$litecoin2 ? void 0 : _CoinType$litecoin2.value) && (hd49Xprv = HDVersion.mtpv, 
              hd49Xpub = HDVersion.mtub), xpriv49 = hdWalelt.getExtendedPrivateKey(Purpose.bip49, coinType, hd49Xprv), 
              xpub49 = hdWalelt.getExtendedPublicKey(Purpose.bip49, coinType, hd49Xpub), xpriv84 = hdWalelt.getExtendedPrivateKey(Purpose.bip84, coinType, HDVersion.zprv), 
              xpub84 = hdWalelt.getExtendedPublicKey(Purpose.bip84, coinType, HDVersion.zpub), 
              xpriv86 = hdWalelt.getExtendedPrivateKey({
                value: 86
              }, coinType, HDVersion.xprv), xpub86 = hdWalelt.getExtendedPublicKey({
                value: 86
              }, coinType, HDVersion.xpub), _context3.next = 37, Promise.all([ (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv44.data()), coinType), (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv49.data()), coinType), (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv84.data()), coinType) ]);

             case 37:
              if (_yield$Promise$all = _context3.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3), 
              wipPrivateKey44 = _yield$Promise$all2[0], wipPrivateKey49 = _yield$Promise$all2[1], 
              wipPrivateKey84 = _yield$Promise$all2[2], account44 = new BTCAccount({
                type: BTCAccountType.BIP44,
                privateKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv44.data()),
                publicKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub44.data()),
                derivationPath: dp44,
                address: addrstr44,
                accountExtendedPrivateKey: xpriv,
                accountExtendedPublicKey: xpub,
                accountFormat: "BIP44",
                wipPrivateKey: wipPrivateKey44
              }), account49 = new BTCAccount({
                type: BTCAccountType.BIP49,
                privateKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv49.data()),
                publicKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub49.data()),
                derivationPath: dp49,
                address: addrStr49,
                accountExtendedPrivateKey: xpriv49,
                accountExtendedPublicKey: xpub49,
                accountFormat: "BIP49",
                wipPrivateKey: wipPrivateKey49
              }), account84 = new BTCAccount({
                type: BTCAccountType.BIP84,
                privateKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv84.data()),
                publicKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub84.data()),
                derivationPath: dp84,
                address: addrStr84,
                accountExtendedPrivateKey: xpriv84,
                accountExtendedPublicKey: xpub84,
                accountFormat: "BIP84",
                wipPrivateKey: wipPrivateKey84
              }), coinType.value != CoinType.bitcoin.value) {
                _context3.next = 59;
                break;
              }
              return _wallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_48__.BtcWallet, 
              pathParam = {
                index: accountPosition,
                segwitType: _okxweb3_coin_base__WEBPACK_IMPORTED_MODULE_49__.segwitType.SEGWIT_TAPROOT
              }, _context3.next = 50, _wallet.getDerivedPath(pathParam);

             case 50:
              return path = _context3.sent, param = {
                mnemonic,
                hdPath: path
              }, _context3.next = 54, _wallet.getDerivedPrivateKey(param);

             case 54:
              return wifPriv86 = _context3.sent, _context3.next = 57, this.generateBIP86Address(wifPriv86);

             case 57:
              addrStr86 = _context3.sent, account86 = new BTCAccount({
                type: BTCAccountType.BIP86,
                privateKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv86.data()),
                publicKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub86.data()),
                derivationPath: dp86,
                address: addrStr86,
                accountExtendedPrivateKey: xpriv86,
                accountExtendedPublicKey: xpub86,
                accountFormat: "BIP86",
                wipPrivateKey: wifPriv86
              });

             case 59:
              if (coinType.value != CoinType.bitcoinTestnet.value) {
                _context3.next = 69;
                break;
              }
              return twallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_48__.TBtcWallet, 
              tparam = {
                mnemonic,
                hdPath: dp86
              }, _context3.next = 64, twallet.getDerivedPrivateKey(tparam);

             case 64:
              return _wifPriv = _context3.sent, _context3.next = 67, this.generateBIP86Address(_wifPriv, !0);

             case 67:
              _addrStr = _context3.sent, account86 = new BTCAccount({
                type: BTCAccountType.BIP86,
                privateKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv86.data()),
                publicKey: (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub86.data()),
                derivationPath: dp86,
                address: _addrStr,
                accountExtendedPrivateKey: xpriv86,
                accountExtendedPublicKey: xpub86,
                accountFormat: "BIP86",
                wipPrivateKey: _wifPriv
              });

             case 69:
              return (list = []).push(account44), _context3.next = 73, Promise.all([ this.haveBip49Address(coinType, CoinType), this.haveBip84Address(coinType, CoinType), this.haveBip86Address(coinType, CoinType) ]);

             case 73:
              if (_yield$Promise$all3 = _context3.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 3), 
              isHave49 = _yield$Promise$all4[0], isHave84 = _yield$Promise$all4[1], isHave86 = _yield$Promise$all4[2], 
              isHave49 && list.push(account49), isHave84 && list.push(account84), isHave86 && list.push(account86), 
              (null == coinType ? void 0 : coinType.value) != (null === (_CoinType$bitcoinCash = CoinType.bitcoinCash) || void 0 === _CoinType$bitcoinCash ? void 0 : _CoinType$bitcoinCash.value)) {
                _context3.next = 97;
                break;
              }
              return addrCash = this.generateCashAddress(pub44, wasm), _context3.t0 = BTCAccount, 
              _context3.t1 = BTCAccountType.CashAddr, _context3.t2 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv44.data()), 
              _context3.t3 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub44.data()), _context3.t4 = addrCash, 
              _context3.t5 = dp44, _context3.t6 = xpriv, _context3.t7 = xpub, _context3.next = 93, 
              (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv44.data()), coinType);

             case 93:
              _context3.t8 = _context3.sent, _context3.t9 = {
                type: _context3.t1,
                privateKey: _context3.t2,
                publicKey: _context3.t3,
                address: _context3.t4,
                derivationPath: _context3.t5,
                accountExtendedPrivateKey: _context3.t6,
                accountExtendedPublicKey: _context3.t7,
                accountFormat: "CashAddr",
                wipPrivateKey: _context3.t8
              }, accountCash = new _context3.t0(_context3.t9), list.push(accountCash);

             case 97:
              this.chainAccounts = list;

             case 98:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3, _x4, _x5, _x6, _x7) {
          return _extendBitcoinInfo.apply(this, arguments);
        })
      }, {
        key: "haveBip49Address",
        value: (_haveBip49Address = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(coinType, CoinType) {
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              _context4.t0 = coinType.value, _context4.next = _context4.t0 === CoinType.dogecoin.value || _context4.t0 === CoinType.dash.value || _context4.t0 === CoinType.litecoin.value || _context4.t0 === CoinType.bitcoinCash.value || _context4.t0 === CoinType.turingBitChain.value ? 3 : 4;
              break;

             case 3:
              return _context4.abrupt("return", !1);

             case 4:
              return _context4.abrupt("return", !0);

             case 5:
             case "end":
              return _context4.stop();
            }
          }), _callee4);
        }))), function(_x8, _x9) {
          return _haveBip49Address.apply(this, arguments);
        })
      }, {
        key: "haveBip84Address",
        value: (_haveBip84Address = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(coinType, CoinType) {
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              _context5.t0 = coinType.value, _context5.next = _context5.t0 === CoinType.dogecoin.value || _context5.t0 === CoinType.bitcoinCash.value || _context5.t0 === CoinType.dash.value || _context5.t0 === CoinType.turingBitChain.value ? 3 : 4;
              break;

             case 3:
              return _context5.abrupt("return", !1);

             case 4:
              return _context5.abrupt("return", !0);

             case 5:
             case "end":
              return _context5.stop();
            }
          }), _callee5);
        }))), function(_x10, _x11) {
          return _haveBip84Address.apply(this, arguments);
        })
      }, {
        key: "haveBip86Address",
        value: (_haveBip86Address = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(coinType, CoinType) {
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              _context6.t0 = coinType.value, _context6.next = _context6.t0 === CoinType.bitcoin.value ? 3 : _context6.t0 === CoinType.bitcoinTestnet.value ? 4 : 5;
              break;

             case 3:
             case 4:
              return _context6.abrupt("return", !0);

             case 5:
              return _context6.abrupt("return", !1);

             case 6:
             case "end":
              return _context6.stop();
            }
          }), _callee6);
        }))), function(_x12, _x13) {
          return _haveBip86Address.apply(this, arguments);
        })
      }, {
        key: "createSubAccount",
        value: (_createSubAccount = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(coinType, priv, wasm, format, wifPriv) {
          var CoinType, Blockchain, CoinTypeExt, blockchain, pub, address, account;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              if (CoinType = wasm.CoinType, Blockchain = wasm.Blockchain, CoinTypeExt = wasm.CoinTypeExt, 
              (blockchain = CoinTypeExt.blockchain(coinType)) != Blockchain.bitcoin && blockchain != Blockchain.bitcoinTestnet && blockchain != Blockchain.bitcoinCash) {
                _context7.next = 32;
                break;
              }
              pub = priv.getPublicKeySecp256k1(!0), _context7.t0 = format, _context7.next = "BIP44" === _context7.t0 ? 7 : "BIP49" === _context7.t0 ? 9 : "BIP84" === _context7.t0 ? 11 : "BIP86" === _context7.t0 ? 13 : "CashAddr" === _context7.t0 ? 17 : 18;
              break;

             case 7:
              return address = this.generateBIP44Address(pub, coinType, wasm), _context7.abrupt("break", 18);

             case 9:
              return address = this.generateBIP49Address(pub, coinType, wasm), _context7.abrupt("break", 18);

             case 11:
              return address = this.generateBIP84Address(pub, coinType, wasm), _context7.abrupt("break", 18);

             case 13:
              return _context7.next = 15, this.generateBIP86Address(wifPriv, coinType.value == CoinType.bitcoinTestnet.value);

             case 15:
              return address = _context7.sent, _context7.abrupt("break", 18);

             case 17:
              address = this.generateCashAddress(pub, wasm);

             case 18:
              return _context7.t1 = BTCAccount, _context7.t2 = BTCAccountType[format], _context7.t3 = (0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context7.t4 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub.data()), 
              _context7.t5 = address, _context7.t6 = format, _context7.next = 26, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), coinType);

             case 26:
              _context7.t7 = _context7.sent, _context7.t8 = {
                type: _context7.t2,
                privateKey: _context7.t3,
                publicKey: _context7.t4,
                address: _context7.t5,
                accountFormat: _context7.t6,
                wipPrivateKey: _context7.t7
              }, account = new _context7.t1(_context7.t8), this.chainAccounts = [].concat(_toConsumableArray(this.chainAccounts), [ account ]), 
              _context7.next = 32;
              break;

             case 32:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x14, _x15, _x16, _x17, _x18) {
          return _createSubAccount.apply(this, arguments);
        })
      }, {
        key: "extendBitcoinInfoByPrivateKey",
        value: (_extendBitcoinInfoByPrivateKey = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(coinType, priv, wasm) {
          var _priv$getPublicKey, CoinType, CoinTypeExt, Blockchain, blockchain, _CoinType$bitcoinCash2, pub, addrstr44, addrStr49, addrStr84, account44, account49, account84, account86, wipPriv86, wipPrivKey86, addrStr86, _wipPriv, _wipPrivKey, _addrStr2, list, addrCash, accountCash;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              if (CoinType = wasm.CoinType, CoinTypeExt = wasm.CoinTypeExt, Blockchain = wasm.Blockchain, 
              wasm.AnyAddress, blockchain = CoinTypeExt.blockchain(coinType), null === (_priv$getPublicKey = priv.getPublicKey(coinType)) || void 0 === _priv$getPublicKey || _priv$getPublicKey.data(), 
              blockchain != Blockchain.bitcoin && blockchain != Blockchain.bitcoinTestnet && blockchain != Blockchain.bitcoinCash) {
                _context8.next = 102;
                break;
              }
              return pub = priv.getPublicKeySecp256k1(!0), addrstr44 = this.generateBIP44Address(pub, coinType, wasm), 
              addrStr49 = this.generateBIP49Address(pub, coinType, wasm), addrStr84 = this.generateBIP84Address(pub, coinType, wasm), 
              _context8.t0 = BTCAccount, _context8.t1 = BTCAccountType.BIP44, _context8.t2 = (0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context8.t3 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub.data()), 
              _context8.t4 = addrstr44, _context8.next = 15, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), coinType);

             case 15:
              return _context8.t5 = _context8.sent, _context8.t6 = {
                type: _context8.t1,
                privateKey: _context8.t2,
                publicKey: _context8.t3,
                address: _context8.t4,
                accountFormat: "BIP44",
                wipPrivateKey: _context8.t5
              }, account44 = new _context8.t0(_context8.t6), _context8.t7 = BTCAccount, _context8.t8 = BTCAccountType.BIP49, 
              _context8.t9 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context8.t10 = (0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub.data()), _context8.t11 = addrStr49, 
              _context8.next = 25, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), coinType);

             case 25:
              return _context8.t12 = _context8.sent, _context8.t13 = {
                type: _context8.t8,
                privateKey: _context8.t9,
                publicKey: _context8.t10,
                address: _context8.t11,
                accountFormat: "BIP49",
                wipPrivateKey: _context8.t12
              }, account49 = new _context8.t7(_context8.t13), _context8.t14 = BTCAccount, _context8.t15 = BTCAccountType.BIP84, 
              _context8.t16 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context8.t17 = (0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub.data()), _context8.t18 = addrStr84, 
              _context8.next = 35, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), coinType);

             case 35:
              if (_context8.t19 = _context8.sent, _context8.t20 = {
                type: _context8.t15,
                privateKey: _context8.t16,
                publicKey: _context8.t17,
                address: _context8.t18,
                accountFormat: "BIP84",
                wipPrivateKey: _context8.t19
              }, account84 = new _context8.t14(_context8.t20), coinType.value != CoinType.bitcoin.value) {
                _context8.next = 56;
                break;
              }
              return wipPriv86 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context8.next = 42, 
              (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)(wipPriv86, coinType);

             case 42:
              return wipPrivKey86 = _context8.sent, _context8.next = 45, this.generateBIP86Address(wipPrivKey86);

             case 45:
              return addrStr86 = _context8.sent, _context8.t21 = BTCAccount, _context8.t22 = BTCAccountType.BIP84, 
              _context8.t23 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context8.t24 = (0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub.data()), _context8.t25 = addrStr86, 
              _context8.next = 53, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), coinType);

             case 53:
              _context8.t26 = _context8.sent, _context8.t27 = {
                type: _context8.t22,
                privateKey: _context8.t23,
                publicKey: _context8.t24,
                address: _context8.t25,
                accountFormat: "BIP86",
                wipPrivateKey: _context8.t26
              }, account86 = new _context8.t21(_context8.t27);

             case 56:
              if (coinType.value != CoinType.bitcoinTestnet.value) {
                _context8.next = 74;
                break;
              }
              return _wipPriv = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context8.next = 60, 
              (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)(_wipPriv, coinType);

             case 60:
              return _wipPrivKey = _context8.sent, _context8.next = 63, this.generateBIP86Address(_wipPrivKey, !0);

             case 63:
              return _addrStr2 = _context8.sent, _context8.t28 = BTCAccount, _context8.t29 = BTCAccountType.BIP84, 
              _context8.t30 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), _context8.t31 = (0, 
              _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub.data()), _context8.t32 = _addrStr2, 
              _context8.next = 71, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), coinType);

             case 71:
              _context8.t33 = _context8.sent, _context8.t34 = {
                type: _context8.t29,
                privateKey: _context8.t30,
                publicKey: _context8.t31,
                address: _context8.t32,
                accountFormat: "BIP86",
                wipPrivateKey: _context8.t33
              }, account86 = new _context8.t28(_context8.t34);

             case 74:
              return (list = []).push(account44), _context8.next = 78, this.haveBip49Address(coinType, CoinType);

             case 78:
              return _context8.sent && list.push(account49), _context8.next = 82, this.haveBip84Address(coinType, CoinType);

             case 82:
              return _context8.sent && list.push(account84), _context8.next = 86, this.haveBip86Address(coinType, CoinType);

             case 86:
              if (_context8.sent && list.push(account86), (null == coinType ? void 0 : coinType.value) != (null === (_CoinType$bitcoinCash2 = CoinType.bitcoinCash) || void 0 === _CoinType$bitcoinCash2 ? void 0 : _CoinType$bitcoinCash2.value)) {
                _context8.next = 101;
                break;
              }
              return addrCash = this.generateCashAddress(pub, wasm), _context8.t35 = BTCAccount, 
              _context8.t36 = BTCAccountType.CashAddr, _context8.t37 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), 
              _context8.t38 = (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(pub.data()), _context8.t39 = addrCash, 
              _context8.next = 97, (0, _wallet__WEBPACK_IMPORTED_MODULE_47__.j7)((0, _wallet__WEBPACK_IMPORTED_MODULE_47__.U5)(priv.data()), coinType);

             case 97:
              _context8.t40 = _context8.sent, _context8.t41 = {
                type: _context8.t36,
                privateKey: _context8.t37,
                publicKey: _context8.t38,
                address: _context8.t39,
                accountFormat: "CashAddr",
                wipPrivateKey: _context8.t40
              }, accountCash = new _context8.t35(_context8.t41), list.push(accountCash);

             case 101:
              this.chainAccounts = list;

             case 102:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x19, _x20, _x21) {
          return _extendBitcoinInfoByPrivateKey.apply(this, arguments);
        })
      }, {
        key: "generateBIP44Address",
        value: function(pub, coinType, wasm) {
          var CoinTypeExt = wasm.CoinTypeExt, BitcoinAddress = wasm.BitcoinAddress, prefix = CoinTypeExt.p2pkhPrefix(coinType);
          return BitcoinAddress.createWithPublicKey(pub, prefix).description();
        }
      }, {
        key: "generateBIP49Address",
        value: function(publicKey, coinType, wasm) {
          var Hash = wasm.Hash, BitcoinScript = wasm.BitcoinScript, CoinTypeExt = wasm.CoinTypeExt, Base58 = wasm.Base58, publicKeyHash = Hash.sha256RIPEMD(publicKey.data()), script = BitcoinScript.buildPayToWitnessPubkeyHash(publicKeyHash), scriptHash = Hash.sha256RIPEMD(script.data()), prefix = CoinTypeExt.p2shPrefix(coinType), data = [], scriptHashArr = Array.from(scriptHash);
          return data = data.concat([ prefix ]).concat(scriptHashArr), Base58.encode(new Uint8Array(data).buffer);
        }
      }, {
        key: "generateBIP84Address",
        value: function(pub, coinType, wasm) {
          var CoinTypeExt = wasm.CoinTypeExt, SegwitAddress = wasm.SegwitAddress, type = (wasm.HRP, 
          CoinTypeExt.hrp(coinType));
          return SegwitAddress.createWithPublicKey(type, pub).description();
        }
      }, {
        key: "generateBIP86Address",
        value: (_generateBIP86Address = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(privateKey, isTest) {
          var params, address, _address, _address2, _address3;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              if (_context9.prev = 0, params = {
                privateKey,
                addressType: "segwit_taproot"
              }, address = "", !isTest) {
                _context9.next = 9;
                break;
              }
              return _context9.next = 6, Twallet.getNewAddress(params);

             case 6:
              address = _context9.sent, _context9.next = 12;
              break;

             case 9:
              return _context9.next = 11, wallet.getNewAddress(params);

             case 11:
              address = _context9.sent;

             case 12:
              return _address = JSON.parse(JSON.stringify(address)), address && "{}" != JSON.stringify(address) && null !== (_address2 = address) && void 0 !== _address2 && _address2.address && (_address = null === (_address3 = address) || void 0 === _address3 ? void 0 : _address3.address), 
              _context9.abrupt("return", _address);

             case 17:
              return _context9.prev = 17, _context9.t0 = _context9.catch(0), _context9.abrupt("return", "");

             case 20:
             case "end":
              return _context9.stop();
            }
          }), _callee9, null, [ [ 0, 17 ] ]);
        }))), function(_x22, _x23) {
          return _generateBIP86Address.apply(this, arguments);
        })
      }, {
        key: "generateCashAddress",
        value: function(pub, wasm) {
          var AnyAddress = wasm.AnyAddress, CoinType = wasm.CoinType, cashAddrWithoutPrefix = AnyAddress.createWithPublicKey(pub, CoinType.bitcoinCash).description();
          return cashAddrWithoutPrefix.startsWith("bitcoincash:") && (cashAddrWithoutPrefix = cashAddrWithoutPrefix.substring(12)), 
          cashAddrWithoutPrefix;
        }
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), PYAccountModel;
    }();
  },
  266895: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      ok: () => COSMOS_INFO,
      s6: () => COSMOS_CHAINID_TO_NETWORK_MAP
    });
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(407899), 
    __webpack_require__(990345), __webpack_require__(259581);
    var _Object$values, COSMOS_INFO = {
      SEI: {
        chainId: "pacific-1",
        chainName: "Sei",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/pacific/chain.png",
        bip44: {
          coinType: 118
        },
        stakeCurrency: {
          coinDenom: "SEI",
          coinMinimalDenom: "usei",
          coinDecimals: 6
        },
        bech32Config: {
          bech32PrefixAccAddr: "sei",
          bech32PrefixAccPub: "seipub",
          bech32PrefixValAddr: "seivaloper",
          bech32PrefixValPub: "seivaloperpub",
          bech32PrefixConsAddr: "seivalcons",
          bech32PrefixConsPub: "seivalconspub"
        },
        currencies: [ {
          coinDenom: "SEI",
          coinMinimalDenom: "usei",
          coinDecimals: 6
        }, {
          coinDenom: "WETH",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/4tLQqCLaoKKfNFuPjA9o39YbKUwhR1F8N29Tz3hEbfP2",
          coinDecimals: 8,
          coinGeckoId: "weth"
        }, {
          coinDenom: "USDCet",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/Hq4tuDzhRBnxw3tFA5n6M52NVMVcC19XggbyDiJKCD6H",
          coinDecimals: 6,
          coinGeckoId: "usd-coin"
        }, {
          coinDenom: "USDTet",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/HktfLoADCk9mnjv7XJiN4YXK9ayE6xinLzt8wzcsR2rY",
          coinDecimals: 6,
          coinGeckoId: "tether"
        }, {
          coinDenom: "WBTC",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/7omXa4gryZ5NiBmLep7JsTtTtANCVKXwT9vbN91aS1br",
          coinDecimals: 8,
          coinGeckoId: "bitcoin"
        }, {
          coinDenom: "USDCar",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/7edDfnf4mku8So3t4Do215GNHwASEwCWrdhM5GqD51xZ",
          coinDecimals: 6,
          coinGeckoId: "usd-coin"
        }, {
          coinDenom: "WETHar",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/9hJDBDaxqQQhF5HhaPUykeLncBa38XQ5uoNxN3tPQu5r",
          coinDecimals: 8,
          coinGeckoId: "weth"
        }, {
          coinDenom: "USDCpo",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/DUVFMY2neJdL8aE4d3stcpttDDm5aoyfGyVvm29iA9Yp",
          coinDecimals: 6,
          coinGeckoId: "usd-coin"
        }, {
          coinDenom: "USDCop",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/3VKKYtbQ9iq8f9CaZfgR6Cr3TUj6ypXPAn6kco6wjcAu",
          coinDecimals: 6,
          coinGeckoId: "usd-coin"
        }, {
          coinDenom: "USDCso",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/9fELvUhFo6yWL34ZaLgPbCPzdk9MD1tAzMycgH45qShH",
          coinDecimals: 6,
          coinGeckoId: "usd-coin"
        }, {
          coinDenom: "USDCbs",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/3Ri4N719RQfQaudHiB9CMCYACtK3aieoz1q1Ph24VdAb",
          coinDecimals: 8,
          coinGeckoId: "usd-coin"
        }, {
          coinDenom: "WETHbs",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/9tTHn18vLnfyBvrQaia6N15zwrfRCAebZDshoPZ39ahN",
          coinDecimals: 8,
          coinGeckoId: "weth"
        }, {
          coinDenom: "USDTbs",
          coinMinimalDenom: "factory/sei189adguawugk3e55zn63z8r9ll29xrjwca636ra7v7gxuzn98sxyqwzt47l/871jbn9unTavWsAe83f2Ma9GJWSv6BKsyWYLiQ6z3Pva",
          coinDecimals: 8,
          coinGeckoId: "tether"
        } ],
        feeCurrencies: [ {
          coinDenom: "SEI",
          coinMinimalDenom: "usei",
          coinDecimals: 6,
          gasPriceStep: {
            low: .1,
            average: .2,
            high: .3
          }
        } ],
        beta: !0,
        features: [ "ibc-go", "ibc-transfer", "query:/cosmos/bank/v1beta1/spendable_balances" ]
      },
      SEI_GATETEST: {
        bech32Config: {
          bech32PrefixAccAddr: "sei",
          bech32PrefixAccPub: "seipub",
          bech32PrefixConsAddr: "seivalcons",
          bech32PrefixConsPub: "seivalconspub",
          bech32PrefixValAddr: "seivaloper",
          bech32PrefixValPub: "seivaloperpub"
        },
        beta: !0,
        bip44: {
          coinType: 118
        },
        chainId: "atlantic-2",
        chainName: "Sei Testnet",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/atlantic/chain.png",
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "SEI",
          coinMinimalDenom: "usei"
        } ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "SEI",
          coinMinimalDenom: "usei",
          gasPriceStep: {
            average: .2,
            high: .3,
            low: .1
          }
        } ],
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "SEI",
          coinMinimalDenom: "usei"
        },
        features: [ "ibc-go", "ibc-transfer", "query:/cosmos/bank/v1beta1/spendable_balances" ]
      },
      NUB_GATETEST: {
        chainId: "nubit-alphatestnet-1",
        chainName: "Nubit Alpha Testnet",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/nubit-alphatestnet/chain.png",
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "nubit",
          bech32PrefixAccPub: "nubitpub",
          bech32PrefixValAddr: "nubitvaloper",
          bech32PrefixValPub: "nubitvaloperpub",
          bech32PrefixConsAddr: "nubitvalcons",
          bech32PrefixConsPub: "nubitvalconspub"
        },
        currencies: [ {
          coinDenom: "NUB",
          coinMinimalDenom: "unub",
          coinDecimals: 6
        } ],
        feeCurrencies: [ {
          coinDenom: "NUB",
          coinMinimalDenom: "unub",
          coinDecimals: 6,
          gasPriceStep: {
            low: .01,
            average: .02,
            high: .1
          }
        } ],
        stakeCurrency: {
          coinDenom: "NUB",
          coinMinimalDenom: "unub",
          coinDecimals: 6
        },
        features: [ "ibc-go", "ibc-transfer", "query:/cosmos/bank/v1beta1/spendable_balances" ],
        beta: !0
      },
      NIBI: {
        chainId: "cataclysm-1",
        chainName: "Nibiru",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cataclysm/chain.png",
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "nibi",
          bech32PrefixAccPub: "nibipub",
          bech32PrefixValAddr: "nibivaloper",
          bech32PrefixValPub: "nibivaloperpub",
          bech32PrefixConsAddr: "nibivalcons",
          bech32PrefixConsPub: "nibivalconspub"
        },
        currencies: [ {
          coinDenom: "NIBI",
          coinMinimalDenom: "unibi",
          coinDecimals: 6,
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cataclysm/chain.png"
        } ],
        feeCurrencies: [ {
          coinDenom: "NIBI",
          coinMinimalDenom: "unibi",
          coinDecimals: 6,
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cataclysm/chain.png",
          gasPriceStep: {
            low: .025,
            average: .05,
            high: .1
          }
        } ],
        stakeCurrency: {
          coinDenom: "NIBI",
          coinMinimalDenom: "unibi",
          coinDecimals: 6,
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cataclysm/chain.png"
        },
        features: [ "ibc-go", "ibc-transfer", "wasmd_0.24+", "query:/cosmos/bank/v1beta1/spendable_balances", "cosmwasm" ],
        beta: !0
      },
      ATOM: {
        chainId: "cosmoshub-4",
        chainName: "Cosmos Hub",
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "ATOM",
          coinGeckoId: "cosmos",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cosmoshub/uatom.png",
          coinMinimalDenom: "uatom"
        },
        walletUrl: "https://wallet.keplr.app/chains/cosmos-hub",
        walletUrlForStaking: "https://wallet.keplr.app/chains/cosmos-hub",
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "cosmos",
          bech32PrefixAccPub: "cosmospub",
          bech32PrefixConsAddr: "cosmosvalcons",
          bech32PrefixConsPub: "cosmosvalconspub",
          bech32PrefixValAddr: "cosmosvaloper",
          bech32PrefixValPub: "cosmosvaloperpub"
        },
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "ATOM",
          coinGeckoId: "cosmos",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cosmoshub/uatom.png",
          coinMinimalDenom: "uatom"
        } ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "ATOM",
          coinGeckoId: "cosmos",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cosmoshub/uatom.png",
          coinMinimalDenom: "uatom",
          gasPriceStep: {
            average: .025,
            high: .03,
            low: .005
          }
        } ],
        features: [ "feemarket", "ibc-pfm", "query:/cosmos/bank/v1beta1/spendable_balances", "ibc-transfer", "ibc-go" ],
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/cosmoshub/chain.png"
      },
      TIA: {
        chainId: "celestia",
        chainName: "Celestia",
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "TIA",
          coinGeckoId: "celestia",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/celestia/utia.png",
          coinMinimalDenom: "utia"
        },
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "celestia",
          bech32PrefixAccPub: "celestiapub",
          bech32PrefixConsAddr: "celestiavalcons",
          bech32PrefixConsPub: "celestiavalconspub",
          bech32PrefixValAddr: "celestiavaloper",
          bech32PrefixValPub: "celestiavaloperpub"
        },
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "TIA",
          coinGeckoId: "celestia",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/celestia/chain.png",
          coinMinimalDenom: "utia"
        } ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "TIA",
          coinGeckoId: "celestia",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/celestia/chain.png",
          coinMinimalDenom: "utia",
          gasPriceStep: {
            average: .02,
            high: .1,
            low: .01
          }
        } ],
        features: [ "ibc-pfm", "ibc-go", "ibc-transfer", "query:/cosmos/bank/v1beta1/spendable_balances" ],
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/celestia/chain.png",
        walletUrlForStaking: "https://wallet.keplr.app/chains/celestia"
      },
      XION: {
        chainId: "xion-mainnet-1",
        chainName: "XION",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-mainnet/chain.png",
        walletUrlForStaking: "https://wallet.keplr.app/chains/xion",
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "XION",
          coinGeckoId: "xion-2",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-mainnet/chain.png",
          coinMinimalDenom: "uxion"
        },
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "xion",
          bech32PrefixAccPub: "xionpub",
          bech32PrefixConsAddr: "xionvalcons",
          bech32PrefixConsPub: "xionvalconspub",
          bech32PrefixValAddr: "xionvaloper",
          bech32PrefixValPub: "xionvaloperpub"
        },
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "XION",
          coinGeckoId: "xion-2",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-mainnet/chain.png",
          coinMinimalDenom: "uxion"
        } ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "XION",
          coinGeckoId: "xion-2",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-mainnet/chain.png",
          coinMinimalDenom: "uxion",
          gasPriceStep: {
            average: .001,
            high: .002,
            low: 5e-4
          }
        } ],
        features: [ "ibc-go", "ibc-transfer", "ibc-pfm", "wasmd_0.24+", "query:/cosmos/bank/v1beta1/spendable_balances", "cosmwasm" ]
      },
      XION_GATETEST: {
        chainId: "xion-testnet-1",
        chainName: "Xion Testnet",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-testnet/chain.png",
        stakeCurrency: {
          coinDenom: "XION",
          coinMinimalDenom: "uxion",
          coinDecimals: 6,
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-testnet/chain.png"
        },
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "xion",
          bech32PrefixAccPub: "xionpub",
          bech32PrefixValAddr: "xionvaloper",
          bech32PrefixValPub: "xionvaloperpub",
          bech32PrefixConsAddr: "xionvalcons",
          bech32PrefixConsPub: "xionvalconspub"
        },
        currencies: [ {
          coinDenom: "XION",
          coinMinimalDenom: "uxion",
          coinDecimals: 6,
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-testnet/chain.png"
        } ],
        feeCurrencies: [ {
          coinDenom: "XION",
          coinMinimalDenom: "uxion",
          coinDecimals: 6,
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/xion-testnet/chain.png",
          gasPriceStep: {
            low: .005,
            average: .01,
            high: .02
          }
        } ],
        features: [ "ibc-go", "ibc-transfer", "ibc-pfm", "wasmd_0.24+", "cosmwasm" ],
        beta: !0
      },
      SAGA: {
        chainId: "ssc-1",
        chainName: "Saga",
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "SAGA",
          coinGeckoId: "saga-2",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/ssc/chain.png",
          coinMinimalDenom: "usaga"
        },
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "saga",
          bech32PrefixAccPub: "sagapub",
          bech32PrefixConsAddr: "sagavalcons",
          bech32PrefixConsPub: "sagavalconspub",
          bech32PrefixValAddr: "sagavaloper",
          bech32PrefixValPub: "sagavaloperpub"
        },
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "SAGA",
          coinGeckoId: "saga-2",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/ssc/chain.png",
          coinMinimalDenom: "usaga"
        } ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "SAGA",
          coinGeckoId: "saga-2",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/ssc/chain.png",
          coinMinimalDenom: "usaga",
          gasPriceStep: {
            average: .025,
            high: .04,
            low: .01
          }
        } ],
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/ssc/chain.png",
        walletUrlForStaking: "https://wallet.keplr.app/chains/saga",
        features: [ "ibc-go", "ibc-transfer", "query:/cosmos/bank/v1beta1/spendable_balances" ]
      },
      OSMO: {
        chainId: "osmosis-1",
        chainName: "Osmosis",
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "OSMO",
          coinGeckoId: "osmosis",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/uosmo.png",
          coinMinimalDenom: "uosmo"
        },
        walletUrl: "https://app.osmosis.zone",
        walletUrlForStaking: "https://wallet.keplr.app/chains/osmosis",
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "osmo",
          bech32PrefixAccPub: "osmopub",
          bech32PrefixConsAddr: "osmovalcons",
          bech32PrefixConsPub: "osmovalconspub",
          bech32PrefixValAddr: "osmovaloper",
          bech32PrefixValPub: "osmovaloperpub"
        },
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "OSMO",
          coinGeckoId: "osmosis",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/uosmo.png",
          coinMinimalDenom: "uosmo"
        }, {
          coinDecimals: 6,
          coinDenom: "ION",
          coinGeckoId: "ion",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/uion.png",
          coinMinimalDenom: "uion"
        }, {
          coinDecimals: 6,
          coinDenom: "IBCX",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo14klwqgkmackvx2tqa0trtg69dmy0nrg4ntq4gjgw2za4734r5seqjqm4gm/uibcx.png",
          coinMinimalDenom: "factory/osmo14klwqgkmackvx2tqa0trtg69dmy0nrg4ntq4gjgw2za4734r5seqjqm4gm/uibcx"
        }, {
          coinDecimals: 6,
          coinDenom: "stIBCX",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1xqw2sl9zk8a6pch0csaw78n4swg5ws8t62wc5qta4gnjxfqg6v2qcs243k/stuibcx.png",
          coinMinimalDenom: "factory/osmo1xqw2sl9zk8a6pch0csaw78n4swg5ws8t62wc5qta4gnjxfqg6v2qcs243k/stuibcx"
        }, {
          coinDecimals: 6,
          coinDenom: "LVN",
          coinGeckoId: "levana-protocol",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1mlng7pz4pnyxtpq0akfwall37czyk9lukaucsrn30ameplhhshtqdvfm5c/ulvn.png",
          coinMinimalDenom: "factory/osmo1mlng7pz4pnyxtpq0akfwall37czyk9lukaucsrn30ameplhhshtqdvfm5c/ulvn"
        }, {
          coinDecimals: 6,
          coinDenom: "MBRN",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/umbrn.png",
          coinMinimalDenom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/umbrn"
        }, {
          coinDecimals: 6,
          coinDenom: "CDT",
          coinGeckoId: "collateralized-debt-token",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/ucdt.png",
          coinMinimalDenom: "factory/osmo1s794h9rxggytja3a4pmwul53u98k06zy2qtrdvjnfuxruh7s8yjs6cyxgd/ucdt"
        }, {
          coinDecimals: 6,
          coinDenom: "milkTIA",
          coinGeckoId: "milkyway-staked-tia",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1f5vfcph2dvfeqcqkhetwv75fda69z7e5c2dldm3kvgj23crkv6wqcn47a0/milktia.png",
          coinMinimalDenom: "factory/osmo1f5vfcph2dvfeqcqkhetwv75fda69z7e5c2dldm3kvgj23crkv6wqcn47a0/umilkTIA"
        }, {
          coinDecimals: 6,
          coinDenom: "WOSMO",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO.png",
          coinMinimalDenom: "factory/osmo1pfyxruwvtwk00y8z06dh2lqjdj82ldvy74wzm3/WOSMO"
        }, {
          coinDecimals: 6,
          coinDenom: "SAIL",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1rckme96ptawr4zwexxj5g5gej9s2dmud8r2t9j0k0prn5mch5g4snzzwjv/sail.png",
          coinMinimalDenom: "factory/osmo1rckme96ptawr4zwexxj5g5gej9s2dmud8r2t9j0k0prn5mch5g4snzzwjv/sail"
        }, {
          coinDecimals: 6,
          coinDenom: "BADKID",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/badkid.png",
          coinMinimalDenom: "factory/osmo10n8rv8npx870l69248hnp6djy6pll2yuzzn9x8/BADKID"
        }, {
          coinDecimals: 8,
          coinDenom: "WBTC",
          coinGeckoId: "wrapped-bitcoin",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc.png",
          coinMinimalDenom: "factory/osmo1z0qrq605sjgcqpylfl4aa6s90x738j7m58wyatt0tdzflg2ha26q67k743/wbtc"
        }, {
          coinDecimals: 6,
          coinDenom: "YMOS",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1vdvnznwg597qngrq9mnfcfk0am9jdc9y446jewhcqdreqz4r75xq5j5zvy/ymos.png",
          coinMinimalDenom: "factory/osmo1vdvnznwg597qngrq9mnfcfk0am9jdc9y446jewhcqdreqz4r75xq5j5zvy/ymos"
        }, {
          coinDecimals: 6,
          coinDenom: "bOSMO",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1s3l0lcqc7tu0vpj6wdjz9wqpxv8nk6eraevje4fuwkyjnwuy82qsx3lduv/bOSMO.png",
          coinMinimalDenom: "factory/osmo1s3l0lcqc7tu0vpj6wdjz9wqpxv8nk6eraevje4fuwkyjnwuy82qsx3lduv/boneOsmo"
        }, {
          coinDecimals: 6,
          coinDenom: "LAB",
          coinGeckoId: "mad-scientists",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n/LAB.png",
          coinMinimalDenom: "factory/osmo17fel472lgzs87ekt9dvk0zqyh5gl80sqp4sk4n/LAB"
        }, {
          coinDecimals: 6,
          coinDenom: "TORO",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1nr8zfakf6jauye3uqa9lrmr5xumee5n42lv92z/toro.png",
          coinMinimalDenom: "factory/osmo1nr8zfakf6jauye3uqa9lrmr5xumee5n42lv92z/toro"
        }, {
          coinDecimals: 6,
          coinDenom: "BERNESE",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1s6ht8qrm8x0eg8xag5x3ckx9mse9g4se248yss/BERNESE.png",
          coinMinimalDenom: "factory/osmo1s6ht8qrm8x0eg8xag5x3ckx9mse9g4se248yss/BERNESE"
        }, {
          coinDecimals: 6,
          coinDenom: "USDT",
          coinGeckoId: "tether",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1em6xs47hd82806f5cxgyufguxrrc7l0aqx7nzzptjuqgswczk8csavdxek/alloyed/allUSDT.png",
          coinMinimalDenom: "factory/osmo1em6xs47hd82806f5cxgyufguxrrc7l0aqx7nzzptjuqgswczk8csavdxek/alloyed/allUSDT"
        }, {
          coinDecimals: 8,
          coinDenom: "BTC",
          coinGeckoId: "bitcoin",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1z6r6qdknhgsc0zeracktgpcxf43j6sekq07nw8sxduc9lg0qjjlqfu25e3/alloyed/allBTC.png",
          coinMinimalDenom: "factory/osmo1z6r6qdknhgsc0zeracktgpcxf43j6sekq07nw8sxduc9lg0qjjlqfu25e3/alloyed/allBTC"
        }, {
          coinDecimals: 12,
          coinDenom: "PEPE",
          coinGeckoId: "pepe",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1nnlxegt0scm9qkzys9c874t0ntapv4epfjy2w49c0xdrp3dr0v4ssmelzx/alloyed/allPEPE.png",
          coinMinimalDenom: "factory/osmo1nnlxegt0scm9qkzys9c874t0ntapv4epfjy2w49c0xdrp3dr0v4ssmelzx/alloyed/allPEPE"
        }, {
          coinDecimals: 18,
          coinDenom: "ETH",
          coinGeckoId: "ethereum",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1k6c8jln7ejuqwtqmay3yvzrg3kueaczl96pk067ldg8u835w0yhsw27twm/alloyed/allETH.png",
          coinMinimalDenom: "factory/osmo1k6c8jln7ejuqwtqmay3yvzrg3kueaczl96pk067ldg8u835w0yhsw27twm/alloyed/allETH"
        }, {
          coinDecimals: 9,
          coinDenom: "SOL",
          coinGeckoId: "solana",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo1n3n75av8awcnw4jl62n3l48e6e4sxqmaf97w5ua6ddu4s475q5qq9udvx4/alloyed/allSOL.png",
          coinMinimalDenom: "factory/osmo1n3n75av8awcnw4jl62n3l48e6e4sxqmaf97w5ua6ddu4s475q5qq9udvx4/alloyed/allSOL"
        }, {
          coinDecimals: 9,
          coinDenom: "TON",
          coinGeckoId: "the-open-network",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/factory/osmo12lnwf54yd30p6amzaged2atln8k0l32n7ncxf04ctg7u7ymnsy7qkqgsw4/alloyed/allTON.png",
          coinMinimalDenom: "factory/osmo12lnwf54yd30p6amzaged2atln8k0l32n7ncxf04ctg7u7ymnsy7qkqgsw4/alloyed/allTON"
        } ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "OSMO",
          coinGeckoId: "osmosis",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/uosmo.png",
          coinMinimalDenom: "uosmo",
          gasPriceStep: {
            average: .025,
            high: .04,
            low: .0025
          }
        } ],
        features: [ "ibc-pfm", "query:/cosmos/bank/v1beta1/spendable_balances", "cosmwasm", "osmosis-txfees", "osmosis-base-fee-beta", "ibc-transfer", "ibc-go", "wasmd_0.24+" ],
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/osmosis/chain.png"
      },
      BABYLON_TEST_GATETEST: {
        bech32Config: {
          bech32PrefixAccAddr: "bbn",
          bech32PrefixAccPub: "bbnpub",
          bech32PrefixConsAddr: "bbnvalcons",
          bech32PrefixConsPub: "bbnvalconspub",
          bech32PrefixValAddr: "bbnvaloper",
          bech32PrefixValPub: "bbnvaloperpub"
        },
        beta: !0,
        bip44: {
          coinType: 118
        },
        chainId: "bbn-test-5",
        chainName: "Babylon Phase-2 Testnet",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn-test/chain.png",
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "BABY",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn-test/chain.png",
          coinMinimalDenom: "ubbn"
        } ],
        features: [ "ibc-go", "ibc-transfer", "wasmd_0.24+", "query:/cosmos/bank/v1beta1/spendable_balances", "cosmwasm" ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "BABY",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn-test/chain.png",
          coinMinimalDenom: "ubbn",
          gasPriceStep: {
            average: .007,
            high: .01,
            low: .007
          }
        } ],
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "BABY",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn-test/chain.png",
          coinMinimalDenom: "ubbn"
        }
      },
      BABYLON_GATETEST: {
        chainId: "bbn-1",
        chainName: "Babylon Genesis",
        chainSymbolImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn/chain.png",
        walletUrlForStaking: "https://wallet.keplr.app/chains/babylon-genesis",
        bip44: {
          coinType: 118
        },
        bech32Config: {
          bech32PrefixAccAddr: "bbn",
          bech32PrefixAccPub: "bbnpub",
          bech32PrefixConsAddr: "bbnvalcons",
          bech32PrefixConsPub: "bbnvalconspub",
          bech32PrefixValAddr: "bbnvaloper",
          bech32PrefixValPub: "bbnvaloperpub"
        },
        currencies: [ {
          coinDecimals: 6,
          coinDenom: "BABY",
          coinGeckoId: "babylon",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn/chain.png",
          coinMinimalDenom: "ubbn"
        }, {
          coinDecimals: 8,
          coinDenom: "LBTC",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn/LBTC.png",
          coinMinimalDenom: "ibc/89EE10FCF78800B572BAAC7080AEFA301B5F3BBC51C5371E907EB129C5B900E7"
        } ],
        feeCurrencies: [ {
          coinDecimals: 6,
          coinDenom: "BABY",
          coinGeckoId: "babylon",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn/chain.png",
          coinMinimalDenom: "ubbn",
          gasPriceStep: {
            average: .007,
            high: .01,
            low: .007
          }
        } ],
        stakeCurrency: {
          coinDecimals: 6,
          coinDenom: "BABY",
          coinGeckoId: "babylon",
          coinImageUrl: "https://raw.githubusercontent.com/chainapsis/keplr-chain-registry/main/images/bbn/chain.png",
          coinMinimalDenom: "ubbn"
        },
        features: [ "ibc-go", "ibc-transfer", "wasmd_0.24+", "query:/cosmos/bank/v1beta1/spendable_balances", "cosmwasm" ]
      }
    }, COSMOS_CHAINID_TO_NETWORK_MAP = {};
    Object.keys(COSMOS_INFO).forEach((function(key) {
      COSMOS_CHAINID_TO_NETWORK_MAP[COSMOS_INFO[key].chainId] = key;
    }));
    null === (_Object$values = Object.values(COSMOS_INFO)) || void 0 === _Object$values || _Object$values.map((function(item) {
      return null == item ? void 0 : item.chainId;
    }));
  },
  273310: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Ay: () => __WEBPACK_DEFAULT_EXPORT__,
      BQ: () => initializePermissions,
      Ed: () => revokePermissionsForAddress,
      J1: () => clearGatePermissions,
      LV: () => updateGatePermissions,
      PD: () => emitter,
      b0: () => denyOrRevokePermission,
      fA: () => removeGatePermissionsByWalletId,
      gu: () => grantPermission,
      xe: () => requestPermission
    });
    __webpack_require__(447746), __webpack_require__(259581), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(380115), __webpack_require__(505086), __webpack_require__(269193), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(407899), __webpack_require__(700017), __webpack_require__(110678), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(219693), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(207452);
    var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(760258), emittery__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(786827), emittery__WEBPACK_IMPORTED_MODULE_27___default = __webpack_require__.n(emittery__WEBPACK_IMPORTED_MODULE_27__), _utils__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(548572), _services_gt_provider_bridge_utils__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(390357), lodash__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(302543), _networks__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(860499);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _objectWithoutProperties(source, excluded) {
      if (null == source) return {};
      var key, i, target = function(source, excluded) {
        if (null == source) return {};
        var key, i, target = {}, sourceKeys = Object.keys(source);
        for (i = 0; i < sourceKeys.length; i++) key = sourceKeys[i], excluded.indexOf(key) >= 0 || (target[key] = source[key]);
        return target;
      }(source, excluded);
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) key = sourceSymbolKeys[i], excluded.indexOf(key) >= 0 || Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var emitter = new (emittery__WEBPACK_IMPORTED_MODULE_27___default()), grantPermission = (0, 
    _utils__WEBPACK_IMPORTED_MODULE_28__.FG)("dapp-permission/permissionGrant", function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(permission) {
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return emitter.emit("grantPermission", _objectSpread({}, permission)), _context.abrupt("return", permission);

           case 2:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }()), denyOrRevokePermission = (0, _utils__WEBPACK_IMPORTED_MODULE_28__.FG)("dapp-permission/permissionDenyOrRevoke", function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(permission) {
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, emitter.emit("denyOrRevokePermission", permission);

           case 2:
            return _context2.abrupt("return", permission);

           case 3:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x2) {
        return _ref2.apply(this, arguments);
      };
    }()), removeGatePermissionsByWalletId = (0, _utils__WEBPACK_IMPORTED_MODULE_28__.FG)("dapp-permission/removeGatePermissionsByWalletId", function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(walletsInfo) {
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, emitter.emit("removeGatePermissionsByWalletId", walletsInfo);

           case 2:
            return _context3.abrupt("return", walletsInfo);

           case 3:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x3) {
        return _ref3.apply(this, arguments);
      };
    }()), updateGatePermissions = (0, _utils__WEBPACK_IMPORTED_MODULE_28__.FG)("dapp-permission/updateGatePermissions", function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(permissionsInfo) {
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.next = 2, emitter.emit("updateGatePermissions", permissionsInfo);

           case 2:
            return _context4.abrupt("return", permissionsInfo);

           case 3:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x4) {
        return _ref4.apply(this, arguments);
      };
    }()), clearGatePermissions = (0, _utils__WEBPACK_IMPORTED_MODULE_28__.FG)("dapp-permission/clearGatePermissions", _asyncToGenerator(regeneratorRuntime.mark((function _callee5() {
      return regeneratorRuntime.wrap((function(_context5) {
        for (;;) switch (_context5.prev = _context5.next) {
         case 0:
          return _context5.next = 2, emitter.emit("clearGatePermissions");

         case 2:
         case "end":
          return _context5.stop();
        }
      }), _callee5);
    })))), dappSlice = (0, _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_26__.Z0)({
      name: "dapp-permission",
      initialState: {
        permissionRequests: {},
        allowed: {
          evm: {}
        }
      },
      reducers: {
        initializePermissions: function(immerState, _ref6) {
          var allowed = _ref6.payload;
          immerState.allowed = allowed;
        },
        requestPermission: function(state, _ref7) {
          var _state$permissionRequ, request = _ref7.payload;
          if ("allow" !== (null === (_state$permissionRequ = state.permissionRequests[request.origin]) || void 0 === _state$permissionRequ ? void 0 : _state$permissionRequ.state)) {
            if (request.hostname === _networks__WEBPACK_IMPORTED_MODULE_31__.Y3) {
              var _request$network, request_new = _objectSpread(_objectSpread({}, request), {}, {
                network: [ "BTC", "SIGNET_TEST_GATETEST" ].includes(null == request || null === (_request$network = request.network) || void 0 === _request$network ? void 0 : _request$network.toUpperCase()) ? "SIGNET_TEST_GATETEST" : "SEI"
              });
              return _objectSpread(_objectSpread({}, state), {}, {
                permissionRequests: _defineProperty({}, request.origin, _objectSpread({}, request_new))
              });
            }
            return _objectSpread(_objectSpread({}, state), {}, {
              permissionRequests: _defineProperty({}, request.origin, _objectSpread({}, request))
            });
          }
          return state;
        },
        revokePermissionsForAddress: function(immerState, _ref8) {
          var _immerState$allowed$e, address = _ref8.payload;
          if (null !== (_immerState$allowed$e = immerState.allowed.evm[1]) && void 0 !== _immerState$allowed$e && _immerState$allowed$e[address]) {
            var _immerState$allowed$e2 = immerState.allowed.evm[1], withoutAddressToRemove = (_immerState$allowed$e2[address], 
            _objectWithoutProperties(_immerState$allowed$e2, [ address ].map(_toPropertyKey)));
            immerState.allowed.evm[1] = withoutAddressToRemove;
          }
        }
      },
      extraReducers: function(builder) {
        builder.addCase(grantPermission.fulfilled, (function(immerState, _ref9) {
          var permission = _ref9.payload;
          delete _objectSpread({}, immerState.permissionRequests)[permission.origin];
          var list = (0, lodash__WEBPACK_IMPORTED_MODULE_30__.clone)((null == permission ? void 0 : permission.selectedAddressList) || []);
          null == permission || delete permission.selectedAddressList;
          var permissions = [ _objectSpread(_objectSpread({}, permission), {}, {
            chainID: "1"
          }) ];
          null != list && list.length && list.forEach((function(val) {
            var permissionObj = _objectSpread(_objectSpread({}, permission), {}, {
              accountAddress: val.address
            }), keyArray = permissionObj.key.split("_"), lastKey = keyArray[keyArray.length - 1];
            permissionObj.key = "".concat(permissionObj.origin, "_").concat(val.address, "_").concat(lastKey), 
            "gate" == permission.network && (permissionObj.response = val), permissionObj.walletCreateType = val.walletCreateType, 
            permissionObj.chainID = "1", permissions.push(permissionObj);
          }));
          var allowedPermission = (0, _services_gt_provider_bridge_utils__WEBPACK_IMPORTED_MODULE_29__.xB)(permissions, immerState.allowed);
          immerState.allowed = allowedPermission;
        })).addCase(denyOrRevokePermission.fulfilled, (function(immerState, _ref10) {
          var _immerState$allowed$e3, _immerState$allowed$e4, _immerState$allowed$e5, _immerState$allowed$e6, permission = _ref10.payload;
          if ((delete _objectSpread({}, immerState.permissionRequests)[permission.origin], 
          null !== (_immerState$allowed$e3 = immerState.allowed.evm) && void 0 !== _immerState$allowed$e3 && _immerState$allowed$e3[1] && null !== (_immerState$allowed$e4 = immerState.allowed.evm[1]) && void 0 !== _immerState$allowed$e4 && _immerState$allowed$e4[permission.accountAddress]) && (null !== (_immerState$allowed$e5 = immerState.allowed.evm[1]) && void 0 !== _immerState$allowed$e5 && null !== (_immerState$allowed$e6 = _immerState$allowed$e5[permission.accountAddress]) && void 0 !== _immerState$allowed$e6 && _immerState$allowed$e6[null == permission ? void 0 : permission.origin])) {
            var _immerState$allowed$e7 = immerState.allowed.evm[1][permission.accountAddress][null == permission ? void 0 : permission.origin], _permission$walletCre = permission.walletCreateType, withoutOriginToRemove = (_immerState$allowed$e7[_permission$walletCre], 
            _objectWithoutProperties(_immerState$allowed$e7, [ _permission$walletCre ].map(_toPropertyKey)));
            immerState.allowed.evm[1][permission.accountAddress][null == permission ? void 0 : permission.origin] = withoutOriginToRemove;
          }
        }));
      }
    }), _dappSlice$actions = dappSlice.actions, requestPermission = _dappSlice$actions.requestPermission, initializePermissions = _dappSlice$actions.initializePermissions, revokePermissionsForAddress = _dappSlice$actions.revokePermissionsForAddress;
    const __WEBPACK_DEFAULT_EXPORT__ = dappSlice.reducer;
  },
  277667: () => {},
  284271: () => {},
  296477: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Qr: () => getChainInfo,
      Qp: () => getNetworkObject,
      et: () => transport
    });
    __webpack_require__(207452), __webpack_require__(754989), __webpack_require__(194009), 
    __webpack_require__(348825), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(80475), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(505086), 
    __webpack_require__(815852), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(269193), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602);
    var index_browser_esm = __webpack_require__(262643), gt_fetch = __webpack_require__(525735), client = __webpack_require__(60941), web3_min = (__webpack_require__(804632), 
    __webpack_require__(64189), __webpack_require__(741412), __webpack_require__(734606), 
    __webpack_require__(597755), __webpack_require__(946450)), web3_min_default = __webpack_require__.n(web3_min);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return _assertThisInitialized(self);
        }(this, result);
      };
    }
    function _assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    const custom_http_provider = function(_Web3$providers$HttpP) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(CustomHttpProvider, _Web3$providers$HttpP);
      var Constructor, protoProps, staticProps, _super = _createSuper(CustomHttpProvider);
      function CustomHttpProvider(rpcAddress, options) {
        var _this;
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CustomHttpProvider), _defineProperty(_assertThisInitialized(_this = _super.call(this, rpcAddress, options)), "rpcAddress", void 0), 
        _defineProperty(_assertThisInitialized(_this), "options", void 0), _this.rpcAddress = rpcAddress, 
        _this.options = options, _this;
      }
      return Constructor = CustomHttpProvider, (protoProps = [ {
        key: "send",
        value: function(payload, callback) {
          var url = this.rpcAddress, query = void 0;
          this.options.isTRX && (query = {
            _bs_protocol_: "jsonrpc"
          }), (0, gt_fetch.Lu)("POST", url, payload, {
            "content-type": "application/json"
          }, void 0, query, {
            type: "data"
          }).then((function(res) {
            callback(null, res);
          })).catch((function(err) {
            callback(err);
          }));
        }
      } ]) && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CustomHttpProvider;
    }(web3_min_default().providers.HttpProvider);
    var custom_json_rpc_provider_quai = __webpack_require__(116239), sui_http_transport = __webpack_require__(144888), dist = __webpack_require__(928635);
    function gt_on_chain_typeof(obj) {
      return gt_on_chain_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, gt_on_chain_typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          gt_on_chain_defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function gt_on_chain_defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== gt_on_chain_typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== gt_on_chain_typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === gt_on_chain_typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var getNetworkObject = function(networkKey, totalNetworkDic, rpcUrl) {
      var chainArchitecture = totalNetworkDic[networkKey].chainArchitecture;
      try {
        if (!rpcUrl) throw new Error("no rpc urls");
        if ("GT_ORG" == networkKey) ; else {
          if ("QUAI_GATETEST" == networkKey) return {
            eth: new custom_json_rpc_provider_quai.A(rpcUrl, void 0, {
              usePathing: !0
            })
          };
          if ("SOL" == chainArchitecture) return new index_browser_esm.Ng(rpcUrl, {
            fetch: function(input, init) {
              var body = null != init && init.body ? "string" == typeof init.body ? JSON.parse(init.body) : init.body : {};
              return (0, gt_fetch.Lu)("POST", input, body, (null == init ? void 0 : init.headers) || {}, void 0, void 0, {
                rawResponse: !0
              });
            }
          });
          if ("SUI" == networkKey) return new client.xl({
            transport: new sui_http_transport.A({
              url: rpcUrl
            })
          });
          if ("EVM" === chainArchitecture || "TRX" === networkKey) {
            var _provider, options = {
              timeout: 3e4
            };
            return _provider = null != rpcUrl && rpcUrl.startsWith("ws") ? new (web3_min_default().providers.WebsocketProvider)(rpcUrl, options) : new custom_http_provider(rpcUrl, _objectSpread(_objectSpread({}, options), {}, {
              isTRX: "TRX" === networkKey
            })), new (web3_min_default())(_provider);
          }
        }
      } catch (error) {}
    }, getChainInfo = function(networkKey, totalNetworkDic, rpcUrls) {
      var _rpcUrls$networkKey, network = totalNetworkDic[networkKey];
      if (!network) return null;
      var rpcUrl = (null == rpcUrls || null === (_rpcUrls$networkKey = rpcUrls[networkKey]) || void 0 === _rpcUrls$networkKey ? void 0 : _rpcUrls$networkKey[0]) || "";
      return {
        id: Number(network.networkChainID),
        name: network.networkName,
        network: null == network ? void 0 : network.structureNetworkKey,
        nativeCurrency: {
          name: network.networkSimpleSymbol,
          symbol: network.networkSimpleSymbol,
          decimals: Number(network.networkPrecision)
        },
        rpcUrls: {
          default: {
            http: [ rpcUrl ]
          },
          public: {
            http: [ rpcUrl ]
          }
        }
      };
    }, transport = function(host) {
      return (0, dist.Ie)({
        request: function(params) {
          return (fn = regeneratorRuntime.mark((function _callee() {
            var data;
            return regeneratorRuntime.wrap((function(_context) {
              for (;;) switch (_context.prev = _context.next) {
               case 0:
                return _context.next = 2, (0, gt_fetch.Lu)("POST", host, {
                  jsonrpc: "2.0",
                  id: 1,
                  method: params.method,
                  params: params.params
                }, {
                  "content-type": "application/json"
                }, void 0, void 0, {
                  type: "data"
                });

               case 2:
                return data = _context.sent, _context.abrupt("return", data.result);

               case 4:
               case "end":
                return _context.stop();
              }
            }), _callee);
          })), function() {
            var self = this, args = arguments;
            return new Promise((function(resolve, reject) {
              var gen = fn.apply(self, args);
              function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
              }
              function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
              }
              _next(void 0);
            }));
          })();
          var fn;
        }
      });
    };
  },
  299433: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => __WEBPACK_DEFAULT_EXPORT__
    });
    __webpack_require__(207452), __webpack_require__(380115), __webpack_require__(752231), 
    __webpack_require__(259581), __webpack_require__(754989), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(906048), __webpack_require__(418665), 
    __webpack_require__(269193), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(700017), __webpack_require__(718636), __webpack_require__(194009), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(335231), 
    __webpack_require__(700533), __webpack_require__(407899), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(210557), __webpack_require__(714913), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(815852), __webpack_require__(504895), __webpack_require__(564216), 
    __webpack_require__(498741), __webpack_require__(215195), __webpack_require__(110678), 
    __webpack_require__(103101), __webpack_require__(936012);
    var _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(259159), _constants__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(24865), _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(525735), _config__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(289933), _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(745788), localforage__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(473790), localforage__WEBPACK_IMPORTED_MODULE_64___default = __webpack_require__.n(localforage__WEBPACK_IMPORTED_MODULE_64__), _constants__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(153341), bech32__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(722343), bignumber_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(760346), _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(366248), _btc_assets_api__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(56128), _bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(358547), _popup_lib_tool_someMethod__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(691940), _ckb_ckb_rpc__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(862881), rgbpp__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(330096), _rgbpp_sdk_btc__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(461611), _ckb_lumos_codec__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(71313), _ckb_lumos_base__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(741600), _ckb_utils__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(473270), _rgbpp_sdk_ckb__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(441256), _nervosnetwork_ckb_sdk_utils__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(260720), _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(871219), long__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(274442), _popup_lib_tool_walletCore_utxo__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(103642), _okxweb3_coin_bitcoin_dist_bitcoinjs_lib_bufferutils__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(486711), _okxweb3_coin_bitcoin_dist_bitcoinjs_lib_address__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(281396), _bg_utils_gt_base_type_transfer__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(228972), wif__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(557513), wif__WEBPACK_IMPORTED_MODULE_86___default = __webpack_require__.n(wif__WEBPACK_IMPORTED_MODULE_86__), _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(291842), _bg_utils_gt_api_gas__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(145581), tbc_lib_js_lib_transaction_transaction__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(142665), tbc_lib_js_lib_transaction_transaction__WEBPACK_IMPORTED_MODULE_89___default = __webpack_require__.n(tbc_lib_js_lib_transaction_transaction__WEBPACK_IMPORTED_MODULE_89__), tbc_lib_js_lib_address__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(685654), tbc_lib_js_lib_address__WEBPACK_IMPORTED_MODULE_90___default = __webpack_require__.n(tbc_lib_js_lib_address__WEBPACK_IMPORTED_MODULE_90__), tbc_lib_js_lib_crypto_signature__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(128268), tbc_lib_js_lib_crypto_signature__WEBPACK_IMPORTED_MODULE_91___default = __webpack_require__.n(tbc_lib_js_lib_crypto_signature__WEBPACK_IMPORTED_MODULE_91__), tbc_lib_js_lib_script__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(464592), tbc_lib_js_lib_script__WEBPACK_IMPORTED_MODULE_92___default = __webpack_require__.n(tbc_lib_js_lib_script__WEBPACK_IMPORTED_MODULE_92__), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e2) {
              throw _e2;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e3) {
          didErr = !0, err = _e3;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var Bitcoin = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.Bitcoin, BtcRpc = function() {
      function BtcRpc(wasm, totalNetworkDic, networkKey, rpcUrl) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, BtcRpc), _defineProperty(this, "wasm", void 0), _defineProperty(this, "totalNetworkDic", void 0), 
        _defineProperty(this, "networkKey", void 0), _defineProperty(this, "rpcUrl", void 0), 
        _defineProperty(this, "mempoolSignet", void 0), this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, 
        this.networkKey = networkKey, this.rpcUrl = rpcUrl, this.mempoolSignet = "".concat(rpcUrl, "/api");
      }
      var Constructor, protoProps, staticProps, _getReleasedAmount, _getReleasedUtxos, _init, _getNFTGasFee, _getNFTUtxoList, _signSendBrc, _signSendBtc, _signSendTbc, _signBtcSend, _signP2TRTransfer, _getBtcMainCoinBalance, _fetchTbcUnspent, _fetchBtcBalance, _fetchBtcTestBalance, _getBtcBalance, _getBrc20Balance, _getBrc100Balance, _getRunesBalance, _getBtcFeeRate, _getSendBtcRgbGasFee, _getPsbtforBtcSendRgb, _buildRgbppPsbtTxPlan, _getRunesGasFee, _getRunesBtcUtxo, _getRunesUtxos, _getRunesUtxoList, _signBtcRunes, _getSendBrcGasFee, _getBrc20UtxoList, _getBrc100UtxoList, _getSendBtcGasFee, _getBtcFeeByBlocks, _getBtcFeeByApi, _getBtcSendGasFee, _getUtxoList, _fetchUtxoList, _getSignetUtxo;
      return Constructor = BtcRpc, protoProps = [ {
        key: "getSignetUtxo",
        value: (_getSignetUtxo = _asyncToGenerator(regeneratorRuntime.mark((function _callee(address) {
          var result;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _context.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.ox)("GET", "".concat(this.mempoolSignet, "/address/").concat(address, "/utxo"));

             case 2:
              if (200 !== (result = _context.sent).status) {
                _context.next = 7;
                break;
              }
              return _context.abrupt("return", result);

             case 7:
              return _context.abrupt("return", []);

             case 8:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _getSignetUtxo.apply(this, arguments);
        })
      }, {
        key: "fetchUtxoList",
        value: (_fetchUtxoList = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
          var sender, sendAmount, feeRate, relievedUtxos, res;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return sender = params.sender, sendAmount = params.sendAmount, feeRate = params.feeRate, 
              relievedUtxos = params.relievedUtxos, _context2.next = 3, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.utxoList), {}, {
                address: sender,
                amount: parseInt(sendAmount),
                chainName: this.networkKey,
                feeRate,
                relievedUtxos
              }, "data");

             case 3:
              return res = _context2.sent, _context2.abrupt("return", null == res ? void 0 : res.data);

             case 5:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _fetchUtxoList.apply(this, arguments);
        })
      }, {
        key: "getUtxoList",
        value: (_getUtxoList = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
          var _this$totalNetworkDic, sender, btcAmount, feeRate, res, network, networkPrecision, releasedUtxos, relievedUtxos, btcSendAmount, _res;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              if (sender = params.sender, btcAmount = params.btcAmount, feeRate = params.feeRate, 
              !(null === (_this$totalNetworkDic = this.totalNetworkDic[this.networkKey]) || void 0 === _this$totalNetworkDic ? void 0 : _this$totalNetworkDic.isTest)) {
                _context3.next = 9;
                break;
              }
              return _context3.next = 5, this.getSignetUtxo(sender);

             case 5:
              return res = _context3.sent, _context3.abrupt("return", res);

             case 9:
              return network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              _context3.next = 13, BtcRpc.getReleasedUtxos(sender);

             case 13:
              return releasedUtxos = _context3.sent, relievedUtxos = null == releasedUtxos ? void 0 : releasedUtxos.map((function(item) {
                return {
                  txId: null == item ? void 0 : item.txid,
                  vout: null == item ? void 0 : item.vout
                };
              })), btcSendAmount = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(btcAmount, Math.pow(10, parseInt(networkPrecision))), 
              _context3.next = 18, this.fetchUtxoList({
                sender,
                sendAmount: btcSendAmount,
                feeRate,
                relievedUtxos
              });

             case 18:
              return _res = _context3.sent, _context3.abrupt("return", _res);

             case 20:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3) {
          return _getUtxoList.apply(this, arguments);
        })
      }, {
        key: "calculateBtcTxSize",
        value: function(params) {
          var inputScript = params.inputScript, inputCount = params.inputCount, outputCount = params.outputCount, _params$inputNumber = params.inputNumber, inputNumber = void 0 === _params$inputNumber ? 0 : _params$inputNumber, _params$perInputSigNu = params.perInputSigNumber, perInputSigNumber = void 0 === _params$perInputSigNu ? 0 : _params$perInputSigNu, _params$p2shP2wpkhOut = params.p2shP2wpkhOutputCount, p2shP2wpkhOutputCount = void 0 === _params$p2shP2wpkhOut ? 0 : _params$p2shP2wpkhOut, _params$p2pkhOutputCo = params.p2pkhOutputCount, p2pkhOutputCount = void 0 === _params$p2pkhOutputCo ? 0 : _params$p2pkhOutputCo, _params$p2shOutputCou = params.p2shOutputCount, p2shOutputCount = void 0 === _params$p2shOutputCou ? 0 : _params$p2shOutputCou, _params$p2shP2wshOutp = params.p2shP2wshOutputCount, p2shP2wshOutputCount = void 0 === _params$p2shP2wshOutp ? 0 : _params$p2shP2wshOutp, _params$p2wpkhOutputC = params.p2wpkhOutputCount, p2wpkhOutputCount = void 0 === _params$p2wpkhOutputC ? 0 : _params$p2wpkhOutputC, _params$p2wshOutputCo = params.p2wshOutputCount, p2wshOutputCount = void 0 === _params$p2wshOutputCo ? 0 : _params$p2wshOutputCo, _params$p2trOutputCou = params.p2trOutputCount, p2trOutputCount = void 0 === _params$p2trOutputCou ? 0 : _params$p2trOutputCou, _params$opreturnCount = params.opreturnCount, opreturnCount = void 0 === _params$opreturnCount ? 0 : _params$opreturnCount, _params$opreturnScrip = params.opreturnScriptSize, opreturnScriptSize = void 0 === _params$opreturnScrip ? 0 : _params$opreturnScrip, inputSize = 0;
          switch (inputScript) {
           case BtcRpc.P2PKH:
           case BtcRpc.P2SH_P2WPKH:
            inputSize = BtcRpc.P2SH_P2WPKH_IN_SIZE;
            break;

           case BtcRpc.P2WPKH:
            inputSize = BtcRpc.P2WPKH_IN_SIZE;
            break;

           case BtcRpc.P2TR:
            inputSize = BtcRpc.P2TR_IN_SIZE;
            break;

           case BtcRpc.P2SH:
            var redeemScriptSize = 1 + inputNumber * (1 + BtcRpc.PUBKEY_SIZE) + 1 + 1, scriptSigSize = 1 + perInputSigNumber * (1 + BtcRpc.SIGNATURE_SIZE) + BtcRpc.getSizeOfScriptlengthElement(redeemScriptSize) + redeemScriptSize;
            inputSize = 36 + BtcRpc.getSizeOfVarInt(scriptSigSize) + scriptSigSize + 4;
            break;

           case BtcRpc.P2SH_P2WSH:
           case BtcRpc.P2WSH:
            var redeemScriptSize1 = 1 + inputNumber * (1 + BtcRpc.PUBKEY_SIZE) + 1 + 1;
            inputSize = 36 + (1 + perInputSigNumber * (1 + BtcRpc.SIGNATURE_SIZE) + BtcRpc.getSizeOfScriptlengthElement(redeemScriptSize1) + redeemScriptSize1) / 4 + 4, 
            inputScript == BtcRpc.P2SH_P2WSH && (inputSize += 35);
          }
          var txVBytes = BtcRpc.getTxOverheadVBytes(inputScript, inputCount, outputCount) + inputSize * inputCount + BtcRpc.P2PKH_OUT_SIZE * p2pkhOutputCount + BtcRpc.P2SH_OUT_SIZE * p2shOutputCount + BtcRpc.P2SH_P2WPKH_OUT_SIZE * p2shP2wpkhOutputCount + BtcRpc.P2SH_P2WSH_OUT_SIZE * p2shP2wshOutputCount + BtcRpc.P2WPKH_OUT_SIZE * p2wpkhOutputCount + BtcRpc.P2WSH_OUT_SIZE * p2wshOutputCount + BtcRpc.P2TR_OUT_SIZE * p2trOutputCount + BtcRpc.opreturnOutSize(opreturnScriptSize) * opreturnCount;
          return Math.ceil(txVBytes);
        }
      }, {
        key: "isValidBitcoinAddress",
        value: function(address) {
          try {
            return null != __webpack_require__(616763).decode(address);
          } catch (_unused) {
            return !1;
          }
        }
      }, {
        key: "detectAddressType",
        value: function(address, coinType) {
          var _CoinType$bitcoinCash, _this$wasm = this.wasm, CoinType = _this$wasm.CoinType, CoinTypeExt = _this$wasm.CoinTypeExt;
          if ((null == coinType ? void 0 : coinType.value) == (null === (_CoinType$bitcoinCash = CoinType.bitcoinCash) || void 0 === _CoinType$bitcoinCash ? void 0 : _CoinType$bitcoinCash.value)) return address.startsWith("bitcoincash1") ? BtcRpc.P2WPKH : BtcRpc.P2PKH;
          if (!this.isValidBitcoinAddress(address)) return BtcRpc.isValidBech32(address) ? BtcRpc.P2WPKH : BtcRpc.isValidBech32m(address) ? BtcRpc.P2TR : "";
          var addressPrefix = BtcRpc.prefix(address), p2shPrefix = CoinTypeExt.p2shPrefix(coinType), p2pkhPrefix = CoinTypeExt.p2pkhPrefix(coinType);
          return null != address && address.startsWith("bc1p") ? BtcRpc.P2TR : addressPrefix == p2shPrefix ? BtcRpc.P2SH : addressPrefix == p2pkhPrefix ? BtcRpc.P2PKH : "";
        }
      }, {
        key: "calculateOutputCountByAddress",
        value: function(sender, receiver, coinType) {
          var model = new _constants__WEBPACK_IMPORTED_MODULE_60__.q2, fromType = this.detectAddressType(sender, coinType);
          if (fromType == BtcRpc.P2PKH ? model.p2pkhCount += 1 : fromType == BtcRpc.P2SH ? model.p2shCount += 1 : fromType == BtcRpc.P2WPKH ? model.p2wpkhCount += 1 : fromType == BtcRpc.P2TR && (model.p2trCount += 1), 
          receiver) {
            var toType = this.detectAddressType(receiver, coinType);
            toType == BtcRpc.P2PKH ? model.p2pkhCount += 1 : toType == BtcRpc.P2SH ? model.p2shCount += 1 : toType == BtcRpc.P2WPKH ? model.p2wpkhCount += 1 : toType == BtcRpc.P2TR && (model.p2trCount += 1);
          }
          return model;
        }
      }, {
        key: "calculateVBytes",
        value: function(params) {
          var coinName = params.coinName, sender = params.sender, receiver = params.receiver, utxos = params.utxos, coinType = this.wasm.CoinType[coinName], inputScript = BtcRpc.P2PKH;
          inputScript = this.detectAddressType(sender, coinType);
          var outputModel = this.calculateOutputCountByAddress(sender, receiver, coinType), inputCount = null == utxos ? void 0 : utxos.length;
          return this.calculateBtcTxSize({
            inputScript,
            inputCount,
            outputCount: 2,
            p2shOutputCount: outputModel.p2shCount,
            p2trOutputCount: outputModel.p2trCount,
            p2pkhOutputCount: outputModel.p2pkhCount,
            p2wpkhOutputCount: outputModel.p2wpkhCount
          });
        }
      }, {
        key: "calculateBtcTxFee",
        value: function(params) {
          var feeRate = params.feeRate, vBytes = this.calculateVBytes(params);
          return Math.ceil(feeRate * vBytes);
        }
      }, {
        key: "getBtcSendGasFee",
        value: (_getBtcSendGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(params) {
          var token, sender, receiver, feeIndex, amount, customFeeRate, rpcUrls, lastGetSuccessRpcTime, brcUtxoList, tbcUnspent, coinAddress, protocolLabel;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              if (token = params.token, sender = params.sender, receiver = params.receiver, feeIndex = params.feeIndex, 
              amount = params.amount, customFeeRate = params.customFeeRate, rpcUrls = params.rpcUrls, 
              lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, brcUtxoList = params.brcUtxoList, 
              tbcUnspent = params.tbcUnspent, coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinAddress"), 
              !(0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.hT)(coinAddress)) {
                _context4.next = 9;
                break;
              }
              return _context4.next = 6, this.getSendBtcGasFee({
                sender,
                receiver,
                feeIndex,
                amount,
                customFeeRate,
                token,
                tbcUnspent
              });

             case 6:
             case 13:
             case 19:
             case 24:
              return _context4.abrupt("return", _context4.sent);

             case 9:
              if ("RUNES" !== (null == (protocolLabel = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "protocolLabel")) ? void 0 : protocolLabel.toUpperCase())) {
                _context4.next = 16;
                break;
              }
              return _context4.next = 13, this.getRunesGasFee({
                token,
                sender,
                receiver,
                amount,
                feeIndex,
                runeId: coinAddress
              });

             case 16:
              if ("RGB++" !== (null == protocolLabel ? void 0 : protocolLabel.toUpperCase())) {
                _context4.next = 22;
                break;
              }
              return _context4.next = 19, this.getSendBtcRgbGasFee({
                feeIndex,
                sender,
                receiver,
                token,
                amount,
                rpcUrls,
                lastGetSuccessRpcTime
              });

             case 22:
              return _context4.next = 24, this.getSendBrcGasFee({
                sender,
                receiver,
                feeIndex,
                amount,
                token,
                brcUtxoList
              });

             case 25:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x4) {
          return _getBtcSendGasFee.apply(this, arguments);
        })
      }, {
        key: "getBtcFeeByApi",
        value: (_getBtcFeeByApi = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(params) {
          var _feeList, _feeList$SpeedType$FA, _feeList$SpeedType$LO, _feeList$SpeedType$AV, _feeList$SpeedType$FA2, sender, receiver, customFeeRate, amount, _tbcUnspent, res, coinPrice, btcFeeRate, utxos, _tbcUnspent2, tbcUnspent, selectedUtxos, network, networkPrecision, precision, coinName, bytes, vBytes, estimatedSize, lowGasFee, avgGasFee, fastGasFee, lowTransactionFee, avgTransactionFee, fastTransactionFee, feeList;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              if (sender = params.sender, receiver = params.receiver, customFeeRate = params.customFeeRate, 
              amount = params.amount, _tbcUnspent = params.tbcUnspent, "TBC" !== this.networkKey) {
                _context5.next = 7;
                break;
              }
              return _context5.next = 4, (0, _bg_utils_gt_api_gas__WEBPACK_IMPORTED_MODULE_88__.eU)();

             case 4:
              _context5.t0 = _context5.sent, _context5.next = 24;
              break;

             case 7:
              if ("BCH" !== this.networkKey) {
                _context5.next = 13;
                break;
              }
              return _context5.next = 10, (0, _bg_utils_gt_api_gas__WEBPACK_IMPORTED_MODULE_88__.J5)();

             case 10:
              _context5.t1 = _context5.sent, _context5.next = 23;
              break;

             case 13:
              if ("LTC" !== this.networkKey) {
                _context5.next = 19;
                break;
              }
              return _context5.next = 16, (0, _bg_utils_gt_api_gas__WEBPACK_IMPORTED_MODULE_88__.WS)();

             case 16:
              _context5.t2 = _context5.sent, _context5.next = 22;
              break;

             case 19:
              return _context5.next = 21, (0, _bg_utils_gt_api_gas__WEBPACK_IMPORTED_MODULE_88__.Uh)();

             case 21:
              _context5.t2 = _context5.sent;

             case 22:
              _context5.t1 = _context5.t2;

             case 23:
              _context5.t0 = _context5.t1;

             case 24:
              if (res = _context5.t0, coinPrice = null == res ? void 0 : res.native_coin_price, 
              btcFeeRate = null != customFeeRate ? customFeeRate : +(null == res ? void 0 : res.avg_sato_per_byte), 
              utxos = [], "TBC" !== this.networkKey) {
                _context5.next = 41;
                break;
              }
              if (null === (_tbcUnspent2 = tbcUnspent = _tbcUnspent) || void 0 === _tbcUnspent2) {
                _context5.next = 34;
                break;
              }
              _context5.next = 37;
              break;

             case 34:
              return _context5.next = 36, this.fetchTbcUnspent(sender);

             case 36:
              tbcUnspent = _context5.sent;

             case 37:
              selectedUtxos = this.selectOptimalUtxos(tbcUnspent, amount, btcFeeRate), utxos = selectedUtxos, 
              _context5.next = 44;
              break;

             case 41:
              return _context5.next = 43, this.getUtxoList({
                sender,
                btcAmount: amount,
                feeRate: btcFeeRate
              });

             case 43:
              utxos = _context5.sent;

             case 44:
              return network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              precision = Math.pow(10, parseInt(networkPrecision)), coinName = _constants__WEBPACK_IMPORTED_MODULE_65__.s8[this.networkKey], 
              bytes = this.calculateVBytes({
                sender,
                receiver,
                utxos,
                feeRate: btcFeeRate,
                coinName
              }), vBytes = bytes, "TBC" === this.networkKey && (estimatedSize = this.getTbcTxSize({
                utxos,
                sender,
                receiver,
                amount
              }), vBytes = Math.max(Math.ceil(estimatedSize / 1e3 * 100), 100)), lowGasFee = (0, 
              _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(null == res ? void 0 : res.low_sato_per_byte, vBytes), 
              avgGasFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(null == res ? void 0 : res.avg_sato_per_byte, vBytes), 
              fastGasFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(null == res ? void 0 : res.fast_sato_per_byte, vBytes), 
              lowTransactionFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(lowGasFee, precision, "/"), 
              avgTransactionFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(avgGasFee, precision, "/"), 
              fastTransactionFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(fastGasFee, precision, "/"), 
              _defineProperty(_feeList = {}, _constants__WEBPACK_IMPORTED_MODULE_65__.SQ.LOW, {
                gasFee: lowTransactionFee,
                feeRate: null == res ? void 0 : res.low_sato_per_byte,
                transactionFee: lowTransactionFee,
                transactionFeeUsd: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(lowTransactionFee, coinPrice)
              }), _defineProperty(_feeList, _constants__WEBPACK_IMPORTED_MODULE_65__.SQ.AVG, {
                gasFee: avgTransactionFee,
                feeRate: null == res ? void 0 : res.avg_sato_per_byte,
                transactionFee: avgTransactionFee,
                transactionFeeUsd: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(avgTransactionFee, coinPrice)
              }), _defineProperty(_feeList, _constants__WEBPACK_IMPORTED_MODULE_65__.SQ.FAST, {
                gasFee: fastTransactionFee,
                feeRate: null == res ? void 0 : res.fast_sato_per_byte,
                transactionFee: fastTransactionFee,
                transactionFeeUsd: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(fastTransactionFee, coinPrice)
              }), feeList = _feeList, _context5.abrupt("return", {
                gasFee: null === (_feeList$SpeedType$FA = feeList[_constants__WEBPACK_IMPORTED_MODULE_65__.SQ.FAST]) || void 0 === _feeList$SpeedType$FA ? void 0 : _feeList$SpeedType$FA.gasFee,
                gasFeeList: [ {
                  gasFee: null === (_feeList$SpeedType$LO = feeList[_constants__WEBPACK_IMPORTED_MODULE_65__.SQ.LOW]) || void 0 === _feeList$SpeedType$LO ? void 0 : _feeList$SpeedType$LO.gasFee
                }, {
                  gasFee: null === (_feeList$SpeedType$AV = feeList[_constants__WEBPACK_IMPORTED_MODULE_65__.SQ.AVG]) || void 0 === _feeList$SpeedType$AV ? void 0 : _feeList$SpeedType$AV.gasFee
                }, {
                  gasFee: null === (_feeList$SpeedType$FA2 = feeList[_constants__WEBPACK_IMPORTED_MODULE_65__.SQ.FAST]) || void 0 === _feeList$SpeedType$FA2 ? void 0 : _feeList$SpeedType$FA2.gasFee
                } ],
                feeRate: +(null == res ? void 0 : res.fast_sato_per_byte) || 0,
                utxos,
                feeList,
                gasFeeUnit: "Sat/vB",
                low_pri_cost_time: null == res ? void 0 : res.low_pri_cost_time,
                avg_pri_cost_time: null == res ? void 0 : res.avg_pri_cost_time,
                fast_pri_cost_time: null == res ? void 0 : res.fast_pri_cost_time,
                native_coin_price: coinPrice,
                vBytes
              });

             case 59:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x5) {
          return _getBtcFeeByApi.apply(this, arguments);
        })
      }, {
        key: "getBtcFeeByBlocks",
        value: (_getBtcFeeByBlocks = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
          var _gasFeeList$, _gasFeeList$2, _gasFeeList$3, _gasFeeList$4, _gasFeeList$5, _gasFeeList$6, _gasFeeList$7, _gasFeeList$8, _gasFeeList$9, _feeList2, _gasFeeList$feeIndex, sender, receiver, customFeeRate, _params$feeIndex, feeIndex, amount, coinPrice, feeRate, btcFeeRate, utxoFeeRate, utxos, network, networkPrecision, precision, coinName, fee, networkFee, gasFeeList, feeList;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, customFeeRate = params.customFeeRate, 
              _params$feeIndex = params.feeIndex, feeIndex = void 0 === _params$feeIndex ? 2 : _params$feeIndex, 
              amount = params.amount, _context6.next = 3, (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.I)(this.networkKey);

             case 3:
              return coinPrice = _context6.sent, _context6.next = 6, this.getBtcFeeRate();

             case 6:
              return feeRate = _context6.sent, btcFeeRate = null != customFeeRate ? customFeeRate : feeRate, 
              utxoFeeRate = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(btcFeeRate, _constants__WEBPACK_IMPORTED_MODULE_60__.Ov[feeIndex]), 
              _context6.next = 11, this.getUtxoList({
                sender,
                btcAmount: amount,
                feeRate: btcFeeRate
              });

             case 11:
              return utxos = _context6.sent, network = this.totalNetworkDic[this.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, precision = Math.pow(10, parseInt(networkPrecision)), 
              coinName = _constants__WEBPACK_IMPORTED_MODULE_65__.s8[this.networkKey], fee = this.calculateBtcTxFee({
                sender,
                receiver,
                utxos,
                feeRate: parseInt(utxoFeeRate),
                coinName
              }), networkFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(fee, precision, "/"), 
              gasFeeList = null === _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_87__.ir || void 0 === _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_87__.ir ? void 0 : _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_87__.ir.map((function(item) {
                return {
                  gasFee: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(item, networkFee)
                };
              })), _defineProperty(_feeList2 = {}, _constants__WEBPACK_IMPORTED_MODULE_65__.SQ.LOW, {
                gasFee: null === (_gasFeeList$ = gasFeeList[0]) || void 0 === _gasFeeList$ ? void 0 : _gasFeeList$.gasFee,
                feeRate,
                transactionFee: null === (_gasFeeList$2 = gasFeeList[0]) || void 0 === _gasFeeList$2 ? void 0 : _gasFeeList$2.gasFee.toString(),
                transactionFeeUsd: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(null === (_gasFeeList$3 = gasFeeList[0]) || void 0 === _gasFeeList$3 ? void 0 : _gasFeeList$3.gasFee, coinPrice)
              }), _defineProperty(_feeList2, _constants__WEBPACK_IMPORTED_MODULE_65__.SQ.AVG, {
                gasFee: null === (_gasFeeList$4 = gasFeeList[1]) || void 0 === _gasFeeList$4 ? void 0 : _gasFeeList$4.gasFee,
                feeRate: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(feeRate, _constants__WEBPACK_IMPORTED_MODULE_60__.Ov[1]),
                transactionFee: null === (_gasFeeList$5 = gasFeeList[1]) || void 0 === _gasFeeList$5 ? void 0 : _gasFeeList$5.gasFee,
                transactionFeeUsd: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(null === (_gasFeeList$6 = gasFeeList[1]) || void 0 === _gasFeeList$6 ? void 0 : _gasFeeList$6.gasFee, coinPrice)
              }), _defineProperty(_feeList2, _constants__WEBPACK_IMPORTED_MODULE_65__.SQ.FAST, {
                gasFee: null === (_gasFeeList$7 = gasFeeList[2]) || void 0 === _gasFeeList$7 ? void 0 : _gasFeeList$7.gasFee,
                feeRate: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(feeRate, _constants__WEBPACK_IMPORTED_MODULE_60__.Ov[2]),
                transactionFee: null === (_gasFeeList$8 = gasFeeList[2]) || void 0 === _gasFeeList$8 ? void 0 : _gasFeeList$8.gasFee,
                transactionFeeUsd: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(null === (_gasFeeList$9 = gasFeeList[2]) || void 0 === _gasFeeList$9 ? void 0 : _gasFeeList$9.gasFee, coinPrice)
              }), feeList = _feeList2, _context6.abrupt("return", {
                gasFee: null === (_gasFeeList$feeIndex = gasFeeList[feeIndex]) || void 0 === _gasFeeList$feeIndex ? void 0 : _gasFeeList$feeIndex.gasFee,
                gasFeeList,
                feeRate: parseInt(utxoFeeRate),
                utxos,
                feeList,
                vBytes: +(0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(fee, parseInt(utxoFeeRate), "/"),
                gasFeeUnit: "Sat/vB",
                low_pri_cost_time: 3060,
                avg_pri_cost_time: 1560,
                fast_pri_cost_time: 780,
                native_coin_price: coinPrice.toString()
              });

             case 21:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x6) {
          return _getBtcFeeByBlocks.apply(this, arguments);
        })
      }, {
        key: "getSendBtcGasFee",
        value: (_getSendBtcGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var network;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              if (null != (network = this.totalNetworkDic[this.networkKey]) && network.isTest || null != network && network.isCustom) {
                _context7.next = 7;
                break;
              }
              return _context7.next = 4, this.getBtcFeeByApi(params);

             case 4:
             case 9:
              return _context7.abrupt("return", _context7.sent);

             case 7:
              return _context7.next = 9, this.getBtcFeeByBlocks(params);

             case 10:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x7) {
          return _getSendBtcGasFee.apply(this, arguments);
        })
      }, {
        key: "getBrc100UtxoList",
        value: (_getBrc100UtxoList = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(params) {
          var _res$data, _res$data$items, address, _yield$Promise$all, _yield$Promise$all2, res, releasedUtxos;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return address = params.address, _context8.next = 3, Promise.all([ (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.brc100UtxoList), {}, params, "data"), BtcRpc.getReleasedUtxos(address) ]);

             case 3:
              return _yield$Promise$all = _context8.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              res = _yield$Promise$all2[0], releasedUtxos = _yield$Promise$all2[1], _context8.abrupt("return", null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$items = _res$data.items) || void 0 === _res$data$items ? void 0 : _res$data$items.filter((function(item) {
                return !(null != releasedUtxos && releasedUtxos.find((function(utxo) {
                  var _utxo$vout, _item$index;
                  return (null == utxo ? void 0 : utxo.txid) == (null == item ? void 0 : item.txId) && (null == utxo || null === (_utxo$vout = utxo.vout) || void 0 === _utxo$vout ? void 0 : _utxo$vout.toString()) === (null == item || null === (_item$index = item.index) || void 0 === _item$index ? void 0 : _item$index.toString());
                })));
              })));

             case 8:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x8) {
          return _getBrc100UtxoList.apply(this, arguments);
        })
      }, {
        key: "getBrc20UtxoList",
        value: (_getBrc20UtxoList = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(params) {
          var _res$data2, tick, address, amounts, _yield$Promise$all3, _yield$Promise$all4, res, releasedUtxos;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return tick = params.tick, address = params.address, amounts = params.amounts, _context9.next = 3, 
              Promise.all([ (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.brc20UtxoList), {}, {
                address,
                amounts,
                tick,
                chain_name: this.networkKey
              }, "data"), BtcRpc.getReleasedUtxos(address) ]);

             case 3:
              return _yield$Promise$all3 = _context9.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2), 
              res = _yield$Promise$all4[0], releasedUtxos = _yield$Promise$all4[1], _context9.abrupt("return", null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 ? void 0 : _res$data2.filter((function(item) {
                return !(null != releasedUtxos && releasedUtxos.find((function(utxo) {
                  return (null == utxo ? void 0 : utxo.txid) == (null == item ? void 0 : item.txId) && (null == utxo ? void 0 : utxo.vout) === (null == item ? void 0 : item.index);
                })));
              })));

             case 8:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x9) {
          return _getBrc20UtxoList.apply(this, arguments);
        })
      }, {
        key: "calculateBrc20TransferMinerFee",
        value: function(params) {
          var sender = params.sender, receiver = params.receiver, coinName = params.coinName, brcUtxos = params.brcUtxos, utxos = params.utxos, feeRate = params.feeRate, coinType = this.wasm.CoinType[coinName], inputScript = BtcRpc.P2PKH;
          inputScript = this.detectAddressType(sender, coinType);
          var model = this.calculateOutputCountByAddress(sender, receiver, coinType), inputCount = (null == brcUtxos ? void 0 : brcUtxos.length) + (null == utxos ? void 0 : utxos.length), vBytes = this.calculateBtcTxSize({
            inputScript,
            inputCount,
            outputCount: 2,
            p2trOutputCount: model.p2trCount,
            p2pkhOutputCount: model.p2pkhCount,
            p2wpkhOutputCount: model.p2wpkhCount,
            p2shOutputCount: model.p2shCount
          });
          return parseInt((0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(feeRate, vBytes));
        }
      }, {
        key: "getSendBrcGasFee",
        value: (_getSendBrcGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(params) {
          var sender, receiver, customFeeRate, feeIndex, brcUtxoList, network, networkPrecision, btcAmount, feeRate, btcFeeRate, utxoFeeRate, utxoList, minerFee, gasFee;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, customFeeRate = params.customFeeRate, 
              feeIndex = params.feeIndex, brcUtxoList = params.brcUtxoList, network = this.totalNetworkDic[this.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, btcAmount = (0, 
              _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(BtcRpc.dustStaoshis, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context10.next = 6, this.getBtcFeeRate();

             case 6:
              return feeRate = _context10.sent, btcFeeRate = customFeeRate || feeRate, utxoFeeRate = (0, 
              _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(btcFeeRate, _constants__WEBPACK_IMPORTED_MODULE_60__.Ov[feeIndex]), 
              _context10.next = 11, this.getUtxoList({
                sender,
                btcAmount,
                feeRate
              });

             case 11:
              return utxoList = _context10.sent, minerFee = this.calculateBrc20TransferMinerFee({
                sender,
                receiver,
                coinName: _constants__WEBPACK_IMPORTED_MODULE_65__.s8[this.networkKey],
                utxos: utxoList,
                brcUtxos: brcUtxoList,
                feeRate: parseInt(utxoFeeRate)
              }), gasFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(minerFee, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context10.abrupt("return", {
                gasFee,
                feeRate: parseInt(utxoFeeRate),
                utxos: utxoList,
                brcUtxos: brcUtxoList
              });

             case 15:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x10) {
          return _getSendBrcGasFee.apply(this, arguments);
        })
      }, {
        key: "signBtcRunes",
        value: (_signBtcRunes = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(params) {
          var privateKey, sender, receiver, runeId, amount, type, runesUtxos, utxos, feeRate, wallet, runeUtxos, btcUtxos, buildTx, signParams, fee, tx;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              if (privateKey = params.privateKey, sender = params.sender, receiver = params.receiver, 
              runeId = params.runeId, amount = params.amount, type = params.type, runesUtxos = params.runesUtxos, 
              utxos = params.utxos, feeRate = params.feeRate, wallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.RunesWallet, 
              runeUtxos = this.getRuneUtxos(runesUtxos), btcUtxos = this.getRuneUtxos(utxos), 
              buildTx = wallet.buildParamsForTranferring(sender, receiver, runeId, amount, runeUtxos, btcUtxos, Math.floor(feeRate)), 
              signParams = {
                data: buildTx,
                privateKey: ""
              }, _context11.prev = 6, "gas" !== type) {
                _context11.next = 14;
                break;
              }
              return _context11.next = 10, wallet.estimateFee(signParams);

             case 10:
              return fee = _context11.sent, _context11.abrupt("return", fee);

             case 14:
              return _context11.next = 16, wallet.signTransaction(_objectSpread(_objectSpread({}, signParams), {}, {
                privateKey
              }));

             case 16:
              return tx = _context11.sent, _context11.abrupt("return", tx);

             case 18:
              _context11.next = 22;
              break;

             case 20:
              _context11.prev = 20, _context11.t0 = _context11.catch(6);

             case 22:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this, [ [ 6, 20 ] ]);
        }))), function(_x11) {
          return _signBtcRunes.apply(this, arguments);
        })
      }, {
        key: "getRuneUtxos",
        value: function(runeUtxos) {
          return null == runeUtxos ? void 0 : runeUtxos.map((function(item) {
            return {
              txId: null == item ? void 0 : item.txId,
              vOut: Number(null == item ? void 0 : item.index),
              amount: parseInt(item.amount),
              runes: null == item ? void 0 : item.runes
            };
          }));
        }
      }, {
        key: "getRunesUtxoList",
        value: (_getRunesUtxoList = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(address, runesId) {
          var res;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return _context12.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("GET", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.runesUtxoList), {
                address,
                runesId
              });

             case 2:
              return res = _context12.sent, _context12.abrupt("return", res);

             case 4:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x12, _x13) {
          return _getRunesUtxoList.apply(this, arguments);
        })
      }, {
        key: "getRunesUtxos",
        value: (_getRunesUtxos = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(address, runeid) {
          var res;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return _context13.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("GET", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.runesUtxos), {
                address,
                runeid
              });

             case 2:
              return res = _context13.sent, _context13.abrupt("return", null == res ? void 0 : res.map((function(item) {
                var _item$runes, _item$txid, _item$vout, _item$satoshis, runesCell = null == item || null === (_item$runes = item.runes) || void 0 === _item$runes ? void 0 : _item$runes.map((function(element) {
                  var _element$rune, _element$runeid, _element$spacedRune, _element$amount, _element$symbol, _element$divisibility;
                  return {
                    rune: null !== (_element$rune = null == element ? void 0 : element.rune) && void 0 !== _element$rune ? _element$rune : "",
                    runeid: null !== (_element$runeid = null == element ? void 0 : element.runeid) && void 0 !== _element$runeid ? _element$runeid : "",
                    spacedRune: null !== (_element$spacedRune = null == element ? void 0 : element.spacedRune) && void 0 !== _element$spacedRune ? _element$spacedRune : "",
                    amount: null !== (_element$amount = null == element ? void 0 : element.amount) && void 0 !== _element$amount ? _element$amount : "",
                    symbol: null !== (_element$symbol = null == element ? void 0 : element.symbol) && void 0 !== _element$symbol ? _element$symbol : "",
                    divisibility: null !== (_element$divisibility = null == element ? void 0 : element.divisibility) && void 0 !== _element$divisibility ? _element$divisibility : 0
                  };
                }));
                return {
                  txId: null !== (_item$txid = null == item ? void 0 : item.txid) && void 0 !== _item$txid ? _item$txid : "",
                  index: null !== (_item$vout = null == item ? void 0 : item.vout) && void 0 !== _item$vout ? _item$vout : 0,
                  amount: String(null !== (_item$satoshis = null == item ? void 0 : item.satoshis) && void 0 !== _item$satoshis ? _item$satoshis : 546),
                  runes: runesCell
                };
              })));

             case 4:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x14, _x15) {
          return _getRunesUtxos.apply(this, arguments);
        })
      }, {
        key: "getRunesBtcUtxo",
        value: (_getRunesBtcUtxo = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(address) {
          var res;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return _context14.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("GET", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.runesBtcUtxo), {
                address
              });

             case 2:
              return res = _context14.sent, _context14.abrupt("return", null == res ? void 0 : res.map((function(element) {
                var _element$txid, _element$vout, _element$satoshis;
                return {
                  txId: null !== (_element$txid = null == element ? void 0 : element.txid) && void 0 !== _element$txid ? _element$txid : "",
                  index: null == element || null === (_element$vout = element.vout) || void 0 === _element$vout ? void 0 : _element$vout.toString(),
                  amount: String(null !== (_element$satoshis = null == element ? void 0 : element.satoshis) && void 0 !== _element$satoshis ? _element$satoshis : 0),
                  runeId: ""
                };
              })));

             case 4:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x16) {
          return _getRunesBtcUtxo.apply(this, arguments);
        })
      }, {
        key: "getRunesGasFee",
        value: (_getRunesGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(params) {
          var token, amount, feeIndex, sender, receiver, runeId, network, networkPrecision, coinAddress, privateKey, _yield$Promise$all5, _yield$Promise$all6, runesUtxos, utxos, feeRate, btcFeeRate, fee, gasFee;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return token = params.token, amount = params.amount, feeIndex = params.feeIndex, 
              sender = params.sender, receiver = params.receiver, runeId = params.runeId, network = this.totalNetworkDic[this.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, coinAddress = (0, 
              _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinAddress"), 
              privateKey = _constants__WEBPACK_IMPORTED_MODULE_65__.c2[this.networkKey], _context15.next = 7, 
              Promise.all([ this.getRunesUtxos(sender, coinAddress), this.getRunesBtcUtxo(sender), this.getBtcFeeRate() ]);

             case 7:
              return _yield$Promise$all5 = _context15.sent, _yield$Promise$all6 = _slicedToArray(_yield$Promise$all5, 3), 
              runesUtxos = _yield$Promise$all6[0], utxos = _yield$Promise$all6[1], feeRate = _yield$Promise$all6[2], 
              btcFeeRate = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(feeRate, _constants__WEBPACK_IMPORTED_MODULE_60__.Ov[feeIndex]), 
              _context15.next = 15, this.signBtcRunes({
                privateKey,
                sender,
                receiver,
                runeId,
                amount,
                type: "gas",
                runesUtxos,
                utxos,
                feeRate: parseInt(btcFeeRate)
              });

             case 15:
              return fee = _context15.sent, gasFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(fee, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context15.abrupt("return", {
                gasFee,
                feeRate: parseInt(btcFeeRate),
                runesUtxos,
                utxos
              });

             case 18:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this);
        }))), function(_x17) {
          return _getRunesGasFee.apply(this, arguments);
        })
      }, {
        key: "buildRgbppPsbtTxPlan",
        value: (_buildRgbppPsbtTxPlan = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(params) {
          var rpcUrls, lastGetSuccessRpcTime, receiver, xudtType, sender, sendAmount, feeRate, senderPublicKey, minUtxoSatoshi, ckbRpc, collector, isL2Tx, service, source, xudts, rgbppCells, rgbppLockArgsList, existRgbppAmount, _iterator, _step, rgbppCell, ckbVirtualTxResult, _ckbVirtualTxResult, commitment, ckbRawTx, tos, psbt;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return rpcUrls = params.rpcUrls, lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, 
              receiver = params.receiver, xudtType = params.xudtType, sender = params.sender, 
              sendAmount = params.sendAmount, feeRate = params.feeRate, senderPublicKey = params.senderPublicKey, 
              minUtxoSatoshi = params.minUtxoSatoshi, _context16.next = 3, _ckb_ckb_rpc__WEBPACK_IMPORTED_MODULE_72__.A.init(this.totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

             case 3:
              return ckbRpc = _context16.sent, collector = ckbRpc.getCollector(), isL2Tx = !(receiver.startsWith("ckb") || receiver.startsWith("ckt")), 
              service = BtcRpc.getRGBPlusPlusApi(), source = new rgbpp__WEBPACK_IMPORTED_MODULE_73__.qS(service, _rgbpp_sdk_btc__WEBPACK_IMPORTED_MODULE_74__.NetworkType.MAINNET), 
              xudts = _ckb_lumos_codec__WEBPACK_IMPORTED_MODULE_75__.bytes.hexify(_ckb_lumos_base__WEBPACK_IMPORTED_MODULE_76__.blockchain.Script.pack(xudtType)), 
              _context16.next = 11, service.getRgbppAssetsByBtcAddress(sender, {
                type_script: xudts
              });

             case 11:
              rgbppCells = _context16.sent, rgbppLockArgsList = [], existRgbppAmount = BigInt(0), 
              _iterator = _createForOfIteratorHelper(rgbppCells), _context16.prev = 15, _iterator.s();

             case 17:
              if ((_step = _iterator.n()).done) {
                _context16.next = 25;
                break;
              }
              if (rgbppCell = _step.value, existRgbppAmount += (0, _ckb_utils__WEBPACK_IMPORTED_MODULE_77__.JV)(rgbppCell.data), 
              rgbppLockArgsList.push(rgbppCell.cellOutput.lock.args), !(existRgbppAmount >= BigInt(sendAmount))) {
                _context16.next = 23;
                break;
              }
              return _context16.abrupt("break", 25);

             case 23:
              _context16.next = 17;
              break;

             case 25:
              _context16.next = 30;
              break;

             case 27:
              _context16.prev = 27, _context16.t0 = _context16.catch(15), _iterator.e(_context16.t0);

             case 30:
              return _context16.prev = 30, _iterator.f(), _context16.finish(30);

             case 33:
              if (!(existRgbppAmount < BigInt(sendAmount))) {
                _context16.next = 35;
                break;
              }
              throw Error("Insufficient RGB++ Asset balance");

             case 35:
              if (!isL2Tx) {
                _context16.next = 41;
                break;
              }
              return _context16.next = 38, (0, _rgbpp_sdk_ckb__WEBPACK_IMPORTED_MODULE_78__.genBtcTransferCkbVirtualTx)({
                collector,
                rgbppLockArgsList,
                xudtTypeBytes: (0, _nervosnetwork_ckb_sdk_utils__WEBPACK_IMPORTED_MODULE_79__.serializeScript)(xudtType),
                transferAmount: BigInt(sendAmount),
                isMainnet: !0
              });

             case 38:
              ckbVirtualTxResult = _context16.sent, _context16.next = 44;
              break;

             case 41:
              return _context16.next = 43, (0, _rgbpp_sdk_ckb__WEBPACK_IMPORTED_MODULE_78__.genBtcJumpCkbVirtualTx)({
                collector,
                rgbppLockArgsList,
                xudtTypeBytes: (0, _nervosnetwork_ckb_sdk_utils__WEBPACK_IMPORTED_MODULE_79__.serializeScript)(xudtType),
                transferAmount: BigInt(sendAmount),
                toCkbAddress: receiver,
                isMainnet: !0
              });

             case 43:
              ckbVirtualTxResult = _context16.sent;

             case 44:
              return commitment = (_ckbVirtualTxResult = ckbVirtualTxResult).commitment, ckbRawTx = _ckbVirtualTxResult.ckbRawTx, 
              tos = isL2Tx ? [ receiver ] : [ sender ], _context16.next = 48, (0, _rgbpp_sdk_btc__WEBPACK_IMPORTED_MODULE_74__.sendRgbppUtxos)({
                ckbVirtualTx: ckbRawTx,
                commitment,
                tos,
                ckbCollector: collector,
                from: sender,
                source,
                feeRate,
                fromPubkey: senderPublicKey,
                minUtxoSatoshi,
                rgbppMinUtxoSatoshi: 546,
                onlyConfirmedUtxos: !0
              });

             case 48:
              return psbt = _context16.sent, _context16.abrupt("return", {
                unsignedPsbt: psbt,
                ckbVirtualTxResult
              });

             case 50:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this, [ [ 15, 27, 30, 33 ] ]);
        }))), function(_x18) {
          return _buildRgbppPsbtTxPlan.apply(this, arguments);
        })
      }, {
        key: "getPsbtforBtcSendRgb",
        value: (_getPsbtforBtcSendRgb = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(params) {
          var feeRate, sender, receiver, token, amount, rpcUrls, lastGetSuccessRpcTime, coinAddress, service, _yield$byAddressGetWa, accountInfo, publicKey, res, decimals, xudtType, feeOther, xPublickey, sendAmount, _yield$this$buildRgbp, unsignedPsbt;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return feeRate = params.feeRate, sender = params.sender, receiver = params.receiver, 
              token = params.token, amount = params.amount, rpcUrls = params.rpcUrls, lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, 
              coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinAddress"), 
              service = BtcRpc.getRGBPlusPlusApi(), _context17.next = 5, service.getBtcUtxos(sender, {
                only_confirmed: !1,
                min_satoshi: 1e3
              });

             case 5:
              if (0 !== _context17.sent.length) {
                _context17.next = 8;
                break;
              }
              return _context17.abrupt("return", {
                feeOther: 0
              });

             case 8:
              return _context17.next = 10, (0, _popup_lib_tool_someMethod__WEBPACK_IMPORTED_MODULE_71__.j5)(sender, this.networkKey);

             case 10:
              return _yield$byAddressGetWa = _context17.sent, accountInfo = _yield$byAddressGetWa.accountInfo, 
              _context17.next = 14, (0, _popup_lib_tool_someMethod__WEBPACK_IMPORTED_MODULE_71__.sm)(accountInfo, sender, this.networkKey);

             case 14:
              return publicKey = _context17.sent, _context17.next = 17, _ckb_ckb_rpc__WEBPACK_IMPORTED_MODULE_72__.A.getScriptByTypeHash(coinAddress);

             case 17:
              return res = _context17.sent, decimals = res.attributes.decimal, xudtType = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, _context17.prev = 20, _context17.next = 23, service.getRgbppPaymasterInfo();

             case 23:
              return feeOther = _context17.sent, xPublickey = publicKey.startsWith("0x") ? publicKey : "0x".concat(publicKey), 
              sendAmount = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(amount, Math.pow(10, parseInt(decimals))), 
              _context17.next = 28, this.buildRgbppPsbtTxPlan({
                sender,
                receiver,
                sendAmount,
                isMainnet: !0,
                xudtType,
                minUtxoSatoshi: 1e3,
                feeRate,
                senderPublicKey: xPublickey,
                rpcUrls,
                lastGetSuccessRpcTime
              });

             case 28:
              return _yield$this$buildRgbp = _context17.sent, unsignedPsbt = _yield$this$buildRgbp.unsignedPsbt, 
              _context17.abrupt("return", {
                psbt: unsignedPsbt,
                feeOther: feeOther.fee
              });

             case 33:
              return _context17.prev = 33, _context17.t0 = _context17.catch(20), _context17.abrupt("return", {
                feeOther: 0
              });

             case 36:
             case "end":
              return _context17.stop();
            }
          }), _callee17, this, [ [ 20, 33 ] ]);
        }))), function(_x19) {
          return _getPsbtforBtcSendRgb.apply(this, arguments);
        })
      }, {
        key: "calculateRgbppTransactionFee",
        value: function(params) {
          var _this = this, psbt = params.psbt, sender = params.sender, feeRate = params.feeRate, coinName = params.coinName, coinType = this.wasm.CoinType[coinName], inputScript = BtcRpc.P2PKH;
          inputScript = this.detectAddressType(sender, coinType);
          var txInputs = psbt.txInputs, txOutputs = psbt.txOutputs, inputCount = txInputs.length, outputCount = txOutputs.length, model = new _constants__WEBPACK_IMPORTED_MODULE_60__.q2, opreturnScriptSize = 0;
          txOutputs.forEach((function(output) {
            var outputAddress = output.address;
            if (null == outputAddress) model.opreturnCount += 1, opreturnScriptSize = output.script.length; else {
              var toType = _this.detectAddressType(outputAddress, coinType);
              toType == BtcRpc.P2PKH ? model.p2pkhCount += 1 : toType == BtcRpc.P2SH ? model.p2shCount += 1 : toType == BtcRpc.P2WPKH ? model.p2wpkhCount += 1 : toType == BtcRpc.P2TR && (model.p2trCount += 1);
            }
          }));
          var vBytes = this.calculateBtcTxSize({
            inputScript,
            inputCount,
            outputCount,
            p2shOutputCount: model.p2shCount,
            p2trOutputCount: model.p2trCount,
            p2pkhOutputCount: model.p2pkhCount,
            p2wpkhOutputCount: model.p2wpkhCount,
            opreturnCount: model.opreturnCount,
            opreturnScriptSize
          });
          return Math.ceil(feeRate * vBytes);
        }
      }, {
        key: "getSendBtcRgbGasFee",
        value: (_getSendBtcRgbGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee18(params) {
          var feeIndex, customFeeRate, sender, receiver, token, amount, rpcUrls, lastGetSuccessRpcTime, utxos, feeRate, btcFeeRate, _yield$this$getPsbtfo, psbt, feeOther, network, networkPrecision, fee, gasFee, btcAmount, utxoFeeRate;
          return regeneratorRuntime.wrap((function(_context18) {
            for (;;) switch (_context18.prev = _context18.next) {
             case 0:
              return feeIndex = params.feeIndex, customFeeRate = params.customFeeRate, sender = params.sender, 
              receiver = params.receiver, token = params.token, amount = params.amount, rpcUrls = params.rpcUrls, 
              lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, utxos = {}, _context18.next = 4, 
              this.getBtcFeeRate();

             case 4:
              return feeRate = _context18.sent, btcFeeRate = customFeeRate || feeRate, _context18.next = 8, 
              this.getPsbtforBtcSendRgb({
                feeRate: btcFeeRate,
                sender,
                receiver,
                token,
                amount,
                rpcUrls,
                lastGetSuccessRpcTime
              });

             case 8:
              return _yield$this$getPsbtfo = _context18.sent, psbt = _yield$this$getPsbtfo.psbt, 
              feeOther = _yield$this$getPsbtfo.feeOther, network = this.totalNetworkDic[this.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, fee = this.calculateRgbppTransactionFee({
                psbt,
                sender,
                feeRate,
                coinName: _constants__WEBPACK_IMPORTED_MODULE_65__.s8[this.networkKey]
              }), gasFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(Number(fee + feeOther), Math.pow(10, parseInt(networkPrecision)), "/"), 
              btcAmount = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(Number(feeOther + 546), Math.pow(10, parseInt(networkPrecision)), "/"), 
              utxoFeeRate = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(btcFeeRate, _constants__WEBPACK_IMPORTED_MODULE_60__.Ov[feeIndex]), 
              _context18.next = 19, this.getUtxoList({
                sender,
                btcAmount,
                feeRate: parseInt(utxoFeeRate)
              });

             case 19:
              return utxos = _context18.sent, _context18.abrupt("return", {
                gasFee,
                utxos
              });

             case 21:
             case "end":
              return _context18.stop();
            }
          }), _callee18, this);
        }))), function(_x20) {
          return _getSendBtcRgbGasFee.apply(this, arguments);
        })
      }, {
        key: "getBtcFeeRate",
        value: (_getBtcFeeRate = _asyncToGenerator(regeneratorRuntime.mark((function _callee19() {
          var _this$totalNetworkDic2, result, feeRate, _res$data3, res;
          return regeneratorRuntime.wrap((function(_context19) {
            for (;;) switch (_context19.prev = _context19.next) {
             case 0:
              if (!(null === (_this$totalNetworkDic2 = this.totalNetworkDic[this.networkKey]) || void 0 === _this$totalNetworkDic2 ? void 0 : _this$totalNetworkDic2.isTest)) {
                _context19.next = 13;
                break;
              }
              return _context19.next = 4, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.ox)("GET", "".concat(this.mempoolSignet, "/v1/fees/recommended"));

             case 4:
              if (200 !== (result = _context19.sent).status) {
                _context19.next = 10;
                break;
              }
              return feeRate = result.data.fastestFee + 1, _context19.abrupt("return", feeRate);

             case 10:
              return _context19.abrupt("return", 0);

             case 11:
              _context19.next = 17;
              break;

             case 13:
              return _context19.next = 15, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.transactionFee), {}, {
                chainName: this.networkKey
              }, "data");

             case 15:
              return res = _context19.sent, _context19.abrupt("return", null == res || null === (_res$data3 = res.data) || void 0 === _res$data3 ? void 0 : _res$data3.bestTransactionFee);

             case 17:
             case "end":
              return _context19.stop();
            }
          }), _callee19, this);
        }))), function() {
          return _getBtcFeeRate.apply(this, arguments);
        })
      }, {
        key: "getRunesBalance",
        value: (_getRunesBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee20(address, runeId) {
          var _releasedUtxos$filter, releasedUtxos, relievedUtxos, res;
          return regeneratorRuntime.wrap((function(_context20) {
            for (;;) switch (_context20.prev = _context20.next) {
             case 0:
              return _context20.next = 2, BtcRpc.getReleasedUtxos(address);

             case 2:
              return releasedUtxos = _context20.sent, relievedUtxos = null == releasedUtxos || null === (_releasedUtxos$filter = releasedUtxos.filter((function(item) {
                var _item$assetList;
                return null == item || null === (_item$assetList = item.assetList) || void 0 === _item$assetList ? void 0 : _item$assetList.find((function(asset) {
                  return (null == asset ? void 0 : asset.assetId) === runeId;
                }));
              }))) || void 0 === _releasedUtxos$filter ? void 0 : _releasedUtxos$filter.map((function(item) {
                return {
                  txId: null == item ? void 0 : item.txid,
                  vout: null == item ? void 0 : item.vout
                };
              })), _context20.next = 6, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.runesBalance), {}, {
                address,
                runeId,
                relievedUtxos
              });

             case 6:
              return res = _context20.sent, _context20.abrupt("return", res);

             case 8:
             case "end":
              return _context20.stop();
            }
          }), _callee20, this);
        }))), function(_x21, _x22) {
          return _getRunesBalance.apply(this, arguments);
        })
      }, {
        key: "getBrc100Balance",
        value: (_getBrc100Balance = _asyncToGenerator(regeneratorRuntime.mark((function _callee21(params) {
          var res;
          return regeneratorRuntime.wrap((function(_context21) {
            for (;;) switch (_context21.prev = _context21.next) {
             case 0:
              return _context21.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.brc100Balance), {}, params);

             case 2:
              return res = _context21.sent, _context21.abrupt("return", res);

             case 4:
             case "end":
              return _context21.stop();
            }
          }), _callee21, this);
        }))), function(_x23) {
          return _getBrc100Balance.apply(this, arguments);
        })
      }, {
        key: "getBrc20Balance",
        value: (_getBrc20Balance = _asyncToGenerator(regeneratorRuntime.mark((function _callee22(params) {
          var res;
          return regeneratorRuntime.wrap((function(_context22) {
            for (;;) switch (_context22.prev = _context22.next) {
             case 0:
              return _context22.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.brc20Balance), {}, params, "data");

             case 2:
              return res = _context22.sent, _context22.abrupt("return", null == res ? void 0 : res.data);

             case 4:
             case "end":
              return _context22.stop();
            }
          }), _callee22, this);
        }))), function(_x24) {
          return _getBrc20Balance.apply(this, arguments);
        })
      }, {
        key: "getBtcBalance",
        value: (_getBtcBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee23(params) {
          var token, sender, rpcUrls, lastGetSuccessRpcTime, coinAddress, res, protocolLabel, tick, _res2, ckbRpc, _res3, _res4, _res5;
          return regeneratorRuntime.wrap((function(_context23) {
            for (;;) switch (_context23.prev = _context23.next) {
             case 0:
              if (token = params.token, sender = params.sender, rpcUrls = params.rpcUrls, lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, 
              coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinAddress"), 
              !(0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.hT)(coinAddress)) {
                _context23.next = 10;
                break;
              }
              return _context23.next = 6, this.getBtcMainCoinBalance(params);

             case 6:
              return res = _context23.sent, _context23.abrupt("return", res);

             case 10:
              if (protocolLabel = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "protocolLabel"), 
              tick = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "tick"), 
              "RUNES" !== protocolLabel && "runes" !== protocolLabel) {
                _context23.next = 19;
                break;
              }
              return _context23.next = 15, this.getRunesBalance(sender, coinAddress);

             case 15:
              return _res2 = _context23.sent, _context23.abrupt("return", {
                balance: null == _res2 ? void 0 : _res2.amount
              });

             case 19:
              if ("RGB++" !== protocolLabel) {
                _context23.next = 29;
                break;
              }
              return _context23.next = 22, _ckb_ckb_rpc__WEBPACK_IMPORTED_MODULE_72__.A.init(this.totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

             case 22:
              return ckbRpc = _context23.sent, _context23.next = 25, ckbRpc.getRgbAssetsOnBtc({
                token,
                sender
              });

             case 25:
              return _res3 = _context23.sent, _context23.abrupt("return", {
                balance: null == _res3 ? void 0 : _res3.toString()
              });

             case 29:
              if ("BRC-100" !== protocolLabel && "brc100" !== protocolLabel) {
                _context23.next = 36;
                break;
              }
              return _context23.next = 32, this.getBrc100Balance({
                ticker: tick,
                address: sender
              });

             case 32:
              return _res4 = _context23.sent, _context23.abrupt("return", {
                transferBalance: null == _res4 ? void 0 : _res4.transferBalance,
                availableBalance: null == _res4 ? void 0 : _res4.availableBalance,
                balance: null == _res4 ? void 0 : _res4.availableBalance
              });

             case 36:
              if ("BRC-20" !== protocolLabel && "brc20" !== protocolLabel) {
                _context23.next = 43;
                break;
              }
              return _context23.next = 39, this.getBrc20Balance({
                tick,
                address: sender,
                chain_name: this.networkKey
              });

             case 39:
              return _res5 = _context23.sent, _context23.abrupt("return", {
                transferBalance: null == _res5 ? void 0 : _res5.transferBalance,
                availableBalance: null == _res5 ? void 0 : _res5.availableBalance,
                balance: null == _res5 ? void 0 : _res5.availableBalance
              });

             case 43:
              return _context23.abrupt("return", {
                balance: "0"
              });

             case 44:
             case "end":
              return _context23.stop();
            }
          }), _callee23, this);
        }))), function(_x25) {
          return _getBtcBalance.apply(this, arguments);
        })
      }, {
        key: "fetchBtcTestBalance",
        value: (_fetchBtcTestBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee24(address) {
          var result, chain_stats, balance;
          return regeneratorRuntime.wrap((function(_context24) {
            for (;;) switch (_context24.prev = _context24.next) {
             case 0:
              return _context24.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("GET", "".concat(this.mempoolSignet, "/address/").concat(address), {}, {}, "data");

             case 2:
              return result = _context24.sent, chain_stats = result.chain_stats, balance = chain_stats.funded_txo_sum - chain_stats.spent_txo_sum, 
              _context24.abrupt("return", balance.toString());

             case 6:
             case "end":
              return _context24.stop();
            }
          }), _callee24, this);
        }))), function(_x26) {
          return _fetchBtcTestBalance.apply(this, arguments);
        })
      }, {
        key: "fetchBtcBalance",
        value: (_fetchBtcBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee25(address) {
          var res;
          return regeneratorRuntime.wrap((function(_context25) {
            for (;;) switch (_context25.prev = _context25.next) {
             case 0:
              return _context25.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("POST", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.queryBalanceV2), {}, {
                chainName: this.networkKey,
                address
              }, "data");

             case 2:
              return res = _context25.sent, _context25.abrupt("return", null == res ? void 0 : res.data);

             case 4:
             case "end":
              return _context25.stop();
            }
          }), _callee25, this);
        }))), function(_x27) {
          return _fetchBtcBalance.apply(this, arguments);
        })
      }, {
        key: "fetchTbcUnspent",
        value: (_fetchTbcUnspent = _asyncToGenerator(regeneratorRuntime.mark((function _callee26(address) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context26) {
            for (;;) switch (_context26.prev = _context26.next) {
             case 0:
              return _context26.prev = 0, path = _constants__WEBPACK_IMPORTED_MODULE_60__.id.queryTbcUnspent(address), 
              _context26.next = 4, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.ox)("GET", "".concat(this.rpcUrl).concat(path));

             case 4:
              return res = _context26.sent, _context26.abrupt("return", null != res ? res : []);

             case 8:
              return _context26.prev = 8, _context26.t0 = _context26.catch(0), _context26.abrupt("return", []);

             case 11:
             case "end":
              return _context26.stop();
            }
          }), _callee26, this, [ [ 0, 8 ] ]);
        }))), function(_x28) {
          return _fetchTbcUnspent.apply(this, arguments);
        })
      }, {
        key: "selectOptimalUtxos",
        value: function(tbcUnspent, amount, feeRate) {
          var _step2, network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, sendAmountSatoshi = parseInt((0, 
          _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision)))), sortedUtxos = _toConsumableArray(tbcUnspent).sort((function(a, b) {
            return b.value - a.value;
          })), selectedUtxos = [], estimatedFee = parseInt((0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(100, feeRate)), totalValue = 0, _iterator2 = _createForOfIteratorHelper(sortedUtxos);
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
              var utxo = _step2.value;
              if (selectedUtxos.push(utxo), (totalValue += utxo.value) >= sendAmountSatoshi + estimatedFee) break;
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          if (totalValue < sendAmountSatoshi + estimatedFee) throw new Error("Insufficient balance for transaction");
          var standardUtxos = selectedUtxos.map((function(utxo) {
            var _utxo$tx_pos;
            return {
              txId: utxo.tx_hash,
              index: null !== (_utxo$tx_pos = utxo.tx_pos) && void 0 !== _utxo$tx_pos ? _utxo$tx_pos : "0",
              amount: utxo.value.toString()
            };
          }));
          return standardUtxos;
        }
      }, {
        key: "getBtcMainCoinBalance",
        value: (_getBtcMainCoinBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee27(params) {
          var sender, _ref, isTest, network, networkPrecision, res, balance, _res6, totalValue, _Object$keys, _yield$Promise$all7, _yield$Promise$all8, _res7, _yield$Promise$all8$, releasedAmount;
          return regeneratorRuntime.wrap((function(_context27) {
            for (;;) switch (_context27.prev = _context27.next) {
             case 0:
              if (sender = params.sender, _ref = this.totalNetworkDic[this.networkKey] || {}, 
              isTest = _ref.isTest, network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              !isTest) {
                _context27.next = 12;
                break;
              }
              return _context27.next = 7, this.fetchBtcTestBalance(sender);

             case 7:
              return res = _context27.sent, balance = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(res, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context27.abrupt("return", {
                balance,
                pendingBalance: balance,
                lockBalance: 0
              });

             case 12:
              if ("TBC" !== this.networkKey) {
                _context27.next = 20;
                break;
              }
              return _context27.next = 15, this.fetchTbcUnspent(sender);

             case 15:
              return _res6 = _context27.sent, totalValue = 0 === _res6.length ? 0 : _res6.reduce((function(sum, item) {
                var _item$value;
                return sum + (null !== (_item$value = item.value) && void 0 !== _item$value ? _item$value : 0);
              }), 0), _context27.abrupt("return", {
                balance: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(totalValue, Math.pow(10, parseInt(networkPrecision)), "/"),
                tbcUnspent: _res6
              });

             case 20:
              return _context27.next = 22, Promise.all([ this.fetchBtcBalance(sender), BtcRpc.getReleasedAmount(sender) ]);

             case 22:
              return _yield$Promise$all7 = _context27.sent, _yield$Promise$all8 = _slicedToArray(_yield$Promise$all7, 2), 
              _res7 = _yield$Promise$all8[0], _yield$Promise$all8$ = _yield$Promise$all8[1], releasedAmount = void 0 === _yield$Promise$all8$ ? 0 : _yield$Promise$all8$, 
              _res7.lockBalance = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(_res7.lockBalance, releasedAmount, "-"), 
              (0, bignumber_js__WEBPACK_IMPORTED_MODULE_67__.A)(_res7.lockBalance).lt(0) && (_res7.lockBalance = "0"), 
              null === (_Object$keys = Object.keys(_res7)) || void 0 === _Object$keys || _Object$keys.forEach((function(key) {
                _res7[key] = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(_res7[key], Math.pow(10, parseInt(networkPrecision)), "/");
              })), _context27.abrupt("return", _res7);

             case 31:
             case "end":
              return _context27.stop();
            }
          }), _callee27, this);
        }))), function(_x29) {
          return _getBtcMainCoinBalance.apply(this, arguments);
        })
      }, {
        key: "detectVariant",
        value: function(sender, coinType) {
          var type = this.detectAddressType(sender, coinType);
          return type === BtcRpc.P2PKH ? Bitcoin.Proto.TransactionVariant.P2PKH : type == BtcRpc.P2WPKH ? Bitcoin.Proto.TransactionVariant.P2WPKH : type == BtcRpc.P2TR ? Bitcoin.Proto.TransactionVariant.P2TRKEYPATH : Bitcoin.Proto.TransactionVariant.P2PKH;
        }
      }, {
        key: "generateUtxoPramater",
        value: function(params) {
          var _step3, BitcoinScript = this.wasm.BitcoinScript, sender = params.sender, utxos = params.utxos, coinType = params.coinType, utxoParam = [], totalAmount = 0, _iterator3 = _createForOfIteratorHelper(utxos || []);
          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
              var _value, _amount, utxo = _step3.value, txId = 1 === coinType.value ? utxo.txid : null == utxo ? void 0 : utxo.txId, utxoAmount = 1 === coinType.value ? null == utxo || null === (_value = utxo.value) || void 0 === _value ? void 0 : _value.toString() : null == utxo || null === (_amount = utxo.amount) || void 0 === _amount ? void 0 : _amount.toString(), index = Number(1 === coinType.value ? null == utxo ? void 0 : utxo.vout : null == utxo ? void 0 : utxo.index), unspent = new Bitcoin.Proto.UnspentTransaction({
                amount: long__WEBPACK_IMPORTED_MODULE_81__.A.fromString(utxoAmount),
                outPoint: new Bitcoin.Proto.OutPoint({
                  hash: new Uint8Array(Buffer.from(txId, "hex").reverse()),
                  index,
                  sequence: 4294967293
                }),
                script: new Uint8Array(BitcoinScript.lockScriptForAddress(sender, coinType).data()),
                variant: this.detectVariant(sender, coinType)
              });
              utxoParam.push(unspent), totalAmount += parseInt(utxoAmount, 10);
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
          return new _popup_lib_tool_walletCore_utxo__WEBPACK_IMPORTED_MODULE_82__.b({
            unspentTransactions: utxoParam,
            totalAmount
          });
        }
      }, {
        key: "signP2TRTransfer",
        value: (_signP2TRTransfer = _asyncToGenerator(regeneratorRuntime.mark((function _callee28(params) {
          var utxos, sender, receiver, sendAmount, feeRate, coinType, privateKeyHex, hardware, preVout, feeUtxoAmount, outpus, estimateFeeBtcTxParams, vesion, privK, estimateFeeSignParams, wallet, transferFee, changeValue, btcTxParams2, signParams2, unSignedRaw;
          return regeneratorRuntime.wrap((function(_context28) {
            for (;;) switch (_context28.prev = _context28.next) {
             case 0:
              if (utxos = params.utxos, sender = params.sender, receiver = params.receiver, sendAmount = params.sendAmount, 
              feeRate = params.feeRate, coinType = params.coinType, privateKeyHex = params.privateKeyHex, 
              hardware = params.hardware, preVout = null == utxos ? void 0 : utxos.map((function(element) {
                var _txId, _index;
                return {
                  txId: null !== (_txId = element.txId) && void 0 !== _txId ? _txId : element.txid,
                  vOut: Number(null !== (_index = element.index) && void 0 !== _index ? _index : element.vout),
                  amount: void 0 !== element.amount ? parseInt(element.amount) : parseInt(element.value),
                  sequence: 4294967293
                };
              })), feeUtxoAmount = BtcRpc.sumOfValue(utxos), (outpus = []).push({
                address: receiver,
                amount: Number(sendAmount)
              }), estimateFeeBtcTxParams = {
                inputs: preVout,
                outputs: outpus,
                address: sender,
                feePerB: feeRate
              }, vesion = 1 === coinType.value ? 239 : 128, privK = privateKeyHex ? _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.wif.encode(vesion, Buffer.from(privateKeyHex, "hex"), !1) : "", 
              estimateFeeSignParams = {
                privateKey: privK,
                data: estimateFeeBtcTxParams
              }, wallet = 1 === coinType.value ? new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.TBtcWallet : new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.BtcWallet, 
              !hardware) {
                _context28.next = 14;
                break;
              }
              _context28.t0 = _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.estimateBtcFee(estimateFeeSignParams.data), 
              _context28.next = 17;
              break;

             case 14:
              return _context28.next = 16, wallet.estimateFee(estimateFeeSignParams);

             case 16:
              _context28.t0 = _context28.sent;

             case 17:
              if (transferFee = _context28.t0, (changeValue = feeUtxoAmount - transferFee - Number(sendAmount)) > 546 && outpus.push({
                address: sender,
                amount: changeValue
              }), signParams2 = {
                privateKey: privK,
                data: btcTxParams2 = {
                  inputs: preVout,
                  outputs: outpus,
                  address: sender,
                  feePerB: feeRate
                }
              }, !hardware) {
                _context28.next = 27;
                break;
              }
              return _context28.next = 25, wallet.getHardWareRawTransaction(signParams2);

             case 25:
              return unSignedRaw = _context28.sent, _context28.abrupt("return", {
                unSignedRaw,
                params: btcTxParams2
              });

             case 27:
              return _context28.next = 29, wallet.signTransaction(signParams2);

             case 29:
              return _context28.abrupt("return", _context28.sent);

             case 30:
             case "end":
              return _context28.stop();
            }
          }), _callee28);
        }))), function(_x30) {
          return _signP2TRTransfer.apply(this, arguments);
        })
      }, {
        key: "generateSigScriptForP2SH",
        value: function(publicKey) {
          var _this$wasm2 = this.wasm, Hash = _this$wasm2.Hash, BitcoinScript = _this$wasm2.BitcoinScript, pubkeyHash = Hash.sha256RIPEMD(publicKey.data()), redeemScript = BitcoinScript.buildPayToWitnessPubkeyHash(pubkeyHash), scriptHash = Hash.ripemd(Hash.sha256(redeemScript.data())), scriptMap = {};
          return scriptMap[(0, _bg_utils_gt_base_type_transfer__WEBPACK_IMPORTED_MODULE_85__.U5)(new Uint8Array(scriptHash))] = redeemScript.data(), 
          scriptMap;
        }
      }, {
        key: "signBtcSend",
        value: (_signBtcSend = _asyncToGenerator(regeneratorRuntime.mark((function _callee29(params) {
          var token, gasFeeInfo, coinAddress, coinIsMain, tx, protocolLabel, isBrc, _coinAddress, _ref2, utxos, runesUtxos, feeRate;
          return regeneratorRuntime.wrap((function(_context29) {
            for (;;) switch (_context29.prev = _context29.next) {
             case 0:
              if (token = params.token, gasFeeInfo = params.gasFeeInfo, coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinAddress"), 
              coinIsMain = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.hT)(coinAddress), 
              tx = "", !coinIsMain) {
                _context29.next = 16;
                break;
              }
              if ("TBC" !== this.networkKey) {
                _context29.next = 11;
                break;
              }
              return _context29.next = 8, this.signSendTbc(params);

             case 8:
              tx = _context29.sent, _context29.next = 14;
              break;

             case 11:
              return _context29.next = 13, this.signSendBtc(params);

             case 13:
              tx = _context29.sent;

             case 14:
              _context29.next = 30;
              break;

             case 16:
              if (protocolLabel = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "protocolLabel"), 
              isBrc = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.nQ)(this.totalNetworkDic, token, this.networkKey), 
              "RUNES" !== (null == protocolLabel ? void 0 : protocolLabel.toUpperCase())) {
                _context29.next = 26;
                break;
              }
              return _coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinAddress"), 
              utxos = (_ref2 = gasFeeInfo).utxos, runesUtxos = _ref2.runesUtxos, feeRate = _ref2.feeRate, 
              _context29.next = 23, this.signBtcRunes(_objectSpread(_objectSpread({}, params), {}, {
                runeId: _coinAddress,
                utxos,
                runesUtxos,
                feeRate,
                type: "sign"
              }));

             case 23:
              tx = _context29.sent, _context29.next = 30;
              break;

             case 26:
              if (!isBrc) {
                _context29.next = 30;
                break;
              }
              return _context29.next = 29, this.signSendBrc(params);

             case 29:
              tx = _context29.sent;

             case 30:
              return _context29.abrupt("return", {
                tx,
                rpcUrl: this.rpcUrl
              });

             case 31:
             case "end":
              return _context29.stop();
            }
          }), _callee29, this);
        }))), function(_x31) {
          return _signBtcSend.apply(this, arguments);
        })
      }, {
        key: "getTbcTxSize",
        value: function(params) {
          var utxos = params.utxos, sender = params.sender, receiver = params.receiver, amount = params.amount, network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, sendAmount = +(0, 
          _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision))), transaction = new (tbc_lib_js_lib_transaction_transaction__WEBPACK_IMPORTED_MODULE_89___default()), changeAddress = new (tbc_lib_js_lib_address__WEBPACK_IMPORTED_MODULE_90___default())(sender), toAddress = new (tbc_lib_js_lib_address__WEBPACK_IMPORTED_MODULE_90___default())(receiver), tbcScript = new (tbc_lib_js_lib_script__WEBPACK_IMPORTED_MODULE_92___default())(changeAddress), tbcUtxos = utxos.map((function(utxo) {
            return {
              txId: utxo.txId,
              outputIndex: utxo.index,
              satoshis: parseInt(utxo.amount),
              script: tbcScript
            };
          }));
          return transaction.from(tbcUtxos), transaction.to(toAddress, sendAmount), transaction.change(changeAddress), 
          transaction._estimateSize();
        }
      }, {
        key: "signSendTbc",
        value: (_signSendTbc = _asyncToGenerator(regeneratorRuntime.mark((function _callee30(params) {
          var gasFeeInfo, sender, receiver, amount, privateKey, _ref3, utxos, gasFee, network, networkPrecision, sendAmount, fee, transaction, changeAddress, toAddress, tbcScript, tbcUtxos;
          return regeneratorRuntime.wrap((function(_context30) {
            for (;;) switch (_context30.prev = _context30.next) {
             case 0:
              return gasFeeInfo = params.gasFeeInfo, sender = params.sender, receiver = params.receiver, 
              amount = params.amount, privateKey = params.privateKey, utxos = (_ref3 = gasFeeInfo).utxos, 
              gasFee = _ref3.gasFee, network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              sendAmount = +(0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision))), 
              fee = +(0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(gasFee, Math.pow(10, parseInt(networkPrecision))), 
              transaction = new (tbc_lib_js_lib_transaction_transaction__WEBPACK_IMPORTED_MODULE_89___default()), 
              changeAddress = new (tbc_lib_js_lib_address__WEBPACK_IMPORTED_MODULE_90___default())(sender), 
              toAddress = new (tbc_lib_js_lib_address__WEBPACK_IMPORTED_MODULE_90___default())(receiver), 
              tbcScript = new (tbc_lib_js_lib_script__WEBPACK_IMPORTED_MODULE_92___default())(changeAddress), 
              tbcUtxos = utxos.map((function(utxo) {
                return {
                  txId: utxo.txId,
                  outputIndex: utxo.index,
                  satoshis: parseInt(utxo.amount),
                  script: tbcScript
                };
              })), transaction.from(tbcUtxos), transaction.to(toAddress, sendAmount), transaction.change(changeAddress), 
              transaction.fee(fee), transaction.sign(privateKey, tbc_lib_js_lib_crypto_signature__WEBPACK_IMPORTED_MODULE_91___default().SIGHASH_ALL | tbc_lib_js_lib_crypto_signature__WEBPACK_IMPORTED_MODULE_91___default().SIGHASH_FORKID), 
              _context30.abrupt("return", transaction.serialize());

             case 17:
             case "end":
              return _context30.stop();
            }
          }), _callee30, this);
        }))), function(_x32) {
          return _signSendTbc.apply(this, arguments);
        })
      }, {
        key: "signSendBtc",
        value: (_signSendBtc = _asyncToGenerator(regeneratorRuntime.mark((function _callee31(params) {
          var _this$wasm3, PrivateKey, BitcoinScript, AnySigner, CoinType, HexCoding, sender, receiver, gasFeeInfo, privateKey, amount, token, options, feeIndex, customGasInfoFormValues, hardware, _ref4, utxos, feeList, feeRate, coinName, coinType, network, coinAddress, coinPrecision, networkPrecision, sendAmount, addressType, utxoParam, _hardware$device, _yield$this$signP2TRT, unSignedRaw, _params, sign, signData, _ref5, txType, sigHashType, lockLen, build, _iterator4, _step4, input, hash, _iterator5, _step5, output, outputScript, hashType, ecPub, i, lockScript, _hardware$device2, signature, signatureBuffer, script, payment, _build$inputs$i$value, _hardware$device3, value, valueBuffer, _signature, _signatureBuffer, pubHash, _Buffer, redeemScript, privateKeyHex, _privateKey, signingInput, encoded, outputData, signingOutput, raw;
          return regeneratorRuntime.wrap((function(_context31) {
            for (;;) switch (_context31.prev = _context31.next) {
             case 0:
              if (_this$wasm3 = this.wasm, PrivateKey = _this$wasm3.PrivateKey, BitcoinScript = _this$wasm3.BitcoinScript, 
              AnySigner = _this$wasm3.AnySigner, CoinType = _this$wasm3.CoinType, HexCoding = _this$wasm3.HexCoding, 
              sender = params.sender, receiver = params.receiver, gasFeeInfo = params.gasFeeInfo, 
              privateKey = params.privateKey, amount = params.amount, token = params.token, options = params.options, 
              feeIndex = params.feeIndex, customGasInfoFormValues = params.customGasInfoFormValues, 
              hardware = options.hardware, utxos = (_ref4 = gasFeeInfo).utxos, feeList = _ref4.feeList, 
              feeRate = feeIndex === _constants__WEBPACK_IMPORTED_MODULE_65__.SQ.CUSTOM ? +(null == customGasInfoFormValues ? void 0 : customGasInfoFormValues.feeRate) : +feeList[feeIndex].feeRate, 
              coinName = _constants__WEBPACK_IMPORTED_MODULE_65__.s8[this.networkKey], coinType = CoinType[coinName], 
              network = this.totalNetworkDic[this.networkKey], coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinAddress"), 
              coinPrecision = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "coinPrecision") || (0, 
              _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_80__.N8)(token, this.networkKey, "token_decimal"), 
              networkPrecision = null == network ? void 0 : network.networkPrecision, sendAmount = (0, 
              _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision))), 
              addressType = this.detectAddressType(sender, coinType), utxoParam = this.generateUtxoPramater({
                sender,
                utxos,
                coinType
              }).unspentTransactions, !hardware) {
                _context31.next = 69;
                break;
              }
              return _context31.next = 17, this.signP2TRTransfer({
                sender,
                receiver,
                privateKeyHex: "",
                coinType,
                sendAmount,
                feeRate,
                utxos,
                hardware
              });

             case 17:
              return _yield$this$signP2TRT = _context31.sent, unSignedRaw = _yield$this$signP2TRT.unSignedRaw, 
              _params = _yield$this$signP2TRT.params, _context31.next = 22, null == hardware || null === (_hardware$device = hardware.device) || void 0 === _hardware$device ? void 0 : _hardware$device.signTxRaw("BTC", unSignedRaw, {
                t: [ {
                  a: coinAddress,
                  s: null == token ? void 0 : token.coinSimpleName,
                  d: Number(coinPrecision),
                  t: 0
                } ],
                c: [ {
                  t: 0,
                  ca: "BTC",
                  sy: network.networkSimpleSymbol,
                  d: Number(network.networkPrecision),
                  ch: network.networkName
                } ]
              });

             case 22:
              if ((sign = _context31.sent).sign) {
                _context31.next = 25;
                break;
              }
              return _context31.abrupt("return", Promise.reject("user cancel"));

             case 25:
              if (null == sign || !sign.sign) {
                _context31.next = 69;
                break;
              }
              txType = (_ref5 = signData = {
                P2PKH: {
                  txType: "00",
                  sigHashType: "01000000",
                  lockLen: "19"
                },
                P2SH: {
                  txType: "01",
                  sigHashType: "01000000",
                  lockLen: "19"
                },
                P2WPKH: {
                  txType: "01",
                  sigHashType: "01000000",
                  lockLen: "19"
                }
              }[addressType]).txType, sigHashType = _ref5.sigHashType, lockLen = _ref5.lockLen, 
              build = _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.getHardwareBTCTxBuild(_params), 
              _iterator4 = _createForOfIteratorHelper(build.inputs);
              try {
                for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) input = _step4.value, hash = (0, 
                _okxweb3_coin_bitcoin_dist_bitcoinjs_lib_bufferutils__WEBPACK_IMPORTED_MODULE_83__.reverseBuffer)(Buffer.from(input.txId, "hex")), 
                build.tx.addInput(hash, input.index, input.sequence);
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
              _iterator5 = _createForOfIteratorHelper(build.outputs);
              try {
                for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) (output = _step5.value).omniScript ? build.tx.addOutput(Buffer.from(output.omniScript), 0) : (outputScript = _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.address.toOutputScript(output.address, build.network), 
                build.tx.addOutput(outputScript, output.value));
              } catch (err) {
                _iterator5.e(err);
              } finally {
                _iterator5.f();
              }
              hashType = _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.Transaction.SIGHASH_ALL, 
              ecPub = Buffer.from(hardware.publicKey, "hex"), i = 0;

             case 36:
              if (!(i < build.inputs.length)) {
                _context31.next = 68;
                break;
              }
              if (!signData) {
                _context31.next = 65;
                break;
              }
              if (lockScript = (0, _okxweb3_coin_bitcoin_dist_bitcoinjs_lib_address__WEBPACK_IMPORTED_MODULE_84__.toOutputScript)(build.inputs[i].address).toString("hex"), 
              addressType !== BtcRpc.P2PKH) {
                _context31.next = 49;
                break;
              }
              return _context31.next = 42, null == hardware || null === (_hardware$device2 = hardware.device) || void 0 === _hardware$device2 ? void 0 : _hardware$device2.request(null == hardware ? void 0 : hardware.path, i, "".concat(txType).concat(sigHashType).concat(lockLen).concat(lockScript));

             case 42:
              signature = _context31.sent, signatureBuffer = Buffer.from(signature, "hex").slice(1), 
              script = _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.payments.p2pkh({
                pubkey: ecPub
              }).output, (payment = _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.payments.p2pkh({
                output: script,
                pubkey: ecPub,
                signature: _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.script.signature.encode(signatureBuffer, hashType)
              })).input && (build.tx.ins[i].script = payment.input), _context31.next = 65;
              break;

             case 49:
              if (addressType !== BtcRpc.P2TR) {
                _context31.next = 52;
                break;
              }
              _context31.next = 65;
              break;

             case 52:
              return value = null !== (_build$inputs$i$value = build.inputs[i].value) && void 0 !== _build$inputs$i$value ? _build$inputs$i$value : 0, 
              (valueBuffer = Buffer.alloc(8)).writeInt32LE(-1 & value, 0), valueBuffer.writeUInt32LE(Math.floor(value / 4294967296), 4), 
              _context31.next = 58, null == hardware || null === (_hardware$device3 = hardware.device) || void 0 === _hardware$device3 ? void 0 : _hardware$device3.request(null == hardware ? void 0 : hardware.path, i, "".concat(txType).concat(sigHashType).concat(lockLen).concat(lockScript).concat(valueBuffer.toString("hex")));

             case 58:
              _signature = _context31.sent, _signatureBuffer = Buffer.from(_signature, "hex").slice(1), 
              pubHash = _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.crypto.hash160(ecPub), 
              build.tx.ins[i].witness = [], build.tx.ins[i].witness.push(_okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.script.signature.encode(_signatureBuffer, hashType)), 
              build.tx.ins[i].witness.push(ecPub), addressType !== BtcRpc.P2WPKH && (redeemScript = (_Buffer = Buffer).of.apply(_Buffer, [ 22, 0, 20 ].concat(_toConsumableArray(pubHash))), 
              build.tx.ins[i].script = redeemScript);

             case 65:
              i++, _context31.next = 36;
              break;

             case 68:
              return _context31.abrupt("return", build.tx.toHex());

             case 69:
              if (privateKeyHex = BtcRpc.decodeWIFPrivateKey(privateKey), _privateKey = PrivateKey.createWithData(HexCoding.decode(privateKeyHex)), 
              addressType != BtcRpc.P2TR) {
                _context31.next = 75;
                break;
              }
              return _context31.next = 74, this.signP2TRTransfer({
                sender,
                receiver,
                privateKeyHex,
                coinType,
                sendAmount,
                feeRate,
                utxos,
                hardware
              });

             case 74:
              return _context31.abrupt("return", _context31.sent);

             case 75:
              return signingInput = Bitcoin.Proto.SigningInput.create({
                amount: long__WEBPACK_IMPORTED_MODULE_81__.A.fromString(sendAmount),
                hashType: BitcoinScript.hashTypeForCoin(coinType),
                toAddress: receiver,
                changeAddress: sender,
                byteFee: long__WEBPACK_IMPORTED_MODULE_81__.A.fromNumber(feeRate),
                coinType: coinType.value,
                utxo: utxoParam,
                privateKey: [ HexCoding.decode(privateKeyHex) ],
                fixedDustThreshold: "FB" === this.networkKey ? long__WEBPACK_IMPORTED_MODULE_81__.A.fromNumber(1e3) : "DOGE" === this.networkKey || "TBC" === this.networkKey ? long__WEBPACK_IMPORTED_MODULE_81__.A.fromNumber(546) : void 0,
                useMaxUtxo: !1
              }), addressType == BtcRpc.P2SH && (signingInput.scripts = _objectSpread(_objectSpread({}, signingInput.scripts), this.generateSigScriptForP2SH(_privateKey.getPublicKeySecp256k1(!0)))), 
              encoded = Bitcoin.Proto.SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, coinType), 
              signingOutput = Bitcoin.Proto.SigningOutput.decode(outputData), raw = (0, _bg_utils_gt_base_type_transfer__WEBPACK_IMPORTED_MODULE_85__.U5)(signingOutput.encoded), 
              _context31.abrupt("return", raw);

             case 82:
             case "end":
              return _context31.stop();
            }
          }), _callee31, this);
        }))), function(_x33) {
          return _signSendBtc.apply(this, arguments);
        })
      }, {
        key: "signSendBrc",
        value: (_signSendBrc = _asyncToGenerator(regeneratorRuntime.mark((function _callee32(params) {
          var _ref7, _CoinType$bitcoin, _CoinType$dogecoin, _CoinType$litecoin, sender, receiver, gasFeeInfo, privateKey, _ref6, brcUtxos, utxos, gasFee, feeRate, CoinType, network, networkPrecision, coinName, coinType, preVout, brcUtxoAmount, feeUtxoAmount, outputs, transferFee, changeValue, wallet, signParams, _wallet, result;
          return regeneratorRuntime.wrap((function(_context32) {
            for (;;) switch (_context32.prev = _context32.next) {
             case 0:
              if (sender = params.sender, receiver = params.receiver, gasFeeInfo = params.gasFeeInfo, 
              privateKey = params.privateKey, brcUtxos = (_ref6 = gasFeeInfo).brcUtxos, utxos = _ref6.utxos, 
              gasFee = _ref6.gasFee, feeRate = _ref6.feeRate, CoinType = this.wasm.CoinType, network = this.totalNetworkDic[this.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, coinName = _constants__WEBPACK_IMPORTED_MODULE_65__.s8[this.networkKey], 
              coinType = CoinType[coinName], preVout = null === (_ref7 = [].concat(_toConsumableArray(brcUtxos), _toConsumableArray(utxos))) || void 0 === _ref7 ? void 0 : _ref7.map((function(element) {
                return {
                  txId: element.txId || element.txid,
                  vOut: Number((null == element ? void 0 : element.index) || (null == element ? void 0 : element.vout)),
                  amount: Number(element.amount || element.value)
                };
              })), brcUtxoAmount = BtcRpc.sumOfValue(brcUtxos), feeUtxoAmount = BtcRpc.sumOfValue(utxos), 
              (outputs = []).push({
                address: receiver,
                amount: brcUtxoAmount
              }), transferFee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(gasFee, Math.pow(10, parseInt(networkPrecision))), 
              changeValue = Number((0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(feeUtxoAmount, transferFee, "-")), 
              (null == coinType ? void 0 : coinType.value) == (null === (_CoinType$bitcoin = CoinType.bitcoin) || void 0 === _CoinType$bitcoin ? void 0 : _CoinType$bitcoin.value) ? (wallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.BtcWallet, 
              changeValue > 546 && outputs.push({
                address: sender,
                amount: changeValue
              })) : (null == coinType ? void 0 : coinType.value) == (null === (_CoinType$dogecoin = CoinType.dogecoin) || void 0 === _CoinType$dogecoin ? void 0 : _CoinType$dogecoin.value) ? (wallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.DogeWallet, 
              changeValue > 1e5 && outputs.push({
                address: sender,
                amount: changeValue
              })) : (null == coinType ? void 0 : coinType.value) == (null === (_CoinType$litecoin = CoinType.litecoin) || void 0 === _CoinType$litecoin ? void 0 : _CoinType$litecoin.value) && (wallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_68__.LtcWallet, 
              changeValue > 1e4 && outputs.push({
                address: sender,
                amount: changeValue
              })), signParams = {
                privateKey,
                data: {
                  inputs: preVout,
                  outputs,
                  address: sender,
                  feePerB: feeRate
                }
              }, !wallet) {
                _context32.next = 24;
                break;
              }
              return _context32.next = 20, null === (_wallet = wallet) || void 0 === _wallet ? void 0 : _wallet.signTransaction(signParams);

             case 20:
              return result = _context32.sent, _context32.abrupt("return", result.toString());

             case 24:
              throw new Error("no wallet");

             case 25:
             case "end":
              return _context32.stop();
            }
          }), _callee32, this);
        }))), function(_x34) {
          return _signSendBrc.apply(this, arguments);
        })
      }, {
        key: "getNFTUtxoList",
        value: (_getNFTUtxoList = _asyncToGenerator(regeneratorRuntime.mark((function _callee33(params) {
          var sender, tokenID, res;
          return regeneratorRuntime.wrap((function(_context33) {
            for (;;) switch (_context33.prev = _context33.next) {
             case 0:
              return sender = params.sender, tokenID = params.tokenID, _context33.next = 3, (0, 
              _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_61__.uJ)("GET", "".concat(this.rpcUrl).concat(_constants__WEBPACK_IMPORTED_MODULE_60__.id.brc20NFTUtxoList(sender, this.networkKey, tokenID)));

             case 3:
              return res = _context33.sent, _context33.abrupt("return", res);

             case 5:
             case "end":
              return _context33.stop();
            }
          }), _callee33, this);
        }))), function(_x35) {
          return _getNFTUtxoList.apply(this, arguments);
        })
      }, {
        key: "getNFTGasFee",
        value: (_getNFTGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee34(params) {
          var _nftUtxos$, nft, sender, receiver, tokenID, network, networkPrecision, _yield$Promise$all9, _yield$Promise$all10, nftUtxos, res, btcAmount, feeRate, utxos, size, feeList;
          return regeneratorRuntime.wrap((function(_context34) {
            for (;;) switch (_context34.prev = _context34.next) {
             case 0:
              return nft = params.nft, sender = params.sender, receiver = params.receiver, tokenID = nft.tokenID, 
              network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              _context34.next = 6, Promise.all([ this.getNFTUtxoList({
                sender,
                tokenID
              }), (0, _bg_utils_gt_api_gas__WEBPACK_IMPORTED_MODULE_88__.Uh)() ]);

             case 6:
              return _yield$Promise$all9 = _context34.sent, _yield$Promise$all10 = _slicedToArray(_yield$Promise$all9, 2), 
              nftUtxos = _yield$Promise$all10[0], res = _yield$Promise$all10[1], btcAmount = (0, 
              _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(null == nftUtxos || null === (_nftUtxos$ = nftUtxos[0]) || void 0 === _nftUtxos$ ? void 0 : _nftUtxos$.amount, Math.pow(10, parseInt(networkPrecision)), "/"), 
              feeRate = Number(null == res ? void 0 : res.avg_sato_per_byte), _context34.next = 14, 
              this.getUtxoList({
                sender,
                btcAmount,
                feeRate
              });

             case 14:
              return utxos = _context34.sent, size = this.calculateTransferBtcNftSize({
                sender,
                receiver,
                utxos,
                nftUtxos,
                coinName: "bitcoin"
              }), feeList = [ {
                gasFee: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)((0, 
                _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(size, null == res ? void 0 : res.low_sato_per_byte), Math.pow(10, parseInt(networkPrecision)), "/")
              }, {
                gasFee: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)((0, 
                _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(size, null == res ? void 0 : res.avg_sato_per_byte), Math.pow(10, parseInt(networkPrecision)), "/")
              }, {
                gasFee: (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)((0, 
                _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(size, null == res ? void 0 : res.fast_sato_per_byte), Math.pow(10, parseInt(networkPrecision)), "/")
              } ], _context34.abrupt("return", {
                feeList,
                size,
                utxos,
                nftUtxos,
                gasPriceInfo: res
              });

             case 18:
             case "end":
              return _context34.stop();
            }
          }), _callee34, this);
        }))), function(_x36) {
          return _getNFTGasFee.apply(this, arguments);
        })
      }, {
        key: "calculateTransferBtcNftSize",
        value: function(params) {
          var sender = params.sender, receiver = params.receiver, utxos = params.utxos, nftUtxos = params.nftUtxos, coinName = params.coinName, _this$wasm4 = this.wasm, HDWallet = _this$wasm4.HDWallet, AnySigner = _this$wasm4.AnySigner, CoinType = _this$wasm4.CoinType, BitcoinScript = _this$wasm4.BitcoinScript, BitcoinSigHashType = _this$wasm4.BitcoinSigHashType, coinType = CoinType[coinName], privateKey = HDWallet.create(128, "").getKeyForCoin(coinType), addressType = this.detectAddressType(sender, coinType), normalSummary = this.generateUtxoPramater({
            sender,
            utxos,
            coinType
          });
          if (0 === normalSummary.totalAmount) return -1;
          var nftSummary = this.generateUtxoPramater({
            sender,
            utxos: nftUtxos,
            coinType
          }), publicKey = privateKey.getPublicKeySecp256k1(!0), data = [].concat(_toConsumableArray(nftUtxos || []), _toConsumableArray(utxos || [])), inputs = null == data ? void 0 : data.map((function(nftUtxo) {
            return new _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.Input({
              outPoint: new _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.OutPoint({
                hash: new Uint8Array(Buffer.from(nftUtxo.txId, "hex")).reverse(),
                vout: parseInt(nftUtxo.index)
              }),
              value: long__WEBPACK_IMPORTED_MODULE_81__.A.fromString(nftUtxo.amount),
              sighashType: BitcoinSigHashType.all.value,
              scriptBuilder: {
                p2wpkh: {
                  pubkey: publicKey.data()
                }
              }
            });
          })), output1 = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.Output.create({
            value: long__WEBPACK_IMPORTED_MODULE_81__.A.fromNumber(nftSummary.totalAmount),
            toAddress: receiver
          }), output2 = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.Output.create({
            value: long__WEBPACK_IMPORTED_MODULE_81__.A.fromNumber(546),
            toAddress: sender
          }), input = Bitcoin.Proto.SigningInput.create({
            signingV2: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.SigningInput.create({
              privateKeys: [ privateKey.data() ],
              builder: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.TransactionBuilder.create({
                version: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.TransactionVersion.V2,
                fixedDustThreshold: BtcRpc.dustStaoshis,
                outputs: [ output1, output2 ],
                inputs
              })
            })
          });
          addressType === BtcRpc.P2SH && (input.scripts = _objectSpread(_objectSpread({}, input.scripts), this.generateSigScriptForP2SH(privateKey.getPublicKeySecp256k1(!0)))), 
          input.utxo = [].concat(_toConsumableArray(input.utxo), _toConsumableArray(nftSummary.unspentTransactions), _toConsumableArray(normalSummary.unspentTransactions));
          var utxoPlan0 = Bitcoin.Proto.UnspentTransaction.create({
            amount: nftSummary.totalAmount,
            script: BitcoinScript.lockScriptForAddress(receiver, coinType).data()
          }), utxoPlan1 = Bitcoin.Proto.UnspentTransaction.create({
            script: BitcoinScript.lockScriptForAddress(sender, coinType).data(),
            amount: 546
          }), plan = Bitcoin.Proto.TransactionPlan.create({
            utxos: [ utxoPlan0, utxoPlan1 ]
          });
          input.plan = plan;
          var encoded = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.Bitcoin.Proto.SigningInput.encode(input).finish(), signed = AnySigner.sign(encoded, coinType), signingOutput = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.SigningOutput.decode(signed);
          return parseInt(signingOutput.vsize);
        }
      }, {
        key: "signTransferBTCNFT",
        value: function(params) {
          var _signingOutput$signin, sender = params.sender, receiver = params.receiver, privateKeyRaw = params.privateKey, utxos = params.utxos, nftUtxos = params.nftUtxos, coinName = params.coinName, gasFee = params.gasFee, _this$wasm5 = this.wasm, PrivateKey = _this$wasm5.PrivateKey, AnySigner = _this$wasm5.AnySigner, HexCoding = _this$wasm5.HexCoding, CoinType = _this$wasm5.CoinType, BitcoinSigHashType = _this$wasm5.BitcoinSigHashType, coinType = CoinType[coinName], privateKey = PrivateKey.createWithData(Buffer.from(BtcRpc.decodeWIFPrivateKey(privateKeyRaw), "hex")), addressType = this.detectAddressTypeNFT(sender, coinType), normalSummary = this.generateUtxoPramater({
            sender,
            utxos,
            coinType
          }), nftSummary = this.generateUtxoPramater({
            sender,
            utxos: nftUtxos,
            coinType
          }), network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, fee = (0, 
          _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(gasFee, Math.pow(10, parseInt(networkPrecision))), changeAmount = normalSummary.totalAmount - Number(fee), output1 = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.Output.create({
            value: long__WEBPACK_IMPORTED_MODULE_81__.A.fromNumber(nftSummary.totalAmount),
            toAddress: receiver
          }), publicKey = privateKey.getPublicKeySecp256k1(!0), changeOut = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.Output.create({
            value: long__WEBPACK_IMPORTED_MODULE_81__.A.fromNumber(changeAmount),
            builder: {
              p2wpkh: {
                pubkey: publicKey.data()
              }
            }
          }), data = [].concat(_toConsumableArray(nftUtxos || []), _toConsumableArray(utxos || [])), scriptBuilder = {};
          scriptBuilder = addressType === BtcRpc.P2TR ? {
            p2trKeyPath: publicKey.data()
          } : {
            p2wpkh: {
              pubkey: publicKey.data()
            }
          };
          var inputs = null == data ? void 0 : data.map((function(nftUtxo) {
            return new _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.Input({
              outPoint: new _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.OutPoint({
                hash: new Uint8Array(Buffer.from(nftUtxo.txId, "hex")).reverse(),
                vout: parseInt(nftUtxo.index)
              }),
              value: long__WEBPACK_IMPORTED_MODULE_81__.A.fromString(nftUtxo.amount),
              sighashType: BitcoinSigHashType.all.value,
              scriptBuilder
            });
          })), input = Bitcoin.Proto.SigningInput.create({
            signingV2: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.SigningInput.create({
              privateKeys: [ privateKey.data() ],
              builder: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.TransactionBuilder.create({
                version: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.TransactionVersion.V2,
                fixedDustThreshold: BtcRpc.dustStaoshis,
                outputs: [ output1, changeOut ],
                inputs,
                inputSelector: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.BitcoinV2.Proto.InputSelector.UseAll
              })
            })
          });
          addressType === BtcRpc.P2SH && (input.scripts = _objectSpread(_objectSpread({}, input.scripts), this.generateSigScriptForP2SH(privateKey.getPublicKeySecp256k1(!0))));
          var encoded = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.Bitcoin.Proto.SigningInput.encode(input).finish(), signed = AnySigner.sign(encoded, coinType), signingOutput = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.TW.Bitcoin.Proto.SigningOutput.decode(signed), rawTransaction = HexCoding.encode(null == signingOutput || null === (_signingOutput$signin = signingOutput.signingResultV2) || void 0 === _signingOutput$signin ? void 0 : _signingOutput$signin.encoded);
          return {
            tx: null == rawTransaction ? void 0 : rawTransaction.substring(2),
            rpcUrl: this.rpcUrl
          };
        }
      }, {
        key: "detectAddressTypeNFT",
        value: function(address, coinType) {
          var _this$wasm6 = this.wasm, CoinTypeExt = _this$wasm6.CoinTypeExt, CoinType = _this$wasm6.CoinType;
          if (coinType.value === CoinType.bitcoinCash.value) return address.startsWith("bitcoincash1") ? BtcRpc.P2WPKH : BtcRpc.P2PKH;
          if (this.isValidBitcoinAddress(address)) {
            var addressPrefix = BtcRpc.prefix(address), p2shPrefix = CoinTypeExt.p2shPrefix(coinType), p2pkhPrefix = CoinTypeExt.p2pkhPrefix(coinType);
            if (addressPrefix === p2shPrefix) return BtcRpc.P2SH;
            if (addressPrefix === p2pkhPrefix) return BtcRpc.P2PKH;
          } else {
            if (BtcRpc.isValidBech32(address)) return BtcRpc.P2WPKH;
            if (BtcRpc.isValidBech32m(address)) return BtcRpc.P2TR;
          }
          return "";
        }
      } ], staticProps = [ {
        key: "opreturnOutSize",
        value: function(scriptSize) {
          return 9 + scriptSize;
        }
      }, {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee35(totalNetworkDic, networkKey) {
          var _totalNetworkDic$netw, wasm, rpcUrl, _totalNetworkDic$netw2, _totalNetworkDic$netw3, _totalNetworkDic$netw4;
          return regeneratorRuntime.wrap((function(_context35) {
            for (;;) switch (_context35.prev = _context35.next) {
             case 0:
              return _context35.next = 2, (0, _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.t)();

             case 2:
              return wasm = _context35.sent, rpcUrl = "", rpcUrl = null !== (_totalNetworkDic$netw = totalNetworkDic[networkKey]) && void 0 !== _totalNetworkDic$netw && _totalNetworkDic$netw.isTest || "TBC" === networkKey ? (null === (_totalNetworkDic$netw2 = totalNetworkDic[networkKey]) || void 0 === _totalNetworkDic$netw2 || null === (_totalNetworkDic$netw3 = _totalNetworkDic$netw2.endpoints) || void 0 === _totalNetworkDic$netw3 || null === (_totalNetworkDic$netw4 = _totalNetworkDic$netw3.find((function(item) {
                return "rpc" === (null == item ? void 0 : item.type);
              }))) || void 0 === _totalNetworkDic$netw4 ? void 0 : _totalNetworkDic$netw4.url) || "" : _config__WEBPACK_IMPORTED_MODULE_62__.B$, 
              _context35.abrupt("return", new BtcRpc(wasm, totalNetworkDic, networkKey, rpcUrl));

             case 6:
             case "end":
              return _context35.stop();
            }
          }), _callee35);
        }))), function(_x37, _x38) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "getReleasedUtxos",
        value: (_getReleasedUtxos = _asyncToGenerator(regeneratorRuntime.mark((function _callee36(address) {
          var res, store, released;
          return regeneratorRuntime.wrap((function(_context36) {
            for (;;) switch (_context36.prev = _context36.next) {
             case 0:
              return res = [], _context36.prev = 1, store = localforage__WEBPACK_IMPORTED_MODULE_64___default().createInstance({
                name: "utxosReleased"
              }), _context36.next = 5, store.getItem(address);

             case 5:
              if (_context36.t0 = _context36.sent, _context36.t0) {
                _context36.next = 8;
                break;
              }
              _context36.t0 = "[]";

             case 8:
              released = _context36.t0, res = JSON.parse(released), _context36.next = 14;
              break;

             case 12:
              _context36.prev = 12, _context36.t1 = _context36.catch(1);

             case 14:
              return _context36.abrupt("return", res);

             case 15:
             case "end":
              return _context36.stop();
            }
          }), _callee36, null, [ [ 1, 12 ] ]);
        }))), function(_x39) {
          return _getReleasedUtxos.apply(this, arguments);
        })
      }, {
        key: "getSizeOfScriptlengthElement",
        value: function(length) {
          if (length < 75) return 1;
          if (length <= 255) return 2;
          if (length <= 65535) return 3;
          if (length <= 4294967295) return 5;
          throw new Error("size of redeem script is too large");
        }
      }, {
        key: "getSizeOfVarInt",
        value: function(length) {
          if (length < 253) return 1;
          if (length < 65535) return 3;
          if (length < 4294967295) return 5;
          if ((0, bignumber_js__WEBPACK_IMPORTED_MODULE_67__.A)(length).comparedTo("18446744073709551615") < 0) return 9;
          throw new Error("invalid var int");
        }
      }, {
        key: "getTxOverheadVBytes",
        value: function(inputScript, inputCount, outputCount) {
          var witnessVBytes = 0;
          return witnessVBytes = inputScript == BtcRpc.P2PKH || inputScript == BtcRpc.P2SH ? 0 : .5 + inputCount / 4, 
          4 + BtcRpc.getSizeOfVarInt(inputCount) + BtcRpc.getSizeOfVarInt(outputCount) + 4 + witnessVBytes;
        }
      }, {
        key: "getTxOverheadExtraRawBytes",
        value: function(inputScript, inputCount) {
          return 3 * (inputScript == BtcRpc.P2PKH || inputScript == BtcRpc.P2SH ? 0 : .5 + inputCount / 4);
        }
      }, {
        key: "prefix",
        value: function(address) {
          var prefix = __webpack_require__(616763).decode(address)[0];
          return prefix;
        }
      }, {
        key: "isValidBech32",
        value: function(address) {
          try {
            return bech32__WEBPACK_IMPORTED_MODULE_66__.bech32.decode(address), !0;
          } catch (_unused3) {
            return !1;
          }
        }
      }, {
        key: "isValidBech32m",
        value: function(address) {
          try {
            return bech32__WEBPACK_IMPORTED_MODULE_66__.bech32m.decode(address), !0;
          } catch (_unused4) {
            return !1;
          }
        }
      }, {
        key: "getRGBPlusPlusApi",
        value: function() {
          var apiUrl = "".concat(_bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_70__.O5, "/ckb");
          return new _btc_assets_api__WEBPACK_IMPORTED_MODULE_69__.A({
            url: apiUrl,
            token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJteS1hcHAiLCJhdWQiOiJidGMtYXNzZXRzLWFwaS50ZXN0bmV0Lm1pYmFvLnBybyIsImp0aSI6Ijg4ODUxY2NjLWFiN2EtNDFkMC04MDdhLTE3Mjk0OTMzZTkwNyIsImlhdCI6MTcxNjc3NzEzMX0.O5cHR7Q3ZDRaeKGydlbLT_bOIADwbk5KFRUnZmQSX64",
            origin: "https://gate.io"
          });
        }
      }, {
        key: "getReleasedAmount",
        value: (_getReleasedAmount = _asyncToGenerator(regeneratorRuntime.mark((function _callee37(address) {
          var amount, utxosReleased;
          return regeneratorRuntime.wrap((function(_context37) {
            for (;;) switch (_context37.prev = _context37.next) {
             case 0:
              return amount = "0", _context37.next = 3, BtcRpc.getReleasedUtxos(address);

             case 3:
              return null == (utxosReleased = _context37.sent) || utxosReleased.forEach((function(item) {
                amount = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_63__.dataOperation)(amount, null == item ? void 0 : item.outputValue, "+");
              })), _context37.abrupt("return", amount);

             case 6:
             case "end":
              return _context37.stop();
            }
          }), _callee37);
        }))), function(_x40) {
          return _getReleasedAmount.apply(this, arguments);
        })
      }, {
        key: "sumOfValue",
        value: function(data) {
          return data ? data.reduce((function(acc, element) {
            var _amount2;
            return acc + +(null !== (_amount2 = element.amount) && void 0 !== _amount2 ? _amount2 : element.value);
          }), 0) : 0;
        }
      }, {
        key: "decodeWIFPrivateKey",
        value: function(privateKey) {
          return (0, _bg_utils_gt_base_type_transfer__WEBPACK_IMPORTED_MODULE_85__.U5)(wif__WEBPACK_IMPORTED_MODULE_86___default().decode(privateKey).privateKey);
        }
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), BtcRpc;
    }();
    _defineProperty(BtcRpc, "P2PKH_IN_SIZE", 148), _defineProperty(BtcRpc, "P2PKH_OUT_SIZE", 34), 
    _defineProperty(BtcRpc, "P2SH_OUT_SIZE", 32), _defineProperty(BtcRpc, "P2SH_P2WPKH_OUT_SIZE", 32), 
    _defineProperty(BtcRpc, "P2SH_P2WSH_OUT_SIZE", 32), _defineProperty(BtcRpc, "P2SH_P2WPKH_IN_SIZE", 90.75), 
    _defineProperty(BtcRpc, "P2WPKH_IN_SIZE", 67.75), _defineProperty(BtcRpc, "P2WPKH_OUT_SIZE", 31), 
    _defineProperty(BtcRpc, "P2WSH_OUT_SIZE", 43), _defineProperty(BtcRpc, "P2TR_OUT_SIZE", 43), 
    _defineProperty(BtcRpc, "P2TR_IN_SIZE", 57.25), _defineProperty(BtcRpc, "PUBKEY_SIZE", 33), 
    _defineProperty(BtcRpc, "SIGNATURE_SIZE", 72), _defineProperty(BtcRpc, "P2PKH", "P2PKH"), 
    _defineProperty(BtcRpc, "P2SH", "P2SH"), _defineProperty(BtcRpc, "P2SH_P2WPKH", "P2SH-P2WPKH"), 
    _defineProperty(BtcRpc, "P2TR", "P2TR"), _defineProperty(BtcRpc, "P2WPKH", "P2WPKH"), 
    _defineProperty(BtcRpc, "P2SH_P2WSH", "P2SH-P2WSH"), _defineProperty(BtcRpc, "P2WSH", "P2WSH"), 
    _defineProperty(BtcRpc, "dustStaoshis", 546);
    const __WEBPACK_DEFAULT_EXPORT__ = BtcRpc;
  },
  313189: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Xf: () => getFee,
      bd: () => getScriptByTypeHash
    });
    __webpack_require__(752231), __webpack_require__(505086), __webpack_require__(269193), 
    __webpack_require__(380115), __webpack_require__(207452);
    var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(272505), axios__WEBPACK_IMPORTED_MODULE_5___default = __webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);
    __webpack_require__(803599), __webpack_require__(441256), __webpack_require__(741600), 
    __webpack_require__(71313);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getFee = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2() {
        var id, payload, res, fee;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return id = Math.round(1e4 * Math.random()), payload = {
              id,
              method: "get_fee_rate_statics",
              params: [],
              jsonrpc: "2.0"
            }, _context2.next = 4, postJson(payload);

           case 4:
            return res = _context2.sent, fee = parseInt(res.result.median), _context2.abrupt("return", fee);

           case 7:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function() {
        return _ref2.apply(this, arguments);
      };
    }(), postJson = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
        var data, _args3 = arguments;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return data = _args3.length > 0 && void 0 !== _args3[0] ? _args3[0] : {}, _context3.abrupt("return", new Promise((function(resolve, reject) {
              axios__WEBPACK_IMPORTED_MODULE_5___default()({
                method: "post",
                url: "https://mainnet.ckb.dev/rpc",
                data: JSON.stringify(data),
                timeout: 3e3,
                headers: {
                  "Content-Type": "application/json"
                }
              }).then((function(resp) {
                resolve(resp.data);
              })).catch((function(err) {
                500 === err.status || err.status, reject(err);
              }));
            })));

           case 2:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function() {
        return _ref3.apply(this, arguments);
      };
    }(), getScriptByTypeHash = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(typeHash) {
        var options, response, data;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return options = {
              method: "GET",
              headers: {
                Accept: "application/vnd.api+json",
                "Content-Type": "application/vnd.api+json"
              }
            }, _context4.prev = 1, _context4.next = 4, fetch("https://mainnet-api.explorer.nervos.org/api/v1/udts/".concat(typeHash), options);

           case 4:
            if ((response = _context4.sent).ok) {
              _context4.next = 7;
              break;
            }
            throw new Error("HTTP error! status: ".concat(response.status));

           case 7:
            return _context4.next = 9, response.json();

           case 9:
            return data = _context4.sent, _context4.abrupt("return", data.data);

           case 13:
            throw _context4.prev = 13, _context4.t0 = _context4.catch(1), _context4.t0;

           case 16:
           case "end":
            return _context4.stop();
          }
        }), _callee4, null, [ [ 1, 13 ] ]);
      })));
      return function(_x4) {
        return _ref4.apply(this, arguments);
      };
    }();
  },
  318568: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      D4: () => fetchGasLimit,
      R6: () => getMainCoinBalance,
      XH: () => executeTxBlock,
      Xp: () => sendSui20Token,
      _H: () => getTransactionBlock,
      bO: () => sendSuiToken,
      et: () => sendSuiNFT,
      ev: () => sendTransactionBlockBySwapPayload,
      go: () => estimateNFTGasFee,
      lT: () => signMessage,
      lw: () => fetchTxBlockGas,
      pq: () => signTransactionBlock
    });
    __webpack_require__(207452), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(700017), __webpack_require__(714913), 
    __webpack_require__(259581), __webpack_require__(752231), __webpack_require__(219693), 
    __webpack_require__(380115), __webpack_require__(334867), __webpack_require__(418665), 
    __webpack_require__(301772), __webpack_require__(953746), __webpack_require__(520861), 
    __webpack_require__(571905), __webpack_require__(285213), __webpack_require__(97182), 
    __webpack_require__(512279), __webpack_require__(639302), __webpack_require__(770147), 
    __webpack_require__(866217), __webpack_require__(697966), __webpack_require__(735186), 
    __webpack_require__(135944), __webpack_require__(644787), __webpack_require__(950632), 
    __webpack_require__(552278), __webpack_require__(614245), __webpack_require__(252492), 
    __webpack_require__(193266), __webpack_require__(537192), __webpack_require__(237220), 
    __webpack_require__(482432), __webpack_require__(632483), __webpack_require__(536696), 
    __webpack_require__(458083), __webpack_require__(269193), __webpack_require__(504895), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(564216), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(215195), 
    __webpack_require__(498741), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(407899), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012);
    var _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(335011), _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(259032), _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(662756), _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(404976), bignumber_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(760346), _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(426451), _method__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(326394), _api_httpService__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(227383), _api_api__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(653360), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var parseAmount = function(amount, coinDecimals) {
      try {
        return BigInt(_method__WEBPACK_IMPORTED_MODULE_62__.cutInteger(_method__WEBPACK_IMPORTED_MODULE_62__.dataOperation(amount, Math.pow(10, coinDecimals))).toString());
      } catch (e) {
        return BigInt(0);
      }
    }, getMainCoinBalance = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(owner, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var suiProvider, result, num;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return suiProvider = _context.sent, _context.prev = 3, _context.next = 6, suiProvider.getBalance({
              owner
            });

           case 6:
            return result = _context.sent, num = (0, bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A)(result.totalBalance).dividedBy((0, 
            bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A)("1000000000")).toString(), _context.abrupt("return", num);

           case 11:
            return _context.prev = 11, _context.t0 = _context.catch(3), _context.abrupt("return", 0);

           case 14:
           case "end":
            return _context.stop();
          }
        }), _callee, null, [ [ 3, 11 ] ]);
      })));
      return function(_x, _x2, _x3, _x4) {
        return _ref.apply(this, arguments);
      };
    }(), fetchGasLimit = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(sendInfo, receiver, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var suiProvider, sender, _result$effects, amount, decimals, tx, coin, coinType, coins, realSendCoinType, _coins$data$filter, _coins$data$filter2, primaryCoin, mergeCoins, primaryCoinInput, _coin, txString, result, gasUsedObject, total, max, gasLimit, _ref3, _error$toString;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            if (suiProvider = _context2.sent, sender = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
            _context2.prev = 4, amount = null == sendInfo ? void 0 : sendInfo.coinTransferAmount, 
            decimals = null == sendInfo ? void 0 : sendInfo.coinPrecision, (tx = new _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K).setSender(sender), 
            null == sendInfo || !sendInfo.coinIsMain) {
              _context2.next = 14;
              break;
            }
            coin = tx.splitCoins(tx.gas, [ parseAmount(amount, decimals) ]), tx.transferObjects([ coin ], tx.pure(receiver)), 
            _context2.next = 24;
            break;

           case 14:
            return coinType = null == sendInfo ? void 0 : sendInfo.coinContractAddress, _context2.next = 17, 
            suiProvider.getCoins({
              owner: sender,
              coinType
            });

           case 17:
            coins = _context2.sent, realSendCoinType = _method__WEBPACK_IMPORTED_MODULE_62__.getRealAptosCoinType(coinType), 
            _coins$data$filter = coins.data.filter((function(coin) {
              return _method__WEBPACK_IMPORTED_MODULE_62__.getRealAptosCoinType(null == coin ? void 0 : coin.coinType) === realSendCoinType;
            })), _coins$data$filter2 = _toArray(_coins$data$filter), primaryCoin = _coins$data$filter2[0], 
            mergeCoins = _coins$data$filter2.slice(1), primaryCoinInput = tx.object(primaryCoin.coinObjectId), 
            mergeCoins.length && tx.mergeCoins(primaryCoinInput, mergeCoins.map((function(coin) {
              return tx.object(coin.coinObjectId);
            }))), _coin = tx.splitCoins(primaryCoinInput, [ tx.pure(parseAmount(amount, decimals)) ]), 
            tx.transferObjects([ _coin ], tx.pure(receiver));

           case 24:
            return _context2.next = 26, tx.build({
              client: suiProvider
            });

           case 26:
            return txString = _context2.sent, _context2.next = 29, suiProvider.dryRunTransactionBlock({
              transactionBlock: txString
            });

           case 29:
            return result = _context2.sent, gasUsedObject = null == result || null === (_result$effects = result.effects) || void 0 === _result$effects ? void 0 : _result$effects.gasUsed, 
            total = parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) + parseInt(null == gasUsedObject ? void 0 : gasUsedObject.storageCost) - parseInt(null == gasUsedObject ? void 0 : gasUsedObject.storageRebate), 
            max = parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) > total ? parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) : total, 
            gasLimit = parseInt(_method__WEBPACK_IMPORTED_MODULE_62__.dataOperation(max, 1.3)), 
            _context2.abrupt("return", {
              gasLimit
            });

           case 37:
            return _context2.prev = 37, _context2.t0 = _context2.catch(4), _context2.abrupt("return", {
              gasLimit: 0,
              insufficientBalance: null !== (_ref3 = (null === _context2.t0 || void 0 === _context2.t0 || null === (_error$toString = _context2.t0.toString()) || void 0 === _error$toString ? void 0 : _error$toString.indexOf("GasBalanceTooLow")) >= 0) && void 0 !== _ref3 && _ref3
            });

           case 40:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 4, 37 ] ]);
      })));
      return function(_x5, _x6, _x7, _x8, _x9) {
        return _ref2.apply(this, arguments);
      };
    }(), estimateNFTGasFee = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(sendInfo, receiver) {
        var _result$effects2, suiProvider, sender, tx, nftObjectId, txString, result, gasUsedObject, computationCost, storageCost, storageRebate, totalGasUsed, maxGas, gasLimit, gasFee, gasPrice, suiPrice, suiPriceBN, gasFeeUSD;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.prev = 0, _context3.next = 3, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI");

           case 3:
            return suiProvider = _context3.sent, sender = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
            (tx = new _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K).setSender(sender), 
            nftObjectId = null == sendInfo ? void 0 : sendInfo.nftContractAddress, tx.transferObjects([ tx.object(nftObjectId) ], tx.pure(receiver)), 
            _context3.next = 11, tx.build({
              client: suiProvider
            });

           case 11:
            return txString = _context3.sent, _context3.next = 14, suiProvider.dryRunTransactionBlock({
              transactionBlock: txString
            });

           case 14:
            return result = _context3.sent, gasUsedObject = null == result || null === (_result$effects2 = result.effects) || void 0 === _result$effects2 ? void 0 : _result$effects2.gasUsed, 
            computationCost = new bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A((null == gasUsedObject ? void 0 : gasUsedObject.computationCost) || "0"), 
            storageCost = new bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A((null == gasUsedObject ? void 0 : gasUsedObject.storageCost) || "0"), 
            storageRebate = new bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A((null == gasUsedObject ? void 0 : gasUsedObject.storageRebate) || "0"), 
            totalGasUsed = computationCost.plus(storageCost).minus(storageRebate), maxGas = bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A.max(computationCost, totalGasUsed), 
            gasLimit = maxGas.multipliedBy(1.3).integerValue(bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A.ROUND_CEIL), 
            gasFee = gasLimit.dividedBy(new bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A(1e9)), 
            _context3.t0 = bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A, _context3.next = 26, 
            suiProvider.getReferenceGasPrice();

           case 26:
            return _context3.t1 = _context3.sent, gasPrice = new _context3.t0(_context3.t1), 
            _context3.next = 30, getSuiPrice(sendInfo);

           case 30:
            return suiPrice = _context3.sent, suiPriceBN = new bignumber_js__WEBPACK_IMPORTED_MODULE_60__.A(suiPrice), 
            gasFeeUSD = gasFee.multipliedBy(suiPriceBN), _context3.abrupt("return", {
              gasPrice: gasPrice.toString(),
              gasLimit,
              gasFee,
              transferFee: gasFee,
              feeMoneyText: "".concat(gasFee.toFixed(8), " SUI ≈ $").concat(gasFeeUSD.toFixed(3)),
              gasFeeMoney: gasFee,
              maxPriorityFeePerGas: "0",
              maxFeePerGas: gasPrice.toString(),
              gasSelectData: {
                gas: [ gasPrice.multipliedBy(.9).toString(), gasPrice.toString(), gasPrice.multipliedBy(1.8).toString() ],
                gasFee: [ gasFee.multipliedBy(.9).toFixed(8), gasFee.toFixed(8), gasFee.multipliedBy(1.8).toFixed(8) ],
                gasMoney: [ gasFeeUSD.multipliedBy(.9).toFixed(3), gasFeeUSD.toFixed(3), gasFeeUSD.multipliedBy(1.8).toFixed(3) ],
                gasCoinSymbol: "SUI"
              },
              minimumSymbol: "MIST",
              gasFeeList: [ {
                maxPriorityFeePerGas: "0",
                maxFeePerGas: gasPrice.multipliedBy(.9).toString(),
                estimatedGas: gasFee.multipliedBy(.9).toString()
              }, {
                maxPriorityFeePerGas: "0",
                maxFeePerGas: gasPrice.toString(),
                estimatedGas: gasFee.toString()
              }, {
                maxPriorityFeePerGas: "0",
                maxFeePerGas: gasPrice.multipliedBy(1.8).toString(),
                estimatedGas: gasFee.multipliedBy(1.8).toString()
              } ]
            });

           case 36:
            return _context3.prev = 36, _context3.t2 = _context3.catch(0), _context3.abrupt("return", {
              gasPrice: "0",
              gasLimit: "0",
              gasFee: "0",
              transferFee: "0",
              feeMoneyText: "0 SUI",
              gasFeeMoney: "0",
              maxPriorityFeePerGas: "0",
              maxFeePerGas: "0",
              gasSelectData: {
                gas: [ "0", "0", "0" ],
                gasFee: [ "0", "0", "0" ],
                gasMoney: [ "0", "0", "0" ],
                gasCoinSymbol: "SUI"
              },
              gasFeeList: [],
              minimumSymbol: "MIST",
              error: _context3.t2.message
            });

           case 39:
           case "end":
            return _context3.stop();
          }
        }), _callee3, null, [ [ 0, 36 ] ]);
      })));
      return function(_x10, _x11) {
        return _ref4.apply(this, arguments);
      };
    }();
    function getSuiPrice(_x12) {
      return _getSuiPrice.apply(this, arguments);
    }
    function _getSuiPrice() {
      return (_getSuiPrice = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(coinItem) {
        var coinValue;
        return regeneratorRuntime.wrap((function(_context16) {
          for (;;) switch (_context16.prev = _context16.next) {
           case 0:
            return coinValue = coinItem.coinNetworkKey, _context16.next = 3, _api_api__WEBPACK_IMPORTED_MODULE_64__.getInfoCoin({
              networkKeyList: [ coinValue ]
            }).then((function(res) {
              var _res$data3 = res.data, code = _res$data3.code, data = _res$data3.data;
              if (0 === code && "{}" !== JSON.stringify(data)) {
                var item = data[coinValue];
                return item && item.coinUnitPrice ? _method__WEBPACK_IMPORTED_MODULE_62__.getDecimalsUnitPrice(item.coinUnitPrice) : "0.00";
              }
            }));

           case 3:
            return _context16.abrupt("return", _context16.sent);

           case 4:
           case "end":
            return _context16.stop();
          }
        }), _callee16);
      })))).apply(this, arguments);
    }
    var checkNFTStatus = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(suiProvider, sender, nftObjectId) {
        var _nftObject$data, _nftObject$data$owner, nftObject, ownerAddress;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.prev = 0, _context4.next = 3, suiProvider.getObject({
              id: nftObjectId,
              options: {
                showContent: !0,
                showOwner: !0,
                showType: !0,
                showDisplay: !0
              }
            });

           case 3:
            if (null != (nftObject = _context4.sent) && null !== (_nftObject$data = nftObject.data) && void 0 !== _nftObject$data && _nftObject$data.content) {
              _context4.next = 6;
              break;
            }
            throw new Error("NFT not found");

           case 6:
            if ((ownerAddress = null === (_nftObject$data$owner = nftObject.data.owner) || void 0 === _nftObject$data$owner ? void 0 : _nftObject$data$owner.AddressOwner) && ownerAddress === sender) {
              _context4.next = 9;
              break;
            }
            throw new Error("Not the owner of this NFT");

           case 9:
            return _context4.abrupt("return", nftObject);

           case 12:
            throw _context4.prev = 12, _context4.t0 = _context4.catch(0), _context4.t0;

           case 15:
           case "end":
            return _context4.stop();
          }
        }), _callee4, null, [ [ 0, 12 ] ]);
      })));
      return function(_x13, _x14, _x15) {
        return _ref5.apply(this, arguments);
      };
    }(), sendSuiNFT = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(sendInfo, gasInfo, privateKey) {
        var suiProvider, sender, receiver, nftObjectId, keypair, tx, result;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return _context5.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI");

           case 2:
            if (suiProvider = _context5.sent, _context5.prev = 3, null != sendInfo && sendInfo.nftContractAddress && null != sendInfo && sendInfo.coinTransferToAddress) {
              _context5.next = 6;
              break;
            }
            throw new Error("Invalid parameters");

           case 6:
            return sender = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, receiver = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, 
            nftObjectId = null == sendInfo ? void 0 : sendInfo.nftContractAddress, _context5.next = 11, 
            checkNFTStatus(suiProvider, sender, nftObjectId);

           case 11:
            return keypair = _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__.h.fromSecretKey((0, 
            _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__.aT)(privateKey)), (tx = new _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K).setSender(sender), 
            tx.transferObjects([ tx.object(nftObjectId) ], tx.pure(receiver)), null != gasInfo && gasInfo.gasLimit && tx.setGasBudget(BigInt(gasInfo.gasLimit)), 
            _context5.next = 18, suiProvider.signAndExecuteTransactionBlock({
              transactionBlock: tx,
              signer: keypair
            });

           case 18:
            if (null != (result = _context5.sent) && result.digest) {
              _context5.next = 21;
              break;
            }
            throw new Error("Transaction failed");

           case 21:
            return _context5.abrupt("return", result.digest);

           case 24:
            throw _context5.prev = 24, _context5.t0 = _context5.catch(3), _context5.t0;

           case 27:
           case "end":
            return _context5.stop();
          }
        }), _callee5, null, [ [ 3, 24 ] ]);
      })));
      return function(_x16, _x17, _x18) {
        return _ref6.apply(this, arguments);
      };
    }(), sendSuiToken = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(receiver, gasLimit, amount, decimals, privateKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var suiProvider, keypair, tx, coin, result;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _context6.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return suiProvider = _context6.sent, _context6.prev = 3, keypair = _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__.h.fromSecretKey((0, 
            _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__.aT)(privateKey)), tx = new _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K, 
            coin = tx.splitCoins(tx.gas, [ tx.pure(parseAmount(amount, decimals)) ]), tx.setGasBudget(BigInt(gasLimit)), 
            tx.transferObjects([ coin ], tx.pure(receiver)), _context6.next = 11, suiProvider.signAndExecuteTransactionBlock({
              transactionBlock: tx,
              signer: keypair
            });

           case 11:
            return result = _context6.sent, _context6.abrupt("return", result.digest || "");

           case 15:
            return _context6.prev = 15, _context6.t0 = _context6.catch(3), _context6.abrupt("return", "");

           case 18:
           case "end":
            return _context6.stop();
          }
        }), _callee6, null, [ [ 3, 15 ] ]);
      })));
      return function(_x19, _x20, _x21, _x22, _x23, _x24, _x25, _x26) {
        return _ref7.apply(this, arguments);
      };
    }(), sendSui20Token = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(sendInfo, privateKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var suiProvider, sender, receiver, coinType, amount, decimals, keyPair, tx, coins, realSendCoinType, _coins$data$filter3, _coins$data$filter4, primaryCoin, mergeCoins, primaryCoinInput, coin, result;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return _context7.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return suiProvider = _context7.sent, sender = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
            receiver = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, coinType = null == sendInfo ? void 0 : sendInfo.coinContractAddress, 
            amount = null == sendInfo ? void 0 : sendInfo.coinTransferAmount, decimals = null == sendInfo ? void 0 : sendInfo.coinPrecision, 
            _context7.prev = 8, keyPair = _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__.h.fromSecretKey((0, 
            _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__.aT)(privateKey)), (tx = new _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K).setSender(sender), 
            _context7.next = 14, suiProvider.getCoins({
              owner: sender,
              coinType
            });

           case 14:
            return coins = _context7.sent, realSendCoinType = _method__WEBPACK_IMPORTED_MODULE_62__.getRealAptosCoinType(coinType), 
            _coins$data$filter3 = coins.data.filter((function(coin) {
              var realCoinType = _method__WEBPACK_IMPORTED_MODULE_62__.getRealAptosCoinType(null == coin ? void 0 : coin.coinType);
              return realSendCoinType === realCoinType;
            })), _coins$data$filter4 = _toArray(_coins$data$filter3), primaryCoin = _coins$data$filter4[0], 
            mergeCoins = _coins$data$filter4.slice(1), primaryCoinInput = tx.object(primaryCoin.coinObjectId), 
            mergeCoins.length && tx.mergeCoins(primaryCoinInput, mergeCoins.map((function(coin) {
              return tx.object(coin.coinObjectId);
            }))), coin = tx.splitCoins(primaryCoinInput, [ tx.pure(parseAmount(amount, decimals)) ]), 
            tx.transferObjects([ coin ], tx.pure(receiver)), _context7.next = 23, suiProvider.signAndExecuteTransactionBlock({
              transactionBlock: tx,
              signer: keyPair
            });

           case 23:
            return result = _context7.sent, _context7.abrupt("return", result.digest || "");

           case 27:
            return _context7.prev = 27, _context7.t0 = _context7.catch(8), _context7.abrupt("return", "");

           case 30:
           case "end":
            return _context7.stop();
          }
        }), _callee7, null, [ [ 8, 27 ] ]);
      })));
      return function(_x27, _x28, _x29, _x30, _x31) {
        return _ref8.apply(this, arguments);
      };
    }(), signMessage = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(privateKey, message) {
        var keypair, signedMsg;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            return _context8.prev = 0, keypair = _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__.h.fromSecretKey((0, 
            _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__.aT)(privateKey)), _context8.next = 4, 
            keypair.signPersonalMessage(new Uint8Array(message));

           case 4:
            return signedMsg = _context8.sent, _context8.abrupt("return", signedMsg);

           case 8:
            _context8.prev = 8, _context8.t0 = _context8.catch(0);

           case 10:
           case "end":
            return _context8.stop();
          }
        }), _callee8, null, [ [ 0, 8 ] ]);
      })));
      return function(_x32, _x33) {
        return _ref9.apply(this, arguments);
      };
    }(), signTransactionBlock = function() {
      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(privateKey, transactionBlock, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var suiProvider, tx, keypair, transactionBytes, result;
        return regeneratorRuntime.wrap((function(_context9) {
          for (;;) switch (_context9.prev = _context9.next) {
           case 0:
            return _context9.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return suiProvider = _context9.sent, _context9.prev = 3, tx = _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K.from(transactionBlock), 
            keypair = _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__.h.fromSecretKey((0, 
            _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__.aT)(privateKey)), tx.setSenderIfNotSet(keypair.toSuiAddress()), 
            _context9.next = 9, tx.build({
              client: suiProvider
            });

           case 9:
            return transactionBytes = _context9.sent, _context9.next = 12, keypair.signTransactionBlock(transactionBytes);

           case 12:
            return result = _context9.sent, _context9.abrupt("return", _objectSpread(_objectSpread({}, result), {}, {
              transactionBlockBytes: null == result ? void 0 : result.bytes
            }));

           case 16:
            return _context9.prev = 16, _context9.t0 = _context9.catch(3), _context9.abrupt("return", "");

           case 19:
           case "end":
            return _context9.stop();
          }
        }), _callee9, null, [ [ 3, 16 ] ]);
      })));
      return function(_x34, _x35, _x36, _x37, _x38) {
        return _ref10.apply(this, arguments);
      };
    }(), sendTransactionBlockBySwapPayload = function() {
      var _ref11 = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(privateKey, swapPayload, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var suiProvider, tx, keypair, result;
        return regeneratorRuntime.wrap((function(_context10) {
          for (;;) switch (_context10.prev = _context10.next) {
           case 0:
            return _context10.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return suiProvider = _context10.sent, _context10.prev = 3, tx = _mysten_sui_transactions__WEBPACK_IMPORTED_MODULE_58__.Z.from(Buffer.from(swapPayload, "base64").toString("utf-8")), 
            keypair = _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__.h.fromSecretKey((0, 
            _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__.aT)(privateKey)), tx.setSenderIfNotSet(keypair.toSuiAddress()), 
            _context10.next = 9, suiProvider.signAndExecuteTransactionBlock({
              transactionBlock: tx,
              signer: keypair
            });

           case 9:
            return result = _context10.sent, _context10.abrupt("return", result);

           case 13:
            return _context10.prev = 13, _context10.t0 = _context10.catch(3), _context10.abrupt("return", "");

           case 16:
           case "end":
            return _context10.stop();
          }
        }), _callee10, null, [ [ 3, 13 ] ]);
      })));
      return function(_x39, _x40, _x41, _x42, _x43) {
        return _ref11.apply(this, arguments);
      };
    }(), fetchTxBlockGas = function() {
      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(sender, transactionBlock, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var suiProvider, _result$effects3, tx, txString, result, gasUsedObject, total, max, gasLimit;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            return _context11.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return suiProvider = _context11.sent, _context11.prev = 3, (tx = _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K.from(transactionBlock)).setSender(sender), 
            _context11.next = 8, tx.build({
              client: suiProvider
            });

           case 8:
            return txString = _context11.sent, _context11.next = 11, suiProvider.dryRunTransactionBlock({
              transactionBlock: txString
            });

           case 11:
            return result = _context11.sent, gasUsedObject = null == result || null === (_result$effects3 = result.effects) || void 0 === _result$effects3 ? void 0 : _result$effects3.gasUsed, 
            total = parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) + parseInt(null == gasUsedObject ? void 0 : gasUsedObject.storageCost) - parseInt(null == gasUsedObject ? void 0 : gasUsedObject.storageRebate), 
            max = parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) > total ? parseInt(null == gasUsedObject ? void 0 : gasUsedObject.computationCost) : total, 
            gasLimit = parseInt(_method__WEBPACK_IMPORTED_MODULE_62__.dataOperation(max, 1.3)), 
            _context11.abrupt("return", gasLimit);

           case 19:
            _context11.prev = 19, _context11.t0 = _context11.catch(3);

           case 21:
           case "end":
            return _context11.stop();
          }
        }), _callee11, null, [ [ 3, 19 ] ]);
      })));
      return function(_x44, _x45, _x46, _x47, _x48) {
        return _ref12.apply(this, arguments);
      };
    }(), executeTxBlock = function() {
      var _ref13 = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(sender, privateKey, transactionBlock, gasLimit, rpcAddress, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        return regeneratorRuntime.wrap((function(_context14) {
          for (;;) switch (_context14.prev = _context14.next) {
           case 0:
            return _context14.abrupt("return", new Promise(function() {
              var _ref14 = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(resolve, reject) {
                var suiProvider, keypair, tx, result, getInfo, info;
                return regeneratorRuntime.wrap((function(_context13) {
                  for (;;) switch (_context13.prev = _context13.next) {
                   case 0:
                    return _context13.next = 2, _allWeb3Method__WEBPACK_IMPORTED_MODULE_61__.Qp("SUI", totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

                   case 2:
                    return suiProvider = _context13.sent, _context13.prev = 3, keypair = _mysten_sui_js_keypairs_ed25519__WEBPACK_IMPORTED_MODULE_56__.h.fromSecretKey((0, 
                    _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_59__.aT)(privateKey)), (tx = _mysten_sui_js_transactions__WEBPACK_IMPORTED_MODULE_57__.K.from(transactionBlock)).setSender(sender), 
                    tx.setGasBudget(BigInt(gasLimit)), _context13.next = 10, suiProvider.signAndExecuteTransactionBlock({
                      transactionBlock: tx,
                      signer: keypair
                    });

                   case 10:
                    if (result = _context13.sent, getInfo = function() {
                      var _ref15 = _asyncToGenerator(regeneratorRuntime.mark((function _callee12() {
                        var _res$data, res, _res$data2;
                        return regeneratorRuntime.wrap((function(_context12) {
                          for (;;) switch (_context12.prev = _context12.next) {
                           case 0:
                            return _context12.next = 2, getTransactionBlock(rpcAddress, null == result ? void 0 : result.digest);

                           case 2:
                            if (null == (res = _context12.sent) || null === (_res$data = res.data) || void 0 === _res$data || !_res$data.result) {
                              _context12.next = 7;
                              break;
                            }
                            return _context12.abrupt("return", null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 ? void 0 : _res$data2.result);

                           case 7:
                            return _context12.next = 9, getInfo();

                           case 9:
                            return _context12.abrupt("return", _context12.sent);

                           case 10:
                           case "end":
                            return _context12.stop();
                          }
                        }), _callee12);
                      })));
                      return function() {
                        return _ref15.apply(this, arguments);
                      };
                    }(), null == result || !result.digest) {
                      _context13.next = 19;
                      break;
                    }
                    return _context13.next = 15, getInfo();

                   case 15:
                    info = _context13.sent, resolve(info), _context13.next = 20;
                    break;

                   case 19:
                    throw new Error("no digest");

                   case 20:
                    _context13.next = 25;
                    break;

                   case 22:
                    _context13.prev = 22, _context13.t0 = _context13.catch(3), reject(_context13.t0);

                   case 25:
                   case "end":
                    return _context13.stop();
                  }
                }), _callee13, null, [ [ 3, 22 ] ]);
              })));
              return function(_x57, _x58) {
                return _ref14.apply(this, arguments);
              };
            }()));

           case 1:
           case "end":
            return _context14.stop();
          }
        }), _callee14);
      })));
      return function(_x49, _x50, _x51, _x52, _x53, _x54, _x55, _x56) {
        return _ref13.apply(this, arguments);
      };
    }(), getTransactionBlock = function() {
      var _ref16 = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(rpcAddress, digest) {
        var params, res;
        return regeneratorRuntime.wrap((function(_context15) {
          for (;;) switch (_context15.prev = _context15.next) {
           case 0:
            return params = {
              jsonrpc: "2.0",
              id: 1,
              method: "sui_getTransactionBlock",
              params: [ digest, {
                showInput: !0,
                showRawInput: !1,
                showEffects: !0,
                showEvents: !0,
                showObjectChanges: !1,
                showBalanceChanges: !1,
                showRawEffects: !1
              } ]
            }, _context15.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_63__.axiosRequest)("post", rpcAddress, params);

           case 3:
            return res = _context15.sent, _context15.abrupt("return", res);

           case 5:
           case "end":
            return _context15.stop();
          }
        }), _callee15);
      })));
      return function(_x59, _x60) {
        return _ref16.apply(this, arguments);
      };
    }();
  },
  320913: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      J: () => BNBApiConfig,
      QR: () => TronApiConfig,
      id: () => BTCApiConfig,
      qS: () => AptosApiConfig,
      rL: () => CosmosApiConfig
    });
    __webpack_require__(380115), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(505086), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), Constructor;
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var BTCApiConfig = function() {
      function BTCApiConfig() {
        _classCallCheck(this, BTCApiConfig);
      }
      return _createClass(BTCApiConfig, null, [ {
        key: "brc20NFTUtxoList",
        value: function(address, chain, nftId) {
          return "/transaction/nft/getUTXOById?address=".concat(address, "&chain=").concat(chain, "&nftId=").concat(nftId);
        }
      } ]), BTCApiConfig;
    }();
    _defineProperty(BTCApiConfig, "addressTypeList", "/app/web3/userAddress/addressTypeList"), 
    _defineProperty(BTCApiConfig, "addAddress", "/app/web3/userAddress/add"), _defineProperty(BTCApiConfig, "queryBalance", "/app/web3/userAddress/balance"), 
    _defineProperty(BTCApiConfig, "userAddressList", "/app/web3/userAddress/list"), 
    _defineProperty(BTCApiConfig, "chainInfoList", "/app/web3/chainInfo/list"), _defineProperty(BTCApiConfig, "coinInfoList", "/app/web3/coinInfo/list"), 
    _defineProperty(BTCApiConfig, "transactions", "/app/web3/transactions/page"), _defineProperty(BTCApiConfig, "utxoList", "/app/web3/transactions/utxo/list"), 
    _defineProperty(BTCApiConfig, "utxoListAvailable", "/app/web3/transactions/utxo/listAvailable"), 
    _defineProperty(BTCApiConfig, "sendTransaction", "/app/web3/transactions/sendRawTransaction"), 
    _defineProperty(BTCApiConfig, "transactionFee", "/app/web3/transactions/fee"), _defineProperty(BTCApiConfig, "brc20UtxoList", "/app/web3/transactions/brc20/transfer/utxo"), 
    _defineProperty(BTCApiConfig, "brc20Balance", "/app/web3/userAddress/brc20/balance"), 
    _defineProperty(BTCApiConfig, "queryBalanceV2", "/app/web3/userAddress/balanceV2"), 
    _defineProperty(BTCApiConfig, "lockedUTXOList", "/app/web3/transactions/lockedUtxoList"), 
    _defineProperty(BTCApiConfig, "brc20Tick", "/app/web3/transactions/utxo/getTick"), 
    _defineProperty(BTCApiConfig, "runesUtxoList", "/v1/defi/runes/utxoList"), _defineProperty(BTCApiConfig, "runesBalance", "/v1/defi/runes/runeBalance"), 
    _defineProperty(BTCApiConfig, "runesUtxos", "/v1/defi/runes/utxos"), _defineProperty(BTCApiConfig, "runesBtcUtxo", "/v1/defi/runes/btcUtxo"), 
    _defineProperty(BTCApiConfig, "brc100UtxoList", "/v1/defi/brc100/address/inscriptions/transferrable"), 
    _defineProperty(BTCApiConfig, "brc100Balance", "/v1/defi/brc100/address/balance"), 
    _defineProperty(BTCApiConfig, "brc100UtxoByInscriptionId", "/v1/defi/brc100/getInscriptionUtxo?inscriptionId");
    var CosmosApiConfig = function() {
      function CosmosApiConfig() {
        _classCallCheck(this, CosmosApiConfig);
      }
      return _createClass(CosmosApiConfig, null, [ {
        key: "queryBalanceByDenom",
        value: function(address, denom) {
          return "/cosmos/bank/v1beta1/balances/" + address + "/by_denom?denom=" + denom;
        }
      }, {
        key: "queryBalance",
        value: function(address) {
          return "/cosmos/bank/v1beta1/balances/" + address;
        }
      }, {
        key: "queryAccountInfoByAddress",
        value: function(address) {
          return "/cosmos/auth/v1beta1/accounts/" + address;
        }
      }, {
        key: "queryDenomMetaData",
        value: function(denom) {
          return "/cosmos/bank/v1beta1/denoms_metadata/" + denom;
        }
      } ]), CosmosApiConfig;
    }();
    _defineProperty(CosmosApiConfig, "boardcastTransaction", "/cosmos/tx/v1beta1/txs"), 
    _defineProperty(CosmosApiConfig, "status", "/cosmos/base/tendermint/v1beta1/node_info"), 
    _defineProperty(CosmosApiConfig, "simulate", "/cosmos/tx/v1beta1/simulate");
    var TronApiConfig = function TronApiConfig() {
      _classCallCheck(this, TronApiConfig);
    };
    _defineProperty(TronApiConfig, "version", "/v1"), _defineProperty(TronApiConfig, "createAccount", "wallet/createaccount"), 
    _defineProperty(TronApiConfig, "getAccount", "wallet/getaccount"), _defineProperty(TronApiConfig, "getAccountBalance", "wallet/getaccountbalance"), 
    _defineProperty(TronApiConfig, "createTransaction", "wallet/createtransaction"), 
    _defineProperty(TronApiConfig, "broadcast", "wallet/broadcasthex"), _defineProperty(TronApiConfig, "broadcastRawTransaction", "wallet/broadcasttransaction"), 
    _defineProperty(TronApiConfig, "estimate", "wallet/triggerconstantcontract"), _defineProperty(TronApiConfig, "gasPrice", "wallet/getenergyprices"), 
    _defineProperty(TronApiConfig, "getblock", "wallet/getblock"), _defineProperty(TronApiConfig, "getBandwidthPrices", "wallet/getbandwidthprices"), 
    _defineProperty(TronApiConfig, "getAccountResource", "wallet/getaccountresource"), 
    _defineProperty(TronApiConfig, "getTransactionInfoById", "wallet/gettransactioninfobyid");
    var AptosApiConfig = function() {
      function AptosApiConfig() {
        _classCallCheck(this, AptosApiConfig);
      }
      return _createClass(AptosApiConfig, null, [ {
        key: "queryBalance",
        value: function(address, _ref) {
          var _ref$aptoCoinType = _ref.aptoCoinType, aptoCoinType = void 0 === _ref$aptoCoinType ? "0x1::aptos_coin::AptosCoin" : _ref$aptoCoinType;
          return "".concat(this.version, "/accounts/").concat(address, "/resource/0x1::coin::CoinStore<").concat(aptoCoinType, ">");
        }
      }, {
        key: "querySequenceNumber",
        value: function(address) {
          return "".concat(this.version, "/accounts/").concat(address);
        }
      }, {
        key: "accountResource",
        value: function(address, resourceType) {
          return "".concat(this.version, "/accounts/").concat(address, "/resource/").concat(resourceType);
        }
      }, {
        key: "tableItem",
        value: function(handle) {
          return "".concat(this.version, "/tables/").concat(handle, "/item");
        }
      } ]), AptosApiConfig;
    }();
    _defineProperty(AptosApiConfig, "version", "v1"), _defineProperty(AptosApiConfig, "ledgerInfo", AptosApiConfig.version), 
    _defineProperty(AptosApiConfig, "gasPrice", "".concat(AptosApiConfig.version, "/estimate_gas_price")), 
    _defineProperty(AptosApiConfig, "simulateTransaction", "".concat(AptosApiConfig.version, "/transactions/simulate?estimate_max_gas_amount=true")), 
    _defineProperty(AptosApiConfig, "submitTransaction", "".concat(AptosApiConfig.version, "/transactions")), 
    _defineProperty(AptosApiConfig, "getTransactionByHash", (function(hash) {
      return "".concat(AptosApiConfig.version, "/transactions/by_hash/").concat(hash);
    }));
    var BNBApiConfig = function() {
      function BNBApiConfig() {
        _classCallCheck(this, BNBApiConfig);
      }
      return _createClass(BNBApiConfig, null, [ {
        key: "getAccount",
        value: function(address) {
          return "".concat(this.prefix, "/account/").concat(address);
        }
      }, {
        key: "getTx",
        value: function(hash) {
          return "".concat(this.prefix, "/txs/").concat(hash);
        }
      }, {
        key: "getAccountSequence",
        value: function(address) {
          return "".concat(this.prefix, "/account/").concat(address, "/sequence");
        }
      } ]), BNBApiConfig;
    }();
    _defineProperty(BNBApiConfig, "prefix", "api/v1"), _defineProperty(BNBApiConfig, "broadcast", "".concat(BNBApiConfig.prefix, "/broadcast")), 
    _defineProperty(BNBApiConfig, "nodeInfo", "".concat(BNBApiConfig.prefix, "/node-info")), 
    _defineProperty(BNBApiConfig, "fee", "".concat(BNBApiConfig.prefix, "/fees"));
  },
  322976: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      WF: () => calculationFeeMoney,
      kz: () => getSolanaGasFee,
      xw: () => getTransaction,
      AS: () => hexToUint8Array,
      Tj: () => transferSolanaERC20Token,
      DA: () => transferSolanaToken
    });
    __webpack_require__(207452), __webpack_require__(194009), __webpack_require__(196088), 
    __webpack_require__(418665), __webpack_require__(301772), __webpack_require__(505086), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(752231), __webpack_require__(885365), __webpack_require__(269193), 
    __webpack_require__(579389), __webpack_require__(906048), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(407899), __webpack_require__(700017), __webpack_require__(110678), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(103101), 
    __webpack_require__(936012), __webpack_require__(504895), __webpack_require__(564216), 
    __webpack_require__(714913), __webpack_require__(498741), __webpack_require__(215195);
    var tool_allWeb3Method = __webpack_require__(426451), method = __webpack_require__(326394), api = __webpack_require__(653360), Notification = __webpack_require__(279386), lang_string = __webpack_require__(212864), index_browser_esm = __webpack_require__(262643), mint = __webpack_require__(121498), constants = __webpack_require__(949215), send = __webpack_require__(688280), solanaRpc = __webpack_require__(782397), bs58 = __webpack_require__(616763), bs58_default = __webpack_require__.n(bs58), wallet = __webpack_require__(620107), chainRequestMethod = __webpack_require__(700313), httpService = __webpack_require__(227383), associatedTokenAccount = (__webpack_require__(687136), 
    __webpack_require__(640173), __webpack_require__(509646)), transferChecked = __webpack_require__(192549), joypixels = __webpack_require__(352327), joypixels_default = __webpack_require__.n(joypixels), emoji_regex = __webpack_require__(90631), Buffer = __webpack_require__(348287).Buffer;
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getRecentBlockhash = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(rpcAddress) {
        var _res$data, _res$data$result, _res$data$result$valu, res;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, (0, httpService.postJson)(rpcAddress, {
              jsonrpc: "2.0",
              id: 1,
              method: "getLatestBlockhash",
              params: []
            });

           case 2:
            return res = _context.sent, _context.abrupt("return", null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$result = _res$data.result) || void 0 === _res$data$result || null === (_res$data$result$valu = _res$data$result.value) || void 0 === _res$data$result$valu ? void 0 : _res$data$result$valu.blockhash);

           case 4:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), getCoinName = function(_char) {
      var coinName = _char;
      (0, emoji_regex.A)().test(_char) && (coinName = joypixels_default().toShort(coinName).replace(/[^\w\s]/gi, ""));
      return coinName;
    }, buildSolanaTokenTransfer = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(coinItem, hardware) {
        var _cacheSendData$gasInf, cacheSendData, connection, solanaPriorityFee, fromAddress, toAddress, coinContractAddress, amount, rpcAddress, networkKey, fromPublicKey, toPublicKey, mintPublicKey, decimals, chainFullName, coinOriginName, coinName, coinInfo, isToken2022, programId, fromTokenAccount, toTokenAccount, transaction, modifyComputeUnits, addPriorityFee, rentExemptionAmount, createToTokenAccountIx, blockhash, unsignedTx, extraMsg, signature, _hardware$device, signedRsv, signatureBytes, serializedTransaction;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.prev = 0, _context2.next = 3, method.getDefiItem("cacheSendData");

           case 3:
            return cacheSendData = _context2.sent, _context2.next = 6, tool_allWeb3Method.Qp("SOL");

           case 6:
            return connection = _context2.sent, solanaPriorityFee = null == cacheSendData || null === (_cacheSendData$gasInf = cacheSendData.gasInfo) || void 0 === _cacheSendData$gasInf ? void 0 : _cacheSendData$gasInf.solanaPriorityFee, 
            fromAddress = coinItem.coinTransferFromAddress, toAddress = coinItem.coinTransferToAddress, 
            coinContractAddress = coinItem.coinContractAddress, amount = coinItem.coinTransferAmount * Math.pow(10, coinItem.coinPrecision), 
            rpcAddress = coinItem.coinNetworkRpcAddress, networkKey = coinItem.coinNetworkKey, 
            fromPublicKey = new index_browser_esm.J3(fromAddress), toPublicKey = new index_browser_esm.J3(toAddress), 
            mintPublicKey = new index_browser_esm.J3(coinContractAddress), decimals = coinItem.coinPrecision, 
            chainFullName = coinItem.coinNetworkName, coinOriginName = coinItem.coinSimpleName, 
            coinName = getCoinName(coinOriginName), coinInfo = {
              t: 0,
              ca: networkKey,
              sy: "SOL",
              d: 9,
              ch: chainFullName,
              curve: 4
            }, _context2.next = 24, fetchIsToken2022(connection, mintPublicKey);

           case 24:
            return isToken2022 = _context2.sent, programId = isToken2022 ? constants.sy : void 0, 
            _context2.next = 28, (0, mint.Ob)(mintPublicKey, fromPublicKey, !1, programId);

           case 28:
            return fromTokenAccount = _context2.sent, _context2.next = 31, (0, mint.Ob)(mintPublicKey, toPublicKey, !1, programId);

           case 31:
            return toTokenAccount = _context2.sent, transaction = new index_browser_esm.ZX, 
            solanaPriorityFee && (modifyComputeUnits = index_browser_esm.d_.setComputeUnitLimit({
              units: 4e5
            }), addPriorityFee = index_browser_esm.d_.setComputeUnitPrice({
              microLamports: Number(solanaPriorityFee)
            }), transaction.add(modifyComputeUnits).add(addPriorityFee)), _context2.next = 36, 
            connection.getAccountInfo(toTokenAccount);

           case 36:
            if (_context2.sent) {
              _context2.next = 48;
              break;
            }
            return _context2.next = 40, connection.getMinimumBalanceForRentExemption(165);

           case 40:
            return rentExemptionAmount = _context2.sent, _context2.next = 43, connection.getBalance(fromPublicKey);

           case 43:
            if (!(_context2.sent - Number(solanaPriorityFee) < rentExemptionAmount)) {
              _context2.next = 46;
              break;
            }
            throw new Error("Insufficient funds to create fromTokenAccount");

           case 46:
            createToTokenAccountIx = (0, associatedTokenAccount.JA)(fromPublicKey, toTokenAccount, toPublicKey, mintPublicKey, programId), 
            transaction.add(createToTokenAccountIx);

           case 48:
            return transaction.add((0, transferChecked.fl)(fromTokenAccount, mintPublicKey, toTokenAccount, fromPublicKey, amount, decimals, [], programId)), 
            _context2.next = 51, getRecentBlockhash(rpcAddress);

           case 51:
            return blockhash = _context2.sent, transaction.recentBlockhash = blockhash, transaction.feePayer = fromPublicKey, 
            unsignedTx = transaction.serializeMessage(), extraMsg = {
              c: [ coinInfo ],
              t: [ {
                a: coinContractAddress,
                s: coinName,
                d: Number(decimals),
                t: 0
              } ]
            }, _context2.next = 58, hardware.device.signTxRaw("SOL", unsignedTx, extraMsg);

           case 58:
            if ((signature = _context2.sent).sign) {
              _context2.next = 61;
              break;
            }
            return _context2.abrupt("return", Promise.reject("user cancel"));

           case 61:
            if (null == signature || !signature.sign) {
              _context2.next = 69;
              break;
            }
            return _context2.next = 64, null == hardware || null === (_hardware$device = hardware.device) || void 0 === _hardware$device ? void 0 : _hardware$device.request(null == hardware ? void 0 : hardware.path, 0, "0x00");

           case 64:
            return signedRsv = _context2.sent, signatureBytes = Buffer.from(signedRsv, "hex"), 
            transaction.addSignature(fromPublicKey, signatureBytes), serializedTransaction = transaction.serialize(), 
            _context2.abrupt("return", bs58_default().encode(serializedTransaction));

           case 69:
            _context2.next = 74;
            break;

           case 71:
            throw _context2.prev = 71, _context2.t0 = _context2.catch(0), _context2.t0;

           case 74:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 0, 71 ] ]);
      })));
      return function(_x2, _x3) {
        return _ref2.apply(this, arguments);
      };
    }(), fetchIsToken2022 = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(connection, mintPublicKey) {
        var _mintAccountInfo$valu, mintAccountInfo, mintAccountData;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, connection.getParsedAccountInfo(mintPublicKey);

           case 2:
            return mintAccountInfo = _context3.sent, mintAccountData = null === (_mintAccountInfo$valu = mintAccountInfo.value) || void 0 === _mintAccountInfo$valu ? void 0 : _mintAccountInfo$valu.data, 
            _context3.abrupt("return", "spl-token-2022" === (null == mintAccountData ? void 0 : mintAccountData.program));

           case 5:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x4, _x5) {
        return _ref3.apply(this, arguments);
      };
    }(), send_receive = __webpack_require__(492774), solSend_Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function solSend_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function solSend_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            solSend_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            solSend_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getSolanaGasFee = function() {
      var _ref = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee(coinItem) {
        var transFeeSol, priorityFee, gasFee, feeMoney;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.prev = 0, _context.next = 3, (0, send_receive.TN)();

           case 3:
            return transFeeSol = _context.sent, priorityFee = (null == transFeeSol ? void 0 : transFeeSol.prioritizationFee) || 0, 
            gasFee = method.dataOperation(5e3 + Number(method.dataOperation(priorityFee, 5, "/")), Math.pow(10, null == coinItem ? void 0 : coinItem.coinNetworkPrecision), "/"), 
            _context.next = 8, calculationFeeMoney(coinItem, gasFee);

           case 8:
            return feeMoney = _context.sent, _context.abrupt("return", _objectSpread(_objectSpread({}, {
              gasFee,
              solanaPriorityFee: priorityFee
            }), feeMoney));

           case 12:
            _context.prev = 12, _context.t0 = _context.catch(0);

           case 14:
           case "end":
            return _context.stop();
          }
        }), _callee, null, [ [ 0, 12 ] ]);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), calculationFeeMoney = function() {
      var _ref2 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee2(coinItem, gasFee) {
        var coinValue, cacheData, dealPrice, money, moneyText, coinInfo, _coinInfo$data, code, data, item, _dealPrice, _money, _moneyText;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return coinValue = coinItem.coinNetworkKey, _context2.next = 3, method.getDefiItem("cacheSendData");

           case 3:
            if (!("coinUnitPrice" in (cacheData = _context2.sent)) || null == cacheData || !cacheData.coinUnitPrice) {
              _context2.next = 11;
              break;
            }
            return dealPrice = method.getDecimalsUnitPrice(cacheData.coinUnitPrice), money = method.dataOperation(Number(dealPrice), Number(gasFee), "multiplication", !0), 
            moneyText = gasFee + " " + coinItem.coinNetworkSymbol + " ≈ $" + money, _context2.abrupt("return", {
              money,
              moneyText
            });

           case 11:
            return _context2.next = 13, api.getInfoCoin({
              networkKeyList: [ coinValue ]
            });

           case 13:
            if (coinInfo = _context2.sent, _coinInfo$data = coinInfo.data, code = _coinInfo$data.code, 
            data = _coinInfo$data.data, 0 !== code) {
              _context2.next = 27;
              break;
            }
            if ("{}" === JSON.stringify(data)) {
              _context2.next = 27;
              break;
            }
            if (!(item = data[coinValue]) || !item.coinUnitPrice) {
              _context2.next = 26;
              break;
            }
            return _dealPrice = method.getDecimalsUnitPrice(item.coinUnitPrice), _money = method.dataOperation(Number(_dealPrice), Number(gasFee), "multiplication", !0), 
            _moneyText = gasFee + " " + coinItem.coinNetworkSymbol + " ≈ $" + _money, method.setDefiData({
              cacheSendData: _objectSpread(_objectSpread({}, cacheData), {
                coinUnitPrice: _dealPrice
              })
            }), _context2.abrupt("return", {
              money: _money,
              moneyText: _moneyText
            });

           case 26:
            return _context2.abrupt("return", {
              money: "",
              moneyText: ""
            });

           case 27:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x2, _x3) {
        return _ref2.apply(this, arguments);
      };
    }(), solSend_getRecentBlockhash = function() {
      var _ref3 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee3(rpcAddress) {
        var _res$data, _res$data$result, _res$data$result$valu, res;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, (0, httpService.postJson)(rpcAddress, {
              jsonrpc: "2.0",
              id: 1,
              method: "getLatestBlockhash",
              params: []
            });

           case 2:
            return res = _context3.sent, _context3.abrupt("return", null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$result = _res$data.result) || void 0 === _res$data$result || null === (_res$data$result$valu = _res$data$result.value) || void 0 === _res$data$result$valu ? void 0 : _res$data$result$valu.blockhash);

           case 4:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x4) {
        return _ref3.apply(this, arguments);
      };
    }(), getTransaction = function() {
      var _ref4 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee4(rpcAddress, hash_id) {
        var _res$data2, res;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.next = 2, (0, httpService.postJson)(rpcAddress, {
              jsonrpc: "2.0",
              id: 1,
              method: "getTransaction",
              params: [ hash_id, "json" ]
            });

           case 2:
            return res = _context4.sent, _context4.abrupt("return", null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 ? void 0 : _res$data2.result);

           case 4:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x5, _x6) {
        return _ref4.apply(this, arguments);
      };
    }(), transferSolanaToken = function() {
      var _ref5 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee7(coinItem, privateKey, setLoading, history) {
        var isReturnHash, extraParams, validateInputs, prepareTransaction, signTransaction, transactionData, signedTx, _yield$sendRequestRaw, _yield$sendRequestRaw2, _yield$sendRequestRaw3, hash, errorMessage, _args7 = arguments;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return isReturnHash = _args7.length > 4 && void 0 !== _args7[4] && _args7[4], extraParams = _args7.length > 5 ? _args7[5] : void 0, 
            _context7.prev = 2, validateInputs = function(_ref6) {
              var coinTransferToAddress = _ref6.coinTransferToAddress, coinTransferAmount = _ref6.coinTransferAmount, coinNetworkRpcAddress = _ref6.coinNetworkRpcAddress;
              if (!coinTransferToAddress) throw new Error("Invalid recipient address");
              if (!coinTransferAmount || isNaN(coinTransferAmount)) throw new Error("Invalid transfer amount");
              if (!coinNetworkRpcAddress) throw new Error("Invalid RPC address");
            }, prepareTransaction = function() {
              var _ref7 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee5(coinItem) {
                var _cacheSendData$gasInf, cacheSendData, toAddress, rpcAddress, coinPrecision, coinTransferAmount, amount;
                return regeneratorRuntime.wrap((function(_context5) {
                  for (;;) switch (_context5.prev = _context5.next) {
                   case 0:
                    return _context5.next = 2, method.getDefiItem("cacheSendData");

                   case 2:
                    return cacheSendData = _context5.sent, toAddress = coinItem.coinTransferToAddress, 
                    rpcAddress = coinItem.coinNetworkRpcAddress, coinPrecision = coinItem.coinPrecision, 
                    coinTransferAmount = coinItem.coinTransferAmount, validateInputs(coinItem), amount = method.dataOperation(coinTransferAmount, Math.pow(10, coinPrecision)), 
                    _context5.abrupt("return", {
                      toAddress,
                      rpcAddress,
                      amount,
                      solanaPriorityFee: null == cacheSendData || null === (_cacheSendData$gasInf = cacheSendData.gasInfo) || void 0 === _cacheSendData$gasInf ? void 0 : _cacheSendData$gasInf.solanaPriorityFee
                    });

                   case 7:
                   case "end":
                    return _context5.stop();
                  }
                }), _callee5);
              })));
              return function(_x11) {
                return _ref7.apply(this, arguments);
              };
            }(), signTransaction = function() {
              var _ref8 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee6(transactionData, extraParams) {
                var toAddress, rpcAddress, amount, solanaPriorityFee, blockHash, _output, rpcMethod, privateKeyHex, output;
                return regeneratorRuntime.wrap((function(_context6) {
                  for (;;) switch (_context6.prev = _context6.next) {
                   case 0:
                    return toAddress = transactionData.toAddress, rpcAddress = transactionData.rpcAddress, 
                    amount = transactionData.amount, solanaPriorityFee = transactionData.solanaPriorityFee, 
                    _context6.next = 3, solSend_getRecentBlockhash(rpcAddress);

                   case 3:
                    if (blockHash = _context6.sent, null == extraParams || !extraParams.hardWare) {
                      _context6.next = 9;
                      break;
                    }
                    return _context6.next = 7, getHardwareTransactionForSOL(coinItem, extraParams.hardWare);

                   case 7:
                    return _output = _context6.sent, _context6.abrupt("return", [ _output ]);

                   case 9:
                    return _context6.next = 11, solanaRpc.m.init(rpcAddress);

                   case 11:
                    return rpcMethod = _context6.sent, _context6.next = 14, (0, wallet.ro)(privateKey);

                   case 14:
                    return privateKeyHex = _context6.sent, _context6.next = 17, rpcMethod.signTransaction(toAddress, privateKeyHex, amount, null, blockHash, solanaPriorityFee);

                   case 17:
                    return output = _context6.sent, _context6.abrupt("return", [ null == output ? void 0 : output.encoded ]);

                   case 19:
                   case "end":
                    return _context6.stop();
                  }
                }), _callee6);
              })));
              return function(_x12, _x13) {
                return _ref8.apply(this, arguments);
              };
            }(), _context7.next = 8, prepareTransaction(coinItem);

           case 8:
            return transactionData = _context7.sent, _context7.next = 11, signTransaction(transactionData, extraParams);

           case 11:
            if (signedTx = _context7.sent, !isReturnHash) {
              _context7.next = 14;
              break;
            }
            return _context7.abrupt("return", signedTx);

           case 14:
            return _context7.next = 16, (0, chainRequestMethod.IM)(coinItem.coinNetworkKey, signedTx);

           case 16:
            if (_yield$sendRequestRaw = _context7.sent, _yield$sendRequestRaw2 = _yield$sendRequestRaw.data, 
            _yield$sendRequestRaw3 = (_yield$sendRequestRaw2 = void 0 === _yield$sendRequestRaw2 ? {} : _yield$sendRequestRaw2).data, 
            hash = (_yield$sendRequestRaw3 = void 0 === _yield$sendRequestRaw3 ? {} : _yield$sendRequestRaw3).hash_id) {
              _context7.next = 24;
              break;
            }
            throw new Error("Transaction failed");

           case 24:
            if (isReturnHash) {
              _context7.next = 27;
              break;
            }
            return _context7.next = 27, send.M6(coinItem, hash, history);

           case 27:
            return _context7.abrupt("return", hash);

           case 30:
            throw _context7.prev = 30, _context7.t0 = _context7.catch(2), errorMessage = (null === _context7.t0 || void 0 === _context7.t0 ? void 0 : _context7.t0.message) || "失败，请重试", 
            null == setLoading || setLoading(!1), (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)(errorMessage)
            }), _context7.t0;

           case 36:
            return _context7.prev = 36, null == setLoading || setLoading(!1), _context7.finish(36);

           case 39:
           case "end":
            return _context7.stop();
          }
        }), _callee7, null, [ [ 2, 30, 36, 39 ] ]);
      })));
      return function(_x7, _x8, _x9, _x10) {
        return _ref5.apply(this, arguments);
      };
    }(), hexToUint8Array = function(hex) {
      if ("string" != typeof hex) throw new Error("Expected string containing hex digits");
      if (hex.length % 2) throw new Error("Odd number of hex digits");
      for (var l = hex.length / 2, result = new Uint8Array(l), i = 0; i < l; ++i) {
        var x = parseInt(hex.substr(2 * i, 2), 16);
        if (Number.isNaN(x)) throw new Error("Expected hex string");
        result[i] = x;
      }
      return result;
    }, getHardwareTransactionForSOL = function() {
      var _ref9 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee8(coinItem, hardware) {
        var _cacheSendData$gasInf2, _hardware$device, cacheSendData, payer, solanaPriorityFee, toAddress, rpcAddress, coinPrecision, coinTransferAmount, amount, blockHash, modifyComputeUnits, addPriorityFee, unSignedRaw, transaction, sign, _hardware$device2, signedRsv, signatureBytes, serializedTransaction;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            return _context8.prev = 0, _context8.next = 3, method.getDefiItem("cacheSendData");

           case 3:
            return cacheSendData = _context8.sent, payer = coinItem.coinTransferFromAddress, 
            solanaPriorityFee = null == cacheSendData || null === (_cacheSendData$gasInf2 = cacheSendData.gasInfo) || void 0 === _cacheSendData$gasInf2 ? void 0 : _cacheSendData$gasInf2.solanaPriorityFee, 
            toAddress = coinItem.coinTransferToAddress, rpcAddress = coinItem.coinNetworkRpcAddress, 
            coinPrecision = coinItem.coinPrecision, coinTransferAmount = coinItem.coinTransferAmount, 
            amount = method.dataOperation(coinTransferAmount, Math.pow(10, coinPrecision)), 
            _context8.next = 13, solSend_getRecentBlockhash(rpcAddress);

           case 13:
            return blockHash = _context8.sent, modifyComputeUnits = index_browser_esm.d_.setComputeUnitLimit({
              units: 4e3
            }), addPriorityFee = index_browser_esm.d_.setComputeUnitPrice({
              microLamports: Number(solanaPriorityFee)
            }), "", (transaction = new index_browser_esm.ZX).feePayer = new index_browser_esm.J3(payer), 
            transaction.recentBlockhash = blockHash, transaction.add(index_browser_esm.yq.transfer({
              fromPubkey: new index_browser_esm.J3(payer),
              toPubkey: new index_browser_esm.J3(toAddress),
              lamports: amount
            })), solanaPriorityFee && transaction.add(modifyComputeUnits).add(addPriorityFee), 
            unSignedRaw = transaction.serializeMessage(), _context8.next = 24, null == hardware || null === (_hardware$device = hardware.device) || void 0 === _hardware$device ? void 0 : _hardware$device.signTxRaw("SOL", unSignedRaw, {
              c: [ {
                t: 0,
                ca: "SOL",
                sy: coinItem.coinNetworkSymbol,
                d: Number(coinItem.coinNetworkPrecision),
                ch: coinItem.coinNetworkName,
                curve: 4
              } ]
            });

           case 24:
            if ((sign = _context8.sent).sign) {
              _context8.next = 27;
              break;
            }
            return _context8.abrupt("return", Promise.reject("user cancel"));

           case 27:
            if (null == sign || !sign.sign) {
              _context8.next = 35;
              break;
            }
            return _context8.next = 30, null == hardware || null === (_hardware$device2 = hardware.device) || void 0 === _hardware$device2 ? void 0 : _hardware$device2.request(null == hardware ? void 0 : hardware.path, 0, "0x00");

           case 30:
            return signedRsv = _context8.sent, signatureBytes = solSend_Buffer.from(signedRsv, "hex"), 
            transaction.addSignature(new index_browser_esm.J3(payer), signatureBytes), serializedTransaction = transaction.serialize(), 
            _context8.abrupt("return", bs58_default().encode(serializedTransaction));

           case 35:
            _context8.next = 40;
            break;

           case 37:
            return _context8.prev = 37, _context8.t0 = _context8.catch(0), _context8.abrupt("return", Promise.reject("error"));

           case 40:
           case "end":
            return _context8.stop();
          }
        }), _callee8, null, [ [ 0, 37 ] ]);
      })));
      return function(_x14, _x15) {
        return _ref9.apply(this, arguments);
      };
    }(), getTokenAccountsByOwner = function() {
      var _ref11 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee10(mintAddress, fromAddress, toAddress, isToken2022) {
        var connection, senderTokenAddress, recipientTokenAddress, info, isFirstReceive;
        return regeneratorRuntime.wrap((function(_context10) {
          for (;;) switch (_context10.prev = _context10.next) {
           case 0:
            return _context10.next = 2, tool_allWeb3Method.Qp("SOL");

           case 2:
            return connection = _context10.sent, _context10.next = 5, (0, mint.Ob)(new index_browser_esm.J3(mintAddress), new index_browser_esm.J3(fromAddress), isToken2022 ? constants.sy : constants.x5);

           case 5:
            return senderTokenAddress = _context10.sent, _context10.next = 8, (0, mint.Ob)(new index_browser_esm.J3(mintAddress), new index_browser_esm.J3(toAddress), isToken2022 ? constants.sy : constants.x5);

           case 8:
            return recipientTokenAddress = _context10.sent, _context10.next = 11, connection.getAccountInfo(recipientTokenAddress, "confirmed");

           case 11:
            return info = _context10.sent, isFirstReceive = !info, _context10.abrupt("return", {
              isFirstReceive,
              senderTokenAddress: null == senderTokenAddress ? void 0 : senderTokenAddress.toString(),
              recipientTokenAddress: null == recipientTokenAddress ? void 0 : recipientTokenAddress.toString()
            });

           case 14:
           case "end":
            return _context10.stop();
          }
        }), _callee10);
      })));
      return function(_x18, _x19, _x20, _x21) {
        return _ref11.apply(this, arguments);
      };
    }(), transferSolanaERC20Token = function() {
      var _ref12 = solSend_asyncToGenerator(regeneratorRuntime.mark((function _callee11(coinItem, privateKey, setLoading, history) {
        var isReturnHash, extraParams, _cacheSendData$gasInf3, _res$data3, _res$data3$data, cacheSendData, solanaPriorityFee, fromAddress, toAddress, rpcAddress, coinPrecision, coinTransferAmount, coinContractAddress, amount, rpcMethod, _yield$Promise$all, _yield$Promise$all2, tokenAccounts, blockHash, _ref13, isFirstReceive, senderTokenAddress, recipientTokenAddress, signTx, signedRaw, privateKeyHex, output, res, hash, _args11 = arguments;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            return isReturnHash = _args11.length > 4 && void 0 !== _args11[4] && _args11[4], 
            extraParams = _args11.length > 5 ? _args11[5] : void 0, _context11.prev = 2, _context11.next = 5, 
            method.getDefiItem("cacheSendData");

           case 5:
            return cacheSendData = _context11.sent, solanaPriorityFee = null == cacheSendData || null === (_cacheSendData$gasInf3 = cacheSendData.gasInfo) || void 0 === _cacheSendData$gasInf3 ? void 0 : _cacheSendData$gasInf3.solanaPriorityFee, 
            fromAddress = coinItem.coinTransferFromAddress, toAddress = coinItem.coinTransferToAddress, 
            rpcAddress = coinItem.coinNetworkRpcAddress, coinPrecision = coinItem.coinPrecision, 
            coinTransferAmount = coinItem.coinTransferAmount, coinContractAddress = coinItem.coinContractAddress, 
            amount = method.dataOperation(coinTransferAmount, Math.pow(10, coinPrecision)), 
            _context11.next = 16, solanaRpc.m.init(rpcAddress);

           case 16:
            return rpcMethod = _context11.sent, _context11.next = 19, Promise.all([ getTokenAccountsByOwner(coinContractAddress, fromAddress, toAddress), solSend_getRecentBlockhash(rpcAddress) ]);

           case 19:
            if (_yield$Promise$all = _context11.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
            tokenAccounts = _yield$Promise$all2[0], blockHash = _yield$Promise$all2[1], isFirstReceive = (_ref13 = tokenAccounts || {}).isFirstReceive, 
            senderTokenAddress = _ref13.senderTokenAddress, recipientTokenAddress = _ref13.recipientTokenAddress, 
            signTx = "", !extraParams.hardWare) {
              _context11.next = 32;
              break;
            }
            return _context11.next = 28, buildSolanaTokenTransfer(coinItem, extraParams.hardWare);

           case 28:
            signedRaw = _context11.sent, signTx = [ signedRaw ], _context11.next = 39;
            break;

           case 32:
            return _context11.next = 34, (0, wallet.ro)(privateKey);

           case 34:
            return privateKeyHex = _context11.sent, _context11.next = 37, rpcMethod.signTransferToken(privateKeyHex, toAddress, coinContractAddress, amount, coinPrecision, blockHash, senderTokenAddress, recipientTokenAddress, isFirstReceive, solanaPriorityFee);

           case 37:
            output = _context11.sent, signTx = [ null == output ? void 0 : output.encoded ];

           case 39:
            if (!isReturnHash) {
              _context11.next = 41;
              break;
            }
            return _context11.abrupt("return", signTx);

           case 41:
            return _context11.next = 43, (0, chainRequestMethod.IM)("SOL", signTx);

           case 43:
            if (res = _context11.sent, hash = null == res || null === (_res$data3 = res.data) || void 0 === _res$data3 || null === (_res$data3$data = _res$data3.data) || void 0 === _res$data3$data ? void 0 : _res$data3$data.hash_id, 
            setLoading && setLoading(!1), !hash) {
              _context11.next = 51;
              break;
            }
            return isReturnHash || send.M6(coinItem, hash, history), _context11.abrupt("return", hash);

           case 51:
            (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("发送失败")
            });

           case 52:
            _context11.next = 58;
            break;

           case 54:
            _context11.prev = 54, _context11.t0 = _context11.catch(2), setLoading && setLoading(!1), 
            (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("失败，请重试")
            });

           case 58:
           case "end":
            return _context11.stop();
          }
        }), _callee11, null, [ [ 2, 54 ] ]);
      })));
      return function(_x22, _x23, _x24, _x25) {
        return _ref12.apply(this, arguments);
      };
    }();
  },
  326394: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      addAccount: () => addAccount,
      addHexPrefix: () => addHexPrefix,
      addTahoAccount: () => addTahoAccount,
      addZero: () => addZero,
      arrToMap: () => arrToMap,
      byAddressGetWallet: () => byAddressGetWallet,
      changeNetworkThenCleanInfo: () => changeNetworkThenCleanInfo,
      compare: () => compare,
      cutInteger: () => cutInteger,
      dappRecord: () => dappRecord,
      dataOperation: () => dataOperation,
      dataURLtoFile: () => dataURLtoFile,
      dealDefiWalletData: () => dealDefiWalletData,
      dealWalletName: () => dealWalletName,
      differentArr: () => differentArr,
      dispatchSetNewSelectedAccountAptoWithPublicKey: () => dispatchSetNewSelectedAccountAptoWithPublicKey,
      filterData: () => filterData,
      formatDate: () => formatDate,
      formatDecimalsAmount: () => formatDecimalsAmount,
      formatDouble: () => formatDouble,
      formatUrl: () => formatUrl,
      getAccountFormat: () => getAccountFormat,
      getAccountInfoName: () => getAccountInfoName,
      getAccountsCsvList: () => getAccountsCsvList,
      getAllEvmAddress: () => getAllEvmAddress,
      getAllWalletAddress: () => getAllWalletAddress,
      getCookiesItem: () => getCookiesItem,
      getDecimalsAmount: () => getDecimalsAmount,
      getDecimalsUnitPrice: () => getDecimalsUnitPrice,
      getDefiItem: () => getDefiItem,
      getEVMAddressFromIOTX: () => getEVMAddressFromIOTX,
      getExtensionAccounts: () => getExtensionAccounts,
      getExtensionCanupdate: () => getExtensionCanupdate,
      getIOTXAddress: () => getIOTXAddress,
      getLanguage: () => getLanguage,
      getLastVal: () => getLastVal,
      getMatchAccount: () => getMatchAccount,
      getMatchAccountAddrs: () => getMatchAccountAddrs,
      getMatchAddress: () => getMatchAddress,
      getMnemonicWord: () => getMnemonicWord,
      getNFTMatchAddress: () => getNFTMatchAddress,
      getNowTime: () => getNowTime,
      getPrivateKey: () => getPrivateKey,
      getRandomNum: () => getRandomNum,
      getRealAptosAddress: () => getRealAptosAddress,
      getRealAptosCoinType: () => getRealAptosCoinType,
      getSupportNetworkList: () => getSupportNetworkList,
      getTokenIndexSearch: () => getTokenIndexSearch,
      getTokenSearch: () => getTokenSearch,
      getTonAddress: () => getTonAddress,
      getTonEQAddress: () => getTonEQAddress,
      getWallet: () => getWallet,
      getWalletAddress: () => getWalletAddress,
      getWalletPrivateKey: () => getWalletPrivateKey,
      hasDealDefi: () => hasDealDefi,
      hexToBytes: () => hexToBytes,
      hideContent: () => hideContent,
      initDataVariable: () => initDataVariable,
      isChainAccountType: () => isChainAccountType,
      isJSON: () => isJSON,
      isOnLine: () => isOnLine,
      isRepeat: () => isRepeat,
      isValuesArr: () => isValuesArr,
      isWalletRepeat: () => isWalletRepeat,
      matchIdData: () => matchIdData,
      modifyWalletData: () => modifyWalletData,
      omitAddress: () => omitAddress,
      omitStr: () => omitStr,
      randomIndexArr: () => randomIndexArr,
      recordAddress: () => recordAddress,
      removeHexPrefix: () => removeHexPrefix,
      repeatingData: () => repeatingData,
      replaceValue: () => replaceValue,
      setDefiData: () => setDefiData,
      setJsonData: () => setJsonData,
      setSelectedWallet: () => setSelectedWallet,
      sleep: () => sleep,
      sortArrFun: () => sortArrFun,
      stringToHex: () => stringToHex,
      sum: () => sum,
      toBrowserDetail: () => toBrowserDetail,
      toLogin: () => toLogin,
      toNonExponential: () => toNonExponential,
      toSecuritySetting: () => toSecuritySetting,
      toTransDetail: () => toTransDetail,
      trimData: () => trimData,
      truncateDecimal: () => truncateDecimal,
      userAction: () => userAction
    });
    __webpack_require__(207452), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(754989), __webpack_require__(219693), __webpack_require__(335231), 
    __webpack_require__(752231), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(418665), 
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(194009), __webpack_require__(718636), 
    __webpack_require__(579389), __webpack_require__(992157), __webpack_require__(380115), 
    __webpack_require__(259581), __webpack_require__(504895), __webpack_require__(447746), 
    __webpack_require__(43148), __webpack_require__(168763), __webpack_require__(445708), 
    __webpack_require__(788198), __webpack_require__(727918), __webpack_require__(868900), 
    __webpack_require__(670708), __webpack_require__(532657), __webpack_require__(321452), 
    __webpack_require__(36546), __webpack_require__(291749), __webpack_require__(466754), 
    __webpack_require__(836299), __webpack_require__(143643), __webpack_require__(613053), 
    __webpack_require__(911029), __webpack_require__(569155), __webpack_require__(223070), 
    __webpack_require__(313696), __webpack_require__(663555), __webpack_require__(700533), 
    __webpack_require__(990345), __webpack_require__(906048), __webpack_require__(184095), 
    __webpack_require__(196088), __webpack_require__(850785), __webpack_require__(640173), 
    __webpack_require__(80475), __webpack_require__(232982), __webpack_require__(714913), 
    __webpack_require__(118772), __webpack_require__(868329), __webpack_require__(498741), 
    __webpack_require__(334867), __webpack_require__(689560), __webpack_require__(67500), 
    __webpack_require__(979073), __webpack_require__(678636), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(511902), __webpack_require__(885365), __webpack_require__(210557), 
    __webpack_require__(348825), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(215195), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(815852), __webpack_require__(110678), 
    __webpack_require__(103101), __webpack_require__(936012);
    var handleCreateWallet = __webpack_require__(78672), data = __webpack_require__(639319), defaultMnemonicMap = (__webpack_require__(107918), 
    __webpack_require__(579404), __webpack_require__(39982), __webpack_require__(957399), 
    __webpack_require__(686970), __webpack_require__(811048), __webpack_require__(202236), 
    __webpack_require__(971650), __webpack_require__(326884), __webpack_require__(58710), 
    __webpack_require__(563617), __webpack_require__(383019), __webpack_require__(698657), 
    __webpack_require__(753380), new Map);
    defaultMnemonicMap.size < 1 && (defaultMnemonicMap.set("a", [ "abandon", "ability", "able", "about", "above", "absent", "absorb", "abstract", "absurd", "abuse", "access", "accident", "account", "accuse", "achieve", "acid", "acoustic", "acquire", "across", "act", "action", "actor", "actress", "actual", "adapt", "add", "addict", "address", "adjust", "admit", "adult", "advance", "advice", "aerobic", "affair", "afford", "afraid", "again", "age", "agent", "agree", "ahead", "aim", "air", "airport", "aisle", "alarm", "album", "alcohol", "alert", "alien", "all", "alley", "allow", "almost", "alone", "alpha", "already", "also", "alter", "always", "amateur", "amazing", "among", "amount", "amused", "analyst", "anchor", "ancient", "anger", "angle", "angry", "animal", "ankle", "announce", "annual", "another", "answer", "antenna", "antique", "anxiety", "any", "apart", "apology", "appear", "apple", "approve", "april", "arch", "arctic", "area", "arena", "argue", "arm", "armed", "armor", "army", "around", "arrange", "arrest", "arrive", "arrow", "art", "artefact", "artist", "artwork", "ask", "aspect", "assault", "asset", "assist", "assume", "asthma", "athlete", "atom", "attack", "attend", "attitude", "attract", "auction", "audit", "august", "aunt", "author", "auto", "autumn", "average", "avocado", "avoid", "awake", "aware", "away", "awesome", "awful", "awkward", "axis" ]), 
    defaultMnemonicMap.set("b", [ "baby", "bachelor", "bacon", "badge", "bag", "balance", "balcony", "ball", "bamboo", "banana", "banner", "bar", "barely", "bargain", "barrel", "base", "basic", "basket", "battle", "beach", "bean", "beauty", "because", "become", "beef", "before", "begin", "behave", "behind", "believe", "below", "belt", "bench", "benefit", "best", "betray", "better", "between", "beyond", "bicycle", "bid", "bike", "bind", "biology", "bird", "birth", "bitter", "black", "blade", "blame", "blanket", "blast", "bleak", "bless", "blind", "blood", "blossom", "blouse", "blue", "blur", "blush", "board", "boat", "body", "boil", "bomb", "bone", "bonus", "book", "boost", "border", "boring", "borrow", "boss", "bottom", "bounce", "box", "boy", "bracket", "brain", "brand", "brass", "brave", "bread", "breeze", "brick", "bridge", "brief", "bright", "bring", "brisk", "broccoli", "broken", "bronze", "broom", "brother", "brown", "brush", "bubble", "buddy", "budget", "buffalo", "build", "bulb", "bulk", "bullet", "bundle", "bunker", "burden", "burger", "burst", "bus", "business", "busy", "butter", "buyer", "buzz" ]), 
    defaultMnemonicMap.set("c", [ "cabbage", "cabin", "cable", "cactus", "cage", "cake", "call", "calm", "camera", "camp", "can", "canal", "cancel", "candy", "cannon", "canoe", "canvas", "canyon", "capable", "capital", "captain", "car", "carbon", "card", "cargo", "carpet", "carry", "cart", "case", "cash", "casino", "castle", "casual", "cat", "catalog", "catch", "category", "cattle", "caught", "cause", "caution", "cave", "ceiling", "celery", "cement", "census", "century", "cereal", "certain", "chair", "chalk", "champion", "change", "chaos", "chapter", "charge", "chase", "chat", "cheap", "check", "cheese", "chef", "cherry", "chest", "chicken", "chief", "child", "chimney", "choice", "choose", "chronic", "chuckle", "chunk", "churn", "cigar", "cinnamon", "circle", "citizen", "city", "civil", "claim", "clap", "clarify", "claw", "clay", "clean", "clerk", "clever", "click", "client", "cliff", "climb", "clinic", "clip", "clock", "clog", "close", "cloth", "cloud", "clown", "club", "clump", "cluster", "clutch", "coach", "coast", "coconut", "code", "coffee", "coil", "coin", "collect", "color", "column", "combine", "come", "comfort", "comic", "common", "company", "concert", "conduct", "confirm", "congress", "connect", "consider", "control", "convince", "cook", "cool", "copper", "copy", "coral", "core", "corn", "correct", "cost", "cotton", "couch", "country", "couple", "course", "cousin", "cover", "coyote", "crack", "cradle", "craft", "cram", "crane", "crash", "crater", "crawl", "crazy", "cream", "credit", "creek", "crew", "cricket", "crime", "crisp", "critic", "crop", "cross", "crouch", "crowd", "crucial", "cruel", "cruise", "crumble", "crunch", "crush", "cry", "crystal", "cube", "culture", "cup", "cupboard", "curious", "current", "curtain", "curve", "cushion", "custom", "cute", "cycle" ]), 
    defaultMnemonicMap.set("d", [ "dad", "damage", "damp", "dance", "danger", "daring", "dash", "daughter", "dawn", "day", "deal", "debate", "debris", "decade", "december", "decide", "decline", "decorate", "decrease", "deer", "defense", "define", "defy", "degree", "delay", "deliver", "demand", "demise", "denial", "dentist", "deny", "depart", "depend", "deposit", "depth", "deputy", "derive", "describe", "desert", "design", "desk", "despair", "destroy", "detail", "detect", "develop", "device", "devote", "diagram", "dial", "diamond", "diary", "dice", "diesel", "diet", "differ", "digital", "dignity", "dilemma", "dinner", "dinosaur", "direct", "dirt", "disagree", "discover", "disease", "dish", "dismiss", "disorder", "display", "distance", "divert", "divide", "divorce", "dizzy", "doctor", "document", "dog", "doll", "dolphin", "domain", "donate", "donkey", "donor", "door", "dose", "double", "dove", "draft", "dragon", "drama", "drastic", "draw", "dream", "dress", "drift", "drill", "drink", "drip", "drive", "drop", "drum", "dry", "duck", "dumb", "dune", "during", "dust", "dutch", "duty", "dwarf", "dynamic" ]), 
    defaultMnemonicMap.set("e", [ "eager", "eagle", "early", "earn", "earth", "easily", "east", "easy", "echo", "ecology", "economy", "edge", "edit", "educate", "effort", "egg", "eight", "either", "elbow", "elder", "electric", "elegant", "element", "elephant", "elevator", "elite", "else", "embark", "embody", "embrace", "emerge", "emotion", "employ", "empower", "empty", "enable", "enact", "end", "endless", "endorse", "enemy", "energy", "enforce", "engage", "engine", "enhance", "enjoy", "enlist", "enough", "enrich", "enroll", "ensure", "enter", "entire", "entry", "envelope", "episode", "equal", "equip", "era", "erase", "erode", "erosion", "error", "erupt", "escape", "essay", "essence", "estate", "eternal", "ethics", "evidence", "evil", "evoke", "evolve", "exact", "example", "excess", "exchange", "excite", "exclude", "excuse", "execute", "exercise", "exhaust", "exhibit", "exile", "exist", "exit", "exotic", "expand", "expect", "expire", "explain", "expose", "express", "extend", "extra", "eye", "eyebrow" ]), 
    defaultMnemonicMap.set("f", [ "fabric", "face", "faculty", "fade", "faint", "faith", "fall", "false", "fame", "family", "famous", "fan", "fancy", "fantasy", "farm", "fashion", "fat", "fatal", "father", "fatigue", "fault", "favorite", "feature", "february", "federal", "fee", "feed", "feel", "female", "fence", "festival", "fetch", "fever", "few", "fiber", "fiction", "field", "figure", "file", "film", "filter", "final", "find", "fine", "finger", "finish", "fire", "firm", "first", "fiscal", "fish", "fit", "fitness", "fix", "flag", "flame", "flash", "flat", "flavor", "flee", "flight", "flip", "float", "flock", "floor", "flower", "fluid", "flush", "fly", "foam", "focus", "fog", "foil", "fold", "follow", "food", "foot", "force", "forest", "forget", "fork", "fortune", "forum", "forward", "fossil", "foster", "found", "fox", "fragile", "frame", "frequent", "fresh", "friend", "fringe", "frog", "front", "frost", "frown", "frozen", "fruit", "fuel", "fun", "funny", "furnace", "fury", "future" ]), 
    defaultMnemonicMap.set("g", [ "gadget", "gain", "galaxy", "gallery", "game", "gap", "garage", "garbage", "garden", "garlic", "garment", "gas", "gasp", "gate", "gather", "gauge", "gaze", "general", "genius", "genre", "gentle", "genuine", "gesture", "ghost", "giant", "gift", "giggle", "ginger", "giraffe", "girl", "give", "glad", "glance", "glare", "glass", "glide", "glimpse", "globe", "gloom", "glory", "glove", "glow", "glue", "goat", "goddess", "gold", "good", "goose", "gorilla", "gospel", "gossip", "govern", "gown", "grab", "grace", "grain", "grant", "grape", "grass", "gravity", "great", "green", "grid", "grief", "grit", "grocery", "group", "grow", "grunt", "guard", "guess", "guide", "guilt", "guitar", "gun", "gym" ]), 
    defaultMnemonicMap.set("h", [ "habit", "hair", "half", "hammer", "hamster", "hand", "happy", "harbor", "hard", "harsh", "harvest", "hat", "have", "hawk", "hazard", "head", "health", "heart", "heavy", "hedgehog", "height", "hello", "helmet", "help", "hen", "hero", "hidden", "high", "hill", "hint", "hip", "hire", "history", "hobby", "hockey", "hold", "hole", "holiday", "hollow", "home", "honey", "hood", "hope", "horn", "horror", "horse", "hospital", "host", "hotel", "hour", "hover", "hub", "huge", "human", "humble", "humor", "hundred", "hungry", "hunt", "hurdle", "hurry", "hurt", "husband", "hybrid" ]), 
    defaultMnemonicMap.set("i", [ "ice", "icon", "idea", "identify", "idle", "ignore", "ill", "illegal", "illness", "image", "imitate", "immense", "immune", "impact", "impose", "improve", "impulse", "inch", "include", "income", "increase", "index", "indicate", "indoor", "industry", "infant", "inflict", "inform", "inhale", "inherit", "initial", "inject", "injury", "inmate", "inner", "innocent", "input", "inquiry", "insane", "insect", "inside", "inspire", "install", "intact", "interest", "into", "invest", "invite", "involve", "iron", "island", "isolate", "issue", "item", "ivory" ]), 
    defaultMnemonicMap.set("j", [ "jacket", "jaguar", "jar", "jazz", "jealous", "jeans", "jelly", "jewel", "job", "join", "joke", "journey", "joy", "judge", "juice", "jump", "jungle", "junior", "junk", "just" ]), 
    defaultMnemonicMap.set("k", [ "kangaroo", "keen", "keep", "ketchup", "key", "kick", "kid", "kidney", "kind", "kingdom", "kiss", "kit", "kitchen", "kite", "kitten", "kiwi", "knee", "knife", "knock", "know" ]), 
    defaultMnemonicMap.set("m", [ "machine", "mad", "magic", "magnet", "maid", "mail", "main", "major", "make", "mammal", "man", "manage", "mandate", "mango", "mansion", "manual", "maple", "marble", "march", "margin", "marine", "market", "marriage", "mask", "mass", "master", "match", "material", "math", "matrix", "matter", "maximum", "maze", "meadow", "mean", "measure", "meat", "mechanic", "medal", "media", "melody", "melt", "member", "memory", "mention", "menu", "mercy", "merge", "merit", "merry", "mesh", "message", "metal", "method", "middle", "midnight", "milk", "million", "mimic", "mind", "minimum", "minor", "minute", "miracle", "mirror", "misery", "miss", "mistake", "mix", "mixed", "mixture", "mobile", "model", "modify", "mom", "moment", "monitor", "monkey", "monster", "month", "moon", "moral", "more", "morning", "mosquito", "mother", "motion", "motor", "mountain", "mouse", "move", "movie", "much", "muffin", "mule", "multiply", "muscle", "museum", "mushroom", "music", "must", "mutual", "myself", "mystery", "myth" ]), 
    defaultMnemonicMap.set("l", [ "lab", "label", "labor", "ladder", "lady", "lake", "lamp", "language", "laptop", "large", "later", "latin", "laugh", "laundry", "lava", "law", "lawn", "lawsuit", "layer", "lazy", "leader", "leaf", "learn", "leave", "lecture", "left", "leg", "legal", "legend", "leisure", "lemon", "lend", "length", "lens", "leopard", "lesson", "letter", "level", "liar", "liberty", "library", "license", "life", "lift", "light", "like", "limb", "limit", "link", "lion", "liquid", "list", "little", "live", "lizard", "load", "loan", "lobster", "local", "lock", "logic", "lonely", "long", "loop", "lottery", "loud", "lounge", "love", "loyal", "lucky", "luggage", "lumber", "lunar", "lunch", "luxury", "lyrics" ]), 
    defaultMnemonicMap.set("n", [ "naive", "name", "napkin", "narrow", "nasty", "nation", "nature", "near", "neck", "need", "negative", "neglect", "neither", "nephew", "nerve", "nest", "net", "network", "neutral", "never", "news", "next", "nice", "night", "noble", "noise", "nominee", "noodle", "normal", "north", "nose", "notable", "note", "nothing", "notice", "novel", "now", "nuclear", "number", "nurse", "nut" ]), 
    defaultMnemonicMap.set("o", [ "oak", "obey", "object", "oblige", "obscure", "observe", "obtain", "obvious", "occur", "ocean", "october", "odor", "off", "offer", "office", "often", "oil", "okay", "old", "olive", "olympic", "omit", "once", "one", "onion", "online", "only", "open", "opera", "opinion", "oppose", "option", "orange", "orbit", "orchard", "order", "ordinary", "organ", "orient", "original", "orphan", "ostrich", "other", "outdoor", "outer", "output", "outside", "oval", "oven", "over", "own", "owner", "oxygen", "oyster", "ozone" ]), 
    defaultMnemonicMap.set("p", [ "pact", "paddle", "page", "pair", "palace", "palm", "panda", "panel", "panic", "panther", "paper", "parade", "parent", "park", "parrot", "party", "pass", "patch", "path", "patient", "patrol", "pattern", "pause", "pave", "payment", "peace", "peanut", "pear", "peasant", "pelican", "pen", "penalty", "pencil", "people", "pepper", "perfect", "permit", "person", "pet", "phone", "photo", "phrase", "physical", "piano", "picnic", "picture", "piece", "pig", "pigeon", "pill", "pilot", "pink", "pioneer", "pipe", "pistol", "pitch", "pizza", "place", "planet", "plastic", "plate", "play", "please", "pledge", "pluck", "plug", "plunge", "poem", "poet", "point", "polar", "pole", "police", "pond", "pony", "pool", "popular", "portion", "position", "possible", "post", "potato", "pottery", "poverty", "powder", "power", "practice", "praise", "predict", "prefer", "prepare", "present", "pretty", "prevent", "price", "pride", "primary", "print", "priority", "prison", "private", "prize", "problem", "process", "produce", "profit", "program", "project", "promote", "proof", "property", "prosper", "protect", "proud", "provide", "public", "pudding", "pull", "pulp", "pulse", "pumpkin", "punch", "pupil", "puppy", "purchase", "purity", "purpose", "purse", "push", "put", "puzzle", "pyramid" ]), 
    defaultMnemonicMap.set("q", [ "quality", "quantum", "quarter", "question", "quick", "quit", "quiz", "quote" ]), 
    defaultMnemonicMap.set("r", [ "rabbit", "raccoon", "race", "rack", "radar", "radio", "rail", "rain", "raise", "rally", "ramp", "ranch", "random", "range", "rapid", "rare", "rate", "rather", "raven", "raw", "razor", "ready", "real", "reason", "rebel", "rebuild", "recall", "receive", "recipe", "record", "recycle", "reduce", "reflect", "reform", "refuse", "region", "regret", "regular", "reject", "relax", "release", "relief", "rely", "remain", "remember", "remind", "remove", "render", "renew", "rent", "reopen", "repair", "repeat", "replace", "report", "require", "rescue", "resemble", "resist", "resource", "response", "result", "retire", "retreat", "return", "reunion", "reveal", "review", "reward", "rhythm", "rib", "ribbon", "rice", "rich", "ride", "ridge", "rifle", "right", "rigid", "ring", "riot", "ripple", "risk", "ritual", "rival", "river", "road", "roast", "robot", "robust", "rocket", "romance", "roof", "rookie", "room", "rose", "rotate", "rough", "round", "route", "royal", "rubber", "rude", "rug", "rule", "run", "runway", "rural" ]), 
    defaultMnemonicMap.set("s", [ "sad", "saddle", "sadness", "safe", "sail", "salad", "salmon", "salon", "salt", "salute", "same", "sample", "sand", "satisfy", "satoshi", "sauce", "sausage", "save", "say", "scale", "scan", "scare", "scatter", "scene", "scheme", "school", "science", "scissors", "scorpion", "scout", "scrap", "screen", "script", "scrub", "sea", "search", "season", "seat", "second", "secret", "section", "security", "seed", "seek", "segment", "select", "sell", "seminar", "senior", "sense", "sentence", "series", "service", "session", "settle", "setup", "seven", "shadow", "shaft", "shallow", "share", "shed", "shell", "sheriff", "shield", "shift", "shine", "ship", "shiver", "shock", "shoe", "shoot", "shop", "short", "shoulder", "shove", "shrimp", "shrug", "shuffle", "shy", "sibling", "sick", "side", "siege", "sight", "sign", "silent", "silk", "silly", "silver", "similar", "simple", "since", "sing", "siren", "sister", "situate", "six", "size", "skate", "sketch", "ski", "skill", "skin", "skirt", "skull", "slab", "slam", "sleep", "slender", "slice", "slide", "slight", "slim", "slogan", "slot", "slow", "slush", "small", "smart", "smile", "smoke", "smooth", "snack", "snake", "snap", "sniff", "snow", "soap", "soccer", "social", "sock", "soda", "soft", "solar", "soldier", "solid", "solution", "solve", "someone", "song", "soon", "sorry", "sort", "soul", "sound", "soup", "source", "south", "space", "spare", "spatial", "spawn", "speak", "special", "speed", "spell", "spend", "sphere", "spice", "spider", "spike", "spin", "spirit", "split", "spoil", "sponsor", "spoon", "sport", "spot", "spray", "spread", "spring", "spy", "square", "squeeze", "squirrel", "stable", "stadium", "staff", "stage", "stairs", "stamp", "stand", "start", "state", "stay", "steak", "steel", "stem", "step", "stereo", "stick", "still", "sting", "stock", "stomach", "stone", "stool", "story", "stove", "strategy", "street", "strike", "strong", "struggle", "student", "stuff", "stumble", "style", "subject", "submit", "subway", "success", "such", "sudden", "suffer", "sugar", "suggest", "suit", "summer", "sun", "sunny", "sunset", "super", "supply", "supreme", "sure", "surface", "surge", "surprise", "surround", "survey", "suspect", "sustain", "swallow", "swamp", "swap", "swarm", "swear", "sweet", "swift", "swim", "swing", "switch", "sword", "symbol", "symptom", "syrup", "system" ]), 
    defaultMnemonicMap.set("t", [ "table", "tackle", "tag", "tail", "talent", "talk", "tank", "tape", "target", "task", "taste", "tattoo", "taxi", "teach", "team", "tell", "ten", "tenant", "tennis", "tent", "term", "test", "text", "thank", "that", "theme", "then", "theory", "there", "they", "thing", "this", "thought", "three", "thrive", "throw", "thumb", "thunder", "ticket", "tide", "tiger", "tilt", "timber", "time", "tiny", "tip", "tired", "tissue", "title", "toast", "tobacco", "today", "toddler", "toe", "together", "toilet", "token", "tomato", "tomorrow", "tone", "tongue", "tonight", "tool", "tooth", "top", "topic", "topple", "torch", "tornado", "tortoise", "toss", "total", "tourist", "toward", "tower", "town", "toy", "track", "trade", "traffic", "tragic", "train", "transfer", "trap", "trash", "travel", "tray", "treat", "tree", "trend", "trial", "tribe", "trick", "trigger", "trim", "trip", "trophy", "trouble", "truck", "true", "truly", "trumpet", "trust", "truth", "try", "tube", "tuition", "tumble", "tuna", "tunnel", "turkey", "turn", "turtle", "twelve", "twenty", "twice", "twin", "twist", "two", "type", "typical" ]), 
    defaultMnemonicMap.set("u", [ "ugly", "umbrella", "unable", "unaware", "uncle", "uncover", "under", "undo", "unfair", "unfold", "unhappy", "uniform", "unique", "unit", "universe", "unknown", "unlock", "until", "unusual", "unveil", "update", "upgrade", "uphold", "upon", "upper", "upset", "urban", "urge", "usage", "use", "used", "useful", "useless", "usual", "utility" ]), 
    defaultMnemonicMap.set("v", [ "vacant", "vacuum", "vague", "valid", "valley", "valve", "van", "vanish", "vapor", "various", "vast", "vault", "vehicle", "velvet", "vendor", "venture", "venue", "verb", "verify", "version", "very", "vessel", "veteran", "viable", "vibrant", "vicious", "victory", "video", "view", "village", "vintage", "violin", "virtual", "virus", "visa", "visit", "visual", "vital", "vivid", "vocal", "voice", "void", "volcano", "volume", "vote", "voyage" ]), 
    defaultMnemonicMap.set("w", [ "wage", "wagon", "wait", "walk", "wall", "walnut", "want", "warfare", "warm", "warrior", "wash", "wasp", "waste", "water", "wave", "way", "wealth", "weapon", "wear", "weasel", "weather", "web", "wedding", "weekend", "weird", "welcome", "west", "wet", "whale", "what", "wheat", "wheel", "when", "where", "whip", "whisper", "wide", "width", "wife", "wild", "will", "win", "window", "wine", "wing", "wink", "winner", "winter", "wire", "wisdom", "wise", "wish", "witness", "wolf", "woman", "wonder", "wood", "wool", "word", "work", "world", "worry", "worth", "wrap", "wreck", "wrestle", "wrist", "write", "wrong" ]), 
    defaultMnemonicMap.set("x", []), defaultMnemonicMap.set("y", [ "yard", "year", "yellow", "you", "young", "youth" ]), 
    defaultMnemonicMap.set("z", [ "zebra", "zero", "zone", "zoo" ]));
    const words = defaultMnemonicMap;
    var v4 = __webpack_require__(418562), Notification = __webpack_require__(279386), defiWalletData = (__webpack_require__(292690), 
    __webpack_require__(535561)), projectData = __webpack_require__(315733), lang_string = __webpack_require__(212864), bignumber = __webpack_require__(760346), crypto_js = __webpack_require__(532437), constant = __webpack_require__(676850), tool_const = __webpack_require__(498050), walletRecord = __webpack_require__(958733), dataUtils = __webpack_require__(845404), ui = __webpack_require__(690803), walletCore_account = __webpack_require__(266744), dist = __webpack_require__(242005), hd_keyring_esm = __webpack_require__(53719), ton_dist = __webpack_require__(823515), config = __webpack_require__(289933), defaults = __webpack_require__(384555), gt_networks = __webpack_require__(660862), balanceOfSend = __webpack_require__(919671), local_storage_shim = __webpack_require__(323101), gt_wallet_config = __webpack_require__(291842), ton_rpc = __webpack_require__(813667);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var isOnLine = function() {
      return navigator.onLine || (0, Notification.Ds)({
        type: "error",
        message: (0, lang_string.lang_string)("无网络连接")
      }), navigator.onLine;
    }, getLastVal = function(data) {
      var type = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "/", _data = data.split(type);
      return _data[_data.length - 1];
    }, getMnemonicWord = function(keyWords) {
      var hintWordsSize = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6, result = [];
      if (keyWords && keyWords.length >= 1) {
        var resultList = words.get(keyWords.substring(0, 1));
        if (1 == keyWords.length) {
          if (resultList.length > hintWordsSize) {
            for (var index = 0; index < hintWordsSize; index++) {
              var element = resultList[index];
              result.push(element);
            }
            return result;
          }
          return resultList;
        }
        for (var otherResult = [], _index2 = 0; _index2 < resultList.length && otherResult.length !== hintWordsSize; _index2++) {
          var _element = resultList[_index2];
          _element.startsWith(keyWords) && otherResult.push(_element);
        }
        return otherResult;
      }
      return result;
    }, getRandomNum = function(m, n, len) {
      var randomList = [];
      if (len <= n) {
        for (;randomList.length < len; ) {
          var num = Math.floor((n + 1 - m) * Math.random() + m);
          -1 == randomList.indexOf(num) && randomList.push(num);
        }
        randomList.sort((function(a, b) {
          return a - b;
        }));
      }
      return randomList;
    }, addZero = function(num) {
      return parseInt(num) < 10 && (num = "0" + num), num;
    };
    function randomIndexArr(data) {
      for (var index, temp, _data = data, l = _data.length; l > 0; ) index = Math.floor(Math.random() * l), 
      temp = _data[l - 1], _data[l - 1] = _data[index], _data[index] = temp, l--;
      return _data;
    }
    var commonAccountCode = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(errorPlaintextCode, errorCode, item, type, mnemonicData, userCookies, repeat, walletInfo, bigNetworkKeys, totalNetworkDic) {
        var walletAccountArr, errcode_type, _walletAccountArr, backup, _walletAccountArrLen, name, _walletAccountArrItem;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return walletAccountArr = item.walletAccountArr, errcode_type = item.errcode_type, 
            _walletAccountArr = walletAccountArr, _context.next = 4, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 578131));

           case 4:
            return backup = _context.sent, _walletAccountArrLen = _walletAccountArr.length, 
            name = "".concat((0, lang_string.lang_string)(2 == type ? "私钥钱包" : 3 == type ? "Keystore钱包" : "硬件钱包")) + (1 != repeat && _walletAccountArrLen > 0 ? addZero(Number(_walletAccountArrLen) + 1) : "01"), 
            _context.next = 9, dealWalletAccount(name, "", "", type, mnemonicData, {
              type: errcode_type,
              lock: errorCode
            }, walletInfo, null, bigNetworkKeys, totalNetworkDic);

           case 9:
            if (_walletAccountArrItem = _context.sent, 4 === type) {
              _context.next = 24;
              break;
            }
            if (!isOnLine()) {
              _context.next = 17;
              break;
            }
            return _context.next = 14, backup.createWalletEncrypt(errorPlaintextCode, errorCode, _walletAccountArrItem, userCookies, bigNetworkKeys, totalNetworkDic);

           case 14:
            _walletAccountArrItem = _context.sent, _context.next = 24;
            break;

           case 17:
            if (1 != errcode_type) {
              _context.next = 23;
              break;
            }
            return _context.next = 20, backup.createWalletEncrypt(errorPlaintextCode, errorCode, _walletAccountArrItem, userCookies, bigNetworkKeys, totalNetworkDic);

           case 20:
            _walletAccountArrItem = _context.sent, _context.next = 24;
            break;

           case 23:
            (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("无法连接网络")
            });

           case 24:
            return 1 == repeat ? _walletAccountArr.forEach((function(a, b) {
              var data1, data2, arr1, arr2, intersection, result;
              (data1 = a, data2 = _walletAccountArrItem, arr1 = Object.keys(data1), arr2 = Object.keys(data2), 
              intersection = arr1.filter((function(val) {
                return arr2.indexOf(val) > -1;
              })), result = !1, (null == intersection ? void 0 : intersection.length) > 0 && intersection.forEach((function(i) {
                var _data1$i$, _data2$i$, _data1$i$2, _data1$i$2$accountAdd, _data2$i$2, _data2$i$2$accountAdd;
                null !== (_data1$i$ = data1[i][0]) && void 0 !== _data1$i$ && _data1$i$.accountAddress && null !== (_data2$i$ = data2[i][0]) && void 0 !== _data2$i$ && _data2$i$.accountAddress && (null === (_data1$i$2 = data1[i][0]) || void 0 === _data1$i$2 || null === (_data1$i$2$accountAdd = _data1$i$2.accountAddress) || void 0 === _data1$i$2$accountAdd ? void 0 : _data1$i$2$accountAdd.toLowerCase()) == (null === (_data2$i$2 = data2[i][0]) || void 0 === _data2$i$2 || null === (_data2$i$2$accountAdd = _data2$i$2.accountAddress) || void 0 === _data2$i$2$accountAdd ? void 0 : _data2$i$2$accountAdd.toLowerCase()) && (result = !0);
              })), result) && (_walletAccountArr[b] = _walletAccountArrItem);
            })) : _walletAccountArr.push(_walletAccountArrItem), _context.abrupt("return", {
              selectedItem: {
                walletID: item.walletID,
                accountID: _walletAccountArrItem.accountID
              },
              item
            });

           case 26:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {
        return _ref.apply(this, arguments);
      };
    }(), dealDefiWalletData = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(errorPlaintextCode, errorCode, walletInfo, type, mnemonicData) {
        var _Object$keys, _mnemonicArr, repeat, selectWalletItem, cacheData, bigNetworkKeys, totalNetworkDic, backup, _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, checkValue, cookiesStr, defiData, pValue, defiWallet, _defiData$defiWallet, walletArr, selectedWalletDic, _selectedWalletDic, _walletArr, isPrivate, isKeystore, isHardware, selectedWalletItem, index, _yield$commonAccountC, selectedItem, item, _index3, _yield$commonAccountC2, _selectedItem, _item2, _index4, _yield$commonAccountC3, _selectedItem2, _item3, _pValue$lock, _walletArrItem2, walletNumber, walletName, firstModalAddress, findWallet, walletArrItem, bigChainInfo, name, _item4, noEvmKeys, copyWalletArr, privateKeyArr, mnemonicArr, old_walletArr, new_walletArr, wallet, _wallet$walletAccount, account, _args2 = arguments;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return repeat = _args2.length > 5 && void 0 !== _args2[5] ? _args2[5] : 0, selectWalletItem = _args2.length > 6 && void 0 !== _args2[6] ? _args2[6] : {}, 
            cacheData = _args2.length > 7 ? _args2[7] : void 0, bigNetworkKeys = _args2.length > 8 ? _args2[8] : void 0, 
            totalNetworkDic = _args2.length > 9 ? _args2[9] : void 0, _context2.next = 7, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 578131));

           case 7:
            return backup = _context2.sent, _context2.next = 10, Promise.all([ (0, crypto_js.pZ)("uid"), defiWalletData.$(), projectData.jq((0, 
            crypto_js.dT)(errorCode)) ]);

           case 10:
            if (_yield$Promise$all = _context2.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3), 
            _yield$Promise$all2$ = _yield$Promise$all2[0], checkValue = _yield$Promise$all2$.checkValue, 
            cookiesStr = _yield$Promise$all2$.cookiesStr, defiData = _yield$Promise$all2[1], 
            pValue = _yield$Promise$all2[2].pValue, defiWallet = defiData.defiWallet, _defiData$defiWallet = defiData.defiWallet, 
            walletArr = _defiData$defiWallet.walletArr, selectedWalletDic = _defiData$defiWallet.selectedWalletDic, 
            _selectedWalletDic = JSON.parse(JSON.stringify(selectedWalletDic)), _walletArr = JSON.parse(JSON.stringify(walletArr)), 
            isPrivate = 0, isKeystore = 0, isHardware = 0, _walletArr.length > 0 && (isPrivate = _walletArr.filter((function(item) {
              return 2 == item.walletCreateType;
            })).length, isKeystore = _walletArr.filter((function(item) {
              return 3 == item.walletCreateType;
            })).length, isHardware = _walletArr.filter((function(item) {
              return 4 == item.walletCreateType;
            })).length), selectedWalletItem = {}, !(isPrivate > 0 && 2 == type)) {
              _context2.next = 41;
              break;
            }
            index = 0;

           case 27:
            if (!(index < _walletArr.length)) {
              _context2.next = 39;
              break;
            }
            if (2 != _walletArr[index].walletCreateType) {
              _context2.next = 36;
              break;
            }
            return _context2.next = 31, commonAccountCode(errorPlaintextCode, errorCode, _walletArr[index], type, mnemonicData, cookiesStr, repeat, walletInfo, bigNetworkKeys, totalNetworkDic);

           case 31:
            _yield$commonAccountC = _context2.sent, selectedItem = _yield$commonAccountC.selectedItem, 
            item = _yield$commonAccountC.item, _walletArr[index] = item, selectedWalletItem = selectedItem;

           case 36:
            index++, _context2.next = 27;
            break;

           case 39:
            _context2.next = 106;
            break;

           case 41:
            if (!(isKeystore > 0 && 3 == type)) {
              _context2.next = 57;
              break;
            }
            _index3 = 0;

           case 43:
            if (!(_index3 < _walletArr.length)) {
              _context2.next = 55;
              break;
            }
            if (3 != _walletArr[_index3].walletCreateType) {
              _context2.next = 52;
              break;
            }
            return _context2.next = 47, commonAccountCode(errorPlaintextCode, errorCode, _walletArr[_index3], type, mnemonicData, cookiesStr, repeat, walletInfo, bigNetworkKeys, totalNetworkDic);

           case 47:
            _yield$commonAccountC2 = _context2.sent, _selectedItem = _yield$commonAccountC2.selectedItem, 
            _item2 = _yield$commonAccountC2.item, _walletArr[_index3] = _item2, selectedWalletItem = _selectedItem;

           case 52:
            _index3++, _context2.next = 43;
            break;

           case 55:
            _context2.next = 106;
            break;

           case 57:
            if (!(isHardware > 0 && 4 == type)) {
              _context2.next = 73;
              break;
            }
            _index4 = 0;

           case 59:
            if (!(_index4 < _walletArr.length)) {
              _context2.next = 71;
              break;
            }
            if (4 != _walletArr[_index4].walletCreateType) {
              _context2.next = 68;
              break;
            }
            return _context2.next = 63, commonAccountCode(errorPlaintextCode, errorCode, _walletArr[_index4], type, mnemonicData, cookiesStr, repeat, walletInfo, bigNetworkKeys, totalNetworkDic);

           case 63:
            _yield$commonAccountC3 = _context2.sent, _selectedItem2 = _yield$commonAccountC3.selectedItem, 
            _item3 = _yield$commonAccountC3.item, _walletArr[_index4] = _item3, selectedWalletItem = _selectedItem2;

           case 68:
            _index4++, _context2.next = 59;
            break;

           case 71:
            _context2.next = 106;
            break;

           case 73:
            return walletNumber = 0, _walletArr.length > 0 && (walletNumber = _walletArr.filter((function(item) {
              return 0 == item.walletCreateType || 1 == item.walletCreateType;
            })).length), walletNumber = walletNumber > 0 ? addZero(Number(walletNumber) + 1) : "01", 
            walletName = 2 == type ? "".concat((0, lang_string.lang_string)("私钥钱包")) : 3 == type ? "".concat((0, 
            lang_string.lang_string)("Keystore钱包")) : 4 == type ? "".concat((0, lang_string.lang_string)("硬件钱包")) : "".concat((0, 
            lang_string.lang_string)("钱包")) + walletNumber, 1 === repeat && 1 === type && null != (firstModalAddress = walletInfo[0]) && firstModalAddress.address && (findWallet = _walletArr.find((function(val) {
              var _val$walletAccountArr, _val$walletAccountArr2, _account$, account = null == val || null === (_val$walletAccountArr = val.walletAccountArr) || void 0 === _val$walletAccountArr || null === (_val$walletAccountArr2 = _val$walletAccountArr[0]) || void 0 === _val$walletAccountArr2 ? void 0 : _val$walletAccountArr2[null == firstModalAddress ? void 0 : firstModalAddress.chainKey];
              return (null == account || null === (_account$ = account[0]) || void 0 === _account$ ? void 0 : _account$.accountAddress) === (null == firstModalAddress ? void 0 : firstModalAddress.address);
            })), findWallet && (walletName = findWallet.walletName)), walletArrItem = {
              walletBackupVersion: "2",
              errcode: 16 == (null == pValue || null === (_pValue$lock = pValue.lock) || void 0 === _pValue$lock ? void 0 : _pValue$lock.length) ? (0, 
              crypto_js.dT)(null == pValue ? void 0 : pValue.lock) : null == pValue ? void 0 : pValue.lock,
              errcode_type: null == pValue ? void 0 : pValue.type,
              walletID: null != selectWalletItem && selectWalletItem.walletID ? null == selectWalletItem ? void 0 : selectWalletItem.walletID : (0, 
              v4.A)(),
              walletCreateType: type,
              walletName: null != selectWalletItem && selectWalletItem.walletName ? null == selectWalletItem ? void 0 : selectWalletItem.walletName : walletName,
              walletMnemonic: (null == walletInfo ? void 0 : walletInfo.length) > 0 ? walletInfo[0].mnemonic : "",
              walletAmount: "",
              walletUnfold: !1,
              walletLocalBackup: !1,
              walletCloudBackup: !(null == selectWalletItem || !selectWalletItem.walletCloudBackup) && (null == selectWalletItem ? void 0 : selectWalletItem.walletCloudBackup),
              walletAccountArr: [],
              u_number: checkValue || "",
              walletCreateTime: (new Date).getTime()
            }, bigChainInfo = {}, (null == bigNetworkKeys ? void 0 : bigNetworkKeys.length) > 0 && (null == walletInfo ? void 0 : walletInfo.length) > 0 && bigNetworkKeys.forEach((function(chainItem) {
              walletInfo.forEach((function(accountItem) {
                var _accountItem$chainKey;
                if ((null == chainItem ? void 0 : chainItem.toUpperCase()) == (null == accountItem || null === (_accountItem$chainKey = accountItem.chainKey) || void 0 === _accountItem$chainKey ? void 0 : _accountItem$chainKey.toUpperCase())) {
                  var _accountItem$chainAcc, chainInfo = [];
                  (null == accountItem || null === (_accountItem$chainAcc = accountItem.chainAccounts) || void 0 === _accountItem$chainAcc ? void 0 : _accountItem$chainAcc.length) > 0 ? (null == accountItem || accountItem.chainAccounts.forEach((function(item) {
                    var itemInfo = {
                      walletExtendPath: null == item ? void 0 : item.derivationPath,
                      walletExtendPrivateKey: null == item ? void 0 : item.accountExtendedPrivateKey,
                      accountFormat: null == item ? void 0 : item.accountFormat
                    };
                    chainInfo.push(itemInfo);
                  })), bigChainInfo = _objectSpread(_objectSpread({}, bigChainInfo), _defineProperty({}, chainItem, chainInfo))) : (chainInfo.push({
                    walletExtendPath: null == accountItem ? void 0 : accountItem.extendedPath,
                    walletExtendPrivateKey: null == accountItem ? void 0 : accountItem.accountExtendedPrivateKey,
                    accountFormat: null == accountItem ? void 0 : accountItem.accountFormat
                  }), bigChainInfo = _objectSpread(_objectSpread({}, bigChainInfo), _defineProperty({}, chainItem, chainInfo)));
                }
              }));
            })), walletArrItem = _objectSpread(_objectSpread({}, walletArrItem), bigChainInfo), 
            name = "".concat(2 == type ? (0, lang_string.lang_string)("私钥钱包") : 3 == type ? (0, 
            lang_string.lang_string)("Keystore钱包") : 4 == type ? (0, lang_string.lang_string)("硬件钱包") : (0, 
            lang_string.lang_string)("账户"), "01"), _context2.next = 85, dealWalletAccount(name, "", "", type, mnemonicData, pValue, walletInfo, selectWalletItem, bigNetworkKeys, totalNetworkDic);

           case 85:
            if (_item4 = _context2.sent, walletArrItem.walletAccountArr.push(_item4), 4 === type) {
              _context2.next = 104;
              break;
            }
            if (!isOnLine()) {
              _context2.next = 97;
              break;
            }
            return _context2.next = 91, backup.createWalletEncrypt(errorPlaintextCode, errorCode, walletArrItem, cookiesStr, bigNetworkKeys, totalNetworkDic);

           case 91:
            if (_context2.t0 = _context2.sent, _context2.t0) {
              _context2.next = 94;
              break;
            }
            _context2.t0 = walletArrItem;

           case 94:
            walletArrItem = _context2.t0, _context2.next = 104;
            break;

           case 97:
            if (1 != walletArrItem.errcode_type) {
              _context2.next = 103;
              break;
            }
            return _context2.next = 100, backup.createWalletEncrypt(errorPlaintextCode, errorCode, walletArrItem, cookiesStr, bigNetworkKeys, totalNetworkDic);

           case 100:
            walletArrItem = _context2.sent, _context2.next = 104;
            break;

           case 103:
            (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("无法连接网络")
            });

           case 104:
            1 != repeat || 1 != type && 0 != type ? _walletArr.push(walletArrItem) : _walletArr.forEach((function(a, b) {
              if (2 != a.walletCreateType && 3 != a.walletCreateType) {
                var _walletArrItem, oldWalletAccountArr = null == a ? void 0 : a.walletAccountArr[0], newWalletAccountArr = null === (_walletArrItem = walletArrItem) || void 0 === _walletArrItem ? void 0 : _walletArrItem.walletAccountArr[0], repeatData = repeatingData(oldWalletAccountArr, newWalletAccountArr);
                if (repeatData.length > 0) {
                  var _oldWalletAccountArr$, _oldWalletAccountArr$2, _newWalletAccountArr$, _newWalletAccountArr$2, repeatDataIndex = repeatData[0];
                  (null === (_oldWalletAccountArr$ = oldWalletAccountArr[repeatDataIndex][0]) || void 0 === _oldWalletAccountArr$ || null === (_oldWalletAccountArr$2 = _oldWalletAccountArr$.accountAddress) || void 0 === _oldWalletAccountArr$2 ? void 0 : _oldWalletAccountArr$2.toLowerCase()) == (null === (_newWalletAccountArr$ = newWalletAccountArr[repeatDataIndex][0]) || void 0 === _newWalletAccountArr$ || null === (_newWalletAccountArr$2 = _newWalletAccountArr$.accountAddress) || void 0 === _newWalletAccountArr$2 ? void 0 : _newWalletAccountArr$2.toLowerCase()) && (_walletArr[b] = walletArrItem);
                }
              }
            })), selectedWalletItem = {
              walletID: null === (_walletArrItem2 = walletArrItem) || void 0 === _walletArrItem2 ? void 0 : _walletArrItem2.walletID,
              accountID: null == _item4 ? void 0 : _item4.accountID
            };

           case 106:
            return noEvmKeys = null === (_Object$keys = Object.keys(totalNetworkDic)) || void 0 === _Object$keys ? void 0 : _Object$keys.filter((function(key) {
              var _totalNetworkDic$key;
              return "EVM" !== (null === (_totalNetworkDic$key = totalNetworkDic[key]) || void 0 === _totalNetworkDic$key ? void 0 : _totalNetworkDic$key.chainArchitecture);
            })), (null == _walletArr ? void 0 : _walletArr.length) > 0 && _walletArr.forEach((function(item) {
              var _item$walletAccountAr;
              3 == item.walletCreateType && (null == noEvmKeys || noEvmKeys.forEach((function(key) {
                var _item$key, _item$key$;
                null !== (_item$key = item[key]) && void 0 !== _item$key && null !== (_item$key$ = _item$key[0]) && void 0 !== _item$key$ && _item$key$.hasOwnProperty("walletExtendPrivateKey") && delete item[key];
              })), (null == item || null === (_item$walletAccountAr = item.walletAccountArr) || void 0 === _item$walletAccountAr ? void 0 : _item$walletAccountAr.length) > 0 && item.walletAccountArr.forEach((function(iData) {
                null == noEvmKeys || noEvmKeys.forEach((function(key) {
                  var _iData$key, _iData$key$;
                  null !== (_iData$key = iData[key]) && void 0 !== _iData$key && null !== (_iData$key$ = _iData$key[0]) && void 0 !== _iData$key$ && _iData$key$.hasOwnProperty("accountAddress") && delete iData[key];
                }));
              })));
            })), copyWalletArr = JSON.parse(JSON.stringify(_walletArr)), privateKeyArr = [], 
            mnemonicArr = [], copyWalletArr && (null == copyWalletArr ? void 0 : copyWalletArr.length) > 0 && (privateKeyArr = null == copyWalletArr ? void 0 : copyWalletArr.filter((function(i) {
              return !(null != i && i.walletMnemonic);
            })), mnemonicArr = null == copyWalletArr ? void 0 : copyWalletArr.filter((function(i) {
              return null == i ? void 0 : i.walletMnemonic;
            }))), mnemonicArr && (null === (_mnemonicArr = mnemonicArr) || void 0 === _mnemonicArr ? void 0 : _mnemonicArr.length) > 0 && (mnemonicArr = mnemonicArr.filter((function(item, index) {
              return mnemonicArr.findIndex((function(i) {
                return i.walletMnemonic === item.walletMnemonic;
              })) === index;
            }))), _selectedWalletDic = selectedWalletItem, old_walletArr = [].concat(_toConsumableArray(privateKeyArr), _toConsumableArray(mnemonicArr)), 
            new_walletArr = old_walletArr.map((function(e) {
              return _objectSpread(_objectSpread({}, e), {}, {
                walletAccountArr: ensureAccountDeriveIndexnew(e.walletAccountArr)
              });
            })), defiWallet.walletArr = _toConsumableArray(new_walletArr), defiWallet.selectedWalletDic = _selectedWalletDic, 
            (wallet = defiWallet.walletArr.find((function(val) {
              return val.walletID === selectedWalletItem.walletID;
            }))) && (account = null == wallet || null === (_wallet$walletAccount = wallet.walletAccountArr) || void 0 === _wallet$walletAccount ? void 0 : _wallet$walletAccount.find((function(val) {
              return val.accountID === selectedWalletItem.accountID;
            }))) && (null == cacheData || cacheData.setSelectedWallet({
              wallet,
              account
            })), _context2.abrupt("return", new Promise((function(resolve, reject) {
              try {
                defiWalletData.s(defiWallet), resolve(defiWallet);
              } catch (error) {
                reject(error);
              }
            })));

           case 121:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x11, _x12, _x13, _x14, _x15) {
        return _ref2.apply(this, arguments);
      };
    }();
    function ensureAccountDeriveIndexnew(objectsArray) {
      return objectsArray.forEach((function(obj) {
        for (var key in obj) Array.isArray(obj[key]) && obj[key].forEach((function(nestedObj) {
          nestedObj.hasOwnProperty("accountDeriveIndex") || (nestedObj.accountDeriveIndex = "");
        }));
      })), objectsArray;
    }
    var setJsonData = function(data) {
      return new Promise((function(resolve, reject) {
        try {
          defiWalletData.s(data), resolve(!0);
        } catch (error) {
          reject(error);
        }
      }));
    }, setSelectedWallet = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(walletID, accountID, walletCreateType) {
        var res, defiWallet, selectedWalletDic, _selectedWalletDic, _defiWallet$walletArr, wallet;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, defiWalletData.$();

           case 2:
            return res = _context3.sent, defiWallet = res.defiWallet, selectedWalletDic = res.defiWallet.selectedWalletDic, 
            _selectedWalletDic = JSON.parse(JSON.stringify(selectedWalletDic)), void 0 !== walletCreateType ? _selectedWalletDic = {
              walletID,
              accountID,
              walletCreateType
            } : (wallet = null === (_defiWallet$walletArr = defiWallet.walletArr) || void 0 === _defiWallet$walletArr ? void 0 : _defiWallet$walletArr.find((function(w) {
              return w.walletID === walletID;
            })), _selectedWalletDic = wallet && void 0 !== wallet.walletCreateType ? {
              walletID,
              accountID,
              walletCreateType: wallet.walletCreateType
            } : {
              walletID,
              accountID
            }), defiWallet.selectedWalletDic = _selectedWalletDic, _context3.abrupt("return", new Promise((function(resolve, reject) {
              try {
                defiWalletData.s(defiWallet).then((function() {
                  resolve(!0);
                }));
              } catch (error) {
                reject(error);
              }
            })));

           case 8:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x16, _x17, _x18) {
        return _ref3.apply(this, arguments);
      };
    }(), dealDefiniteChain = function(data, totalNetworkDic) {
      var chainData = {};
      if (data && "{}" !== JSON.stringify(data)) {
        var itemKey = Object.keys(data);
        (null == itemKey ? void 0 : itemKey.length) > 0 && itemKey.forEach((function(Item) {
          if ("ETH" == Item) {
            var cData = (0, gt_networks.Fv)(totalNetworkDic).ETH;
            (null == cData ? void 0 : cData.length) > 0 && cData.forEach((function(i) {
              chainData = _objectSpread(_objectSpread({}, chainData), _defineProperty({}, i, data.ETH));
            }));
          } else chainData = _objectSpread(_objectSpread({}, chainData), _defineProperty({}, Item, data[Item]));
        }));
      }
      return chainData;
    }, dealWalletAccount = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(name) {
        var _net, index, amount, type, mnemonicData, pValue, walletInfo, selectWalletItem, bigNetworkKeys, totalNetworkDic, isExistAccountId, isExistAccountName, _selectWalletItem$wal, _selectWalletItem$wal2, _index, chainInfo, walletAccount, _pValue$lock2, _yield$getPageCookies, checkValue, net, netItem, _chainInfo$SOL, solAddress, _chainInfo$SOL$, _index5, i, _netItem$i, _netItem$i$, _args4 = arguments;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            if (index = _args4.length > 1 && void 0 !== _args4[1] ? _args4[1] : 0, amount = _args4.length > 2 && void 0 !== _args4[2] ? _args4[2] : 0, 
            type = _args4.length > 3 ? _args4[3] : void 0, mnemonicData = _args4.length > 4 ? _args4[4] : void 0, 
            pValue = _args4.length > 5 && void 0 !== _args4[5] ? _args4[5] : {}, walletInfo = _args4.length > 6 ? _args4[6] : void 0, 
            selectWalletItem = _args4.length > 7 && void 0 !== _args4[7] ? _args4[7] : {}, bigNetworkKeys = _args4.length > 8 ? _args4[8] : void 0, 
            totalNetworkDic = _args4.length > 9 ? _args4[9] : void 0, isExistAccountId = "", 
            isExistAccountName = "", "{}" !== JSON.stringify(selectWalletItem) && (_index = "" == index ? 0 : index, 
            isExistAccountId = null == selectWalletItem || null === (_selectWalletItem$wal = selectWalletItem.walletAccountArr[_index]) || void 0 === _selectWalletItem$wal ? void 0 : _selectWalletItem$wal.accountID, 
            isExistAccountName = null == selectWalletItem || null === (_selectWalletItem$wal2 = selectWalletItem.walletAccountArr[_index]) || void 0 === _selectWalletItem$wal2 ? void 0 : _selectWalletItem$wal2.accountName), 
            chainInfo = {}, (null == bigNetworkKeys ? void 0 : bigNetworkKeys.length) > 0 && (null == walletInfo ? void 0 : walletInfo.length) > 0 && bigNetworkKeys.forEach((function(chainItem) {
              walletInfo.forEach((function(accountItem) {
                var _accountItem$chainKey2;
                if ((null == chainItem ? void 0 : chainItem.toUpperCase()) == (null == accountItem || null === (_accountItem$chainKey2 = accountItem.chainKey) || void 0 === _accountItem$chainKey2 ? void 0 : _accountItem$chainKey2.toUpperCase())) {
                  var _accountItem$chainAcc2, chainInfoItem = [];
                  if ((null == accountItem || null === (_accountItem$chainAcc2 = accountItem.chainAccounts) || void 0 === _accountItem$chainAcc2 ? void 0 : _accountItem$chainAcc2.length) > 0) null == accountItem || accountItem.chainAccounts.forEach((function(item) {
                    var itemInfo = {
                      accountAddress: null == item ? void 0 : item.address,
                      accountPrivateKey: (null == item ? void 0 : item.wipPrivateKey) || (null == item ? void 0 : item.privateKey),
                      accountFormat: null == item ? void 0 : item.accountFormat,
                      accountPublicKey: null == item ? void 0 : item.publicKey,
                      walletExtendPath: null == item ? void 0 : item.derivationPath,
                      accountDeriveIndex: null != item && item.accountDeriveIndex ? null == item ? void 0 : item.accountDeriveIndex : ""
                    };
                    chainInfoItem.push(itemInfo);
                  })), chainInfo = _objectSpread(_objectSpread({}, chainInfo), _defineProperty({}, chainItem, chainInfoItem)); else {
                    var _privateKey = null == accountItem ? void 0 : accountItem.privateKey;
                    gt_wallet_config.cI.includes(null == accountItem ? void 0 : accountItem.chainKey) && (_privateKey = null == accountItem ? void 0 : accountItem.secretKey), 
                    "DASH" != (null == accountItem ? void 0 : accountItem.chainKey) && "DOGE" != (null == accountItem ? void 0 : accountItem.chainKey) || (_privateKey = null == accountItem ? void 0 : accountItem.wipPrivateKey), 
                    chainInfoItem.push({
                      accountAddress: null == accountItem ? void 0 : accountItem.address,
                      accountPrivateKey: _privateKey,
                      accountFormat: (null == accountItem ? void 0 : accountItem.accountFormat) || "",
                      accountPublicKey: null == accountItem ? void 0 : accountItem.publicKey,
                      walletExtendPath: null == accountItem ? void 0 : accountItem.extendedPath,
                      accountDeriveIndex: null != accountItem && accountItem.accountDeriveIndex ? null == accountItem ? void 0 : accountItem.accountDeriveIndex : ""
                    }), chainInfo = _objectSpread(_objectSpread({}, chainInfo), _defineProperty({}, chainItem, chainInfoItem));
                  }
                }
              }));
            })), chainInfo = dealDefiniteChain(chainInfo, totalNetworkDic), walletAccount = {
              accountID: isExistAccountId,
              accountIndex: index,
              accountName: isExistAccountName || name,
              accountAmount: amount,
              accountCoinArr: [],
              walletCreateTime: (new Date).getTime()
            }, 2 != type && 3 != type) {
              _context4.next = 21;
              break;
            }
            return _context4.next = 18, (0, crypto_js.pZ)("uid");

           case 18:
            _yield$getPageCookies = _context4.sent, checkValue = _yield$getPageCookies.checkValue, 
            walletAccount = _objectSpread(_objectSpread({}, walletAccount), {
              mnemonic: mnemonicData,
              errcode: 16 == (null == pValue || null === (_pValue$lock2 = pValue.lock) || void 0 === _pValue$lock2 ? void 0 : _pValue$lock2.length) ? (0, 
              crypto_js.dT)(null == pValue ? void 0 : pValue.lock) : null == pValue ? void 0 : pValue.lock,
              errcode_type: null == pValue ? void 0 : pValue.type,
              walletCloudBackup: !1,
              u_number: checkValue || ""
            });

           case 21:
            if (net = Object.keys(totalNetworkDic), netItem = {}, net && (null === (_net = net) || void 0 === _net ? void 0 : _net.length) > 0 && (2 == type && (solAddress = "", 
            "SOL" in chainInfo && (null === (_chainInfo$SOL = chainInfo.SOL) || void 0 === _chainInfo$SOL ? void 0 : _chainInfo$SOL.length) > 0 && (solAddress = null === (_chainInfo$SOL$ = chainInfo.SOL[0]) || void 0 === _chainInfo$SOL$ ? void 0 : _chainInfo$SOL$.accountAddress), 
            solAddress ? net = net.filter((function(item) {
              return gt_wallet_config.cI.includes(item);
            })) : (_index5 = net.findIndex((function(item) {
              return "SOL" == item;
            }))) > -1 && net.splice(_index5, 1)), net.forEach((function(item) {
              netItem[item] = chainInfo[item];
            }))), "{}" !== JSON.stringify(netItem)) for (i in netItem) netItem[i] && (null === (_netItem$i = netItem[i]) || void 0 === _netItem$i ? void 0 : _netItem$i.length) > 0 && (null === (_netItem$i$ = netItem[i][0]) || void 0 === _netItem$i$ || !_netItem$i$.accountAddress) && delete netItem[i], 
            netItem[i] || delete netItem[i];
            return _context4.abrupt("return", _objectSpread(_objectSpread({}, walletAccount), netItem));

           case 26:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x19) {
        return _ref4.apply(this, arguments);
      };
    }(), matchChain = function(data, totalNetworkDic, selectedNetwork) {
      var networkToHide = selectedNetwork.isTest ? "BTC" : "SIGNET_TEST_GATETEST", reverseNetworkMap = {};
      Object.keys(totalNetworkDic).forEach((function(network) {
        Array.isArray(totalNetworkDic[network]) && totalNetworkDic[network].forEach((function(key) {
          reverseNetworkMap[key] = "ETH" === network ? "EVM" : network;
        }));
      }));
      var _step, results = [], uniqueCombination = new Set, _iterator = function(o, allowArrayLike) {
        var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
        if (!it) {
          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
            it && (o = it);
            var i = 0, F = function() {};
            return {
              s: F,
              n: function() {
                return i >= o.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: o[i++]
                };
              },
              e: function(_e2) {
                throw _e2;
              },
              f: F
            };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var err, normalCompletion = !0, didErr = !1;
        return {
          s: function() {
            it = it.call(o);
          },
          n: function() {
            var step = it.next();
            return normalCompletion = step.done, step;
          },
          e: function(_e3) {
            didErr = !0, err = _e3;
          },
          f: function() {
            try {
              normalCompletion || null == it.return || it.return();
            } finally {
              if (didErr) throw err;
            }
          }
        };
      }(data);
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var item = _step.value;
          if (reverseNetworkMap[item.networkKey] && (item.networkKey = reverseNetworkMap[item.networkKey]), 
          item.networkKey !== networkToHide) {
            var keyCombination = tool_const.MORE_ADDRESS_CHAIN_WITH_VARA.includes(item.networkKey) ? "".concat(item.networkKey, "-").concat(item.accountAddress) : item.networkKey;
            !tool_const.MORE_ADDRESS_CHAIN_WITH_VARA.includes(item.networkKey) && uniqueCombination.has(keyCombination) || (uniqueCombination.add(keyCombination), 
            results.push(item));
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return results;
    }, getPublicIP = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5() {
        var response, data;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return _context5.prev = 0, _context5.next = 3, fetch("https://api.ipify.org?format=json");

           case 3:
            if ((response = _context5.sent).ok) {
              _context5.next = 6;
              break;
            }
            return _context5.abrupt("return", null);

           case 6:
            return _context5.next = 8, response.json();

           case 8:
            return data = _context5.sent, _context5.abrupt("return", data);

           case 12:
            return _context5.prev = 12, _context5.t0 = _context5.catch(0), _context5.abrupt("return", null);

           case 15:
           case "end":
            return _context5.stop();
          }
        }), _callee5, null, [ [ 0, 12 ] ]);
      })));
      return function() {
        return _ref5.apply(this, arguments);
      };
    }(), recordAddress = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(accountInfo, type, totalNetworkDic, selectedNetwork) {
        var _params, api, _accountInfo, params, _loop, i, devicetoken, options, _window, _window$WebRTCSec, randomStr, randommsg, userIP, ip, newIP_Res;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _context6.next = 2, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 653360));

           case 2:
            if (api = _context6.sent, _accountInfo = JSON.parse(JSON.stringify(accountInfo)), 
            params = [], _accountInfo && "{}" !== JSON.stringify(_accountInfo)) for (i in _loop = function(i) {
              var item = _accountInfo[i];
              item instanceof Array && (null == item ? void 0 : item.length) > 0 && item.forEach((function(val) {
                null != val && val.accountAddress && params.push({
                  platformType: "plug",
                  walletCreateType: type,
                  walletCreateTime: _accountInfo.walletCreateTime || "",
                  networkKey: i,
                  accountAddress: null == val ? void 0 : val.accountAddress,
                  accountFormat: null == val ? void 0 : val.accountFormat
                });
              }));
            }, _accountInfo) _loop(i);
            if (params = matchChain(params, totalNetworkDic, selectedNetwork), devicetoken = "", 
            devicetoken = (0, crypto_js.h2)("DeviceToken")) {
              _context6.next = 15;
              break;
            }
            return options = {
              appId: config.B7,
              server: config.O8
            }, _context6.next = 13, window._dx.ConstID(options);

           case 13:
            devicetoken = _context6.sent, (0, crypto_js.SD)("DeviceToken", devicetoken, 1);

           case 15:
            if (!((null === (_params = params) || void 0 === _params ? void 0 : _params.length) > 0)) {
              _context6.next = 32;
              break;
            }
            return randomStr = "", randommsg = "", _context6.next = 19, null === (_window = window) || void 0 === _window || null === (_window$WebRTCSec = _window.WebRTCSec) || void 0 === _window$WebRTCSec ? void 0 : _window$WebRTCSec.getRealIP();

           case 19:
            if ("success" !== (null == (userIP = _context6.sent) ? void 0 : userIP.err)) {
              _context6.next = 25;
              break;
            }
            ip = null == userIP ? void 0 : userIP.ips[(null == userIP ? void 0 : userIP.ips.length) - 1], 
            randomStr = (0, crypto_js.yv)(ip, devicetoken), _context6.next = 29;
            break;

           case 25:
            return _context6.next = 27, getPublicIP();

           case 27:
            (newIP_Res = _context6.sent) && null != newIP_Res && newIP_Res.ip ? randomStr = (0, 
            crypto_js.yv)(newIP_Res.ip, devicetoken) : randommsg = btoa(null == userIP ? void 0 : userIP.err);

           case 29:
            return _context6.next = 31, api.recordWalletAddress(params, {
              devicetoken,
              randomStr,
              randommsg
            }).then((function(res) {
              var _res$data, _res$data2, _res$data2$data;
              return 200 == (null == res || null === (_res$data = res.data) || void 0 === _res$data ? void 0 : _res$data.code) ? (_accountInfo.gtWalletID = null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 || null === (_res$data2$data = _res$data2.data) || void 0 === _res$data2$data ? void 0 : _res$data2$data.walletId, 
              _accountInfo) : (_accountInfo.gtWalletID || (_accountInfo.gtWalletID = (0, v4.A)() + "_plug"), 
              _accountInfo);
            })).catch((function() {
              return _accountInfo.gtWalletID || (_accountInfo.gtWalletID = (0, v4.A)() + "_plug"), 
              _accountInfo;
            }));

           case 31:
            return _context6.abrupt("return", _context6.sent);

           case 32:
            return _context6.abrupt("return", _accountInfo);

           case 33:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x20, _x21, _x22, _x23) {
        return _ref6.apply(this, arguments);
      };
    }(), dealWalletName = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(type, id, name, isInputValue) {
        var res, defiWallet, walletArr, _walletArr, flag, currentWallet;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return _context7.next = 2, defiWalletData.$();

           case 2:
            if (res = _context7.sent, defiWallet = res.defiWallet, walletArr = res.defiWallet.walletArr, 
            _walletArr = _toConsumableArray(walletArr), flag = [], _walletArr.length > 0 && ("wallet" == type ? flag = _walletArr.filter((function(item) {
              return item.walletName == name && item.walletID != id;
            })) : (currentWallet = _walletArr.find((function(wallet) {
              return wallet.walletAccountArr && wallet.walletAccountArr.some((function(account) {
                return account.accountID == id;
              }));
            }))) && currentWallet.walletAccountArr.length > 0 && (flag = currentWallet.walletAccountArr.filter((function(account) {
              return account.accountName == name && account.accountID != id;
            })))), !(isInputValue && flag.length > 0)) {
              _context7.next = 10;
              break;
            }
            return (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("wallet" == type ? "钱包名称已存在" : "账户名称已存在")
            }), _context7.abrupt("return");

           case 10:
            return _walletArr.length > 0 && ("wallet" == type ? _walletArr.forEach((function(item) {
              item.walletID == id && (item.walletName = name);
            })) : _walletArr.forEach((function(Item) {
              Item.walletAccountArr.length > 0 && Item.walletAccountArr.forEach((function(i) {
                i.accountID == id && (i.accountName = name);
              }));
            }))), defiWallet.walletArr = _walletArr, _context7.abrupt("return", new Promise((function(resolve, reject) {
              try {
                defiWalletData.s(defiWallet), resolve(!0);
              } catch (error) {
                reject(error);
              }
            })));

           case 13:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })));
      return function(_x24, _x25, _x26, _x27) {
        return _ref7.apply(this, arguments);
      };
    }(), isWalletRepeat = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(address, type, chainKey) {
        var res, walletArr, value;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            return _context8.next = 2, (0, data.fw)();

           case 2:
            return res = _context8.sent, walletArr = res.walletArr, value = !0, walletArr.length > 0 && walletArr.forEach((function(Item) {
              Item.walletAccountArr.length > 0 && Item.walletAccountArr.forEach((function(item) {
                var _loop2 = function(i) {
                  if (0 == Item.walletCreateType && 1 == type || Item.walletCreateType == type) {
                    var _item = item[i];
                    _item instanceof Array && (null == _item ? void 0 : _item.length) > 0 && _item.forEach((function(val) {
                      var _val$accountAddress;
                      val instanceof Object && "accountAddress" in val && address && (null === (_val$accountAddress = val.accountAddress) || void 0 === _val$accountAddress ? void 0 : _val$accountAddress.toLowerCase()) == (null == address ? void 0 : address.toLowerCase()) && (2 !== type || "BTC" !== chainKey && "TBC" !== chainKey || i === chainKey) && (value = !1);
                    }));
                  }
                };
                for (var i in item) _loop2(i);
              }));
            })), _context8.abrupt("return", value);

           case 7:
           case "end":
            return _context8.stop();
          }
        }), _callee8);
      })));
      return function(_x28, _x29, _x30) {
        return _ref8.apply(this, arguments);
      };
    }(), isRepeat = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(errorPlaintextCode, errorCode, history, res, type, setLoading, mnemonicData, bgDispatch, isBatch, cacheData, bigNetworkKeys, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _res$, _res$2, _res$3, accountAddress, accountPrivate, val, defiRes;
        return regeneratorRuntime.wrap((function(_context9) {
          for (;;) switch (_context9.prev = _context9.next) {
           case 0:
            if (isOnLine()) {
              _context9.next = 2;
              break;
            }
            return _context9.abrupt("return", "network-error");

           case 2:
            return _context9.next = 4, setDefiData({
              nftAllCollection: []
            });

           case 4:
            return accountAddress = (null == res ? void 0 : res.length) > 0 ? null === (_res$ = res[0]) || void 0 === _res$ ? void 0 : _res$.address : "", 
            accountPrivate = (null == res ? void 0 : res.length) > 0 ? null === (_res$2 = res[0]) || void 0 === _res$2 ? void 0 : _res$2.privateKey : "", 
            _context9.next = 8, isWalletRepeat(accountAddress, type, null == res || null === (_res$3 = res[0]) || void 0 === _res$3 ? void 0 : _res$3.chainKey);

           case 8:
            if (val = _context9.sent, !accountPrivate) {
              _context9.next = 20;
              break;
            }
            if (null == setLoading || setLoading(!1), val) {
              _context9.next = 13;
              break;
            }
            return _context9.abrupt("return", "repeat");

           case 13:
            return null == setLoading || setLoading(!0), _context9.next = 16, hasDealDefi(errorPlaintextCode, errorCode, history, res, type, mnemonicData, 0, null, null, null, bgDispatch, isBatch, cacheData, bigNetworkKeys, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 16:
            return defiRes = _context9.sent, _context9.abrupt("return", defiRes);

           case 20:
            null == setLoading || setLoading(!1), 3 == type && (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("导入钱包失败")
            });

           case 22:
           case "end":
            return _context9.stop();
          }
        }), _callee9);
      })));
      return function(_x31, _x32, _x33, _x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42, _x43, _x44) {
        return _ref9.apply(this, arguments);
      };
    }(), hasDealDefi = function() {
      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(errorPlaintextCode, errorCode, history, res, type, mnemonicData) {
        var react, addNewChain, selectedWalletDic, setFundPwLoading, bgDispatch, isBatch, cacheData, bigNetworkKeys, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, selectWalletItem, addAccountObj, backup, _res$4, _res$5, network, walletItemData, walletItemIndex, defiData, walletArr, _selectWalletItem$wal3, dispatch, deriveAddress, accountTotals, accountTypes, userCookies, pwValue, walletAccountLength, walletIndex, walletStr, decryptionArr, _backup$pushkeyVal, walletItem, _args11 = arguments;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            return react = _args11.length > 6 && void 0 !== _args11[6] ? _args11[6] : 0, selectedWalletDic = _args11.length > 8 && void 0 !== _args11[8] ? _args11[8] : {}, 
            setFundPwLoading = _args11.length > 9 ? _args11[9] : void 0, bgDispatch = _args11.length > 10 ? _args11[10] : void 0, 
            isBatch = _args11.length > 11 ? _args11[11] : void 0, cacheData = _args11.length > 12 ? _args11[12] : void 0, 
            bigNetworkKeys = _args11.length > 13 ? _args11[13] : void 0, totalNetworkDic = _args11.length > 14 ? _args11[14] : void 0, 
            rpcUrls = _args11.length > 15 ? _args11[15] : void 0, lastGetSuccessRpcTime = _args11.length > 16 ? _args11[16] : void 0, 
            selectWalletItem = null == (addNewChain = _args11.length > 7 ? _args11[7] : void 0) ? void 0 : addNewChain.selectWalletItem, 
            addAccountObj = null == addNewChain ? void 0 : addNewChain.addAccountObj, _context11.next = 15, 
            Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 578131));

           case 15:
            return backup = _context11.sent, _context11.next = 18, (0, handleCreateWallet.oV)(errorPlaintextCode, errorCode, res, type, mnemonicData, react, selectWalletItem, cacheData, bigNetworkKeys, totalNetworkDic);

           case 18:
            if (!_context11.sent) {
              _context11.next = 75;
              break;
            }
            return localStorage.setItem("isHasAccount", 1), (null == res ? void 0 : res.length) > 1 || "ETH" === (null == res || null === (_res$4 = res[0]) || void 0 === _res$4 ? void 0 : _res$4.chainKey) ? (0, 
            gt_networks.jG)(defaults.e, bgDispatch) : null != res && res.length && (network = totalNetworkDic[null == res || null === (_res$5 = res[0]) || void 0 === _res$5 ? void 0 : _res$5.chainKey], 
            (0, gt_networks.jG)(network, bgDispatch)), walletItemData = {}, walletItemIndex = 0, 
            _context11.next = 25, defiWalletData.$();

           case 25:
            if (defiData = _context11.sent, (walletArr = defiData.defiWallet.walletArr).forEach(function() {
              var _ref11 = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(item, index) {
                return regeneratorRuntime.wrap((function(_context10) {
                  for (;;) switch (_context10.prev = _context10.next) {
                   case 0:
                    (null == item ? void 0 : item.walletID) == (null == selectWalletItem ? void 0 : selectWalletItem.walletID) && (walletItemIndex = index);

                   case 1:
                   case "end":
                    return _context10.stop();
                  }
                }), _callee10);
              })));
              return function(_x51, _x52) {
                return _ref11.apply(this, arguments);
              };
            }()), !(1 == react && JSON.stringify(selectWalletItem) != {} && addAccountObj && addAccountObj instanceof Object && "{}" !== JSON.stringify(addAccountObj))) {
              _context11.next = 68;
              break;
            }
            if (_context11.prev = 29, dispatch = addAccountObj.dispatch, deriveAddress = addAccountObj.deriveAddress, 
            accountTotals = addAccountObj.accountTotals, accountTypes = addAccountObj.accountTypes, 
            userCookies = addAccountObj.userCookies, pwValue = addAccountObj.pwValue, !((walletAccountLength = (null == selectWalletItem || null === (_selectWalletItem$wal3 = selectWalletItem.walletAccountArr) || void 0 === _selectWalletItem$wal3 ? void 0 : _selectWalletItem$wal3.length) || 0) > 1)) {
              _context11.next = 51;
              break;
            }
            walletIndex = 1;

           case 34:
            if (!(walletIndex < walletAccountLength)) {
              _context11.next = 51;
              break;
            }
            if (walletItemData = walletArr[walletItemIndex], 1 != (null == selectWalletItem ? void 0 : selectWalletItem.errcode_type)) {
              _context11.next = 40;
              break;
            }
            walletItemData = backup.decodeItemPut(walletItemData, errorCode, totalNetworkDic), 
            _context11.next = 46;
            break;

           case 40:
            return walletStr = backup.getJoinStr(walletItemData, bigNetworkKeys), _context11.next = 43, 
            backup.decryptionTxt(userCookies, "extendBigChain", walletStr, pwValue, errorCode);

           case 43:
            decryptionArr = _context11.sent, _backup$pushkeyVal = backup.pushkeyVal(walletItemData, decryptionArr, bigNetworkKeys), 
            walletItem = _backup$pushkeyVal.walletItem, walletItemData = walletItem;

           case 46:
            return _context11.next = 48, addAccount("", errorPlaintextCode, errorCode, walletItemData, dispatch, deriveAddress, accountTotals, accountTypes, userCookies, pwValue, walletIndex, selectWalletItem, selectedWalletDic, "", "", isBatch, null, bigNetworkKeys, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 48:
            walletIndex++, _context11.next = 34;
            break;

           case 51:
            if (2 != (null == selectWalletItem ? void 0 : selectWalletItem.errcode_type) || null == selectWalletItem || !selectWalletItem.walletCloudBackup) {
              _context11.next = 54;
              break;
            }
            return _context11.next = 54, backupAddChainWallet(userCookies, pwValue, walletItemIndex, totalNetworkDic);

           case 54:
            return setFundPwLoading && setFundPwLoading({
              show: !1
            }), (0, walletRecord.e)(tool_const.INIT_IMPORT_WALLET), isBatch || bgDispatch((0, 
            ui.xb)()), null == history || history.push("/wallet/home"), _context11.abrupt("return", "success");

           case 61:
            _context11.prev = 61, _context11.t0 = _context11.catch(29), setFundPwLoading && setFundPwLoading({
              show: !1
            }), (0, walletRecord.e)(tool_const.INIT_IMPORT_WALLET), null == history || history.push("/wallet/home");

           case 66:
            _context11.next = 73;
            break;

           case 68:
            return setFundPwLoading && setFundPwLoading({
              show: !1
            }), (0, walletRecord.e)(tool_const.INIT_IMPORT_WALLET), isBatch || bgDispatch((0, 
            ui.xb)()), null == history || history.push("/wallet/home"), _context11.abrupt("return", "success");

           case 73:
            _context11.next = 76;
            break;

           case 75:
            setFundPwLoading && setFundPwLoading({
              show: !1
            });

           case 76:
           case "end":
            return _context11.stop();
          }
        }), _callee11, null, [ [ 29, 61 ] ]);
      })));
      return function(_x45, _x46, _x47, _x48, _x49, _x50) {
        return _ref10.apply(this, arguments);
      };
    }(), backupAddChainWallet = function() {
      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(userCookies, pwValue, index, totalNetworkDic) {
        var backup, defiData, walletArr;
        return regeneratorRuntime.wrap((function(_context12) {
          for (;;) switch (_context12.prev = _context12.next) {
           case 0:
            return _context12.next = 2, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 578131));

           case 2:
            return backup = _context12.sent, _context12.next = 5, defiWalletData.$();

           case 5:
            if (defiData = _context12.sent, !(walletArr = defiData.defiWallet.walletArr)[index]) {
              _context12.next = 10;
              break;
            }
            return _context12.next = 10, backup.postBackupItem(userCookies, {
              walletItem: walletArr[index],
              accountItem: ""
            }, pwValue, "addChain", "extendBigChain", totalNetworkDic);

           case 10:
           case "end":
            return _context12.stop();
          }
        }), _callee12);
      })));
      return function(_x53, _x54, _x55, _x56) {
        return _ref12.apply(this, arguments);
      };
    }(), addAccount = function() {
      var _ref13 = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(encTicket, errorPlaintextCode, errorCode, data, dispatch, deriveAddress, accountTotals, accountTypes, userCookies, pwValue) {
        var selfLen, selectWalletItem, selectedWalletDic, accountName, scene, notSwitchToNewAccount, cacheData, bigNetworkKeys, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, dataArr, _walletID, walletID, res, walletArr, _walletArr, matchArr, matchArrLen, _walletAccountArr, chainData, keysData, accountInfo, _accountInfo2, allWalletMethod, _matchArr, _matchArr$walletAccou, name, accountItem, selectedWalletItem, _args13 = arguments;
        return regeneratorRuntime.wrap((function(_context13) {
          for (;;) switch (_context13.prev = _context13.next) {
           case 0:
            if (selfLen = _args13.length > 10 && void 0 !== _args13[10] ? _args13[10] : null, 
            selectWalletItem = _args13.length > 11 && void 0 !== _args13[11] ? _args13[11] : {}, 
            selectedWalletDic = _args13.length > 12 && void 0 !== _args13[12] ? _args13[12] : {}, 
            accountName = _args13.length > 13 ? _args13[13] : void 0, scene = _args13.length > 14 && void 0 !== _args13[14] ? _args13[14] : "", 
            notSwitchToNewAccount = _args13.length > 15 && void 0 !== _args13[15] && _args13[15], 
            cacheData = _args13.length > 16 ? _args13[16] : void 0, bigNetworkKeys = _args13.length > 17 ? _args13[17] : void 0, 
            totalNetworkDic = _args13.length > 18 ? _args13[18] : void 0, rpcUrls = _args13.length > 19 ? _args13[19] : void 0, 
            lastGetSuccessRpcTime = _args13.length > 20 ? _args13[20] : void 0, isOnLine()) {
              _context13.next = 13;
              break;
            }
            return _context13.abrupt("return", "network-error");

           case 13:
            return dataArr = JSON.parse(JSON.stringify(data)), _walletID = "", "{}" !== JSON.stringify(dataArr) && (walletID = dataArr.walletID, 
            _walletID = walletID), _context13.next = 18, defiWalletData.$();

           case 18:
            return res = _context13.sent, walletArr = res.defiWallet.walletArr, (_walletArr = _toConsumableArray(walletArr)).length > 0 && _walletArr.forEach((function(item) {
              if (item.walletID == _walletID) {
                var _walletAccountArr2, walletAccountArr = dataArr.walletAccountArr;
                _walletAccountArr = _toConsumableArray(walletAccountArr);
                var len = selfLen || _walletAccountArr.length, aData = accountTypes.filter((function(type) {
                  var _accountTotals$type$l, _accountTotals$type;
                  return (null !== (_accountTotals$type$l = null === (_accountTotals$type = accountTotals[type]) || void 0 === _accountTotals$type ? void 0 : _accountTotals$type.length) && void 0 !== _accountTotals$type$l ? _accountTotals$type$l : 0) > 0;
                })), _accountTotalsByType = {};
                (null == aData ? void 0 : aData.length) > 0 && aData.forEach((function(accountType) {
                  var accountTotalsByType = accountTotals[accountType].reduce((function(acc, accountTypeTotal) {
                    var _accountTypeTotal$key, _acc$_accountTypeTota, _acc$readOnly;
                    accountTypeTotal.keyringId ? (null !== (_acc$_accountTypeTota = acc[_accountTypeTotal$key = accountTypeTotal.keyringId]) && void 0 !== _acc$_accountTypeTota || (acc[_accountTypeTotal$key] = []), 
                    acc[accountTypeTotal.keyringId].push(accountTypeTotal)) : (null !== (_acc$readOnly = acc.readOnly) && void 0 !== _acc$readOnly || (acc.readOnly = []), 
                    acc.readOnly.push(accountTypeTotal));
                    return acc;
                  }), {});
                  _accountTotalsByType = _objectSpread(_objectSpread({}, _accountTotalsByType), accountTotalsByType);
                }));
                var addr = "";
                if ((null === (_walletAccountArr2 = _walletAccountArr) || void 0 === _walletAccountArr2 ? void 0 : _walletAccountArr2.length) > 0) for (var i in _walletAccountArr[0]) {
                  var _walletAccountArr$0$i;
                  "ETH" === i && _walletAccountArr[0][i] instanceof Array && _walletAccountArr[0][i][0] && null !== (_walletAccountArr$0$i = _walletAccountArr[0][i][0]) && void 0 !== _walletAccountArr$0$i && _walletAccountArr$0$i.accountAddress && (addr = _walletAccountArr[0][i][0].accountAddress);
                }
                "{}" !== JSON.stringify(_accountTotalsByType) && Object.values(_accountTotalsByType).forEach((function(accountTotalsByKeyringId) {
                  (null == accountTotalsByKeyringId ? void 0 : accountTotalsByKeyringId.length) > 0 && accountTotalsByKeyringId[0].address.toUpperCase() == addr.toUpperCase() && dispatch(deriveAddress(accountTotalsByKeyringId[0].keyringId));
                })), matchArr = dataArr, matchArrLen = len;
              }
            })), chainData = [], matchArr && "{}" !== JSON.stringify(matchArr) && (keysData = Object.keys(matchArr)) && (null == keysData ? void 0 : keysData.length) > 0 && (null == keysData || keysData.forEach((function(i) {
              var _matchArr$i, _matchArr$i$;
              matchArr[i] && matchArr[i] instanceof Array && (null === (_matchArr$i = matchArr[i]) || void 0 === _matchArr$i ? void 0 : _matchArr$i.length) > 0 && null !== (_matchArr$i$ = matchArr[i][0]) && void 0 !== _matchArr$i$ && _matchArr$i$.walletExtendPrivateKey && chainData.push(i);
            }))), _context13.prev = 24, _context13.next = 27, Promise.all([ __webpack_require__.e(1097), __webpack_require__.e(2826) ]).then(__webpack_require__.bind(__webpack_require__, 722826));

           case 27:
            return allWalletMethod = _context13.sent, _context13.next = 30, allWalletMethod.createAsyncTaskSubWalletAll(matchArr, matchArrLen, chainData, totalNetworkDic, bigNetworkKeys, rpcUrls, lastGetSuccessRpcTime);

           case 30:
            if (accountInfo = _context13.sent, !((null === (_accountInfo2 = accountInfo) || void 0 === _accountInfo2 ? void 0 : _accountInfo2.length) > 0)) {
              _context13.next = 43;
              break;
            }
            return name = "".concat((0, lang_string.lang_string)("账户")) + (Number(matchArrLen) > 0 ? addZero(Number(matchArrLen) + 1) : "01"), 
            _context13.next = 35, dealWalletAccount(accountName || name, matchArrLen, "", null === (_matchArr = matchArr) || void 0 === _matchArr ? void 0 : _matchArr.walletCreateType, null, null, accountInfo, selectWalletItem, bigNetworkKeys, totalNetworkDic);

           case 35:
            return (accountItem = _context13.sent).accountId = null === (_matchArr$walletAccou = matchArr.walletAccountArr[matchArrLen]) || void 0 === _matchArr$walletAccou ? void 0 : _matchArr$walletAccou.accountId, 
            _walletAccountArr.push(accountItem), matchArr.walletAccountArr = _toConsumableArray(_walletAccountArr), 
            selectedWalletItem = {
              walletID: matchArr.walletID,
              accountID: accountItem.accountID
            }, "{}" !== JSON.stringify(selectedWalletDic) && (selectedWalletItem.accountID = null == selectedWalletDic ? void 0 : selectedWalletDic.accountID), 
            notSwitchToNewAccount || null == cacheData || cacheData.setSelectedWallet({
              wallet: matchArr,
              account: accountItem
            }), _context13.abrupt("return", dealWalletItemData(encTicket, errorPlaintextCode, errorCode, matchArr, selectedWalletItem, userCookies, pwValue, scene, notSwitchToNewAccount, bigNetworkKeys, totalNetworkDic).then((function(res) {
              return new Promise((function(resolve, reject) {
                res ? resolve(!0) : reject(!1);
              }));
            })));

           case 43:
            _context13.next = 48;
            break;

           case 45:
            _context13.prev = 45, _context13.t0 = _context13.catch(24), (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("失败")
            });

           case 48:
           case "end":
            return _context13.stop();
          }
        }), _callee13, null, [ [ 24, 45 ] ]);
      })));
      return function(_x57, _x58, _x59, _x60, _x61, _x62, _x63, _x64, _x65, _x66) {
        return _ref13.apply(this, arguments);
      };
    }(), addTahoAccount = function(_walletAccountArr, dispatch, deriveAddress, accountTotals, accountTypes) {
      var aData = accountTypes.filter((function(type) {
        var _accountTotals$type$l2, _accountTotals$type2;
        return (null !== (_accountTotals$type$l2 = null === (_accountTotals$type2 = accountTotals[type]) || void 0 === _accountTotals$type2 ? void 0 : _accountTotals$type2.length) && void 0 !== _accountTotals$type$l2 ? _accountTotals$type$l2 : 0) > 0;
      })), _accountTotalsByType = {};
      (null == aData ? void 0 : aData.length) > 0 && aData.forEach((function(accountType) {
        var accountTotalsByType = accountTotals[accountType].reduce((function(acc, accountTypeTotal) {
          var _accountTypeTotal$key2, _acc$_accountTypeTota2, _acc$readOnly2;
          accountTypeTotal.keyringId ? (null !== (_acc$_accountTypeTota2 = acc[_accountTypeTotal$key2 = accountTypeTotal.keyringId]) && void 0 !== _acc$_accountTypeTota2 || (acc[_accountTypeTotal$key2] = []), 
          acc[accountTypeTotal.keyringId].push(accountTypeTotal)) : (null !== (_acc$readOnly2 = acc.readOnly) && void 0 !== _acc$readOnly2 || (acc.readOnly = []), 
          acc.readOnly.push(accountTypeTotal));
          return acc;
        }), {});
        _accountTotalsByType = _objectSpread(_objectSpread({}, _accountTotalsByType), accountTotalsByType);
      }));
      var addr = "";
      if ((null == _walletAccountArr ? void 0 : _walletAccountArr.length) > 0) for (var i in _walletAccountArr[0]) {
        var _walletAccountArr$0$i2;
        "ETH" === i && _walletAccountArr[0][i] instanceof Array && _walletAccountArr[0][i][0] && null !== (_walletAccountArr$0$i2 = _walletAccountArr[0][i][0]) && void 0 !== _walletAccountArr$0$i2 && _walletAccountArr$0$i2.accountAddress && (addr = _walletAccountArr[0][i][0].accountAddress);
      }
      "{}" !== JSON.stringify(_accountTotalsByType) && Object.values(_accountTotalsByType).forEach((function(accountTotalsByKeyringId) {
        if ((null == accountTotalsByKeyringId ? void 0 : accountTotalsByKeyringId.length) > 0 && accountTotalsByKeyringId[0].address.toUpperCase() == addr.toUpperCase()) try {
          dispatch(deriveAddress(accountTotalsByKeyringId[0].keyringId));
        } catch (error) {}
      }));
    }, dealWalletItemData = function() {
      var _ref14 = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(encTicket, errorPlaintextCode, errorCode, item, selectedWalletItem, userCookies, pwValue, scene, notSwitchToNewAccount, bigNetworkKeys, totalNetworkDic) {
        var _yield$Promise$all3, _yield$Promise$all4, api, backup, dataItem, localData, backupStr, pubRes, paramsData, res, datas, resMsg, dataArr, _backup$pushkeyVal2, walletItem;
        return regeneratorRuntime.wrap((function(_context14) {
          for (;;) switch (_context14.prev = _context14.next) {
           case 0:
            return _context14.next = 2, Promise.all([ Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 653360)), Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 578131)) ]);

           case 2:
            if (_yield$Promise$all3 = _context14.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2), 
            api = _yield$Promise$all4[0], backup = _yield$Promise$all4[1], dataItem = JSON.parse(JSON.stringify(item)), 
            1 != (localData = backup.localDataEncryption(dataItem, errorCode, totalNetworkDic)).errcode_type) {
              _context14.next = 12;
              break;
            }
            return _context14.abrupt("return", setDefiWalletFn(scene, localData, selectedWalletItem, null, null, notSwitchToNewAccount, totalNetworkDic).then((function(res) {
              return new Promise((function(resolve, reject) {
                res ? resolve(!0) : reject(!1);
              }));
            })));

           case 12:
            if (backupStr = backup.getJoinStr(localData, bigNetworkKeys)) {
              _context14.next = 16;
              break;
            }
            return (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("服务器错误！")
            }), _context14.abrupt("return");

           case 16:
            return _context14.next = 18, backup.changePublicKey(userCookies, scene);

           case 18:
            return pubRes = _context14.sent, paramsData = {
              clientPubKey: pubRes.public,
              encryptStr: (0, crypto_js.yv)(backupStr, pubRes.ECDHSecret),
              scene,
              encryptMD5Key: (0, crypto_js.vL)(pwValue),
              cookie_web: userCookies,
              encTicket
            }, _context14.next = 22, api.encryptionBatch(paramsData);

           case 22:
            if (res = _context14.sent, datas = res.datas, 0 !== (null == (resMsg = res.resMsg) ? void 0 : resMsg.code)) {
              _context14.next = 28;
              break;
            }
            return dataArr = (0, crypto_js.A3)((0, crypto_js.Hw)(datas, pubRes.ECDHSecret)), 
            _backup$pushkeyVal2 = backup.pushkeyVal(dataItem, dataArr, bigNetworkKeys), walletItem = _backup$pushkeyVal2.walletItem, 
            _context14.abrupt("return", setDefiWalletFn(scene, walletItem, selectedWalletItem, userCookies, pwValue, notSwitchToNewAccount, totalNetworkDic).then((function(res) {
              return new Promise((function(resolve, reject) {
                res ? resolve(!0) : reject(!1);
              }));
            })));

           case 28:
           case "end":
            return _context14.stop();
          }
        }), _callee14);
      })));
      return function(_x67, _x68, _x69, _x70, _x71, _x72, _x73, _x74, _x75, _x76, _x77) {
        return _ref14.apply(this, arguments);
      };
    }(), setDefiWalletFn = function() {
      var _ref15 = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(scene, _walletItem, selectedWalletItem, userCookies, pwValue) {
        var notSwitchToNewAccount, totalNetworkDic, res, backup, defiWallet, walletArr, walleItemCopy, defiWalletCopy, _args15 = arguments;
        return regeneratorRuntime.wrap((function(_context15) {
          for (;;) switch (_context15.prev = _context15.next) {
           case 0:
            return notSwitchToNewAccount = _args15.length > 5 && void 0 !== _args15[5] && _args15[5], 
            totalNetworkDic = _args15.length > 6 ? _args15[6] : void 0, _context15.next = 4, 
            defiWalletData.$();

           case 4:
            return res = _context15.sent, _context15.next = 7, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 578131));

           case 7:
            return backup = _context15.sent, defiWallet = res.defiWallet, walletArr = res.defiWallet.walletArr, 
            walleItemCopy = JSON.parse(JSON.stringify(walletArr)), defiWalletCopy = JSON.parse(JSON.stringify(defiWallet)), 
            walleItemCopy && walleItemCopy.length > 0 && (walleItemCopy.forEach((function(Item) {
              Item.walletID == _walletItem.walletID && (Item.walletAccountArr = _walletItem.walletAccountArr, 
              Item.walletCloudBackup && backup.postBackupItem(userCookies, {
                walletItem: Item,
                accountItem: ""
              }, pwValue, "add", scene, totalNetworkDic));
            })), defiWalletCopy.walletArr = walleItemCopy, notSwitchToNewAccount || (defiWalletCopy.selectedWalletDic = _objectSpread({}, selectedWalletItem))), 
            _context15.abrupt("return", new Promise((function(resolve, reject) {
              try {
                defiWalletData.s(defiWalletCopy).then((function() {
                  resolve(!0);
                }));
              } catch (error) {
                reject(error);
              }
            })));

           case 13:
           case "end":
            return _context15.stop();
          }
        }), _callee15);
      })));
      return function(_x78, _x79, _x80, _x81, _x82) {
        return _ref15.apply(this, arguments);
      };
    }(), matchIdData = function(id, data) {
      var matchData = {};
      return data && data.length > 0 && data.forEach((function(item) {
        item.walletID == id ? matchData = item : item.walletAccountArr.length > 0 && item.walletAccountArr.forEach((function(i) {
          i.accountID == id && (matchData = i);
        }));
      })), matchData;
    }, isValuesArr = function(data1, data2) {
      var val = !1;
      return data1.length > 0 && data2.length > 0 && data1.forEach((function(Item) {
        data2.forEach((function(item) {
          for (var i in Item) Item[i] = Item[i].toUpperCase();
          for (var _i2 in item) item[_i2] = item[_i2].toUpperCase();
          Object.entries(Item).toString() === Object.entries(item).toString() && (val = !0);
        }));
      })), val;
    }, differentArr = function(data1, data2) {
      return data1.filter((function(item) {
        return !data2.includes(item);
      }));
    }, getDecimalsAmount = function(str) {
      var num = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2, atLeastOne = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], strValue = toNonExponential(null == str ? void 0 : str.toString());
      if (/\./.test(strValue)) {
        var start = (strValue = strValue.toString()).split(".")[0], end = strValue.split(".")[1], val = "";
        val = (null == end ? void 0 : end.length) >= num ? start + "." + end.substring(0, num) : start + "." + end;
        var formattedValue = toNonExponential(val.toString());
        if (atLeastOne && 0 === parseFloat(formattedValue)) {
          var nonZeroIndex = end.search(/[1-9]/);
          return -1 === nonZeroIndex ? "0.0" : start + "." + end.substring(0, nonZeroIndex + 1);
        }
        return formattedValue;
      }
      return strValue;
    }, toNonExponential = function(inputNumber) {
      var value = new bignumber.A(inputNumber).toFormat().replace(/[,]/g, "");
      return "NaN" == value ? 0 : value;
    }, trimData = function(str) {
      var _str$toString;
      return null == str || null === (_str$toString = str.toString()) || void 0 === _str$toString ? void 0 : _str$toString.replace(/(^\s*)|(\s*$)/g, "");
    }, isJSON = function(str) {
      try {
        return !!JSON.parse(str);
      } catch (error) {
        return !1;
      }
    }, getDecimalsUnitPrice = function(str) {
      var strValue = toNonExponential(str.toString());
      if (isNaN(parseFloat(strValue))) return "0.00";
      if (0 == parseFloat(strValue)) return "0.00";
      if (!strValue) return "0.00";
      var num = 1;
      if (/[\.]/.test(strValue)) {
        var start = strValue.split(".")[0], end = strValue.split(".")[1], strIndex = 0;
        for (var i in end) if (0 != end[i]) {
          strIndex = Number(i);
          break;
        }
        if ((strValue = parseFloat(strValue)) > 0 && strValue < 1) {
          num = strIndex + 5, num = end.length > num ? num : end.length;
          var val = start + "." + end.substring(0, num);
          return toNonExponential(val.toString());
        }
        if (strValue > 1 && strValue < 10) {
          num = strIndex + 4, num = end.length > num ? num : end.length;
          var _val = start + "." + end.substring(0, num);
          return toNonExponential(_val.toString());
        }
        if (strValue > 10 && strValue < 100) {
          num = end.length > 3 ? 3 : end.length;
          var _val2 = start + "." + end.substring(0, num);
          return toNonExponential(_val2.toString());
        }
        num = end.length > 2 ? 2 : end.length;
        var _val3 = start + "." + end.substring(0, num);
        return toNonExponential(_val3.toString());
      }
      return strValue;
    }, getTokenSearch = function() {
      var _ref16 = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(params) {
        var isSplit, api, result, _result$data, code, data, _args16 = arguments;
        return regeneratorRuntime.wrap((function(_context16) {
          for (;;) switch (_context16.prev = _context16.next) {
           case 0:
            return isSplit = _args16.length > 1 && void 0 !== _args16[1] && _args16[1], _context16.next = 3, 
            Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 653360));

           case 3:
            return api = _context16.sent, params = "".concat(params, "&is_split=").concat(isSplit ? 1 : 0), 
            _context16.next = 7, api.tokenSearch(params);

           case 7:
            if (result = _context16.sent, _result$data = result.data, code = _result$data.code, 
            data = _result$data.data, 200 !== code) {
              _context16.next = 13;
              break;
            }
            return _context16.abrupt("return", data);

           case 13:
            return _context16.abrupt("return", {});

           case 14:
           case "end":
            return _context16.stop();
          }
        }), _callee16);
      })));
      return function(_x83) {
        return _ref16.apply(this, arguments);
      };
    }(), getTokenIndexSearch = function() {
      var _ref17 = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(params) {
        var isSplit, api, result, _result$data2, code, data, _args17 = arguments;
        return regeneratorRuntime.wrap((function(_context17) {
          for (;;) switch (_context17.prev = _context17.next) {
           case 0:
            return isSplit = _args17.length > 1 && void 0 !== _args17[1] && _args17[1], _context17.next = 3, 
            Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 653360));

           case 3:
            return api = _context17.sent, params = "".concat(params, "&is_split=").concat(isSplit ? 1 : 0), 
            _context17.next = 7, api.tokenIndexSearch(params);

           case 7:
            if (result = _context17.sent, _result$data2 = result.data, code = _result$data2.code, 
            data = _result$data2.data, 200 !== code) {
              _context17.next = 13;
              break;
            }
            return _context17.abrupt("return", data);

           case 13:
            return _context17.abrupt("return", {});

           case 14:
           case "end":
            return _context17.stop();
          }
        }), _callee17);
      })));
      return function(_x84) {
        return _ref17.apply(this, arguments);
      };
    }(), setDefiData = function() {
      var _ref18 = _asyncToGenerator(regeneratorRuntime.mark((function _callee18(item) {
        return regeneratorRuntime.wrap((function(_context18) {
          for (;;) switch (_context18.prev = _context18.next) {
           case 0:
            if (item instanceof Object) {
              _context18.next = 2;
              break;
            }
            return _context18.abrupt("return");

           case 2:
            return _context18.abrupt("return", new Promise((function(resolve, reject) {
              try {
                projectData.mN(item).then((function() {
                  resolve(!0);
                })).catch((function(err) {
                  throw new Error(err);
                }));
              } catch (error) {
                reject(error);
              }
            })));

           case 3:
           case "end":
            return _context18.stop();
          }
        }), _callee18);
      })));
      return function(_x85) {
        return _ref18.apply(this, arguments);
      };
    }(), getDefiItem = function() {
      var _ref19 = _asyncToGenerator(regeneratorRuntime.mark((function _callee19(item) {
        var _yield$ProjectData$ge, value;
        return regeneratorRuntime.wrap((function(_context19) {
          for (;;) switch (_context19.prev = _context19.next) {
           case 0:
            return _context19.next = 2, projectData.EY(item);

           case 2:
            if (_context19.t1 = _yield$ProjectData$ge = _context19.sent, _context19.t0 = null === _context19.t1, 
            _context19.t0) {
              _context19.next = 6;
              break;
            }
            _context19.t0 = void 0 === _yield$ProjectData$ge;

           case 6:
            if (!_context19.t0) {
              _context19.next = 10;
              break;
            }
            _context19.t2 = void 0, _context19.next = 11;
            break;

           case 10:
            _context19.t2 = _yield$ProjectData$ge[item];

           case 11:
            return value = _context19.t2, _context19.abrupt("return", value);

           case 13:
           case "end":
            return _context19.stop();
          }
        }), _callee19);
      })));
      return function(_x86) {
        return _ref19.apply(this, arguments);
      };
    }(), hideContent = function(str) {
      var start = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6, end = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 4, splitStr = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ".";
      if (!str) return "";
      var getSplitStr = new Array(4).fill(splitStr).join(""), strValue = str.toString(), len = strValue.length;
      return len > parseFloat(start) + parseFloat(end) ? "".concat(strValue.slice(0, start)).concat(getSplitStr).concat(strValue.slice(parseFloat(len) - parseFloat(end), len)) : strValue;
    }, testUser = null, userAction = function() {
      var _ref20 = _asyncToGenerator(regeneratorRuntime.mark((function _callee20(history) {
        var time, userTime, objTime, body;
        return regeneratorRuntime.wrap((function(_context20) {
          for (;;) switch (_context20.prev = _context20.next) {
           case 0:
            clearInterval(testUser), time = localStorage.getItem("lockTime") || constant.i4, 
            userTime = time, objTime = {
              init: 0,
              time: function() {
                objTime.init += 1, objTime.init == userTime && (clearInterval(testUser), history.push("/lockwallet"), 
                localStorage.setItem("isAutoLock", "1"));
              },
              eventFunction: function() {
                clearInterval(testUser), objTime.init = 0, testUser = setInterval(objTime.time, 6e4);
              }
            }, (body = document.querySelector("html")).addEventListener("click", objTime.eventFunction), 
            body.addEventListener("keydown", objTime.eventFunction), body.addEventListener("mousemove", objTime.eventFunction), 
            body.addEventListener("mousewheel", objTime.eventFunction);

           case 9:
           case "end":
            return _context20.stop();
          }
        }), _callee20);
      })));
      return function(_x87) {
        return _ref20.apply(this, arguments);
      };
    }(), initDataVariable = function() {
      localStorage.getItem("lang") || localStorage.setItem("lang", (0, lang_string.navigatorLanFn)()), 
      getDefiItem("localAddressBook").then((function(_localAddressBook) {
        _localAddressBook || setDefiData({
          localAddressBook: []
        });
      }));
    }, flattenObject = function flattenObject(item) {
      var preKey = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", res = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
      return Object.entries(item).forEach((function(_ref21) {
        var _ref22 = _slicedToArray(_ref21, 2), key = _ref22[0], val = _ref22[1];
        val && "object" === _typeof(val) ? flattenObject(val, preKey + key + ".", res) : res[preKey + key] = val;
      })), res;
    }, filterData = function(data, value, datakey) {
      var _value, _value$toString, objKey = datakey;
      return datakey || (objKey = [ "coinSimpleName", "coinFullName", "coinAddress" ]), 
      value = null === (_value = value) || void 0 === _value || null === (_value$toString = _value.toString()) || void 0 === _value$toString ? void 0 : _value$toString.trim(), 
      data instanceof Array ? data.length <= 0 ? [] : value ? data.filter((function(item) {
        var _objKey;
        if (objKey instanceof Array && (null === (_objKey = objKey) || void 0 === _objKey ? void 0 : _objKey.length) > 0) {
          var _item$objKey$, _item$objKey$2, _value3, _value4, sName = null === (_item$objKey$ = item[objKey[0]]) || void 0 === _item$objKey$ ? void 0 : _item$objKey$.toLowerCase(), fName = null === (_item$objKey$2 = item[objKey[1]]) || void 0 === _item$objKey$2 ? void 0 : _item$objKey$2.toLowerCase(), coins = Object.keys(flattenObject(item)).filter((function(key) {
            return null == key ? void 0 : key.includes("coinAddress");
          })).map((function(key) {
            return flattenObject(item)[key];
          }));
          if (null != sName && sName.includes(null === (_value3 = value) || void 0 === _value3 ? void 0 : _value3.toLowerCase()) || null != fName && fName.includes(null === (_value4 = value) || void 0 === _value4 ? void 0 : _value4.toLowerCase()) || null != coins && coins.find((function(e) {
            var _value5;
            return (null == e ? void 0 : e.toLowerCase()) === (null === (_value5 = value) || void 0 === _value5 ? void 0 : _value5.toLowerCase());
          }))) return item;
        } else {
          var _item$datakey, _item$datakey$toLower, _value6;
          if (null !== (_item$datakey = item[datakey]) && void 0 !== _item$datakey && null !== (_item$datakey$toLower = _item$datakey.toLowerCase()) && void 0 !== _item$datakey$toLower && _item$datakey$toLower.includes(null === (_value6 = value) || void 0 === _value6 ? void 0 : _value6.toLowerCase())) return item;
        }
      })) : data : [];
    }, getWalletAddress = function() {
      var _ref23 = _asyncToGenerator(regeneratorRuntime.mark((function _callee21(networkKey) {
        var type, defiWallet, value, res, _res$defiWallet, walletArr, selectedWalletDic, accountID, matchArr, accountFormat, account, _args21 = arguments;
        return regeneratorRuntime.wrap((function(_context21) {
          for (;;) switch (_context21.prev = _context21.next) {
           case 0:
            if (type = _args21.length > 1 && void 0 !== _args21[1] ? _args21[1] : "accountAddress", 
            defiWallet = _args21.length > 2 && void 0 !== _args21[2] ? _args21[2] : null, networkKey) {
              _context21.next = 4;
              break;
            }
            return _context21.abrupt("return", "");

           case 4:
            if (value = "", _context21.t0 = defiWallet, _context21.t0) {
              _context21.next = 10;
              break;
            }
            return _context21.next = 9, defiWalletData.$();

           case 9:
            _context21.t0 = _context21.sent;

           case 10:
            if (res = _context21.t0, _res$defiWallet = res.defiWallet, walletArr = _res$defiWallet.walletArr, 
            selectedWalletDic = _res$defiWallet.selectedWalletDic, "{}" === JSON.stringify(selectedWalletDic)) {
              _context21.next = 25;
              break;
            }
            if (accountID = selectedWalletDic.accountID, matchArr = matchIdData(accountID, walletArr), 
            "{}" === JSON.stringify(matchArr)) {
              _context21.next = 25;
              break;
            }
            if (!tool_const.MORE_ADDRESS_CHAIN.includes(null == networkKey ? void 0 : networkKey.toUpperCase())) {
              _context21.next = 24;
              break;
            }
            return _context21.next = 19, getAccountFormat(networkKey);

           case 19:
            accountFormat = _context21.sent, account = matchArr[networkKey].find((function(item) {
              return item.accountFormat === accountFormat;
            })), value = account[type], _context21.next = 25;
            break;

           case 24:
            value = matchArr[networkKey][0][type];

           case 25:
            return _context21.abrupt("return", value);

           case 26:
           case "end":
            return _context21.stop();
          }
        }), _callee21);
      })));
      return function(_x88) {
        return _ref23.apply(this, arguments);
      };
    }(), getAccountFormat = function() {
      var _ref24 = _asyncToGenerator(regeneratorRuntime.mark((function _callee22(networkKey) {
        var accountFormat, defaultAccountFormat;
        return regeneratorRuntime.wrap((function(_context22) {
          for (;;) switch (_context22.prev = _context22.next) {
           case 0:
            return _context22.next = 2, getDefiItem("".concat(null == networkKey ? void 0 : networkKey.toLowerCase(), "AccountFormat"));

           case 2:
            return accountFormat = _context22.sent, defaultAccountFormat = tool_const.UTXO_PRIVATEKEY_ADDRESS.find((function(item) {
              return item.name === networkKey;
            })), _context22.abrupt("return", accountFormat || (null == defaultAccountFormat ? void 0 : defaultAccountFormat.value));

           case 5:
           case "end":
            return _context22.stop();
          }
        }), _callee22);
      })));
      return function(_x89) {
        return _ref24.apply(this, arguments);
      };
    }(), getWallet = function() {
      var _ref25 = _asyncToGenerator(regeneratorRuntime.mark((function _callee23(networkKey) {
        var isSelected, defiWallet, value, res, _res$defiWallet2, walletArr, selectedWalletDic, accountID, matchArr, accountFormat, account, _args23 = arguments;
        return regeneratorRuntime.wrap((function(_context23) {
          for (;;) switch (_context23.prev = _context23.next) {
           case 0:
            if (isSelected = _args23.length > 1 && void 0 !== _args23[1] && _args23[1], defiWallet = _args23.length > 2 ? _args23[2] : void 0, 
            networkKey) {
              _context23.next = 4;
              break;
            }
            return _context23.abrupt("return", "");

           case 4:
            if (value = "", _context23.t0 = defiWallet, _context23.t0) {
              _context23.next = 10;
              break;
            }
            return _context23.next = 9, defiWalletData.$();

           case 9:
            _context23.t0 = _context23.sent;

           case 10:
            if (res = _context23.t0, _res$defiWallet2 = res.defiWallet, walletArr = _res$defiWallet2.walletArr, 
            selectedWalletDic = _res$defiWallet2.selectedWalletDic, "{}" === JSON.stringify(selectedWalletDic)) {
              _context23.next = 25;
              break;
            }
            if (accountID = selectedWalletDic.accountID, matchArr = matchIdData(accountID, walletArr), 
            "{}" === JSON.stringify(matchArr)) {
              _context23.next = 25;
              break;
            }
            if (!tool_const.MORE_ADDRESS_CHAIN_WITH_VARA.includes(networkKey) || !isSelected) {
              _context23.next = 24;
              break;
            }
            return _context23.next = 19, getAccountFormat(networkKey);

           case 19:
            accountFormat = _context23.sent, account = matchArr[networkKey].find((function(item) {
              return item.accountFormat === accountFormat;
            })), value = account, _context23.next = 25;
            break;

           case 24:
            value = matchArr[networkKey];

           case 25:
            return _context23.abrupt("return", value);

           case 26:
           case "end":
            return _context23.stop();
          }
        }), _callee23);
      })));
      return function(_x90) {
        return _ref25.apply(this, arguments);
      };
    }(), getAllWalletAddress = function() {
      var _ref26 = _asyncToGenerator(regeneratorRuntime.mark((function _callee25(coinSimpleName, defiWallet) {
        var res, walletArr, resArr;
        return regeneratorRuntime.wrap((function(_context25) {
          for (;;) switch (_context25.prev = _context25.next) {
           case 0:
            if (_context25.t0 = defiWallet, _context25.t0) {
              _context25.next = 5;
              break;
            }
            return _context25.next = 4, defiWalletData.$();

           case 4:
            _context25.t0 = _context25.sent;

           case 5:
            return res = _context25.t0, walletArr = res.defiWallet.walletArr, resArr = [], walletArr.length > 0 && walletArr.forEach((function(item) {
              item.walletAccountArr.length > 0 && item.walletAccountArr.forEach((function(accItem) {
                var coinByAccount = coinSimpleName && accItem.accountCoinArr.find((function(val) {
                  var _val$coinSimpleName;
                  return (null === (_val$coinSimpleName = val.coinSimpleName) || void 0 === _val$coinSimpleName ? void 0 : _val$coinSimpleName.toLowerCase()) === (null == coinSimpleName ? void 0 : coinSimpleName.toLowerCase());
                })) || {}, _loop3 = function(i) {
                  accItem[i] instanceof Array && accItem[i].forEach(function() {
                    var _ref27 = _asyncToGenerator(regeneratorRuntime.mark((function _callee24(a) {
                      var _item$walletAccountAr2, obj;
                      return regeneratorRuntime.wrap((function(_context24) {
                        for (;;) switch (_context24.prev = _context24.next) {
                         case 0:
                          a instanceof Object && "accountAddress" in a && null != a && a.accountAddress && (obj = {
                            accountAddress: null == a ? void 0 : a.accountAddress,
                            addressName: (null == item ? void 0 : item.walletName) + "-" + (null == accItem ? void 0 : accItem.accountName),
                            dataID: (0, v4.A)(),
                            chainSimpleName: i,
                            accountFormat: tool_const.MORE_ADDRESS_CHAIN_WITH_VARA.includes(i) ? a.accountFormat : "",
                            accountCoin: coinByAccount,
                            accountName: null == accItem ? void 0 : accItem.accountName,
                            walletName: null == item ? void 0 : item.walletName,
                            walletCreateType: null == item ? void 0 : item.walletCreateType,
                            walletID: null == item ? void 0 : item.walletID,
                            accountID: null == accItem ? void 0 : accItem.accountID,
                            walletAccount: (null == item || null === (_item$walletAccountAr2 = item.walletAccountArr) || void 0 === _item$walletAccountAr2 ? void 0 : _item$walletAccountAr2.length) || 0
                          }, resArr.push(obj));

                         case 1:
                         case "end":
                          return _context24.stop();
                        }
                      }), _callee24);
                    })));
                    return function(_x93) {
                      return _ref27.apply(this, arguments);
                    };
                  }());
                };
                for (var i in accItem) _loop3(i);
              }));
            })), _context25.abrupt("return", resArr);

           case 10:
           case "end":
            return _context25.stop();
          }
        }), _callee25);
      })));
      return function(_x91, _x92) {
        return _ref26.apply(this, arguments);
      };
    }(), getAllEvmAddress = function() {
      var _ref28 = _asyncToGenerator(regeneratorRuntime.mark((function _callee26() {
        var filteredTypeList, res, walletArr, resArr, hash, _resArr, _args26 = arguments;
        return regeneratorRuntime.wrap((function(_context26) {
          for (;;) switch (_context26.prev = _context26.next) {
           case 0:
            return filteredTypeList = _args26.length > 0 && void 0 !== _args26[0] ? _args26[0] : [], 
            _context26.next = 3, defiWalletData.$();

           case 3:
            return res = _context26.sent, walletArr = res.defiWallet.walletArr, resArr = [], 
            null == walletArr || walletArr.forEach((function(wallet) {
              var _wallet$walletAccount2;
              null != filteredTypeList && filteredTypeList.includes(null == wallet ? void 0 : wallet.walletCreateType) || (null == wallet || null === (_wallet$walletAccount2 = wallet.walletAccountArr) || void 0 === _wallet$walletAccount2 || _wallet$walletAccount2.forEach((function(account) {
                var _account$ETH, _account$ETH$, accountAddress = null == account || null === (_account$ETH = account.ETH) || void 0 === _account$ETH || null === (_account$ETH$ = _account$ETH[0]) || void 0 === _account$ETH$ ? void 0 : _account$ETH$.accountAddress;
                accountAddress && resArr.push({
                  address: accountAddress,
                  addressName: "".concat(null == wallet ? void 0 : wallet.walletName, "-").concat(null == account ? void 0 : account.accountName),
                  addressIOTX: getIOTXAddress(accountAddress),
                  accountID: null == account ? void 0 : account.accountID
                });
              })));
            })), hash = {}, _resArr = resArr.reduce((function(item, next) {
              return !hash[next.address] && (hash[next.address] = item.push(next)), item;
            }), []), _context26.abrupt("return", _resArr);

           case 10:
           case "end":
            return _context26.stop();
          }
        }), _callee26);
      })));
      return function() {
        return _ref28.apply(this, arguments);
      };
    }(), getWalletPrivateKey = function() {
      var _ref29 = _asyncToGenerator(regeneratorRuntime.mark((function _callee28(item, pwValue, userCookies) {
        var pwCodeType, notShowMessage, _yield$Promise$all5, _yield$Promise$all6, backup, api, res, address, network, walletArr, itemData, iData_accountPrivateKey, _yield$ProjectData$ge2, lock, privateKey, errorCode, _args28 = arguments;
        return regeneratorRuntime.wrap((function(_context28) {
          for (;;) switch (_context28.prev = _context28.next) {
           case 0:
            return pwCodeType = _args28.length > 3 && void 0 !== _args28[3] && _args28[3], notShowMessage = _args28.length > 4 && void 0 !== _args28[4] && _args28[4], 
            _context28.next = 4, Promise.all([ Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 578131)), Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 653360)), defiWalletData.$() ]);

           case 4:
            if (_yield$Promise$all5 = _context28.sent, _yield$Promise$all6 = _slicedToArray(_yield$Promise$all5, 3), 
            backup = _yield$Promise$all6[0], api = _yield$Promise$all6[1], res = _yield$Promise$all6[2], 
            address = null == item ? void 0 : item.coinTransferFromAddress, network = null == item ? void 0 : item.coinNetworkKey, 
            walletArr = res.defiWallet.walletArr, itemData = "", "", iData_accountPrivateKey = "", 
            walletArr && walletArr.length > 0 && walletArr.forEach((function(Item) {
              var _walletAccountArr = Item.walletAccountArr;
              _walletAccountArr && _walletAccountArr.length > 0 && _walletAccountArr.forEach((function(accItem) {
                var _loop4 = function(i) {
                  accItem[i] instanceof Array && accItem[i].forEach((function(a, aIndex) {
                    var _a$accountAddress;
                    a instanceof Object && "accountPrivateKey" in a && i == network && (null === (_a$accountAddress = a.accountAddress) || void 0 === _a$accountAddress ? void 0 : _a$accountAddress.toLowerCase()) == (null == address ? void 0 : address.toLowerCase()) && (itemData = Item, 
                    accItem, iData_accountPrivateKey = a.accountPrivateKey);
                  }));
                };
                for (var i in accItem) _loop4(i);
              }));
            })), 1 != itemData.errcode_type) {
              _context28.next = 26;
              break;
            }
            return _context28.next = 17, projectData.jq(pwCodeType ? (0, crypto_js.dT)(pwValue) : (0, 
            crypto_js.jS)(pwValue));

           case 17:
            if (_yield$ProjectData$ge2 = _context28.sent, (lock = _yield$ProjectData$ge2.pValue.lock) == (pwCodeType ? (0, 
            crypto_js.dT)(pwValue) : (0, crypto_js.jS)(pwValue)) || (0, crypto_js.dT)(lock) == (pwCodeType ? (0, 
            crypto_js.dT)(pwValue) : (0, crypto_js.jS)(pwValue))) {
              _context28.next = 22;
              break;
            }
            return notShowMessage || (0, Notification.Ds)({
              type: "error",
              message: (0, lang_string.lang_string)("密码错误")
            }), _context28.abrupt("return");

           case 22:
            return privateKey = (0, crypto_js.Hw)(iData_accountPrivateKey, pwValue, pwCodeType), 
            _context28.abrupt("return", privateKey);

           case 26:
            return errorCode = pwCodeType ? pwValue : (0, crypto_js.gm)(pwValue), _context28.next = 29, 
            backup.changePublicKey(userCookies, "decrypt").then(function() {
              var _ref30 = _asyncToGenerator(regeneratorRuntime.mark((function _callee27(pubRes) {
                return regeneratorRuntime.wrap((function(_context27) {
                  for (;;) switch (_context27.prev = _context27.next) {
                   case 0:
                    return _context27.next = 2, api.decryptionBatch({
                      decryptStr: (0, crypto_js.yv)(iData_accountPrivateKey, null == pubRes ? void 0 : pubRes.ECDHSecret),
                      clientPubKey: null == pubRes ? void 0 : pubRes.public,
                      scene: "decrypt",
                      encryptMD5Key: null == errorCode ? void 0 : errorCode.substring(0, 4),
                      cookie_web: userCookies
                    }).then((function(res) {
                      var datas = res.datas, resMsg = res.resMsg;
                      if (0 === (null == resMsg ? void 0 : resMsg.code)) {
                        var _base64decode = (0, crypto_js.A3)((0, crypto_js.Hw)(datas, null == pubRes ? void 0 : pubRes.ECDHSecret)), list = _base64decode.list;
                        _base64decode.encTicket;
                        return (0, crypto_js.Hw)(list[0], errorCode, !0);
                      }
                      return notShowMessage || (0, Notification.Ds)({
                        type: "error",
                        message: null == resMsg ? void 0 : resMsg.message
                      }), "";
                    })).catch((function(error) {
                      return "";
                    }));

                   case 2:
                    return _context27.abrupt("return", _context27.sent);

                   case 3:
                   case "end":
                    return _context27.stop();
                  }
                }), _callee27);
              })));
              return function(_x97) {
                return _ref30.apply(this, arguments);
              };
            }());

           case 29:
            return _context28.abrupt("return", _context28.sent);

           case 30:
           case "end":
            return _context28.stop();
          }
        }), _callee28);
      })));
      return function(_x94, _x95, _x96) {
        return _ref29.apply(this, arguments);
      };
    }(), formatDate = function(data, type) {
      var date = new Date(Number(data)), YY = date.getFullYear(), MM = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1, DD = date.getDate() < 10 ? "0" + date.getDate() : date.getDate(), hh = date.getHours() < 10 ? "0" + date.getHours() : date.getHours(), mm = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes(), ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();
      return "MM" === type ? "".concat(YY, "-").concat(MM) : "DD" === type ? "".concat(YY, "-").concat(MM, "-").concat(DD) : "MD" === type ? "".concat(MM, "-").concat(DD) : "MDHM" === type ? "".concat(MM, "-").concat(DD, " ").concat(hh, ":").concat(mm) : "HM" === type ? "".concat(hh, ":").concat(mm) : "YMDHM" === type ? "".concat(YY, "-").concat(MM, "-").concat(DD, " ").concat(hh, ":").concat(mm) : "".concat(YY, "-").concat(MM, "-").concat(DD, " ").concat(hh, ":").concat(mm, ":").concat(ss);
    }, getLanguage = function() {
      return localStorage.getItem("lang") ? localStorage.getItem("lang") : "en";
    }, formatDecimalsAmount = function(value) {
      var fixedNumber = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
      if (isNaN(Number(value))) return value;
      if (!value) return value;
      var strValue = null == value ? void 0 : value.toString();
      if (Number(value) < 1) {
        var decimalIndex = strValue.indexOf(".") + 1, nonZeroIndex = strValue.slice(decimalIndex).search(/[1-9]/), endIndex = -1 === nonZeroIndex ? decimalIndex + fixedNumber : decimalIndex + nonZeroIndex + fixedNumber;
        return strValue.slice(0, endIndex);
      }
      if (strValue.indexOf(".") > -1) {
        var _decimalIndex = strValue.indexOf(".") + (fixedNumber + 1);
        return strValue.slice(0, _decimalIndex);
      }
      return strValue;
    }, dataOperation = function(data1, data2) {
      var isCut = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], isCutNum = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2, changeType = "";
      switch (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "multiplication") {
       case "add":
       case "+":
        changeType = "add";
        break;

       case "minus":
       case "-":
        changeType = "minus";
        break;

       case "multiplication":
       case "*":
       default:
        changeType = "multiplication";
        break;

       case "division":
       case "/":
        changeType = "division";
      }
      var _data1 = data1, _data2 = data2;
      "NaN" == parseFloat(data1).toString() && (_data1 = 0), "NaN" == parseFloat(data2).toString() && (_data2 = 0);
      var _value1 = new bignumber.A(_data1), _value2 = new bignumber.A(_data2), amount = new bignumber.A(0);
      return amount = "add" == changeType ? _value1.plus(_value2) : "minus" == changeType ? _value1.minus(_value2) : "division" == changeType ? _value1.dividedBy(_value2) : _value1.multipliedBy(_value2), 
      amount = toNonExponential(amount), parseFloat(amount) < 0 && (amount = 0), isCut ? formatDecimalsAmount(amount, isCutNum) : amount;
    }, formatDouble = function(numStr) {
      var _Number, fixed = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3;
      if (null == numStr) return "--";
      var copyNum = toNonExponential(numStr), num = null !== (_Number = Number(copyNum)) && void 0 !== _Number ? _Number : 0;
      if (0 == num) return "0.00";
      if (copyNum.toString().indexOf(".") < 0) return num.toFixed(fixed);
      for (var afterPointStr = copyNum.toString().split(".")[1], zeroNum = 0, i = 0; i < afterPointStr.length && 0 == Number(afterPointStr[i]); i++) zeroNum++;
      return parseFloat(num.toFixed(zeroNum + fixed));
    }, compare = function(num1, num2) {
      return num1.comparedTo(num2);
    }, cutInteger = function(str) {
      var strValue = toNonExponential(null == str ? void 0 : str.toString());
      return /[\.]/.test(strValue) ? str.toString().split(".")[0] : strValue;
    }, truncateDecimal = function(numStr, decimalPlaces) {
      if (null == numStr) return "";
      var dotIndex = numStr.indexOf(".");
      if (-1 === dotIndex) return numStr;
      var integerPart = numStr.slice(0, dotIndex), decimalPart = numStr.slice(dotIndex + 1, dotIndex + 1 + decimalPlaces);
      return 0 === decimalPlaces ? integerPart : "".concat(integerPart, ".").concat(decimalPart);
    }, getNFTMatchAddress = function() {
      var _ref31 = _asyncToGenerator(regeneratorRuntime.mark((function _callee29(walletID, accountID, netKeyArray, defiData) {
        var nftAccountAddressArr, index, netKey, res;
        return regeneratorRuntime.wrap((function(_context29) {
          for (;;) switch (_context29.prev = _context29.next) {
           case 0:
            nftAccountAddressArr = [], index = 0;

           case 2:
            if (!(index < netKeyArray.length)) {
              _context29.next = 11;
              break;
            }
            return netKey = netKeyArray[index], _context29.next = 6, getMatchAddress(walletID, accountID, netKey, defiData);

           case 6:
            (res = _context29.sent).indexOf(",") ? nftAccountAddressArr = nftAccountAddressArr.concat(null == res ? void 0 : res.split(",")) : nftAccountAddressArr.push(res);

           case 8:
            index++, _context29.next = 2;
            break;

           case 11:
            return _context29.abrupt("return", nftAccountAddressArr);

           case 12:
           case "end":
            return _context29.stop();
          }
        }), _callee29);
      })));
      return function(_x98, _x99, _x100, _x101) {
        return _ref31.apply(this, arguments);
      };
    }(), getMatchAddress = function() {
      var _ref32 = _asyncToGenerator(regeneratorRuntime.mark((function _callee30(walletID, accountID, netKey, defiWallet) {
        var res, walletArr, addr;
        return regeneratorRuntime.wrap((function(_context30) {
          for (;;) switch (_context30.prev = _context30.next) {
           case 0:
            if (_context30.t0 = defiWallet, _context30.t0) {
              _context30.next = 5;
              break;
            }
            return _context30.next = 4, defiWalletData.$();

           case 4:
            _context30.t0 = _context30.sent;

           case 5:
            return res = _context30.t0, walletArr = res.defiWallet.walletArr, addr = "", (null == walletArr ? void 0 : walletArr.length) > 0 && walletArr.forEach((function(Item) {
              var _Item$walletAccountAr;
              Item.walletID == walletID && ((null === (_Item$walletAccountAr = Item.walletAccountArr) || void 0 === _Item$walletAccountAr ? void 0 : _Item$walletAccountAr.length) > 0 && Item.walletAccountArr.forEach((function(item) {
                var _item$netKey, _item$netKey2;
                item.accountID == accountID && (netKey && item[netKey] && (null === (_item$netKey = item[netKey]) || void 0 === _item$netKey ? void 0 : _item$netKey.length) > 0 && (addr = tool_const.UTXO_PRIVATEKEY.includes(netKey) ? (addr = null === (_item$netKey2 = item[netKey]) || void 0 === _item$netKey2 ? void 0 : _item$netKey2.map((function(e) {
                  return e.accountAddress;
                }))).join(",") : item[netKey][0].accountAddress));
              })));
            })), _context30.abrupt("return", addr);

           case 10:
           case "end":
            return _context30.stop();
          }
        }), _callee30);
      })));
      return function(_x102, _x103, _x104, _x105) {
        return _ref32.apply(this, arguments);
      };
    }(), getMatchAccount = function() {
      var _ref33 = _asyncToGenerator(regeneratorRuntime.mark((function _callee31(walletID, accountID) {
        var res, walletArr, account;
        return regeneratorRuntime.wrap((function(_context31) {
          for (;;) switch (_context31.prev = _context31.next) {
           case 0:
            return _context31.next = 2, defiWalletData.$();

           case 2:
            return res = _context31.sent, (null == (walletArr = res.defiWallet.walletArr) ? void 0 : walletArr.length) > 0 && walletArr.forEach((function(Item) {
              var _Item$walletAccountAr2;
              Item.walletID == walletID && ((null === (_Item$walletAccountAr2 = Item.walletAccountArr) || void 0 === _Item$walletAccountAr2 ? void 0 : _Item$walletAccountAr2.length) > 0 && Item.walletAccountArr.forEach((function(item) {
                item.accountID == accountID && ((account = item).walletCreateType = Item.walletCreateType);
              })));
            })), _context31.abrupt("return", account);

           case 6:
           case "end":
            return _context31.stop();
          }
        }), _callee31);
      })));
      return function(_x106, _x107) {
        return _ref33.apply(this, arguments);
      };
    }(), getMatchAccountAddrs = function() {
      var _ref34 = _asyncToGenerator(regeneratorRuntime.mark((function _callee32(walletID, accountID, netKeys) {
        var matchAccount, addrMap;
        return regeneratorRuntime.wrap((function(_context32) {
          for (;;) switch (_context32.prev = _context32.next) {
           case 0:
            return _context32.next = 2, getMatchAccount(walletID, accountID);

           case 2:
            return matchAccount = _context32.sent, addrMap = {}, netKeys.forEach((function(netKey) {
              var _matchAccount$netKey;
              if (netKey && matchAccount[netKey] && (null === (_matchAccount$netKey = matchAccount[netKey]) || void 0 === _matchAccount$netKey ? void 0 : _matchAccount$netKey.length) > 0) {
                var addr, _matchAccount$netKey2, _matchAccount$netKey3;
                if (tool_const.UTXO_PRIVATEKEY.includes(netKey)) addr = null === (_matchAccount$netKey2 = matchAccount[netKey]) || void 0 === _matchAccount$netKey2 || null === (_matchAccount$netKey3 = _matchAccount$netKey2.map((function(e) {
                  return e.accountAddress;
                }))) || void 0 === _matchAccount$netKey3 ? void 0 : _matchAccount$netKey3.join(","); else addr = matchAccount[netKey][0].accountAddress;
                addrMap[netKey] = addr;
              }
            })), _context32.abrupt("return", addrMap);

           case 6:
           case "end":
            return _context32.stop();
          }
        }), _callee32);
      })));
      return function(_x108, _x109, _x110) {
        return _ref34.apply(this, arguments);
      };
    }(), modifyWalletData = function() {
      var _ref35 = _asyncToGenerator(regeneratorRuntime.mark((function _callee33(walletItem, accountItem, filedName, filedValue, index) {
        var netSimpleName, defiData, defiWallet, walletArr, _walletArr, _args33 = arguments;
        return regeneratorRuntime.wrap((function(_context33) {
          for (;;) switch (_context33.prev = _context33.next) {
           case 0:
            return netSimpleName = _args33.length > 5 && void 0 !== _args33[5] ? _args33[5] : "BTC", 
            _context33.next = 3, defiWalletData.$();

           case 3:
            return defiData = _context33.sent, defiWallet = defiData.defiWallet, walletArr = defiData.defiWallet.walletArr, 
            (null == (_walletArr = JSON.parse(JSON.stringify(walletArr))) ? void 0 : _walletArr.length) > 0 && _walletArr.forEach((function(item) {
              if ("accountPublicKey" == filedName) {
                var _walletAccountArr = null == item ? void 0 : item.walletAccountArr;
                (null == _walletAccountArr ? void 0 : _walletAccountArr.length) > 0 && _walletAccountArr.forEach((function(i) {
                  (null == i ? void 0 : i.accountID) == (null == accountItem ? void 0 : accountItem.accountID) && (i[netSimpleName][index].accountPublicKey = filedValue);
                }));
              } else {
                var _item$walletAccountAr3, _item$walletAccountAr4;
                if (0 == item.walletCreateType || 1 == item.walletCreateType) {
                  if (item.walletID == (null == walletItem ? void 0 : walletItem.walletID)) item[filedName] = filedValue, 
                  (null === (_item$walletAccountAr3 = item.walletAccountArr) || void 0 === _item$walletAccountAr3 ? void 0 : _item$walletAccountAr3.length) > 0 && item.walletAccountArr.forEach((function(i) {
                    i[filedName] = filedValue;
                  }));
                } else (null === (_item$walletAccountAr4 = item.walletAccountArr) || void 0 === _item$walletAccountAr4 ? void 0 : _item$walletAccountAr4.length) > 0 && item.walletAccountArr.forEach((function(i) {
                  i.accountID == (null == accountItem ? void 0 : accountItem.accountID) && (i[filedName] = filedValue);
                }));
              }
            })), defiWallet.walletArr = _walletArr, _context33.abrupt("return", new Promise((function(resolve, reject) {
              try {
                defiWalletData.s(defiWallet), resolve(!0);
              } catch (error) {
                reject(error);
              }
            })));

           case 9:
           case "end":
            return _context33.stop();
          }
        }), _callee33);
      })));
      return function(_x111, _x112, _x113, _x114, _x115) {
        return _ref35.apply(this, arguments);
      };
    }(), getCookiesItem = function() {
      var strCookies = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", strItem = arguments.length > 1 ? arguments[1] : void 0;
      if (strCookies) {
        for (var strArr = strCookies ? strCookies.split(";") : [], i = 0; i < strArr.length; i++) if (strArr[i] && strArr[i].split("=")[0] == strItem) return strArr[i].split("=")[1];
        return "";
      }
    }, getNowTime = function() {
      return Date.now();
    }, toLogin = function() {
      window.open("https://www.gate.com/login");
    }, toSecuritySetting = function() {
      window.open("https://www.gate.com/zh/myaccount/security-setting");
    }, byAddressGetWallet = function() {
      var _ref36 = _asyncToGenerator(regeneratorRuntime.mark((function _callee34(address, chainSimpleName, defiwalletData) {
        var defiData, walletArr, walletInfo;
        return regeneratorRuntime.wrap((function(_context34) {
          for (;;) switch (_context34.prev = _context34.next) {
           case 0:
            if (_context34.t0 = defiwalletData, _context34.t0) {
              _context34.next = 5;
              break;
            }
            return _context34.next = 4, defiWalletData.$();

           case 4:
            _context34.t0 = _context34.sent;

           case 5:
            return defiData = _context34.t0, walletArr = defiData.defiWallet.walletArr, walletInfo = {}, 
            (null == walletArr ? void 0 : walletArr.length) > 0 && walletArr.forEach((function(Item) {
              var _Item$walletAccountAr3;
              (null == Item || null === (_Item$walletAccountAr3 = Item.walletAccountArr) || void 0 === _Item$walletAccountAr3 ? void 0 : _Item$walletAccountAr3.length) > 0 && (null == Item || Item.walletAccountArr.forEach((function(item) {
                var _addr = item[chainSimpleName];
                (null == _addr ? void 0 : _addr.length) > 0 && _addr.forEach((function(i) {
                  var _i$accountAddress;
                  (null == i || null === (_i$accountAddress = i.accountAddress) || void 0 === _i$accountAddress ? void 0 : _i$accountAddress.toLowerCase()) == (null == address ? void 0 : address.toLowerCase()) && (walletInfo = {
                    walletInfo: Item,
                    accountInfo: item
                  });
                }));
              })));
            })), _context34.abrupt("return", walletInfo);

           case 10:
           case "end":
            return _context34.stop();
          }
        }), _callee34);
      })));
      return function(_x116, _x117, _x118) {
        return _ref36.apply(this, arguments);
      };
    }(), repeatingData = function(obj1, obj2) {
      var keyValue = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "accountPrivateKey", arr1 = [], arr2 = [];
      return Object.keys(obj1).map((function(key) {
        obj1[key] && obj1[key][0] && obj1[key][0][keyValue] && arr1.push(key);
      })), Object.keys(obj2).map((function(key) {
        obj2[key] && obj2[key][0] && obj2[key][0][keyValue] && arr2.push(key);
      })), arr1.filter((function(val) {
        return arr2.indexOf(val) > -1;
      }));
    }, toTransDetail = function(chainName, hashId, browserUrl, totalNetworkDic) {
      var _totalNetworkDic$chai, standardCosmosNetworks = (0, gt_networks.Fb)(totalNetworkDic).standardCosmosNetworks, isCosmosStandard = null == standardCosmosNetworks ? void 0 : standardCosmosNetworks.includes(chainName);
      if ("SUI" == chainName) window.open("".concat(browserUrl, "/txblock/").concat(hashId)); else if ("APT" === (null === (_totalNetworkDic$chai = totalNetworkDic[chainName]) || void 0 === _totalNetworkDic$chai ? void 0 : _totalNetworkDic$chai.chainArchitecture)) {
        var search = browserUrl.split("?"), baseUrl = search[0].endsWith("/") ? search[0] : "".concat(search[0], "/"), searchParams = search[1] ? "?".concat(search[1]) : "";
        window.open("".concat(baseUrl, "txn/").concat(hashId).concat(searchParams));
      } else isCosmosStandard && "XION" !== chainName && "XION_GATETEST" !== chainName || [ "TRX", "ADA", "INJ", "CKB" ].includes(chainName) ? window.open("".concat(browserUrl, "/transaction/").concat(hashId)) : "VENOM" == chainName ? window.open("".concat(browserUrl, "/transactions/").concat(hashId)) : window.open("".concat(browserUrl, "/tx/").concat(hashId));
    }, toBrowserDetail = function(chainName, address, browserUrl, totalNetworkDic) {
      var standardCosmosNetworks = (0, gt_networks.Fb)(totalNetworkDic).standardCosmosNetworks, isCosmosStandard = null == standardCosmosNetworks ? void 0 : standardCosmosNetworks.includes(chainName);
      if ([ "MOVE_GATETEST", "APT_GATETEST", "MOVE", "APT" ].includes(chainName)) {
        var search = browserUrl.split("?"), baseUrl = search[0].endsWith("/") ? search[0] : "".concat(search[0], "/"), searchParams = search[1] ? "?".concat(search[1]) : "";
        window.open("".concat(baseUrl, "account/").concat(address).concat(searchParams));
      } else isCosmosStandard || [ "SEI", "INJ" ].includes(chainName) ? window.open("".concat(browserUrl, "/account/").concat(address)) : "VENOM" === chainName ? window.open("".concat(browserUrl, "/accounts/").concat(address)) : window.open("".concat(browserUrl, "/address/").concat(address));
    }, arrToMap = function(arr, key) {
      var map = {};
      return arr.forEach((function(item) {
        map[item[key]] = item;
      })), map;
    }, isChainAccountType = function() {
      var _ref37 = _asyncToGenerator(regeneratorRuntime.mark((function _callee35() {
        var network, _yield$getSelectedWal, account, chainData, i, item, val, _args35 = arguments;
        return regeneratorRuntime.wrap((function(_context35) {
          for (;;) switch (_context35.prev = _context35.next) {
           case 0:
            return network = _args35.length > 0 && void 0 !== _args35[0] ? _args35[0] : "", 
            _context35.next = 3, (0, dataUtils.getSelectedWallet)();

           case 3:
            if (_yield$getSelectedWal = _context35.sent, account = _yield$getSelectedWal.account, 
            chainData = [], account && "{}" !== JSON.stringify(account)) for (i in account) (item = account[i]) && item instanceof Array && item[0] && "accountPrivateKey" in item[0] && chainData.push(i);
            if (!((null == chainData ? void 0 : chainData.length) > 0)) {
              _context35.next = 20;
              break;
            }
            if (1 != (null == chainData ? void 0 : chainData.length)) {
              _context35.next = 13;
              break;
            }
            return val = chainData[0], _context35.abrupt("return", val);

           case 13:
            if (2 != (null == chainData ? void 0 : chainData.length) || null == chainData || !chainData.includes(network)) {
              _context35.next = 17;
              break;
            }
            return _context35.abrupt("return", network);

           case 17:
           case 20:
            return _context35.abrupt("return", "");

           case 18:
            _context35.next = 21;
            break;

           case 21:
           case "end":
            return _context35.stop();
          }
        }), _callee35);
      })));
      return function() {
        return _ref37.apply(this, arguments);
      };
    }(), getSupportNetworkList = function() {
      var _ref38 = _asyncToGenerator(regeneratorRuntime.mark((function _callee36() {
        var _yield$getSelectedWal2, account, chainData, i, item;
        return regeneratorRuntime.wrap((function(_context36) {
          for (;;) switch (_context36.prev = _context36.next) {
           case 0:
            return _context36.next = 2, (0, dataUtils.getSelectedWallet)();

           case 2:
            if (_yield$getSelectedWal2 = _context36.sent, account = _yield$getSelectedWal2.account, 
            chainData = [], account && "{}" !== JSON.stringify(account)) for (i in account) (item = account[i]) && item instanceof Array && item[0] && "accountPrivateKey" in item[0] && chainData.push(i);
            return _context36.abrupt("return", chainData);

           case 7:
           case "end":
            return _context36.stop();
          }
        }), _callee36);
      })));
      return function() {
        return _ref38.apply(this, arguments);
      };
    }(), getPrivateKey = function() {
      var _ref39 = _asyncToGenerator(regeneratorRuntime.mark((function _callee37(errorCode, network, accountAddress, notShowMessage) {
        var _accountAddress, coinItem, userCookies, privateKey;
        return regeneratorRuntime.wrap((function(_context37) {
          for (;;) switch (_context37.prev = _context37.next) {
           case 0:
            return _accountAddress = accountAddress, null != accountAddress && accountAddress.startsWith("EQ") && (_accountAddress = ton_rpc.A.getTonUQAddress(accountAddress)), 
            coinItem = {
              coinTransferFromAddress: _accountAddress,
              coinNetworkKey: network
            }, _context37.next = 5, (0, crypto_js.pZ)();

           case 5:
            return userCookies = _context37.sent, _context37.next = 8, getWalletPrivateKey(coinItem, errorCode, userCookies, !0, notShowMessage);

           case 8:
            return privateKey = _context37.sent, _context37.abrupt("return", privateKey);

           case 10:
           case "end":
            return _context37.stop();
          }
        }), _callee37);
      })));
      return function(_x119, _x120, _x121, _x122) {
        return _ref39.apply(this, arguments);
      };
    }(), sortArrFun = function(array, key) {
      return array.sort((function(a, b) {
        return b[key] - a[key];
      }));
    }, dappRecord = function() {
      var _ref40 = _asyncToGenerator(regeneratorRuntime.mark((function _callee38(params) {
        var api, res;
        return regeneratorRuntime.wrap((function(_context38) {
          for (;;) switch (_context38.prev = _context38.next) {
           case 0:
            return _context38.next = 2, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 653360));

           case 2:
            return api = _context38.sent, _context38.next = 5, api.dappRecord(params);

           case 5:
            return res = _context38.sent, _context38.abrupt("return", res);

           case 7:
           case "end":
            return _context38.stop();
          }
        }), _callee38);
      })));
      return function(_x123) {
        return _ref40.apply(this, arguments);
      };
    }(), replaceValue = function(val) {
      var _val$replace, _val$replace$replace, _val$replace$replace$, _val$replace$replace$2, valueRegex = new RegExp("^\\d*[.]?\\d{0,".concat(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 18, "}"), "g");
      return (null === (_val$replace = val.replace(/[^\d^.?]+/g, "")) || void 0 === _val$replace || null === (_val$replace$replace = _val$replace.replace(/^0+(\d)/, "$1")) || void 0 === _val$replace$replace || null === (_val$replace$replace$ = _val$replace$replace.replace(/^\./, "0.")) || void 0 === _val$replace$replace$ || null === (_val$replace$replace$2 = _val$replace$replace$.match(valueRegex)) || void 0 === _val$replace$replace$2 ? void 0 : _val$replace$replace$2[0]) || "";
    }, dataURLtoFile = function(dataurl, filename) {
      for (var arr = dataurl.split(","), mime = arr[0].match(/:(.*?);/)[1], bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n); n--; ) u8arr[n] = bstr.charCodeAt(n);
      return new File([ u8arr ], filename, {
        type: mime
      });
    }, hexToBytes = function(hex) {
      if ("string" != typeof hex) throw new TypeError("hexToBytes: expected string, got ".concat(_typeof(hex)));
      for (var paddedHex = hex.length % 2 ? "0".concat(hex) : hex, array = new Uint8Array(paddedHex.length / 2), i = 0; i < array.length; i++) {
        var j = 2 * i, hexByte = paddedHex.slice(j, j + 2), _byte = Number.parseInt(hexByte, 16);
        if (Number.isNaN(_byte) || _byte < 0) throw new Error("Invalid byte sequence");
        array[i] = _byte;
      }
      return array;
    }, dispatchSetNewSelectedAccountAptoWithPublicKey = function(addrAptos, dispatch) {
      addrAptos ? byAddressGetWallet(addrAptos, "APT").then((function(_ref41) {
        var _aptAccounts$, walletInfo = _ref41.walletInfo, accountInfo = _ref41.accountInfo;
        accountInfo, walletInfo;
        var aptAccounts = accountInfo.APT, publicKey = null == aptAccounts || null === (_aptAccounts$ = aptAccounts[0]) || void 0 === _aptAccounts$ ? void 0 : _aptAccounts$.accountPublicKey;
        if (!publicKey) throw new Error("not store aptos publicKey");
        publicKey.startsWith("0x") || (publicKey = "0x".concat(publicKey)), dispatch((0, 
        ui.p$)({
          address: addrAptos,
          publicKey
        }));
      })).catch((function(err) {})) : dispatch((0, ui.p$)({
        address: "",
        publicKey: ""
      }));
    }, formatUrl = function(url) {
      for (var startIndex = 0, i = 0; i < url.length; i++) if (" " !== url[i]) {
        startIndex = i;
        break;
      }
      for (var urlCharList = (url = url.substring(startIndex)).trim().split("").reverse(), endIndex = urlCharList.length, _i3 = 0; _i3 < urlCharList.length; _i3++) if ("/" !== urlCharList[_i3]) {
        endIndex = urlCharList.length - _i3;
        break;
      }
      return url.substring(0, endIndex);
    }, omitStr = function(str, len) {
      var _str;
      return (str = null !== (_str = str) && void 0 !== _str ? _str : "").length > len ? "".concat(str.substring(0, 10), "...") : str;
    }, omitAddress = function(str, len1, len2) {
      return (null == str ? void 0 : str.length) > len1 + len2 ? "".concat(str.substring(0, len1), "...").concat(str.substring(str.length - len2)) : str;
    }, stringToHex = function(str) {
      for (var hex = "", i = 0; i < str.length; i++) hex += str.charCodeAt(i).toString(16).padStart(2, "0");
      return hex;
    }, getAccountInfoName = function() {
      var _ref42 = _asyncToGenerator(regeneratorRuntime.mark((function _callee39(address, sendTokenInfo, defiwalletData) {
        var sendInfo, _coinNetworkKey, fromWallet;
        return regeneratorRuntime.wrap((function(_context39) {
          for (;;) switch (_context39.prev = _context39.next) {
           case 0:
            if (_context39.t0 = sendTokenInfo, _context39.t0) {
              _context39.next = 5;
              break;
            }
            return _context39.next = 4, getDefiItem("sendTokenInfo");

           case 4:
            _context39.t0 = _context39.sent;

           case 5:
            return sendInfo = _context39.t0, _coinNetworkKey = null == sendInfo ? void 0 : sendInfo.coinNetworkKey, 
            _context39.next = 9, byAddressGetWallet(address, _coinNetworkKey, defiwalletData);

           case 9:
            if (!(fromWallet = _context39.sent) || !fromWallet.walletInfo) {
              _context39.next = 12;
              break;
            }
            return _context39.abrupt("return", _objectSpread({
              walletName: fromWallet.walletInfo.walletName,
              accountName: fromWallet.accountInfo.accountName,
              accounts: fromWallet.accountInfo[_coinNetworkKey]
            }, fromWallet));

           case 12:
            return _context39.abrupt("return", {
              walletName: "",
              accountName: "",
              accounts: []
            });

           case 13:
           case "end":
            return _context39.stop();
          }
        }), _callee39);
      })));
      return function(_x124, _x125, _x126) {
        return _ref42.apply(this, arguments);
      };
    }(), getExtensionAccounts = function() {
      var _ref43 = _asyncToGenerator(regeneratorRuntime.mark((function _callee40() {
        var _res$defiWallet3, res, walletArr, list;
        return regeneratorRuntime.wrap((function(_context40) {
          for (;;) switch (_context40.prev = _context40.next) {
           case 0:
            return _context40.next = 2, defiWalletData.$();

           case 2:
            return res = _context40.sent, walletArr = (null == res || null === (_res$defiWallet3 = res.defiWallet) || void 0 === _res$defiWallet3 ? void 0 : _res$defiWallet3.walletArr) || [], 
            list = [], walletArr.forEach((function(val) {
              list = [].concat(_toConsumableArray(list), _toConsumableArray(val.walletAccountArr));
            })), _context40.abrupt("return", list);

           case 7:
           case "end":
            return _context40.stop();
          }
        }), _callee40);
      })));
      return function() {
        return _ref43.apply(this, arguments);
      };
    }(), getExtensionCanupdate = function() {
      var _ref44 = _asyncToGenerator(regeneratorRuntime.mark((function _callee41() {
        var res;
        return regeneratorRuntime.wrap((function(_context41) {
          for (;;) switch (_context41.prev = _context41.next) {
           case 0:
            return _context41.next = 2, projectData.yi();

           case 2:
            return res = _context41.sent, _context41.abrupt("return", res);

           case 4:
           case "end":
            return _context41.stop();
          }
        }), _callee41);
      })));
      return function() {
        return _ref44.apply(this, arguments);
      };
    }(), getAccountsCsvList = function() {
      var _ref45 = _asyncToGenerator(regeneratorRuntime.mark((function _callee42(toDownloadWallets, totalNetworkDic) {
        var walletArr, _walletInfo$defiWalle, walletInfo, list;
        return regeneratorRuntime.wrap((function(_context42) {
          for (;;) switch (_context42.prev = _context42.next) {
           case 0:
            if (!toDownloadWallets) {
              _context42.next = 4;
              break;
            }
            walletArr = toDownloadWallets, _context42.next = 8;
            break;

           case 4:
            return _context42.next = 6, defiWalletData.$();

           case 6:
            walletInfo = _context42.sent, walletArr = null == walletInfo || null === (_walletInfo$defiWalle = walletInfo.defiWallet) || void 0 === _walletInfo$defiWalle ? void 0 : _walletInfo$defiWalle.walletArr;

           case 8:
            return list = [], walletArr.forEach((function(item) {
              var _item$walletAccountAr5, titleLine = [ null == item ? void 0 : item.walletName ], accountLines = [];
              null == item || null === (_item$walletAccountAr5 = item.walletAccountArr) || void 0 === _item$walletAccountAr5 || _item$walletAccountAr5.forEach((function(account) {
                var accountLine = [ null == account ? void 0 : account.accountName ], _loop5 = function(key) {
                  var _account$key, _account$key$, _ref46 = totalNetworkDic[key] || {}, isTest = _ref46.isTest, isCustom = _ref46.isCustom;
                  isTest || isCustom || null === (_account$key = account[key]) || void 0 === _account$key || null === (_account$key$ = _account$key[0]) || void 0 === _account$key$ || !_account$key$.accountAddress || account[key].forEach((function(subAccount) {
                    var _totalNetworkDic$key2, name = key;
                    0 !== (null == item ? void 0 : item.walletCreateType) && 1 !== (null == item ? void 0 : item.walletCreateType) && "EVM" === (null === (_totalNetworkDic$key2 = totalNetworkDic[key]) || void 0 === _totalNetworkDic$key2 ? void 0 : _totalNetworkDic$key2.chainArchitecture) && (name = "ETH"), 
                    null != subAccount && subAccount.accountFormat && account[key].length > 1 && (name = name + " (" + walletCore_account.P3[subAccount.accountFormat] + ")");
                    var index = titleLine.slice(1).indexOf(name) + 1;
                    0 === index && (titleLine.push(name), index = titleLine.length - 1), accountLine[index] = subAccount.accountAddress, 
                    "TON" == key && (accountLine[index] = getTonAddress(subAccount.accountAddress)), 
                    "IOTX" === key && (accountLine[index] = "".concat(accountLine[index], "\n").concat(getIOTXAddress(subAccount.accountAddress)));
                  }));
                };
                for (var key in account) _loop5(key);
                accountLines.push(accountLine);
              }));
              var accounts = [ titleLine ].concat(accountLines, [ [] ]);
              list = list.concat(accounts);
            })), _context42.abrupt("return", list);

           case 11:
           case "end":
            return _context42.stop();
          }
        }), _callee42);
      })));
      return function(_x127, _x128) {
        return _ref45.apply(this, arguments);
      };
    }(), addHexPrefix = function(str) {
      return "string" != typeof str || null != str && str.startsWith("0x") ? str : "0x".concat(str);
    }, removeHexPrefix = function(str) {
      return null != str && str.startsWith("0x") ? str.substring(2) : str;
    }, getIOTXAddress = function(address) {
      try {
        var _from;
        return null === (_from = (0, dist.HT)(address)) || void 0 === _from ? void 0 : _from.string();
      } catch (err) {
        return "";
      }
    }, getEVMAddressFromIOTX = function(address) {
      try {
        var _from2;
        return (0, hd_keyring_esm.BA)(null === (_from2 = (0, dist.HT)(address)) || void 0 === _from2 ? void 0 : _from2.stringEth());
      } catch (err) {
        return "";
      }
    }, getTonAddress = function(address) {
      try {
        return ton_dist.Address.parse(address).toString({
          bounceable: !1
        });
      } catch (err) {
        return "";
      }
    }, getTonEQAddress = function(address) {
      try {
        return ton_dist.Address.parse(address).toString({
          bounceable: !0
        });
      } catch (err) {
        return "";
      }
    }, sleep = function(ms) {
      return new Promise((function(resolve) {
        var timeout = setTimeout((function() {
          clearTimeout(timeout), resolve();
        }), ms);
      }));
    }, sum = function(list, key) {
      var total = 0;
      return null == list || list.forEach((function(item) {
        total += Number(null == item ? void 0 : item[key]);
      })), total;
    }, getRealAptosAddress = function(address) {
      var _address, _address2;
      return null !== (_address = address) && void 0 !== _address && _address.startsWith("0x") && (address = address.substring(2)), 
      address && (null === (_address2 = address) || void 0 === _address2 ? void 0 : _address2.length) < 64 && (address = address.padStart(64, "0")), 
      "0x".concat(address);
    }, getRealAptosCoinType = function(coinType) {
      var coinTypeArr = null == coinType ? void 0 : coinType.split("::"), coinObjectId = getRealAptosAddress(null == coinTypeArr ? void 0 : coinTypeArr.shift());
      return null == coinTypeArr || coinTypeArr.unshift(coinObjectId), null == coinTypeArr ? void 0 : coinTypeArr.join("::");
    }, changeNetworkThenCleanInfo = function() {
      var _ref47 = _asyncToGenerator(regeneratorRuntime.mark((function _callee43(popupDispatch) {
        return regeneratorRuntime.wrap((function(_context43) {
          for (;;) switch (_context43.prev = _context43.next) {
           case 0:
            return localStorage.setItem("tokenSearchValue", ""), localStorage.setItem("tokenSearchNFTValue", ""), 
            _context43.next = 4, Promise.all([ local_storage_shim.A.setItem("nftAllCollection", []), popupDispatch((0, 
            balanceOfSend.s)({
              mainCoinBalance: 0,
              tokenAssets: 0,
              totalBalance: 0,
              lockBalance: 0,
              coinAvailableNumber: 0,
              isActiveAddr: !1
            })) ]);

           case 4:
           case "end":
            return _context43.stop();
          }
        }), _callee43);
      })));
      return function(_x129) {
        return _ref47.apply(this, arguments);
      };
    }();
  },
  333043: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      createTonProofItem: () => createTonProofItem,
      estimateTonConnectTransfer: () => estimateTonConnectTransfer,
      getContract: () => getContract,
      getKeypair: () => getKeypair,
      getServerTime: () => getServerTime,
      getTonBalance: () => getTonBalance,
      getTonGasFee: () => getTonGasFee,
      getTonPublcKey: () => getTonPublcKey,
      getTranstionStatusByHash: () => getTranstionStatusByHash,
      sendTonConnectTransfer: () => sendTonConnectTransfer,
      sendTransaction: () => sendTransaction,
      signData: () => signData,
      signProof: () => signProof,
      signTransaction: () => signTransaction,
      toTonAddressItemReply: () => toTonAddressItemReply,
      tonConnectProofPayload: () => tonConnectProofPayload
    });
    __webpack_require__(754989), __webpack_require__(752231), __webpack_require__(418665), 
    __webpack_require__(301772), __webpack_require__(505086), __webpack_require__(953746), 
    __webpack_require__(520861), __webpack_require__(571905), __webpack_require__(285213), 
    __webpack_require__(97182), __webpack_require__(512279), __webpack_require__(639302), 
    __webpack_require__(770147), __webpack_require__(866217), __webpack_require__(697966), 
    __webpack_require__(735186), __webpack_require__(135944), __webpack_require__(644787), 
    __webpack_require__(950632), __webpack_require__(552278), __webpack_require__(614245), 
    __webpack_require__(252492), __webpack_require__(193266), __webpack_require__(537192), 
    __webpack_require__(237220), __webpack_require__(482432), __webpack_require__(632483), 
    __webpack_require__(536696), __webpack_require__(458083), __webpack_require__(269193), 
    __webpack_require__(194009), __webpack_require__(689560), __webpack_require__(579389), 
    __webpack_require__(718636), __webpack_require__(906048), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(630789), __webpack_require__(380115), 
    __webpack_require__(259581), __webpack_require__(687136), __webpack_require__(640173), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(407899), 
    __webpack_require__(80475), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(103101), 
    __webpack_require__(936012), __webpack_require__(564216), __webpack_require__(207452);
    var _gate_gui__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(279386), _method__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(326394), _api_api__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(653360), _api_httpService__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(227383), _ton_ton__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(823515), long__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(274442), _lang_string__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(212864), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(700313), _dataUtils__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(845404), _src_ton_entries_networks__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(68606), tweetnacl__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(188947), tweetnacl__WEBPACK_IMPORTED_MODULE_67___default = __webpack_require__.n(tweetnacl__WEBPACK_IMPORTED_MODULE_67__), _ton_crypto__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(375269), _solana_web3_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(262643), axios__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(272505), axios__WEBPACK_IMPORTED_MODULE_70___default = __webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_70__), tweetnacl_util__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(976386), tweetnacl_util__WEBPACK_IMPORTED_MODULE_71___default = __webpack_require__.n(tweetnacl_util__WEBPACK_IMPORTED_MODULE_71__), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(259159), _bg_utils_gt_on_chain_ton_ton_rpc__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(813667), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var TON = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.TW.TheOpenNetwork.Proto, wrapperPostJson = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(url, data) {
        var res;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_60__.postJson)(url, data);

           case 2:
            return res = _context.sent, _context.abrupt("return", res.data);

           case 4:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }(), getTonPublcKey = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(accountAddress) {
        var _accountInfo$TON, _accountInfo$TON$, _accountAddress, _yield$method$byAddre, accountInfo, accountPublicKey, publicKey;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _accountAddress = accountAddress, null != accountAddress && accountAddress.startsWith("EQ") && (_accountAddress = _bg_utils_gt_on_chain_ton_ton_rpc__WEBPACK_IMPORTED_MODULE_73__.A.getTonUQAddress(accountAddress)), 
            _context2.next = 4, _method__WEBPACK_IMPORTED_MODULE_58__.byAddressGetWallet(_accountAddress, "TON");

           case 4:
            if (_yield$method$byAddre = _context2.sent, accountInfo = _yield$method$byAddre.accountInfo, 
            accountPublicKey = null == accountInfo || null === (_accountInfo$TON = accountInfo.TON) || void 0 === _accountInfo$TON || null === (_accountInfo$TON$ = _accountInfo$TON[0]) || void 0 === _accountInfo$TON$ ? void 0 : _accountInfo$TON$.accountPublicKey) {
              _context2.next = 9;
              break;
            }
            throw new Error("获取TON账户公钥失败");

           case 9:
            return publicKey = Buffer.from(accountPublicKey, "hex"), _context2.abrupt("return", publicKey);

           case 11:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x3) {
        return _ref2.apply(this, arguments);
      };
    }(), getContract = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(client, accountAddress) {
        var publicKey, wallet, contract;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, getTonPublcKey(accountAddress);

           case 2:
            return publicKey = _context3.sent, 0, wallet = _ton_ton__WEBPACK_IMPORTED_MODULE_61__.WalletContractV4.create({
              workchain: 0,
              publicKey
            }), contract = client.open(wallet), _context3.abrupt("return", contract);

           case 7:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x4, _x5) {
        return _ref3.apply(this, arguments);
      };
    }(), getJettonWalletAddress = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(fromAddress, jettonMasterAddress, provider) {
        var master, res;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return master = _ton_ton__WEBPACK_IMPORTED_MODULE_61__.JettonMaster.create((0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(jettonMasterAddress)), 
            _context4.next = 3, master.getWalletAddress(provider, (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(fromAddress));

           case 3:
            return res = _context4.sent, _context4.abrupt("return", res.toRawString());

           case 5:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x6, _x7, _x8) {
        return _ref4.apply(this, arguments);
      };
    }(), getTonBalance = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(coinItem) {
        var coinIsMain, coinNetworkRpcAddress, accountAddress, coinPrecision, protocolLabel, client, tonBalance, contract, balance, _res$data, _res$data$data, res, jettonMasterAddress, provider, jettwonWalletAddress, wallet, _balance;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            if (_context5.prev = 0, coinIsMain = coinItem.coinIsMain, coinNetworkRpcAddress = coinItem.coinNetworkRpcAddress, 
            accountAddress = coinItem.coinTransferFromAddress, coinPrecision = coinItem.coinPrecision, 
            protocolLabel = coinItem.protocolLabel, client = new _ton_ton__WEBPACK_IMPORTED_MODULE_61__.TonClient({
              endpoint: coinNetworkRpcAddress
            }, wrapperPostJson), !coinIsMain) {
              _context5.next = 17;
              break;
            }
            return _context5.next = 10, getContract(client, accountAddress);

           case 10:
            return contract = _context5.sent, _context5.next = 13, contract.getBalance();

           case 13:
            balance = _context5.sent, tonBalance = _method__WEBPACK_IMPORTED_MODULE_58__.dataOperation(balance, Math.pow(10, parseInt(coinPrecision)), "/"), 
            _context5.next = 34;
            break;

           case 17:
            if ("TON-20" !== protocolLabel) {
              _context5.next = 24;
              break;
            }
            return _context5.next = 20, _api_api__WEBPACK_IMPORTED_MODULE_59__.getTickBalance({
              tick: null == coinItem ? void 0 : coinItem.coinTick,
              address: accountAddress
            });

           case 20:
            res = _context5.sent, tonBalance = null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$data = _res$data.data) || void 0 === _res$data$data ? void 0 : _res$data$data.balance, 
            _context5.next = 34;
            break;

           case 24:
            return jettonMasterAddress = coinItem.coinContractAddress, provider = client.provider((0, 
            _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(jettonMasterAddress)), _context5.next = 28, 
            getJettonWalletAddress(accountAddress, jettonMasterAddress, provider);

           case 28:
            return jettwonWalletAddress = _context5.sent, wallet = _ton_ton__WEBPACK_IMPORTED_MODULE_61__.JettonWallet.create((0, 
            _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(jettwonWalletAddress)), _context5.next = 32, 
            wallet.getBalance(client.provider((0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(jettwonWalletAddress)));

           case 32:
            _balance = _context5.sent, tonBalance = _method__WEBPACK_IMPORTED_MODULE_58__.dataOperation(_balance, Math.pow(10, parseInt(coinPrecision)), "/");

           case 34:
            return _context5.abrupt("return", tonBalance);

           case 37:
            return _context5.prev = 37, _context5.t0 = _context5.catch(0), _context5.abrupt("return", "");

           case 40:
           case "end":
            return _context5.stop();
          }
        }), _callee5, null, [ [ 0, 37 ] ]);
      })));
      return function(_x9) {
        return _ref5.apply(this, arguments);
      };
    }(), getTonGasFee = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(coinItem, isDApp) {
        var coinNetworkRpcAddress, accountAddress, toAddress, coinTransferAmount, coinIsMain, coinPrecision, coinNetworkPrecision, jettonMasterAddress, fee, transfer, client, contract, seqno, provider, jettonWalletAddress, amount, body, getFee, res;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return coinNetworkRpcAddress = coinItem.coinNetworkRpcAddress, accountAddress = coinItem.coinTransferFromAddress, 
            toAddress = coinItem.coinTransferToAddress, coinTransferAmount = coinItem.coinTransferAmount, 
            coinIsMain = coinItem.coinIsMain, coinPrecision = coinItem.coinPrecision, coinNetworkPrecision = coinItem.coinNetworkPrecision, 
            jettonMasterAddress = coinItem.coinContractAddress, client = new _ton_ton__WEBPACK_IMPORTED_MODULE_61__.TonClient({
              endpoint: coinNetworkRpcAddress
            }, wrapperPostJson), _context7.next = 11, getContract(client, accountAddress);

           case 11:
            return contract = _context7.sent, _context7.next = 14, contract.getSeqno();

           case 14:
            if (seqno = _context7.sent, !coinIsMain) {
              _context7.next = 19;
              break;
            }
            transfer = contract.createTransfer({
              seqno,
              secretKey: new Uint8Array(64),
              messages: [ (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.internal)({
                to: toAddress,
                value: BigInt(1),
                bounce: !1
              }) ]
            }), _context7.next = 26;
            break;

           case 19:
            return provider = client.provider((0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(jettonMasterAddress)), 
            _context7.next = 22, getJettonWalletAddress(accountAddress, jettonMasterAddress, provider);

           case 22:
            jettonWalletAddress = _context7.sent, amount = _method__WEBPACK_IMPORTED_MODULE_58__.dataOperation(coinTransferAmount, Math.pow(10, coinPrecision)), 
            body = (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.beginCell)().storeUint(BigInt(260734629), 32).storeUint(BigInt(seqno), 64).storeCoins(BigInt(amount)).storeAddress((0, 
            _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(toAddress)).storeAddress((0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(accountAddress)).storeUint(BigInt(0), 1).storeCoins(BigInt(1)).storeUint(0, 1).endCell(), 
            transfer = contract.createTransfer({
              seqno,
              secretKey: new Uint8Array(64),
              messages: [ (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.internal)({
                to: (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(jettonWalletAddress),
                value: BigInt(amount),
                body,
                bounce: !1
              }) ]
            });

           case 26:
            return getFee = new Promise(function() {
              var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(resolve) {
                var _fee, _fee$source_fees, _fee2, _fee2$source_fees, _fee3, _fee3$source_fees, _fee4, _fee4$source_fees, feeRes, gasFee, feeMoney;
                return regeneratorRuntime.wrap((function(_context6) {
                  for (;;) switch (_context6.prev = _context6.next) {
                   case 0:
                    return _context6.next = 2, client.estimateExternalMessageFee((0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(accountAddress), {
                      body: transfer,
                      ignoreSignature: !0
                    });

                   case 2:
                    return fee = _context6.sent, feeRes = (null === (_fee = fee) || void 0 === _fee || null === (_fee$source_fees = _fee.source_fees) || void 0 === _fee$source_fees ? void 0 : _fee$source_fees.fwd_fee) + (null === (_fee2 = fee) || void 0 === _fee2 || null === (_fee2$source_fees = _fee2.source_fees) || void 0 === _fee2$source_fees ? void 0 : _fee2$source_fees.gas_fee) + (null === (_fee3 = fee) || void 0 === _fee3 || null === (_fee3$source_fees = _fee3.source_fees) || void 0 === _fee3$source_fees ? void 0 : _fee3$source_fees.in_fwd_fee) + (null === (_fee4 = fee) || void 0 === _fee4 || null === (_fee4$source_fees = _fee4.source_fees) || void 0 === _fee4$source_fees ? void 0 : _fee4$source_fees.storage_fee), 
                    isDApp && resolve(feeRes), gasFee = _method__WEBPACK_IMPORTED_MODULE_58__.dataOperation(feeRes, Math.pow(10, coinNetworkPrecision), "/"), 
                    _context6.next = 8, calculationTonFeeMoney(coinItem, gasFee);

                   case 8:
                    feeMoney = _context6.sent, resolve(_objectSpread(_objectSpread({}, {
                      gasFee
                    }), feeMoney));

                   case 10:
                   case "end":
                    return _context6.stop();
                  }
                }), _callee6);
              })));
              return function(_x12) {
                return _ref7.apply(this, arguments);
              };
            }()), _context7.next = 29, getFee;

           case 29:
            return res = _context7.sent, _context7.abrupt("return", res);

           case 31:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })));
      return function(_x10, _x11) {
        return _ref6.apply(this, arguments);
      };
    }(), calculationTonFeeMoney = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(coinItem, gasFee) {
        var coinValue, cacheData, dealPrice, money, moneyText, coinInfo, _coinInfo$data, code, data, item, _dealPrice, _money, _moneyText;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            return coinValue = coinItem.coinNetworkKey, _context8.next = 3, _method__WEBPACK_IMPORTED_MODULE_58__.getDefiItem("cacheSendData");

           case 3:
            if (!("coinUnitPrice" in (cacheData = _context8.sent)) || null == cacheData || !cacheData.coinUnitPrice) {
              _context8.next = 11;
              break;
            }
            return dealPrice = _method__WEBPACK_IMPORTED_MODULE_58__.getDecimalsUnitPrice(cacheData.coinUnitPrice), 
            money = _method__WEBPACK_IMPORTED_MODULE_58__.dataOperation(Number(dealPrice), Number(gasFee), "multiplication", !0), 
            moneyText = gasFee + " " + coinItem.coinNetworkSymbol + " ≈ $" + money, _context8.abrupt("return", {
              money,
              moneyText
            });

           case 11:
            return _context8.next = 13, _api_api__WEBPACK_IMPORTED_MODULE_59__.getInfoCoin({
              networkKeyList: [ coinValue ]
            });

           case 13:
            if (coinInfo = _context8.sent, _coinInfo$data = coinInfo.data, code = _coinInfo$data.code, 
            data = _coinInfo$data.data, 0 !== code) {
              _context8.next = 27;
              break;
            }
            if ("{}" === JSON.stringify(data)) {
              _context8.next = 27;
              break;
            }
            if (!(item = data[coinValue]) || !item.coinUnitPrice) {
              _context8.next = 26;
              break;
            }
            return _dealPrice = _method__WEBPACK_IMPORTED_MODULE_58__.getDecimalsUnitPrice(item.coinUnitPrice), 
            _money = _method__WEBPACK_IMPORTED_MODULE_58__.dataOperation(Number(_dealPrice), Number(gasFee), "multiplication", !0), 
            _moneyText = gasFee + " " + coinItem.coinNetworkSymbol + " ≈ $" + _money, _method__WEBPACK_IMPORTED_MODULE_58__.setDefiData({
              cacheSendData: _objectSpread(_objectSpread({}, cacheData), {
                coinUnitPrice: _dealPrice
              })
            }), _context8.abrupt("return", {
              money: _money,
              moneyText: _moneyText
            });

           case 26:
            return _context8.abrupt("return", {
              money: "",
              moneyText: ""
            });

           case 27:
           case "end":
            return _context8.stop();
          }
        }), _callee8);
      })));
      return function(_x13, _x14) {
        return _ref8.apply(this, arguments);
      };
    }(), signTransaction = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(accountAddress, toAddress, privateKeyHex, amount, coinNetworkRpcAddress, coinIsMain, jettonMasterAddress, comment, seqno) {
        var wasm, AnySigner, HexCoding, CoinType, client, contract, input, transfer, provider, jettonWalletAddress, jettonTransfer, _transfer, encoded, outputData, output;
        return regeneratorRuntime.wrap((function(_context9) {
          for (;;) switch (_context9.prev = _context9.next) {
           case 0:
            return _context9.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.t)();

           case 2:
            if (wasm = _context9.sent, AnySigner = wasm.AnySigner, HexCoding = wasm.HexCoding, 
            CoinType = wasm.CoinType, client = new _ton_ton__WEBPACK_IMPORTED_MODULE_61__.TonClient({
              endpoint: coinNetworkRpcAddress
            }, wrapperPostJson), seqno) {
              _context9.next = 12;
              break;
            }
            return _context9.next = 8, getContract(client, accountAddress);

           case 8:
            return contract = _context9.sent, _context9.next = 11, contract.getSeqno();

           case 11:
            seqno = _context9.sent;

           case 12:
            if (!coinIsMain) {
              _context9.next = 17;
              break;
            }
            transfer = TON.Transfer.create({
              walletVersion: TON.WalletVersion.WALLET_V4_R2,
              amount: long__WEBPACK_IMPORTED_MODULE_62__.A.fromNumber(parseInt(amount)),
              mode: TON.SendMode.PAY_FEES_SEPARATELY | TON.SendMode.IGNORE_ACTION_PHASE_ERRORS,
              dest: toAddress,
              bounceable: !1,
              comment
            }), input = TON.SigningInput.create({
              walletVersion: TON.WalletVersion.WALLET_V4_R2,
              privateKey: HexCoding.decode(privateKeyHex),
              messages: [ transfer ],
              expireAt: Math.floor(Date.now() / 1e3) + 600,
              sequenceNumber: seqno
            }), _context9.next = 24;
            break;

           case 17:
            return provider = client.provider((0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(jettonMasterAddress)), 
            _context9.next = 20, getJettonWalletAddress(accountAddress, jettonMasterAddress, provider);

           case 20:
            jettonWalletAddress = _context9.sent, jettonTransfer = TON.JettonTransfer.create({
              jettonAmount: long__WEBPACK_IMPORTED_MODULE_62__.A.fromNumber(parseInt(amount)),
              forwardAmount: long__WEBPACK_IMPORTED_MODULE_62__.A.fromNumber(parseInt(1)),
              responseAddress: accountAddress,
              toOwner: toAddress
            }), _transfer = TON.Transfer.create({
              walletVersion: TON.WalletVersion.WALLET_V4_R2,
              amount: long__WEBPACK_IMPORTED_MODULE_62__.A.fromNumber(parseInt(1e8)),
              mode: TON.SendMode.PAY_FEES_SEPARATELY | TON.SendMode.IGNORE_ACTION_PHASE_ERRORS,
              dest: jettonWalletAddress,
              bounceable: !0,
              comment,
              sequenceNumber: seqno,
              jettonTransfer
            }), input = TON.SigningInput.create({
              walletVersion: TON.WalletVersion.WALLET_V4_R2,
              privateKey: HexCoding.decode(privateKeyHex),
              messages: [ _transfer ],
              expireAt: Math.floor(Date.now() / 1e3) + 600,
              sequenceNumber: seqno
            });

           case 24:
            return encoded = TON.SigningInput.encode(input).finish(), outputData = AnySigner.sign(encoded, CoinType.ton), 
            output = TON.SigningOutput.decode(outputData), _context9.abrupt("return", output.encoded);

           case 28:
           case "end":
            return _context9.stop();
          }
        }), _callee9);
      })));
      return function(_x15, _x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23) {
        return _ref9.apply(this, arguments);
      };
    }(), sendTransaction = function() {
      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(coinItem, privateKeyHex, setLoading, history) {
        var isReturn, _result$data, _result$data$data, accountAddress, toAddress, coinTransferAmount, coinPrecision, coinNetworkRpcAddress, coinIsMain, coinContractAddress, amount, raw, historyData, result, hash, _args10 = arguments;
        return regeneratorRuntime.wrap((function(_context10) {
          for (;;) switch (_context10.prev = _context10.next) {
           case 0:
            return isReturn = _args10.length > 4 && void 0 !== _args10[4] && _args10[4], _context10.prev = 1, 
            accountAddress = coinItem.coinTransferFromAddress, toAddress = coinItem.coinTransferToAddress, 
            coinTransferAmount = coinItem.coinTransferAmount, coinPrecision = coinItem.coinPrecision, 
            coinNetworkRpcAddress = coinItem.coinNetworkRpcAddress, coinIsMain = coinItem.coinIsMain, 
            coinContractAddress = coinItem.coinContractAddress, amount = _method__WEBPACK_IMPORTED_MODULE_58__.dataOperation(coinTransferAmount, Math.pow(10, coinPrecision)), 
            _context10.next = 12, signTransaction(accountAddress, toAddress, privateKeyHex, amount, coinNetworkRpcAddress, coinIsMain, coinContractAddress, null == coinItem ? void 0 : coinItem.memo);

           case 12:
            if (!(raw = _context10.sent) || !isReturn) {
              _context10.next = 15;
              break;
            }
            return _context10.abrupt("return", raw);

           case 15:
            return historyData = {
              chain_type: null == coinItem ? void 0 : coinItem.coinNetworkKey,
              address: null == coinItem ? void 0 : coinItem.coinTransferFromAddress,
              chain_name: null == coinItem ? void 0 : coinItem.coinNetworkKey,
              token_addr: null == coinItem ? void 0 : coinItem.coinContractAddress,
              token_name: null == coinItem ? void 0 : coinItem.coinFullName,
              token_short_name: null == coinItem ? void 0 : coinItem.coinSimpleName,
              trans_type: "send",
              trans_time: parseInt((new Date).getTime() / 1e3),
              trans_balance: null == coinItem ? void 0 : coinItem.coinTransferAmount,
              trans_balance_usd: null == coinItem ? void 0 : coinItem.coinTransferAmountMoney,
              trans_oppo_address: null == coinItem ? void 0 : coinItem.coinTransferToAddress,
              nonce: null == coinItem ? void 0 : coinItem.coinTransferNonce,
              is_contra: "-" == (null == coinItem ? void 0 : coinItem.coinContractAddress) || null != coinItem && coinItem.coinIsMain ? 0 : 1,
              trans_gas_fee: null == coinItem ? void 0 : coinItem.coinTransferFee,
              memo: null == coinItem ? void 0 : coinItem.memo,
              memo_name: null == coinItem ? void 0 : coinItem.memo_name,
              platform_operation: null == coinItem ? void 0 : coinItem.platform_operation,
              platform_name: null == coinItem ? void 0 : coinItem.platform_name
            }, _context10.next = 18, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_64__.IM)("TON", raw, historyData);

           case 18:
            result = _context10.sent, (hash = null == result || null === (_result$data = result.data) || void 0 === _result$data || null === (_result$data$data = _result$data.data) || void 0 === _result$data$data ? void 0 : _result$data$data.hash_id) ? history && (0, 
            _dataUtils__WEBPACK_IMPORTED_MODULE_65__.sendTokenJumpPage)(_objectSpread(_objectSpread({}, coinItem), {
              coinTransferHash: hash
            }), history) : (0, _gate_gui__WEBPACK_IMPORTED_MODULE_57__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_63__.lang_string)("发送失败")
            }), _context10.next = 27;
            break;

           case 23:
            _context10.prev = 23, _context10.t0 = _context10.catch(1), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_57__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_63__.lang_string)("发送失败")
            }), setLoading(!1);

           case 27:
           case "end":
            return _context10.stop();
          }
        }), _callee10, null, [ [ 1, 23 ] ]);
      })));
      return function(_x24, _x25, _x26, _x27) {
        return _ref10.apply(this, arguments);
      };
    }(), getTranstionStatusByHash = function() {
      var _ref11 = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(address, base64Hash, chainName, totalNetworkDic) {
        var _totalNetworkDic$chai, _totalNetworkDic$chai2, _totalNetworkDic$chai3, rpcUrl, client, res, hash, result;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            return rpcUrl = null === (_totalNetworkDic$chai = totalNetworkDic[chainName]) || void 0 === _totalNetworkDic$chai || null === (_totalNetworkDic$chai2 = _totalNetworkDic$chai.endpoints) || void 0 === _totalNetworkDic$chai2 || null === (_totalNetworkDic$chai3 = _totalNetworkDic$chai2.find((function(item) {
              return "rpc" === (null == item ? void 0 : item.type);
            }))) || void 0 === _totalNetworkDic$chai3 ? void 0 : _totalNetworkDic$chai3.url, 
            client = new _ton_ton__WEBPACK_IMPORTED_MODULE_61__.TonClient({
              endpoint: rpcUrl
            }, wrapperPostJson), _context11.next = 4, _api_api__WEBPACK_IMPORTED_MODULE_59__.getTonTransStatusByInHash(chainName, base64Hash);

           case 4:
            if (200 !== (res = _context11.sent).data.code || res.data.data.hash == base64Hash) {
              _context11.next = 14;
              break;
            }
            return hash = res.data.data.hash, _context11.next = 9, client.getTransactions(address, {
              limit: 1,
              hash
            });

           case 9:
            if (!((result = _context11.sent).length > 0)) {
              _context11.next = 12;
              break;
            }
            return _context11.abrupt("return", _objectSpread(_objectSpread({}, result[0]), {}, {
              confirmHash: hash
            }));

           case 12:
            _context11.next = 15;
            break;

           case 14:
            return _context11.abrupt("return", null);

           case 15:
            return _context11.abrupt("return", !1);

           case 16:
           case "end":
            return _context11.stop();
          }
        }), _callee11);
      })));
      return function(_x28, _x29, _x30, _x31) {
        return _ref11.apply(this, arguments);
      };
    }(), walletContractFromState = function(wallet) {
      return function(publicKey, version) {
        if (version === _src_ton_entries_networks__WEBPACK_IMPORTED_MODULE_66__.uk.V4R2) return _ton_ton__WEBPACK_IMPORTED_MODULE_61__.WalletContractV4.create({
          workchain: 0,
          publicKey
        });
      }(Buffer.from(wallet.publicKey, "hex"), wallet.active.version);
    }, toTonAddressItemReply = function(wallet) {
      var contract = walletContractFromState(wallet);
      return {
        name: "ton_addr",
        address: contract.address.toRawString(),
        network: (wallet.network || _src_ton_entries_networks__WEBPACK_IMPORTED_MODULE_66__.lg.MAINNET).toString(),
        walletStateInit: (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.beginCell)().storeWritable((0, 
        _ton_ton__WEBPACK_IMPORTED_MODULE_61__.storeStateInit)(contract.init)).endCell().toBoc().toString("base64"),
        publicKey: wallet.publicKey
      };
    }, signProof = function(bufferToSign, keyPair) {
      return tweetnacl__WEBPACK_IMPORTED_MODULE_67___default().sign.detached(Buffer.from((0, 
      _ton_crypto__WEBPACK_IMPORTED_MODULE_68__.sha256_sync)(bufferToSign)), keyPair.secretKey);
    }, tonConnectProofPayload = function(timestamp, origin, wallet, payload) {
      var timestampBuffer = Buffer.allocUnsafe(8);
      timestampBuffer.writeBigInt64LE(BigInt(timestamp));
      var domainBuffer = Buffer.from(new URL(origin).host), domainLengthBuffer = Buffer.allocUnsafe(4);
      domainLengthBuffer.writeInt32LE(domainBuffer.byteLength);
      var address = _ton_ton__WEBPACK_IMPORTED_MODULE_61__.Address.parse(wallet), addressWorkchainBuffer = Buffer.allocUnsafe(4);
      addressWorkchainBuffer.writeInt32BE(address.workChain);
      var addressBuffer = Buffer.concat([ addressWorkchainBuffer, address.hash ]), messageBuffer = Buffer.concat([ Buffer.from("ton-proof-item-v2/", "utf8"), addressBuffer, domainLengthBuffer, domainBuffer, timestampBuffer, Buffer.from(payload) ]);
      return {
        timestamp,
        bufferToSign: Buffer.concat([ Buffer.from("ffff", "hex"), Buffer.from("ton-connect", "utf8"), Buffer.from((0, 
        _ton_crypto__WEBPACK_IMPORTED_MODULE_68__.sha256_sync)(messageBuffer)) ]),
        domainBuffer,
        payload,
        origin
      };
    }, createTonProofItem = function(signature, proof) {
      return {
        timestamp: proof.timestamp,
        domain: {
          lengthBytes: proof.domainBuffer.byteLength,
          value: proof.domainBuffer.toString("utf8")
        },
        signature: Buffer.from(signature).toString("base64"),
        payload: proof.payload
      };
    }, getKeypair = function(privateKey) {
      return _solana_web3_js__WEBPACK_IMPORTED_MODULE_69__.AX.fromSeed(Buffer.from(privateKey, "hex"))._keypair;
    }, getServerTime = function() {
      axios__WEBPACK_IMPORTED_MODULE_70___default()({
        method: "GET",
        url: "https://keeper.tonapi.io/v2/liteserver/get_time",
        params: {},
        headers: {}
      }).then((function(res) {}));
    }, toStateInit = function(stateInit) {
      if (stateInit) {
        var _loadStateInit = (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.loadStateInit)(_ton_ton__WEBPACK_IMPORTED_MODULE_61__.Cell.fromBase64(stateInit).asSlice());
        return {
          code: _loadStateInit.code,
          data: _loadStateInit.data
        };
      }
    }, externalMessage = function(contract, seqno, body) {
      return (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.beginCell)().storeWritable((0, 
      _ton_ton__WEBPACK_IMPORTED_MODULE_61__.storeMessage)((0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.external)({
        to: contract.address,
        init: 0 === seqno ? contract.init : void 0,
        body
      }))).endCell();
    }, createTonConnectTransfer = function() {
      var _ref13 = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(seqno, contract, params, secretKey) {
        var transfer;
        return regeneratorRuntime.wrap((function(_context13) {
          for (;;) switch (_context13.prev = _context13.next) {
           case 0:
            return _context13.next = 2, contract.createTransfer({
              seqno,
              sendMode: _ton_ton__WEBPACK_IMPORTED_MODULE_61__.SendMode.PAY_GAS_SEPARATELY + _ton_ton__WEBPACK_IMPORTED_MODULE_61__.SendMode.IGNORE_ERRORS,
              secretKey: secretKey || new Uint8Array(64),
              messages: params.messages.map((function(item) {
                var address, body = void 0;
                if (null != item && item.payload) try {
                  body = _ton_ton__WEBPACK_IMPORTED_MODULE_61__.Cell.fromBase64(item.payload);
                } catch (err) {
                  body = item.payload;
                }
                return (0, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.internal)({
                  to: _ton_ton__WEBPACK_IMPORTED_MODULE_61__.Address.parse(item.address),
                  bounce: (address = item.address, !_ton_ton__WEBPACK_IMPORTED_MODULE_61__.Address.isFriendly(address) || _ton_ton__WEBPACK_IMPORTED_MODULE_61__.Address.parseFriendly(address).isBounceable),
                  value: BigInt(item.amount),
                  init: toStateInit(item.stateInit),
                  body
                });
              }))
            });

           case 2:
            return transfer = _context13.sent, _context13.abrupt("return", transfer);

           case 4:
           case "end":
            return _context13.stop();
          }
        }), _callee13);
      })));
      return function(_x33, _x34, _x35, _x36) {
        return _ref13.apply(this, arguments);
      };
    }(), estimateTonConnectTransfer = function() {
      var _ref16 = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(coinNetworkRpcAddress, accountAddress, txInfo) {
        var _fee$source_fees2, _fee$source_fees3, _fee$source_fees4, _fee$source_fees5, client, contract, seqno, transfer, fee, feeRes;
        return regeneratorRuntime.wrap((function(_context16) {
          for (;;) switch (_context16.prev = _context16.next) {
           case 0:
            return client = new _ton_ton__WEBPACK_IMPORTED_MODULE_61__.TonClient({
              endpoint: coinNetworkRpcAddress
            }, wrapperPostJson), _context16.next = 3, getContract(client, accountAddress);

           case 3:
            return contract = _context16.sent, _context16.next = 6, contract.getSeqno();

           case 6:
            return seqno = _context16.sent, _context16.next = 9, createTonConnectTransfer(seqno, contract, txInfo);

           case 9:
            return transfer = _context16.sent, _context16.next = 12, client.estimateExternalMessageFee((0, 
            _ton_ton__WEBPACK_IMPORTED_MODULE_61__.address)(accountAddress), {
              body: transfer,
              ignoreSignature: !0
            });

           case 12:
            return fee = _context16.sent, feeRes = (null == fee || null === (_fee$source_fees2 = fee.source_fees) || void 0 === _fee$source_fees2 ? void 0 : _fee$source_fees2.fwd_fee) + (null == fee || null === (_fee$source_fees3 = fee.source_fees) || void 0 === _fee$source_fees3 ? void 0 : _fee$source_fees3.gas_fee) + (null == fee || null === (_fee$source_fees4 = fee.source_fees) || void 0 === _fee$source_fees4 ? void 0 : _fee$source_fees4.in_fwd_fee) + (null == fee || null === (_fee$source_fees5 = fee.source_fees) || void 0 === _fee$source_fees5 ? void 0 : _fee$source_fees5.storage_fee), 
            _context16.abrupt("return", feeRes);

           case 15:
           case "end":
            return _context16.stop();
          }
        }), _callee16);
      })));
      return function(_x39, _x40, _x41) {
        return _ref16.apply(this, arguments);
      };
    }(), sendTonConnectTransfer = function() {
      var _ref18 = _asyncToGenerator(regeneratorRuntime.mark((function _callee18(coinNetworkRpcAddress, accountAddress, txInfo, privateKeyHex, action) {
        var client, contract, seqno, privateKey, keypair, transfer, cell, boc, _result$data2, _result$data2$data, result, hash;
        return regeneratorRuntime.wrap((function(_context18) {
          for (;;) switch (_context18.prev = _context18.next) {
           case 0:
            return null != txInfo && txInfo.action && delete txInfo.action, client = new _ton_ton__WEBPACK_IMPORTED_MODULE_61__.TonClient({
              endpoint: coinNetworkRpcAddress
            }, wrapperPostJson), _context18.next = 4, getContract(client, accountAddress);

           case 4:
            return contract = _context18.sent, _context18.next = 7, contract.getSeqno();

           case 7:
            return seqno = _context18.sent, privateKey = new Uint8Array(Buffer.from(privateKeyHex, "hex")), 
            keypair = getKeypair(privateKey), _context18.next = 12, createTonConnectTransfer(seqno, contract, txInfo, null == keypair ? void 0 : keypair.secretKey);

           case 12:
            if (transfer = _context18.sent, cell = externalMessage(contract, seqno, transfer).toBoc({
              idx: !1
            }), boc = cell.toString("base64"), "sign" === action) {
              _context18.next = 22;
              break;
            }
            return _context18.next = 18, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_64__.IM)("TON", boc);

           case 18:
            if (result = _context18.sent, hash = null == result || null === (_result$data2 = result.data) || void 0 === _result$data2 || null === (_result$data2$data = _result$data2.data) || void 0 === _result$data2$data ? void 0 : _result$data2$data.hash_id, 
            "hash" !== action) {
              _context18.next = 22;
              break;
            }
            return _context18.abrupt("return", hash);

           case 22:
            return _context18.abrupt("return", boc);

           case 23:
           case "end":
            return _context18.stop();
          }
        }), _callee18);
      })));
      return function(_x43, _x44, _x45, _x46, _x47) {
        return _ref18.apply(this, arguments);
      };
    }(), signData = function(messages, privateKey) {
      var schema_crc = messages[0].schema_crc, cell = messages[0].cell, timestamp = Math.floor(Date.now() / 1e3), account = getKeypair(privateKey), prefix = Buffer.alloc(12);
      prefix.writeUint32BE(schema_crc, 0), prefix.writeBigInt64BE(BigInt(timestamp), 4);
      var signature = tweetnacl__WEBPACK_IMPORTED_MODULE_67___default().sign.detached(Buffer.concat([ prefix, _ton_ton__WEBPACK_IMPORTED_MODULE_61__.Cell.fromBase64(cell).hash() ]), account.secretKey);
      return {
        signature: tweetnacl_util__WEBPACK_IMPORTED_MODULE_71___default().encodeBase64(signature),
        timestamp: timestamp.toString()
      };
    };
  },
  349389: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => tron_rpc
    });
    __webpack_require__(207452), __webpack_require__(380115), __webpack_require__(752231), 
    __webpack_require__(687136), __webpack_require__(158649), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(906048), __webpack_require__(418665), 
    __webpack_require__(269193), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(194009), __webpack_require__(754989), __webpack_require__(714913), 
    __webpack_require__(301772), __webpack_require__(953746), __webpack_require__(520861), 
    __webpack_require__(571905), __webpack_require__(285213), __webpack_require__(97182), 
    __webpack_require__(512279), __webpack_require__(639302), __webpack_require__(770147), 
    __webpack_require__(866217), __webpack_require__(697966), __webpack_require__(735186), 
    __webpack_require__(135944), __webpack_require__(644787), __webpack_require__(950632), 
    __webpack_require__(552278), __webpack_require__(614245), __webpack_require__(252492), 
    __webpack_require__(193266), __webpack_require__(537192), __webpack_require__(237220), 
    __webpack_require__(482432), __webpack_require__(632483), __webpack_require__(536696), 
    __webpack_require__(458083), __webpack_require__(436148), __webpack_require__(66609), 
    __webpack_require__(219693), __webpack_require__(498741), __webpack_require__(80475), 
    __webpack_require__(259581), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(504895), __webpack_require__(564216), __webpack_require__(215195);
    var wallet_core = __webpack_require__(259159), gt_fetch = __webpack_require__(525735), gt_networks = __webpack_require__(660862), evm_rpc = __webpack_require__(911405), constants = __webpack_require__(153341), node_modules_long = __webpack_require__(274442), calculate = __webpack_require__(745788);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var TronApiConfig = function TronApiConfig() {
      !function(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
      }(this, TronApiConfig);
    };
    _defineProperty(TronApiConfig, "version", "/v1"), _defineProperty(TronApiConfig, "createAccount", "wallet/createaccount"), 
    _defineProperty(TronApiConfig, "getAccount", "wallet/getaccount"), _defineProperty(TronApiConfig, "getAccountBalance", "wallet/getaccountbalance"), 
    _defineProperty(TronApiConfig, "createTransaction", "wallet/createtransaction"), 
    _defineProperty(TronApiConfig, "broadcast", "wallet/broadcasthex"), _defineProperty(TronApiConfig, "broadcastRawTransaction", "wallet/broadcasttransaction"), 
    _defineProperty(TronApiConfig, "estimate", "wallet/triggerconstantcontract"), _defineProperty(TronApiConfig, "gasPrice", "wallet/getenergyprices"), 
    _defineProperty(TronApiConfig, "getblock", "wallet/getblock"), _defineProperty(TronApiConfig, "getBandwidthPrices", "wallet/getbandwidthprices"), 
    _defineProperty(TronApiConfig, "getAccountResource", "wallet/getaccountresource"), 
    _defineProperty(TronApiConfig, "getTransactionInfoById", "wallet/gettransactioninfobyid"), 
    _defineProperty(TronApiConfig, "getchainparameters", "wallet/getchainparameters");
    var TRON_ABI = [ {
      inputs: [ {
        internalType: "address",
        name: "_v2Router",
        type: "address"
      }, {
        internalType: "address",
        name: "_v1Foctroy",
        type: "address"
      }, {
        internalType: "address",
        name: "_psmUsdd",
        type: "address"
      }, {
        internalType: "address",
        name: "_v3Router",
        type: "address"
      }, {
        internalType: "address",
        name: "_wtrx",
        type: "address"
      } ],
      stateMutability: "nonpayable",
      type: "constructor"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "pool",
        type: "address"
      }, {
        indexed: !1,
        internalType: "address[]",
        name: "tokens",
        type: "address[]"
      } ],
      name: "AddPool",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "admin",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "pool",
        type: "address"
      }, {
        indexed: !1,
        internalType: "address[]",
        name: "tokens",
        type: "address[]"
      } ],
      name: "ChangePool",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "buyer",
        type: "address"
      }, {
        indexed: !0,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256"
      }, {
        indexed: !1,
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]"
      } ],
      name: "SwapExactETHForTokens",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "buyer",
        type: "address"
      }, {
        indexed: !0,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256"
      }, {
        indexed: !1,
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]"
      } ],
      name: "SwapExactTokensForTokens",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "originOwner",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      } ],
      name: "TransferAdminship",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "originOwner",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      } ],
      name: "TransferOwnership",
      type: "event"
    }, {
      stateMutability: "payable",
      type: "fallback"
    }, {
      inputs: [],
      name: "WTRX",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "string",
        name: "poolVersion",
        type: "string"
      }, {
        internalType: "address",
        name: "pool",
        type: "address"
      }, {
        internalType: "address[]",
        name: "tokens",
        type: "address[]"
      } ],
      name: "addPool",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "string",
        name: "poolVersion",
        type: "string"
      }, {
        internalType: "address",
        name: "pool",
        type: "address"
      }, {
        internalType: "address",
        name: "gemJoin",
        type: "address"
      }, {
        internalType: "address[]",
        name: "tokens",
        type: "address[]"
      } ],
      name: "addPsmPool",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "string",
        name: "poolVersion",
        type: "string"
      }, {
        internalType: "address",
        name: "pool",
        type: "address"
      }, {
        internalType: "address[]",
        name: "tokens",
        type: "address[]"
      } ],
      name: "addUsdcPool",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [],
      name: "admin",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "pool",
        type: "address"
      }, {
        internalType: "address[]",
        name: "tokens",
        type: "address[]"
      } ],
      name: "changePool",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "string",
        name: "poolVersion",
        type: "string"
      } ],
      name: "isPsmPool",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "string",
        name: "poolVersion",
        type: "string"
      } ],
      name: "isUsdcPool",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "owner",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "psmUsdd",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "token",
        type: "address"
      }, {
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      } ],
      name: "retrieve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address[]",
        name: "path",
        type: "address[]"
      }, {
        internalType: "string[]",
        name: "poolVersion",
        type: "string[]"
      }, {
        internalType: "uint256[]",
        name: "versionLen",
        type: "uint256[]"
      }, {
        internalType: "uint24[]",
        name: "fees",
        type: "uint24[]"
      }, {
        components: [ {
          internalType: "uint256",
          name: "amountIn",
          type: "uint256"
        }, {
          internalType: "uint256",
          name: "amountOutMin",
          type: "uint256"
        }, {
          internalType: "address",
          name: "to",
          type: "address"
        }, {
          internalType: "uint256",
          name: "deadline",
          type: "uint256"
        } ],
        internalType: "struct SmartExchangeRouter.SwapData",
        name: "data",
        type: "tuple"
      } ],
      name: "swapExactInput",
      outputs: [ {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]"
      } ],
      stateMutability: "payable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "newAdmin",
        type: "address"
      } ],
      name: "transferAdminship",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "newOwner",
        type: "address"
      } ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256"
      }, {
        internalType: "address",
        name: "recipient",
        type: "address"
      } ],
      name: "unwrapWTRX",
      outputs: [],
      stateMutability: "payable",
      type: "function"
    }, {
      inputs: [],
      name: "v1Factory",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "v2Router",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "v3Router",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      stateMutability: "payable",
      type: "receive"
    } ], gt_tokens = __webpack_require__(871219), dist = __webpack_require__(83353), crypto_lib_dist = __webpack_require__(431927), bignumber = __webpack_require__(760346), TronWeb_node = __webpack_require__(705730), TronWeb_node_default = __webpack_require__.n(TronWeb_node), Buffer = __webpack_require__(348287).Buffer;
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function tron_rpc_typeof(obj) {
      return tron_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, tron_rpc_typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, tron_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function tron_rpc_defineProperty(obj, key, value) {
      return (key = tron_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function tron_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== tron_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== tron_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === tron_rpc_typeof(key) ? key : String(key);
    }
    var TronRpc = function() {
      function TronRpc(wasm, totalNetworkDic, restUrl, evmRpc) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, TronRpc), tron_rpc_defineProperty(this, "wasm", void 0), tron_rpc_defineProperty(this, "totalNetworkDic", void 0), 
        tron_rpc_defineProperty(this, "restUrl", void 0), tron_rpc_defineProperty(this, "evmRpc", void 0), 
        this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, this.restUrl = restUrl, 
        this.evmRpc = evmRpc;
      }
      var Constructor, protoProps, staticProps, _init, _estimateTronGasCost, _getTronGasFee, _trx, _signSendTransaction, _signTronHardwareTransaction, _signTronTransaction, _getTronAccountResource, _getBlock, _createTronTransaction, _getSendTronGasFee, _getEnergyPrice, _getEnergyUsed, _getTronEnergyUsed, _getTronBandWidth, _getTronFee, _signSendTronTokenTransaction, _signSendTronTransaction, _getBandwidthPrices, _isAccountActive, _getTronTokenBalance, _getTronBalance, _fetchTronBalance;
      return Constructor = TronRpc, protoProps = [ {
        key: "fetchTronBalance",
        value: (_fetchTronBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee(sender) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(TronApiConfig.getAccount), _context.next = 3, 
              (0, gt_fetch.uJ)("POST", path, {}, {
                address: sender,
                visible: !0
              }, "data");

             case 3:
              return res = _context.sent, _context.abrupt("return", null == res ? void 0 : res.balance);

             case 5:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _fetchTronBalance.apply(this, arguments);
        })
      }, {
        key: "getTronBalance",
        value: (_getTronBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
          var sender, token, coinAddress, coinPrecision, res;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              if (sender = params.sender, token = params.token, coinAddress = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinAddress"), 
              coinPrecision = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TronRpc.networkKey, "token_decimal"), !(0, gt_tokens.hT)(coinAddress, TronRpc.networkKey)) {
                _context2.next = 15;
                break;
              }
              return _context2.next = 7, this.fetchTronBalance(sender);

             case 7:
              if (!(res = _context2.sent) || !coinPrecision) {
                _context2.next = 12;
                break;
              }
              return _context2.abrupt("return", {
                balance: (0, calculate.dataOperation)(res, Math.pow(10, parseInt(coinPrecision)), "/")
              });

             case 12:
              return _context2.abrupt("return", {
                balance: "0"
              });

             case 13:
              _context2.next = 18;
              break;

             case 15:
              return _context2.next = 17, this.getTronTokenBalance(token, sender);

             case 17:
              return _context2.abrupt("return", _context2.sent);

             case 18:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _getTronBalance.apply(this, arguments);
        })
      }, {
        key: "getTronTokenBalance",
        value: (_getTronTokenBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(token, sender) {
          var _this$evmRpc, result;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return _context3.next = 2, null === (_this$evmRpc = this.evmRpc) || void 0 === _this$evmRpc ? void 0 : _this$evmRpc.getCompatibilityTrxBalance({
                token,
                sender
              });

             case 2:
              return result = _context3.sent, _context3.abrupt("return", result);

             case 4:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3, _x4) {
          return _getTronTokenBalance.apply(this, arguments);
        })
      }, {
        key: "isAccountActive",
        value: (_isAccountActive = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(sender) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(TronApiConfig.getAccount), _context4.next = 3, 
              (0, gt_fetch.uJ)("POST", path, {}, {
                address: sender,
                visible: !0
              }, "data");

             case 3:
              return res = _context4.sent, _context4.abrupt("return", Boolean(res.balance));

             case 5:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x5) {
          return _isAccountActive.apply(this, arguments);
        })
      }, {
        key: "getBandwidthPrices",
        value: (_getBandwidthPrices = _asyncToGenerator(regeneratorRuntime.mark((function _callee5() {
          var path, res, prices, priceArray, currentPrice;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(TronApiConfig.getBandwidthPrices), 
              _context5.next = 3, (0, gt_fetch.uJ)("POST", path, {}, {}, "data");

             case 3:
              if (res = _context5.sent, !(prices = null == res ? void 0 : res.prices)) {
                _context5.next = 11;
                break;
              }
              return priceArray = prices.toString().split(","), currentPrice = priceArray[priceArray.length - 1].toString().split(":")[1], 
              _context5.abrupt("return", parseInt(currentPrice));

             case 11:
              throw new Error("Get Energy Price Error");

             case 12:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function() {
          return _getBandwidthPrices.apply(this, arguments);
        })
      }, {
        key: "signSendTronTransaction",
        value: (_signSendTronTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
          var privateKey, sender, receiver, amount, token, coinPrecision, sendAmount, _this$wasm, HexCoding, AnySigner, CoinType, coinName, coinType, blockInfo, block, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return privateKey = params.privateKey, sender = params.sender, receiver = params.receiver, 
              amount = params.amount, token = params.token, coinPrecision = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TronRpc.networkKey, "token_decimal"), sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              _this$wasm = this.wasm, HexCoding = _this$wasm.HexCoding, AnySigner = _this$wasm.AnySigner, 
              CoinType = _this$wasm.CoinType, coinName = constants.s8[TronRpc.networkKey], coinType = CoinType[coinName], 
              _context6.next = 8, this.getBlock();

             case 8:
              return blockInfo = _context6.sent, block = blockInfo.block_header.raw_data, input = wallet_core.TW.Tron.Proto.SigningInput.create({
                privateKey: HexCoding.decode(privateKey),
                transaction: wallet_core.TW.Tron.Proto.Transaction.create({
                  blockHeader: wallet_core.TW.Tron.Proto.BlockHeader.create({
                    txTrieRoot: HexCoding.decode(block.txTrieRoot.toString()),
                    parentHash: HexCoding.decode(block.parentHash.toString()),
                    number: node_modules_long.A.fromNumber(block.number),
                    witnessAddress: HexCoding.decode(block.witness_address.toString()),
                    timestamp: node_modules_long.A.fromNumber(block.timestamp),
                    version: block.version
                  }),
                  transfer: wallet_core.TW.Tron.Proto.TransferContract.create({
                    ownerAddress: sender,
                    toAddress: receiver,
                    amount: node_modules_long.A.fromString(sendAmount)
                  })
                })
              }), encoded = wallet_core.TW.Tron.Proto.SigningInput.encode(input).finish(), outputData = AnySigner.sign(encoded, coinType), 
              output = wallet_core.TW.Tron.Proto.SigningOutput.decode(outputData), _context6.abrupt("return", output.json);

             case 15:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x6) {
          return _signSendTronTransaction.apply(this, arguments);
        })
      }, {
        key: "encodeTRC20Transfer",
        value: function(receiverHex, sendAmount) {
          var _this$wasm2 = this.wasm, HexCoding = _this$wasm2.HexCoding, EthereumAbi = _this$wasm2.EthereumAbi, func = _this$wasm2.EthereumAbiFunction.createWithString("transfer");
          func.addParamAddress(HexCoding.decode(receiverHex), !1);
          var amountBytes = (0, calculate.hexToBytes)(parseInt(sendAmount).toString(16));
          return func.addParamUInt256(amountBytes, !1), EthereumAbi.encode(func);
        }
      }, {
        key: "signSendTronTokenTransaction",
        value: (_signSendTronTokenTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var _this$wasm3, HexCoding, AnySigner, CoinType, privateKey, sender, receiver, amount, token, gasFee, coinAddress, coinPrecision, sendAmount, coinName, coinType, blockInfo, block, network, networkPrecision, fee, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return _this$wasm3 = this.wasm, HexCoding = _this$wasm3.HexCoding, AnySigner = _this$wasm3.AnySigner, 
              CoinType = _this$wasm3.CoinType, privateKey = params.privateKey, sender = params.sender, 
              receiver = params.receiver, amount = params.amount, token = params.token, gasFee = params.gasFee, 
              coinAddress = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinAddress"), coinPrecision = (0, 
              gt_tokens.N8)(token, TronRpc.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, TronRpc.networkKey, "token_decimal"), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              coinName = constants.s8[TronRpc.networkKey], coinType = CoinType[coinName], _context7.next = 9, 
              this.getBlock();

             case 9:
              return blockInfo = _context7.sent, block = blockInfo.block_header.raw_data, network = this.totalNetworkDic[TronRpc.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, fee = (0, 
              calculate.dataOperation)(gasFee, Math.pow(10, parseInt(networkPrecision))), input = wallet_core.TW.Tron.Proto.SigningInput.create({
                privateKey: HexCoding.decode(privateKey),
                transaction: wallet_core.TW.Tron.Proto.Transaction.create({
                  feeLimit: node_modules_long.A.fromString(fee),
                  blockHeader: wallet_core.TW.Tron.Proto.BlockHeader.create({
                    txTrieRoot: HexCoding.decode(block.txTrieRoot.toString()),
                    parentHash: HexCoding.decode(block.parentHash.toString()),
                    number: node_modules_long.A.fromNumber(block.number),
                    witnessAddress: HexCoding.decode(block.witness_address.toString()),
                    timestamp: node_modules_long.A.fromNumber(block.timestamp),
                    version: block.version
                  }),
                  transferTrc20Contract: wallet_core.TW.Tron.Proto.TransferTRC20Contract.create({
                    ownerAddress: sender,
                    toAddress: receiver,
                    contractAddress: coinAddress,
                    amount: (0, calculate.hexToBytes)(parseInt(sendAmount).toString(16))
                  })
                })
              }), encoded = wallet_core.TW.Tron.Proto.SigningInput.encode(input).finish(), outputData = AnySigner.sign(encoded, coinType), 
              output = wallet_core.TW.Tron.Proto.SigningOutput.decode(outputData), _context7.abrupt("return", output.json);

             case 19:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x7) {
          return _signSendTronTokenTransaction.apply(this, arguments);
        })
      }, {
        key: "getTronFee",
        value: (_getTronFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(params) {
          var _yield$Promise$all, _yield$Promise$all2, price, gas;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return _context8.next = 2, Promise.all([ this.getEnergyPrice(), this.getTronEnergyUsed(params) ]);

             case 2:
              return _yield$Promise$all = _context8.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              price = _yield$Promise$all2[0], gas = _yield$Promise$all2[1], _context8.abrupt("return", (0, 
              calculate.dataOperation)(price, gas));

             case 7:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x8) {
          return _getTronFee.apply(this, arguments);
        })
      }, {
        key: "getTronBandWidth",
        value: (_getTronBandWidth = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(params) {
          var _transaction$raw_data, _JSON$parse, _JSON$parse$signature, _JSON$parse$signature2, sender, receiver, amount, token, _this$wasm4, HexCoding, CoinType, HDWallet, transaction, rawTransaction, wallet, privateKey, rawLength, res, signStr, sig, bytes;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              token = params.token, _this$wasm4 = this.wasm, HexCoding = _this$wasm4.HexCoding, 
              CoinType = _this$wasm4.CoinType, HDWallet = _this$wasm4.HDWallet, _context9.next = 4, 
              this.createTronTransaction(params);

             case 4:
              if (!(transaction = _context9.sent).Error) {
                _context9.next = 7;
                break;
              }
              throw new Error(transaction.Error);

             case 7:
              return rawTransaction = null == transaction || null === (_transaction$raw_data = transaction.raw_data_hex) || void 0 === _transaction$raw_data ? void 0 : _transaction$raw_data.toString(), 
              wallet = HDWallet.create(128, ""), privateKey = HexCoding.encode(wallet.getKeyForCoin(CoinType.tron).data()), 
              rawLength = HexCoding.decode(rawTransaction).length, _context9.next = 13, this.signSendTronTransaction({
                sender,
                receiver,
                privateKey,
                amount,
                token
              });

             case 13:
              return res = _context9.sent, signStr = null === (_JSON$parse = JSON.parse(res)) || void 0 === _JSON$parse || null === (_JSON$parse$signature = _JSON$parse.signature) || void 0 === _JSON$parse$signature || null === (_JSON$parse$signature2 = _JSON$parse$signature[0]) || void 0 === _JSON$parse$signature2 ? void 0 : _JSON$parse$signature2.toString(), 
              sig = HexCoding.decode(signStr).length, bytes = rawLength + sig + 64 + 5, _context9.abrupt("return", bytes);

             case 18:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x9) {
          return _getTronBandWidth.apply(this, arguments);
        })
      }, {
        key: "getTronEnergyUsed",
        value: (_getTronEnergyUsed = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(params) {
          var _res$energy_used, sender, coinAddress, data, _params$func, func, sendAmount, path, HexCoding, fetchParams, res, energyUsed;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return sender = params.sender, coinAddress = params.coinAddress, data = params.data, 
              _params$func = params.func, func = void 0 === _params$func ? "" : _params$func, 
              sendAmount = params.sendAmount, path = "".concat(this.restUrl, "/").concat(TronApiConfig.estimate), 
              HexCoding = this.wasm.HexCoding, fetchParams = "object" !== tron_rpc_typeof(data) ? {
                owner_address: sender,
                contract_address: coinAddress,
                function_selector: func,
                data,
                call_value: parseInt(sendAmount),
                fee_limit: "1000000000",
                visible: !0
              } : {
                owner_address: sender,
                contract_address: coinAddress,
                function_selector: func,
                parameter: HexCoding.encode(data).substring(10),
                fee_limit: 1e9,
                visible: !0
              }, _context10.next = 6, (0, gt_fetch.uJ)("POST", path, {}, fetchParams, "data");

             case 6:
              return res = _context10.sent, energyUsed = null == res || null === (_res$energy_used = res.energy_used) || void 0 === _res$energy_used ? void 0 : _res$energy_used.toString(), 
              _context10.abrupt("return", energyUsed);

             case 9:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x10) {
          return _getTronEnergyUsed.apply(this, arguments);
        })
      }, {
        key: "getEnergyUsed",
        value: (_getEnergyUsed = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(params) {
          var _res$energy_used2, sender, coinAddress, func, parameter, feeLimit, callValue, visible, path, res, energyUsed;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return sender = params.sender, coinAddress = params.coinAddress, func = params.func, 
              parameter = params.parameter, feeLimit = params.feeLimit, callValue = params.callValue, 
              visible = params.visible, path = "".concat(this.restUrl, "/").concat(TronApiConfig.estimate), 
              _context11.next = 4, (0, gt_fetch.uJ)("POST", path, {}, {
                owner_address: sender,
                contract_address: coinAddress,
                function_selector: func,
                parameter,
                fee_limit: feeLimit,
                call_value: callValue,
                visible
              }, "data");

             case 4:
              return res = _context11.sent, energyUsed = parseInt(null == res || null === (_res$energy_used2 = res.energy_used) || void 0 === _res$energy_used2 ? void 0 : _res$energy_used2.toString()), 
              _context11.abrupt("return", energyUsed);

             case 7:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x11) {
          return _getEnergyUsed.apply(this, arguments);
        })
      }, {
        key: "getEnergyPrice",
        value: (_getEnergyPrice = _asyncToGenerator(regeneratorRuntime.mark((function _callee12() {
          var url, res, prices, priceArray, currentPrice;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return url = "".concat(this.restUrl, "/").concat(TronApiConfig.gasPrice), _context12.next = 3, 
              (0, gt_fetch.uJ)("GET", url, {}, {}, "data");

             case 3:
              if (res = _context12.sent, !(prices = null == res ? void 0 : res.prices)) {
                _context12.next = 11;
                break;
              }
              return priceArray = prices.toString().split(","), currentPrice = priceArray[priceArray.length - 1].toString().split(":")[1], 
              _context12.abrupt("return", parseInt(currentPrice));

             case 11:
              throw "Get Energy Price Error";

             case 12:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function() {
          return _getEnergyPrice.apply(this, arguments);
        })
      }, {
        key: "getSendTronGasFee",
        value: (_getSendTronGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(params) {
          var _token$network, _token$network$TronRp, sender, receiver, token, amount, data, coinAddress, coinPrecision, network, networkPrecision, sendAmount, bandWidthPromise, bandWidthPricePromise, resultArr, bandWidth, bandWidthPrice, gasFee, _this$evmRpc2, _receiverHex, receiverHex, sendData, functionSelector, fee, _gasFee;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              if (sender = params.sender, receiver = params.receiver, token = params.token, amount = params.amount, 
              data = params.data, coinAddress = null == token || null === (_token$network = token.network) || void 0 === _token$network || null === (_token$network$TronRp = _token$network[TronRpc.networkKey]) || void 0 === _token$network$TronRp ? void 0 : _token$network$TronRp.coinAddress, 
              coinPrecision = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TronRpc.networkKey, "token_decimal"), network = this.totalNetworkDic[TronRpc.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, sendAmount = (0, 
              calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), !(0, gt_tokens.hT)(coinAddress, TronRpc.networkKey)) {
                _context13.next = 25;
                break;
              }
              return _context13.prev = 8, bandWidthPromise = this.getTronBandWidth({
                amount,
                sender,
                receiver,
                token
              }), bandWidthPricePromise = this.getBandwidthPrices(), _context13.next = 13, Promise.all([ bandWidthPromise, bandWidthPricePromise ]);

             case 13:
              return resultArr = _context13.sent, bandWidth = resultArr[0], bandWidthPrice = resultArr[1], 
              gasFee = (0, calculate.dataOperation)((0, calculate.dataOperation)(bandWidth, bandWidthPrice), Math.pow(10, Number(networkPrecision)), "/"), 
              _context13.abrupt("return", {
                gasFee
              });

             case 20:
              return _context13.prev = 20, _context13.t0 = _context13.catch(8), _context13.abrupt("return", {
                gasFee: "0",
                errorMsg: null === _context13.t0 || void 0 === _context13.t0 ? void 0 : _context13.t0.toString()
              });

             case 23:
              _context13.next = 34;
              break;

             case 25:
              return receiverHex = null === (_this$evmRpc2 = this.evmRpc) || void 0 === _this$evmRpc2 ? void 0 : _this$evmRpc2.tron2HexAddress(coinAddress), 
              null !== (_receiverHex = receiverHex) && void 0 !== _receiverHex && _receiverHex.startsWith("41") && (receiverHex = receiverHex.substring(2)), 
              sendData = data || this.encodeTRC20Transfer(receiverHex || "", sendAmount), functionSelector = data ? "" : "transfer(address,uint256)", 
              _context13.next = 31, this.getTronFee({
                coinAddress,
                sender,
                func: functionSelector,
                data: sendData,
                sendAmount
              });

             case 31:
              return fee = _context13.sent, _gasFee = (0, calculate.dataOperation)(fee, Math.pow(10, Number(networkPrecision)), "/"), 
              _context13.abrupt("return", {
                gasFee: _gasFee
              });

             case 34:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this, [ [ 8, 20 ] ]);
        }))), function(_x12) {
          return _getSendTronGasFee.apply(this, arguments);
        })
      }, {
        key: "createTronTransaction",
        value: (_createTronTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(params) {
          var sender, receiver, amount, token, coinPrecision, sendAmount, path, res;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              token = params.token, coinPrecision = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TronRpc.networkKey, "token_decimal"), sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              path = "".concat(this.restUrl, "/").concat(TronApiConfig.createTransaction), _context14.next = 6, 
              (0, gt_fetch.uJ)("POST", path, {}, {
                to_address: receiver,
                owner_address: sender,
                amount: parseInt(sendAmount),
                visible: !0
              }, "data");

             case 6:
              return res = _context14.sent, _context14.abrupt("return", res);

             case 8:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x13) {
          return _createTronTransaction.apply(this, arguments);
        })
      }, {
        key: "getBlock",
        value: (_getBlock = _asyncToGenerator(regeneratorRuntime.mark((function _callee15() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(TronApiConfig.getblock), _context15.next = 3, 
              (0, gt_fetch.uJ)("POST", path, {}, {}, "data");

             case 3:
              return res = _context15.sent, _context15.abrupt("return", res);

             case 5:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this);
        }))), function() {
          return _getBlock.apply(this, arguments);
        })
      }, {
        key: "getTronAccountResource",
        value: (_getTronAccountResource = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(address, returnRaw) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return path = "".concat(this.restUrl, "/").concat(TronApiConfig.getAccountResource), 
              _context16.next = 3, (0, gt_fetch.uJ)("POST", path, {}, {
                address,
                visible: !0
              }, "data");

             case 3:
              if (res = _context16.sent, !returnRaw) {
                _context16.next = 6;
                break;
              }
              return _context16.abrupt("return", res);

             case 6:
              return _context16.abrupt("return", (null == res ? void 0 : res.freeNetLimit) - (null == res ? void 0 : res.freeNetUsed));

             case 7:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this);
        }))), function(_x14, _x15) {
          return _getTronAccountResource.apply(this, arguments);
        })
      }, {
        key: "signTronTransaction",
        value: (_signTronTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(params) {
          var _this$evmRpc3, _toHexAddress, coinAddress, privateKey, gasFee, token, sender, sendAmount, data, tokenAmount, tokenId, _this$wasm5, HexCoding, AnySigner, CoinType, coinName, coinType, blockInfo, block, toHexAddress, coinPrecision, fee, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return coinAddress = params.coinAddress, privateKey = params.privateKey, gasFee = params.gasFee, 
              token = params.token, sender = params.sender, sendAmount = params.sendAmount, data = params.data, 
              tokenAmount = params.tokenAmount, tokenId = params.tokenId, _this$wasm5 = this.wasm, 
              HexCoding = _this$wasm5.HexCoding, AnySigner = _this$wasm5.AnySigner, CoinType = _this$wasm5.CoinType, 
              coinName = constants.s8[TronRpc.networkKey], coinType = CoinType[coinName], _context17.next = 6, 
              this.getBlock();

             case 6:
              return blockInfo = _context17.sent, block = blockInfo.block_header.raw_data, toHexAddress = null === (_this$evmRpc3 = this.evmRpc) || void 0 === _this$evmRpc3 ? void 0 : _this$evmRpc3.tron2HexAddress(coinAddress), 
              null !== (_toHexAddress = toHexAddress) && void 0 !== _toHexAddress && _toHexAddress.startsWith("41") && (toHexAddress = toHexAddress.substring(2)), 
              coinPrecision = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TronRpc.networkKey, "token_decimal"), fee = (0, calculate.dataOperation)(gasFee, Math.pow(10, parseInt(coinPrecision))), 
              input = wallet_core.TW.Tron.Proto.SigningInput.create({
                privateKey: HexCoding.decode(privateKey),
                transaction: wallet_core.TW.Tron.Proto.Transaction.create({
                  feeLimit: node_modules_long.A.fromString(fee),
                  blockHeader: wallet_core.TW.Tron.Proto.BlockHeader.create({
                    txTrieRoot: HexCoding.decode(block.txTrieRoot.toString()),
                    parentHash: HexCoding.decode(block.parentHash.toString()),
                    number: node_modules_long.A.fromNumber(block.number),
                    witnessAddress: HexCoding.decode(block.witness_address.toString()),
                    timestamp: node_modules_long.A.fromNumber(block.timestamp),
                    version: block.version
                  }),
                  triggerSmartContract: wallet_core.TW.Tron.Proto.TriggerSmartContract.create({
                    ownerAddress: sender,
                    contractAddress: coinAddress,
                    callValue: node_modules_long.A.fromString(sendAmount),
                    data: (0, calculate.hexToBytes)(data.substring(2)),
                    callTokenValue: tokenAmount ? node_modules_long.A.fromString(tokenAmount) : null,
                    tokenId: tokenId ? node_modules_long.A.fromString(tokenId) : null
                  })
                })
              }), encoded = wallet_core.TW.Tron.Proto.SigningInput.encode(input).finish(), outputData = AnySigner.sign(encoded, coinType), 
              output = wallet_core.TW.Tron.Proto.SigningOutput.decode(outputData), _context17.abrupt("return", output.json);

             case 17:
             case "end":
              return _context17.stop();
            }
          }), _callee17, this);
        }))), function(_x16) {
          return _signTronTransaction.apply(this, arguments);
        })
      }, {
        key: "signTronHardwareTransaction",
        value: (_signTronHardwareTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee18(params) {
          var _hardware$device, _hardware$device2, amount, token, gasFee, sender, receiver, hardware, coinAddress, coinSimpleName, coinPrecision, coinIsMain, sendAmount, trxWallet, blockInfo, block, network, networkPrecision, fee, latestBlockNumber, latestBlockHash, refBlockBytes, toSignData, unSignedRaw, signedRsv, rawBytes, msgHash, rs, r, s, signature, v, signatureBytes, raw;
          return regeneratorRuntime.wrap((function(_context18) {
            for (;;) switch (_context18.prev = _context18.next) {
             case 0:
              return amount = params.amount, token = params.token, gasFee = params.gasFee, sender = params.sender, 
              receiver = params.receiver, hardware = params.hardware, coinAddress = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinAddress"), 
              coinSimpleName = null == token ? void 0 : token.coinSimpleName, coinPrecision = (0, 
              gt_tokens.N8)(token, TronRpc.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, TronRpc.networkKey, "token_decimal"), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress, TronRpc.networkKey), sendAmount = (0, 
              calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), trxWallet = new dist.TrxWallet, 
              _context18.next = 9, this.getBlock();

             case 9:
              return blockInfo = _context18.sent, block = blockInfo.block_header.raw_data, network = this.totalNetworkDic[TronRpc.networkKey], 
              networkPrecision = null == network ? void 0 : network.networkPrecision, fee = (0, 
              calculate.dataOperation)(gasFee, Math.pow(10, parseInt(networkPrecision))), latestBlockNumber = new crypto_lib_dist.BN(block.number), 
              latestBlockHash = crypto_lib_dist.base.fromHex(blockInfo.blockID), refBlockBytes = latestBlockNumber.toBuffer("be", 8), 
              toSignData = coinIsMain ? {
                fromAddress: sender,
                toAddress: receiver,
                amount: sendAmount,
                refBlockBytes: crypto_lib_dist.base.toHex(refBlockBytes.slice(6, 8)),
                refBlockHash: crypto_lib_dist.base.toHex(latestBlockHash.slice(8, 16)),
                expiration: (0, bignumber.g)(block.timestamp).plus(36e5).toNumber(),
                timeStamp: block.timestamp
              } : {
                fromAddress: sender,
                toAddress: receiver,
                refBlockBytes: crypto_lib_dist.base.toHex(refBlockBytes.slice(6, 8)),
                refBlockHash: crypto_lib_dist.base.toHex(latestBlockHash.slice(8, 16)),
                expiration: (0, bignumber.g)(block.timestamp).plus(36e5).toNumber(),
                timeStamp: block.timestamp,
                amount: sendAmount,
                feeLimit: parseInt(fee),
                contractAddress: coinAddress
              }, _context18.next = 20, trxWallet.getHardWareRawTransaction({
                privateKey: "",
                data: {
                  type: coinIsMain ? "transfer" : "tokenTransfer",
                  data: toSignData
                }
              });

             case 20:
              return unSignedRaw = _context18.sent, _context18.next = 23, null == hardware || null === (_hardware$device = hardware.device) || void 0 === _hardware$device ? void 0 : _hardware$device.signTxRaw(TronRpc.networkKey, unSignedRaw.raw, {
                t: [ {
                  a: coinIsMain ? coinAddress : "",
                  s: coinSimpleName,
                  d: Number(coinPrecision),
                  t: 0
                } ],
                c: [ {
                  t: 0,
                  ca: TronRpc.networkKey,
                  sy: network.networkSimpleSymbol,
                  d: Number(networkPrecision),
                  ch: network.networkName
                } ]
              });

             case 23:
              if (_context18.sent.sign) {
                _context18.next = 26;
                break;
              }
              throw new Error("user cancel");

             case 26:
              return _context18.next = 28, null == hardware || null === (_hardware$device2 = hardware.device) || void 0 === _hardware$device2 ? void 0 : _hardware$device2.request(null == hardware ? void 0 : hardware.path, 0, "00");

             case 28:
              return signedRsv = _context18.sent, rawBytes = crypto_lib_dist.base.fromHex(unSignedRaw.raw), 
              msgHash = crypto_lib_dist.base.sha256(new Uint8Array(rawBytes)), rs = signedRsv.substring(2), 
              r = rs.substring(0, 64), s = rs.substring(64, 128), signature = crypto_lib_dist.base.fromHex("".concat(r).concat(s)), 
              v = crypto_lib_dist.signUtil.secp256k1.getV(Buffer.from(msgHash), r, s, crypto_lib_dist.base.fromHex(hardware.publicKey)) + 27, 
              signatureBytes = Buffer.concat([ Uint8Array.from(signature), Uint8Array.of(v) ]).toString("hex"), 
              raw = (0, dist.getHardwareTransaction)(unSignedRaw.raw, signatureBytes), _context18.abrupt("return", "0x".concat(raw));

             case 39:
             case "end":
              return _context18.stop();
            }
          }), _callee18, this);
        }))), function(_x17) {
          return _signTronHardwareTransaction.apply(this, arguments);
        })
      }, {
        key: "signSendTransaction",
        value: (_signSendTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee19(params) {
          var hardware, token, coinAddress, coinIsMain, signed;
          return regeneratorRuntime.wrap((function(_context19) {
            for (;;) switch (_context19.prev = _context19.next) {
             case 0:
              if (hardware = params.hardware, token = params.token, coinAddress = (0, gt_tokens.N8)(token, TronRpc.networkKey, "coinAddress"), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress, TronRpc.networkKey), signed = "", !hardware) {
                _context19.next = 10;
                break;
              }
              return _context19.next = 7, this.signTronHardwareTransaction(params);

             case 7:
              signed = _context19.sent, _context19.next = 19;
              break;

             case 10:
              if (!coinIsMain) {
                _context19.next = 16;
                break;
              }
              return _context19.next = 13, this.signSendTronTransaction(params);

             case 13:
              signed = _context19.sent, _context19.next = 19;
              break;

             case 16:
              return _context19.next = 18, this.signSendTronTokenTransaction(params);

             case 18:
              signed = _context19.sent;

             case 19:
              return _context19.abrupt("return", {
                tx: signed.indexOf("{") > -1 ? JSON.parse(signed) : signed,
                rpcUrl: this.restUrl
              });

             case 20:
             case "end":
              return _context19.stop();
            }
          }), _callee19, this);
        }))), function(_x18) {
          return _signSendTransaction.apply(this, arguments);
        })
      }, {
        key: "trx",
        value: (_trx = _asyncToGenerator(regeneratorRuntime.mark((function _callee20(trxParams) {
          var _tronWeb$trx$methodNa, _tronWeb$trx, methodName, params, rpcUrl, privateKey, tronWeb, i, res;
          return regeneratorRuntime.wrap((function(_context20) {
            for (;;) switch (_context20.prev = _context20.next) {
             case 0:
              for (methodName = trxParams.methodName, params = trxParams.params, rpcUrl = trxParams.rpcUrl, 
              privateKey = trxParams.privateKey, tronWeb = new (TronWeb_node_default())({
                fullHost: rpcUrl,
                privateKey
              }), i = (null == params ? void 0 : params.length) - 1; i >= 0; i--) void 0 !== params[i] && null !== params[i] || (params.pop(), 
              i--);
              return _context20.next = 5, null === (_tronWeb$trx$methodNa = (_tronWeb$trx = tronWeb.trx)[methodName]) || void 0 === _tronWeb$trx$methodNa ? void 0 : _tronWeb$trx$methodNa.call.apply(_tronWeb$trx$methodNa, [ _tronWeb$trx ].concat(_toConsumableArray(params)));

             case 5:
              return res = _context20.sent, _context20.abrupt("return", res);

             case 7:
             case "end":
              return _context20.stop();
            }
          }), _callee20);
        }))), function(_x19) {
          return _trx.apply(this, arguments);
        })
      }, {
        key: "getTronMethod",
        value: function(tronWeb, methodHash) {
          for (var methodInputs, methodName = "", methodFullName = "", i = 0; i < TRON_ABI.length; i++) {
            var method = TRON_ABI[i];
            if ("function" === method.type) {
              var _method$inputs;
              methodFullName = method.name + "(" + (null === (_method$inputs = method.inputs) || void 0 === _method$inputs ? void 0 : _method$inputs.map((function(input) {
                var _input$components;
                return "tuple" === (null == input ? void 0 : input.type) ? "(" + (null == input || null === (_input$components = input.components) || void 0 === _input$components ? void 0 : _input$components.map((function(item) {
                  return item.type;
                })).join(",")) + ")" : null == input ? void 0 : input.type;
              })).join(",")) + ")";
              var signature = tronWeb.sha3(methodFullName);
              if (null != signature && signature.startsWith("0x".concat(methodHash))) {
                methodName = method.name || "", methodInputs = method.inputs || "";
                break;
              }
            }
          }
          return {
            methodName,
            methodInputs,
            methodFullName
          };
        }
      }, {
        key: "getTronGasFee",
        value: (_getTronGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee21(params) {
          var tronWeb, transactionType, contractData, feeLimit, bandwidthCost, _contractData$contrac, methodSignature, _this$getTronMethod, methodFullName, _params$, _params$$raw_data_hex, txSize, energyPrice;
          return regeneratorRuntime.wrap((function(_context21) {
            for (;;) switch (_context21.prev = _context21.next) {
             case 0:
              if (tronWeb = new (TronWeb_node_default())({
                fullHost: "https://api.trongrid.io"
              }), transactionType = params[0].raw_data.contract[0].type, contractData = params[0].raw_data.contract[0].parameter.value, 
              feeLimit = params[0].raw_data.fee_limit, bandwidthCost = 0, "TriggerSmartContract" !== transactionType) {
                _context21.next = 13;
                break;
              }
              return methodSignature = contractData.data.substring(0, 8), _this$getTronMethod = this.getTronMethod(tronWeb, methodSignature), 
              methodFullName = _this$getTronMethod.methodFullName, _context21.next = 10, this.getEnergyUsed({
                coinAddress: null == contractData ? void 0 : contractData.contract_address,
                sender: null == contractData ? void 0 : contractData.owner_address,
                func: methodFullName,
                parameter: contractData.data.substring(8),
                feeLimit,
                callValue: contractData.call_value,
                visible: null == contractData || null === (_contractData$contrac = contractData.contract_address) || void 0 === _contractData$contrac ? void 0 : _contractData$contrac.startsWith("T")
              });

             case 10:
              bandwidthCost = _context21.sent, _context21.next = 14;
              break;

             case 13:
              "TransferContract" === transactionType && (txSize = null == params || null === (_params$ = params[0]) || void 0 === _params$ || null === (_params$$raw_data_hex = _params$.raw_data_hex) || void 0 === _params$$raw_data_hex ? void 0 : _params$$raw_data_hex.length, 
              bandwidthCost = txSize);

             case 14:
              return _context21.next = 16, this.getEnergyPrice();

             case 16:
              return energyPrice = _context21.sent, _context21.abrupt("return", (0, calculate.dataOperation)(energyPrice, bandwidthCost));

             case 18:
             case "end":
              return _context21.stop();
            }
          }), _callee21, this);
        }))), function(_x20) {
          return _getTronGasFee.apply(this, arguments);
        })
      }, {
        key: "estimateTronGasCost",
        value: (_estimateTronGasCost = _asyncToGenerator(regeneratorRuntime.mark((function _callee22(params) {
          var _resource$EnergyLimit, fromAddress, contractAddress, data, amount, tronWeb, owner_address_hex, contract_address_hex, path, fetchParams, _yield$Promise$all3, _yield$Promise$all4, simulate, resource, energyPrice, energyUsed, txBytes, freeBandwidth, availableBandwidth, freeEnergy, realBandwidth, energy, realEnergy, feeSun;
          return regeneratorRuntime.wrap((function(_context22) {
            for (;;) switch (_context22.prev = _context22.next) {
             case 0:
              return fromAddress = params.fromAddress, contractAddress = params.contractAddress, 
              data = params.data, amount = params.amount, tronWeb = new (TronWeb_node_default())({
                fullHost: this.restUrl
              }), owner_address_hex = tronWeb.address.toHex(fromAddress), contract_address_hex = tronWeb.address.toHex(contractAddress), 
              path = "".concat(this.restUrl, "/").concat(TronApiConfig.estimate), fetchParams = {
                owner_address: owner_address_hex,
                contract_address: contract_address_hex,
                data,
                visible: !1
              }, _context22.next = 8, Promise.all([ (0, gt_fetch.uJ)("POST", path, {}, fetchParams, "data"), this.getTronAccountResource(fromAddress, !0), this.getEnergyPrice(), this.getTronEnergyUsed({
                coinAddress: contractAddress,
                sender: fromAddress,
                func: "",
                data,
                sendAmount: amount
              }) ]);

             case 8:
              return _yield$Promise$all3 = _context22.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 4), 
              simulate = _yield$Promise$all4[0], resource = _yield$Promise$all4[1], energyPrice = _yield$Promise$all4[2], 
              energyUsed = _yield$Promise$all4[3], txBytes = JSON.stringify(simulate.transaction).length, 
              freeBandwidth = resource.freeNetLimit || 0, availableBandwidth = resource.NetLimit || 0, 
              freeEnergy = null !== (_resource$EnergyLimit = resource.EnergyLimit) && void 0 !== _resource$EnergyLimit ? _resource$EnergyLimit : 0, 
              realBandwidth = Math.max(txBytes - freeBandwidth - availableBandwidth, 0), energy = Number((0, 
              calculate.dataOperation)(energyUsed, freeEnergy, "-")), realEnergy = Math.max(energy, 0), 
              feeSun = (0, calculate.dataOperation)((0, calculate.dataOperation)(realEnergy, energyPrice), (0, 
              calculate.dataOperation)(energyPrice, realBandwidth), "+"), _context22.abrupt("return", {
                gas: feeSun,
                signGas: (0, calculate.dataOperation)(energyUsed, realBandwidth)
              });

             case 23:
             case "end":
              return _context22.stop();
            }
          }), _callee22, this);
        }))), function(_x21) {
          return _estimateTronGasCost.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee23(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var _ref, _ref$url, restUrl, wasm, evmRpc;
          return regeneratorRuntime.wrap((function(_context23) {
            for (;;) switch (_context23.prev = _context23.next) {
             case 0:
              return _ref = (0, gt_networks.nD)(TronRpc.networkKey, totalNetworkDic) || {}, _ref$url = _ref.url, 
              restUrl = void 0 === _ref$url ? "" : _ref$url, _context23.next = 3, (0, wallet_core.t)();

             case 3:
              if (wasm = _context23.sent, !rpcUrls) {
                _context23.next = 8;
                break;
              }
              return _context23.next = 7, evm_rpc.A.init(totalNetworkDic, TronRpc.networkKey, rpcUrls, lastGetSuccessRpcTime);

             case 7:
              evmRpc = _context23.sent;

             case 8:
              return _context23.abrupt("return", new TronRpc(wasm, totalNetworkDic, restUrl, evmRpc));

             case 9:
             case "end":
              return _context23.stop();
            }
          }), _callee23);
        }))), function(_x22, _x23, _x24) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), TronRpc;
    }();
    tron_rpc_defineProperty(TronRpc, "networkKey", "TRX");
    const tron_rpc = TronRpc;
  },
  362088: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      VF: () => encryptWithPBKDF2,
      gm: () => md5Key,
      jS: () => setLockKey,
      yv: () => encryptData
    });
    __webpack_require__(207452), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(80475), __webpack_require__(259581), 
    __webpack_require__(687136), __webpack_require__(158649), __webpack_require__(714913), 
    __webpack_require__(269193);
    var _md5__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(256724), crypto_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(921396), crypto_js__WEBPACK_IMPORTED_MODULE_11___default = __webpack_require__.n(crypto_js__WEBPACK_IMPORTED_MODULE_11__), _metamask_browser_passworder__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(464419);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    var md5Key = function() {
      var key = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", index = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
      return (0, _md5__WEBPACK_IMPORTED_MODULE_10__.F)(key, index).substring(0, 16);
    }, setLockKey = function() {
      var key = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", index = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
      return (0, _md5__WEBPACK_IMPORTED_MODULE_10__.F)((0, _md5__WEBPACK_IMPORTED_MODULE_10__.F)(key, index).substring(0, 16), index);
    }, cryptoMd5Key = function() {
      var key = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", index = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
      return crypto_js__WEBPACK_IMPORTED_MODULE_11___default().enc.Utf8.parse((0, _md5__WEBPACK_IMPORTED_MODULE_10__.F)(key, index).substring(0, 16));
    }, encryptData = function(word, key) {
      var md5Key = arguments.length > 2 && void 0 !== arguments[2] && arguments[2] ? crypto_js__WEBPACK_IMPORTED_MODULE_11___default().enc.Utf8.parse(key) : cryptoMd5Key(key);
      return crypto_js__WEBPACK_IMPORTED_MODULE_11___default().AES.encrypt(word, md5Key, {
        mode: crypto_js__WEBPACK_IMPORTED_MODULE_11___default().mode.ECB,
        padding: crypto_js__WEBPACK_IMPORTED_MODULE_11___default().pad.Pkcs7
      }).toString();
    }, encryptWithPBKDF2 = function() {
      var fn, _ref = (fn = regeneratorRuntime.mark((function _callee(password, object, salt) {
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.abrupt("return", (0, _metamask_browser_passworder__WEBPACK_IMPORTED_MODULE_12__.lJ)(password, object, salt, {
              algorithm: "PBKDF2",
              params: {
                iterations: 6e5
              }
            }));

           case 1:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })), function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      });
      return function(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();
  },
  390357: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Fd: () => keyPermissionsByWalletIdOrigin,
      Wh: () => assetsToValue,
      xB: () => keyPermissionsByChainIdAddressOrigin
    });
    __webpack_require__(207452), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(718636), __webpack_require__(418665), __webpack_require__(505086), 
    __webpack_require__(445708), __webpack_require__(929979), __webpack_require__(788198), 
    __webpack_require__(727918), __webpack_require__(868900), __webpack_require__(670708), 
    __webpack_require__(532657), __webpack_require__(321452), __webpack_require__(36546), 
    __webpack_require__(291749), __webpack_require__(466754), __webpack_require__(836299), 
    __webpack_require__(143643), __webpack_require__(613053), __webpack_require__(911029), 
    __webpack_require__(569155), __webpack_require__(223070), __webpack_require__(313696), 
    __webpack_require__(14602), __webpack_require__(259581), __webpack_require__(700017), 
    __webpack_require__(714913), __webpack_require__(301772), __webpack_require__(953746), 
    __webpack_require__(520861), __webpack_require__(571905), __webpack_require__(285213), 
    __webpack_require__(97182), __webpack_require__(512279), __webpack_require__(639302), 
    __webpack_require__(770147), __webpack_require__(866217), __webpack_require__(697966), 
    __webpack_require__(735186), __webpack_require__(135944), __webpack_require__(644787), 
    __webpack_require__(950632), __webpack_require__(552278), __webpack_require__(614245), 
    __webpack_require__(252492), __webpack_require__(193266), __webpack_require__(537192), 
    __webpack_require__(237220), __webpack_require__(482432), __webpack_require__(632483), 
    __webpack_require__(536696), __webpack_require__(458083), __webpack_require__(380115), 
    __webpack_require__(447746), __webpack_require__(43148), __webpack_require__(269193), 
    __webpack_require__(504895), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(215195), __webpack_require__(498741);
    var _okxweb3_coin_cardano__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(824916), _popup_lib_tool_const__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(498050), Buffer = __webpack_require__(348287).Buffer;
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    var keyPermissionsByChainIdAddressOrigin = function(permissions, permissionMap) {
      var map = null != permissionMap ? permissionMap : {
        evm: {}
      };
      return permissions.forEach((function(permission) {
        var _map$evm, _permission$chainID, _map$evm$_permission$, _map$evm$permission$c, _permission$accountAd, _map$evm$permission$c2, _map$evm$permission$c3, _permission$origin, _map$evm$permission$c4;
        null !== (_map$evm$_permission$ = (_map$evm = map.evm)[_permission$chainID = permission.chainID]) && void 0 !== _map$evm$_permission$ || (_map$evm[_permission$chainID] = {}), 
        null !== (_map$evm$permission$c2 = (_map$evm$permission$c = map.evm[permission.chainID])[_permission$accountAd = permission.accountAddress]) && void 0 !== _map$evm$permission$c2 || (_map$evm$permission$c[_permission$accountAd] = {}), 
        null !== (_map$evm$permission$c4 = (_map$evm$permission$c3 = map.evm[permission.chainID][permission.accountAddress])[_permission$origin = permission.origin]) && void 0 !== _map$evm$permission$c4 || (_map$evm$permission$c3[_permission$origin] = {}), 
        void 0 !== permission.walletCreateType && (map.evm[permission.chainID][permission.accountAddress][permission.origin][permission.walletCreateType] = permission);
      })), map;
    }, assetsToValue = function() {
      var fn, _ref = (fn = regeneratorRuntime.mark((function _callee(assets) {
        var Cardano, multiAsset, lovelace, value;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, _okxweb3_coin_cardano__WEBPACK_IMPORTED_MODULE_63__.Loader.load();

           case 2:
            if (_okxweb3_coin_cardano__WEBPACK_IMPORTED_MODULE_63__.Loader.Cardano) {
              _context.next = 4;
              break;
            }
            return _context.abrupt("return");

           case 4:
            return Cardano = _okxweb3_coin_cardano__WEBPACK_IMPORTED_MODULE_63__.Loader.Cardano, 
            multiAsset = Cardano.MultiAsset.new(), lovelace = assets.find((function(asset) {
              return "lovelace" === asset.unit;
            })), _toConsumableArray(new Set(assets.filter((function(asset) {
              return "lovelace" !== asset.unit;
            })).map((function(asset) {
              return asset.unit.slice(0, 56);
            })))).forEach((function(policy) {
              var policyAssets = assets.filter((function(asset) {
                return asset.unit.slice(0, 56) === policy;
              }));
              if (Cardano) {
                var assetsValue = Cardano.Assets.new();
                policyAssets.forEach((function(asset) {
                  asset.unit.length > 56 && assetsValue.insert(Cardano.AssetName.new(new Uint8Array(Buffer.from(asset.unit.slice(56), "hex"))), Cardano.BigNum.from_str("".concat(asset.quantity)));
                })), multiAsset.insert(Cardano.ScriptHash.from_bytes(new Uint8Array(Buffer.from(policy, "hex"))), assetsValue);
              }
            })), value = Cardano.Value.new(Cardano.BigNum.from_str(lovelace ? "".concat(lovelace.quantity) : "0")), 
            (assets.length > 1 || !lovelace) && value.set_multiasset(multiAsset), _context.abrupt("return", value);

           case 12:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })), function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      });
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), keyPermissionsByWalletIdOrigin = function(permissions, permissionMap) {
      var map = null != permissionMap ? permissionMap : {};
      return permissions.forEach((function(permission) {
        var _permission$response;
        if (null != permission && null !== (_permission$response = permission.response) && void 0 !== _permission$response && _permission$response.walletId) {
          var _permission$response2, _permission$response3, _permission$response4, _permission$response5, _walletId2, _map$_walletId, _walletId = null === (_permission$response2 = permission.response) || void 0 === _permission$response2 ? void 0 : _permission$response2.walletId;
          if (null !== (_permission$response3 = permission.response) && void 0 !== _permission$response3 && _permission$response3.walletCreateType && 0 !== (null === (_permission$response4 = permission.response) || void 0 === _permission$response4 ? void 0 : _permission$response4.walletCreateType) && 1 !== (null === (_permission$response5 = permission.response) || void 0 === _permission$response5 ? void 0 : _permission$response5.walletCreateType)) {
            var _permission$response6, _permission$response7, _accountNetworkArr$;
            _walletId = "".concat(_walletId, "**").concat(null === (_permission$response6 = permission.response) || void 0 === _permission$response6 ? void 0 : _permission$response6.walletCreateType);
            var accountNetworkArr = null === (_permission$response7 = permission.response) || void 0 === _permission$response7 ? void 0 : _permission$response7.accountNetworkArr, network = null == accountNetworkArr || null === (_accountNetworkArr$ = accountNetworkArr[0]) || void 0 === _accountNetworkArr$ ? void 0 : _accountNetworkArr$.network;
            if (network && (_walletId = "".concat(_walletId, "**").concat(network), null !== _popup_lib_tool_const__WEBPACK_IMPORTED_MODULE_64__.MORE_ADDRESS_CHAIN && void 0 !== _popup_lib_tool_const__WEBPACK_IMPORTED_MODULE_64__.MORE_ADDRESS_CHAIN && _popup_lib_tool_const__WEBPACK_IMPORTED_MODULE_64__.MORE_ADDRESS_CHAIN.includes(network))) {
              var _accountNetworkArr$fi, _address = null == accountNetworkArr || null === (_accountNetworkArr$fi = accountNetworkArr.find((function(item) {
                return (null == item ? void 0 : item.accountFormat) === _popup_lib_tool_const__WEBPACK_IMPORTED_MODULE_64__.GATE_CONNECT_UTXO_TYPE;
              }))) || void 0 === _accountNetworkArr$fi ? void 0 : _accountNetworkArr$fi.address;
              _address && (_walletId = "".concat(_walletId, "**").concat(_address));
            }
          }
          null !== (_map$_walletId = map[_walletId2 = _walletId]) && void 0 !== _map$_walletId || (map[_walletId2] = {}), 
          map[_walletId][permission.origin] = permission;
        }
      })), map;
    };
  },
  403567: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      V: () => YLChainAPTMethod
    });
    __webpack_require__(207452), __webpack_require__(380115), __webpack_require__(498741), 
    __webpack_require__(579389), __webpack_require__(752231), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(418665), __webpack_require__(269193), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(194009), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(815852), __webpack_require__(504895), 
    __webpack_require__(564216), __webpack_require__(714913), __webpack_require__(215195);
    var _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(259159), _api_httpService__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(227383), _btc_constant__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(320913), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(700313), aptos__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(213155), _const__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(498050), _method__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(326394), _evm_send__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(688280), _mantine_notifications__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(585807), _lang_string__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(212864);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var YLChainAPTMethod = function() {
      function YLChainAPTMethod(url, wasm) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, YLChainAPTMethod), _defineProperty(this, "mRestUrl", ""), _defineProperty(this, "wasm", {}), 
        this.mRestUrl = url, this.wasm = wasm;
      }
      var Constructor, protoProps, staticProps, _init, _generateFungibleTransfer, _getFungibleGas, _signAptTransaction, _getTableItem, _getAccountResource, _getTokenForAccount, _getTokenBalance, _sendTransaction, _signTransaction, _simulateTransaction, _getGasPrice, _getTransactionByHash, _getChainId, _querySequenceNumber, _getFungibleBalance, _getBalance;
      return Constructor = YLChainAPTMethod, protoProps = [ {
        key: "getBalance",
        value: (_getBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee(address, _ref) {
          var _res$data, _res$data$data, _res$data$data$coin, _ref$aptoCoinType, aptoCoinType, path, res;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _ref$aptoCoinType = _ref.aptoCoinType, aptoCoinType = void 0 === _ref$aptoCoinType ? "0x1::aptos_coin::AptosCoin" : _ref$aptoCoinType, 
              path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.queryBalance(address, {
                aptoCoinType
              })), _context.next = 4, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getData)(path);

             case 4:
              return res = _context.sent, _context.abrupt("return", null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$data = _res$data.data) || void 0 === _res$data$data || null === (_res$data$data$coin = _res$data$data.coin) || void 0 === _res$data$data$coin ? void 0 : _res$data$data$coin.value);

             case 6:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x, _x2) {
          return _getBalance.apply(this, arguments);
        })
      }, {
        key: "getFungibleBalance",
        value: (_getFungibleBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(networkKey, address, _ref2) {
          var _res$data2, _res$data2$data, _res$data2$data$curre, _res$data2$data$curre2, aptoCoinType, url, variables, res;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return aptoCoinType = _ref2.aptoCoinType, url = _const__WEBPACK_IMPORTED_MODULE_26__.APTOS_NETWORK_TO_GRAPHQL_MAP[networkKey], 
              variables = {
                address,
                token_standard: "v2",
                offset: 0,
                asset_type: aptoCoinType
              }, _context2.next = 6, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.postGraphQL)(url, "query GetFungibleAssetBalances($address: String, $offset: Int, $token_standard: String, $asset_type: String) {\n            current_fungible_asset_balances(\n                where: {\n                    owner_address: {_eq: $address}, \n                    token_standard: {_eq: $token_standard},\n                    asset_type: {_eq: $asset_type}\n                },\n                offset: $offset,\n                limit: 100,\n                order_by: {amount: desc}\n            ) {\n                asset_type\n                amount\n                __typename\n            }\n        }", variables);

             case 6:
              return res = _context2.sent, _context2.abrupt("return", null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 || null === (_res$data2$data = _res$data2.data) || void 0 === _res$data2$data || null === (_res$data2$data$curre = _res$data2$data.current_fungible_asset_balances) || void 0 === _res$data2$data$curre || null === (_res$data2$data$curre2 = _res$data2$data$curre[0]) || void 0 === _res$data2$data$curre2 ? void 0 : _res$data2$data$curre2.amount);

             case 8:
             case "end":
              return _context2.stop();
            }
          }), _callee2);
        }))), function(_x3, _x4, _x5) {
          return _getFungibleBalance.apply(this, arguments);
        })
      }, {
        key: "querySequenceNumber",
        value: (_querySequenceNumber = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(address) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.querySequenceNumber(address)), 
              _context3.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getData)(path);

             case 3:
              return res = _context3.sent, _context3.abrupt("return", res.data.sequence_number);

             case 5:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x6) {
          return _querySequenceNumber.apply(this, arguments);
        })
      }, {
        key: "getChainId",
        value: (_getChainId = _asyncToGenerator(regeneratorRuntime.mark((function _callee4() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.ledgerInfo), 
              _context4.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getData)(path);

             case 3:
              return res = _context4.sent, _context4.abrupt("return", res.data.chain_id);

             case 5:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function() {
          return _getChainId.apply(this, arguments);
        })
      }, {
        key: "getTransactionByHash",
        value: (_getTransactionByHash = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(hash) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.getTransactionByHash(hash)), 
              _context5.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getData)(path);

             case 3:
              return res = _context5.sent, _context5.abrupt("return", res.data);

             case 5:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x7) {
          return _getTransactionByHash.apply(this, arguments);
        })
      }, {
        key: "getGasPrice",
        value: (_getGasPrice = _asyncToGenerator(regeneratorRuntime.mark((function _callee6() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.gasPrice), 
              _context6.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getData)(path);

             case 3:
              return res = _context6.sent, _context6.abrupt("return", res.data);

             case 5:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function() {
          return _getGasPrice.apply(this, arguments);
        })
      }, {
        key: "simulateTransaction",
        value: (_simulateTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(publicKey, sender, toAddress, amount, transferType, coinName, gasPrice, chainId, sequenceNumber, _ref3) {
          var accountAddress, module, name, _this$wasm, AnySigner, CoinType, HDWallet, coinType, wallet, now, expiration, transfer, coinTransfer, input, encoded, outputData, output, path, paramsMap, res, gas;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return accountAddress = _ref3.accountAddress, module = _ref3.module, name = _ref3.name, 
              _this$wasm = this.wasm, AnySigner = _this$wasm.AnySigner, CoinType = _this$wasm.CoinType, 
              HDWallet = _this$wasm.HDWallet, coinType = CoinType[coinName], wallet = new HDWallet.create(128, ""), 
              now = new Date, expiration = (new Date).setMinutes(now.getMinutes() + 30), transfer = null, 
              coinTransfer = null, "normalTransfer" == transferType ? transfer = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.TransferMessage.create({
                to: toAddress,
                amount: parseInt(amount)
              }) : "coinTransfer" == transferType && (coinTransfer = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.TokenTransferMessage.create({
                amount: parseInt(amount),
                to: toAddress,
                function: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.StructTag.create({
                  accountAddress,
                  module,
                  name
                })
              })), input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.SigningInput.create({
                sender,
                transfer,
                tokenTransfer: coinTransfer,
                privateKey: wallet.getKeyForCoin(coinType).data(),
                gasUnitPrice: parseInt(gasPrice.gas_estimate),
                expirationTimestampSecs: expiration,
                sequenceNumber: parseInt(sequenceNumber),
                chainId
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.SigningOutput.decode(outputData), 
              path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.simulateTransaction), 
              (paramsMap = JSON.parse(output.json)).signature.public_key = publicKey, paramsMap.signature.signature = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", 
              _context7.next = 19, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.postJson)(path, paramsMap);

             case 19:
              return res = _context7.sent, gas = {
                max_gas_amount: parseInt(res.data[0].max_gas_amount.toString()),
                gas_used: parseInt(res.data[0].gas_used.toString())
              }, _context7.abrupt("return", gas);

             case 22:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17) {
          return _simulateTransaction.apply(this, arguments);
        })
      }, {
        key: "signTransaction",
        value: (_signTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(privateKeyHex, fromAddress, toAddress, amount, maxGasAmount, transferType, coinName, preGasPrice, _ref4) {
          var accountAddress, module, name, _this$wasm2, HexCoding, AnySigner, CoinType, sequenceNumber, chainId, coinType, gasPrice, netGasPrice, now, expiration, transfer, coinTransfer, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return accountAddress = _ref4.accountAddress, module = _ref4.module, name = _ref4.name, 
              _this$wasm2 = this.wasm, HexCoding = _this$wasm2.HexCoding, AnySigner = _this$wasm2.AnySigner, 
              CoinType = _this$wasm2.CoinType, _context8.next = 4, this.querySequenceNumber(fromAddress);

             case 4:
              return sequenceNumber = _context8.sent, _context8.next = 7, this.getChainId();

             case 7:
              if (chainId = _context8.sent, coinType = CoinType[coinName], gasPrice = 0, preGasPrice) {
                _context8.next = 17;
                break;
              }
              return _context8.next = 13, this.getGasPrice();

             case 13:
              netGasPrice = _context8.sent, gasPrice = netGasPrice.gas_estimate, _context8.next = 18;
              break;

             case 17:
              gasPrice = preGasPrice;

             case 18:
              return now = new Date, expiration = now.setMinutes(now.getMinutes() + 30), transfer = null, 
              coinTransfer = null, "normalTransfer" == transferType ? transfer = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.TransferMessage.create({
                to: toAddress,
                amount: parseInt(amount)
              }) : "coinTransfer" == transferType && (coinTransfer = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.TokenTransferMessage.create({
                amount: parseInt(amount),
                to: toAddress,
                function: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.StructTag.create({
                  accountAddress,
                  module,
                  name
                })
              })), input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.SigningInput.create({
                sender: fromAddress,
                maxGasAmount: parseInt(maxGasAmount),
                expirationTimestampSecs: parseInt(expiration),
                transfer,
                tokenTransfer: coinTransfer,
                privateKey: HexCoding.decode(privateKeyHex),
                gasUnitPrice: parseInt(gasPrice),
                sequenceNumber: parseInt(sequenceNumber),
                chainId
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.SigningOutput.decode(outputData), 
              _context8.abrupt("return", output.json);

             case 28:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25, _x26) {
          return _signTransaction.apply(this, arguments);
        })
      }, {
        key: "sendTransaction",
        value: (_sendTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(rawTransaction, networkKey) {
          var result;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return _context9.next = 2, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_24__.IM)(networkKey, rawTransaction);

             case 2:
              return result = _context9.sent, _context9.abrupt("return", result.data.data.hash_id);

             case 4:
             case "end":
              return _context9.stop();
            }
          }), _callee9);
        }))), function(_x27, _x28) {
          return _sendTransaction.apply(this, arguments);
        })
      }, {
        key: "getTokenBalance",
        value: (_getTokenBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(address, collectionName, tokenName, _ref5) {
          var _ref5$propertyVersion, data, token, amount;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return _ref5$propertyVersion = _ref5.propertyVersion, data = {
                token_data_id: {
                  creator: address,
                  collection: collectionName,
                  name: tokenName
                },
                property_version: void 0 === _ref5$propertyVersion ? "0" : _ref5$propertyVersion
              }, _context10.next = 5, this.getTokenForAccount(address, data);

             case 5:
              return token = _context10.sent, amount = token.amount, _context10.abrupt("return", amount);

             case 8:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x29, _x30, _x31, _x32) {
          return _getTokenBalance.apply(this, arguments);
        })
      }, {
        key: "getTokenForAccount",
        value: (_getTokenForAccount = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(account, data) {
          var tokenStore, handle, getTokenTableItemRequest, item;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return _context11.next = 2, this.getAccountResource(account);

             case 2:
              return tokenStore = _context11.sent, handle = tokenStore.data.tokens.handle, getTokenTableItemRequest = {
                key_type: "0x3::token::TokenId",
                value_type: "0x3::token::Token",
                key: data
              }, _context11.next = 7, this.getTableItem(handle, getTokenTableItemRequest);

             case 7:
              return item = _context11.sent, _context11.abrupt("return", item);

             case 9:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x33, _x34) {
          return _getTokenForAccount.apply(this, arguments);
        })
      }, {
        key: "getAccountResource",
        value: (_getAccountResource = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(account) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.accountResource(account, "0x3::token::TokenStore")), 
              _context12.next = 4, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getData)(path);

             case 4:
              return res = _context12.sent, _context12.abrupt("return", res.data);

             case 6:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x35) {
          return _getAccountResource.apply(this, arguments);
        })
      }, {
        key: "getTableItem",
        value: (_getTableItem = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(handle, data) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.qS.tableItem(handle)), 
              _context13.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.postJson)(path, data);

             case 3:
              return res = _context13.sent, _context13.abrupt("return", res.data);

             case 5:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x36, _x37) {
          return _getTableItem.apply(this, arguments);
        })
      }, {
        key: "signAptTransaction",
        value: (_signAptTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(transaction) {
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.TW.Aptos.Proto.SigningInput.fromObject(transaction);

             case 1:
             case "end":
              return _context14.stop();
            }
          }), _callee14);
        }))), function(_x38) {
          return _signAptTransaction.apply(this, arguments);
        })
      }, {
        key: "getFungibleGas",
        value: (_getFungibleGas = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(_ref6) {
          var recipient, amount, coinType, options, aptosClient, client, account, rawTx, gasPromise, gasEstimatePromise, _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, gas, gasEstimate;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return recipient = _ref6.recipient, amount = _ref6.amount, coinType = _ref6.coinType, 
              options = _ref6.options, aptosClient = new aptos__WEBPACK_IMPORTED_MODULE_25__.HN(this.mRestUrl, null, !1, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getRequestHeader), 
              client = new aptos__WEBPACK_IMPORTED_MODULE_25__.M4(aptosClient), account = aptos__WEBPACK_IMPORTED_MODULE_25__.dI.fromAptosAccountObject({
                privateKeyHex: _const__WEBPACK_IMPORTED_MODULE_26__.NETWORK_TO_PRIVATEKEY_MAP.APT
              }), _context15.next = 6, client.generateTransfer(account, coinType, recipient, amount, options);

             case 6:
              return rawTx = _context15.sent, gasPromise = aptosClient.simulateTransaction(account, rawTx, {
                estimateMaxGasAmount: !0,
                estimate_gas_unit_price: !0
              }), gasEstimatePromise = aptosClient.estimateGasPrice(), _context15.next = 11, Promise.all([ gasPromise, gasEstimatePromise ]);

             case 11:
              return _yield$Promise$all = _context15.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              _yield$Promise$all2$ = _slicedToArray(_yield$Promise$all2[0], 1), gas = _yield$Promise$all2$[0], 
              gasEstimate = _yield$Promise$all2[1], _context15.abrupt("return", {
                gas,
                gasPrice: gasEstimate
              });

             case 17:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this);
        }))), function(_x39) {
          return _getFungibleGas.apply(this, arguments);
        })
      }, {
        key: "generateFungibleTransfer",
        value: (_generateFungibleTransfer = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(coinItem, privateKeyHex, history) {
          var recipient, transferAmount, precision, coinType, gasUnitPrice, maxGasAmount, networkKey, amount, aptosClient, client, account, rawTx, signedTx, res, hash;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return recipient = coinItem.coinTransferToAddress, transferAmount = coinItem.coinTransferAmount, 
              precision = coinItem.coinPrecision, coinType = coinItem.coinContractAddress, gasUnitPrice = coinItem.coinTransferGasPrice, 
              maxGasAmount = coinItem.coinTransferGasLimit, networkKey = coinItem.coinNetworkKey, 
              amount = (0, _method__WEBPACK_IMPORTED_MODULE_27__.dataOperation)(transferAmount, Math.pow(10, Number(precision))), 
              aptosClient = new aptos__WEBPACK_IMPORTED_MODULE_25__.HN(this.mRestUrl, null, !1, _api_httpService__WEBPACK_IMPORTED_MODULE_22__.getRequestHeader), 
              client = new aptos__WEBPACK_IMPORTED_MODULE_25__.M4(aptosClient), account = aptos__WEBPACK_IMPORTED_MODULE_25__.dI.fromAptosAccountObject({
                privateKeyHex
              }), _context16.next = 13, client.generateTransfer(account, coinType, recipient, amount, {
                maxGasAmount,
                gasUnitPrice
              });

             case 13:
              return rawTx = _context16.sent, _context16.next = 16, aptosClient.signTransaction(account, rawTx);

             case 16:
              return signedTx = _context16.sent, _context16.next = 19, aptosClient.submitTransaction(signedTx);

             case 19:
              res = _context16.sent, (hash = null == res ? void 0 : res.hash) ? (0, _evm_send__WEBPACK_IMPORTED_MODULE_28__.M6)(coinItem, hash, history, networkKey) : (0, 
              _mantine_notifications__WEBPACK_IMPORTED_MODULE_29__.Ds)({
                type: "error",
                message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_30__.lang_string)("发送失败")
              });

             case 22:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this);
        }))), function(_x40, _x41, _x42) {
          return _generateFungibleTransfer.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(url) {
          var wasm;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return _context17.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_21__.t)();

             case 2:
              return wasm = _context17.sent, _context17.abrupt("return", new YLChainAPTMethod(url, wasm));

             case 4:
             case "end":
              return _context17.stop();
            }
          }), _callee17);
        }))), function(_x43) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), YLChainAPTMethod;
    }();
  },
  407167: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      L: () => OPTIMISM_GAS_ORACLE_ADDRESS,
      V: () => OPTIMISM_GAS_ORACLE_ABI
    });
    var OPTIMISM_GAS_ORACLE_ADDRESS = "0x420000000000000000000000000000000000000F", OPTIMISM_GAS_ORACLE_ABI = [ {
      inputs: [ {
        internalType: "address",
        name: "_owner",
        type: "address"
      } ],
      stateMutability: "nonpayable",
      type: "constructor"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "DecimalsUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "GasPriceUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "L1BaseFeeUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "OverheadUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      } ],
      name: "OwnershipTransferred",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "ScalarUpdated",
      type: "event"
    }, {
      inputs: [],
      name: "decimals",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "gasPrice",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      } ],
      name: "getL1Fee",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      } ],
      name: "getL1GasUsed",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "l1BaseFee",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "overhead",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "owner",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [],
      name: "scalar",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256"
      } ],
      name: "setDecimals",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256"
      } ],
      name: "setGasPrice",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_baseFee",
        type: "uint256"
      } ],
      name: "setL1BaseFee",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_overhead",
        type: "uint256"
      } ],
      name: "setOverhead",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_scalar",
        type: "uint256"
      } ],
      name: "setScalar",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "newOwner",
        type: "address"
      } ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    } ];
  },
  426451: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      u: () => getEthDelayTime,
      zM: () => getMainCoin,
      Qp: () => getNetworkObject,
      Sp: () => getRpcInfo
    });
    __webpack_require__(207452), __webpack_require__(447746), __webpack_require__(43148), 
    __webpack_require__(380115), __webpack_require__(754989), __webpack_require__(505086), 
    __webpack_require__(269193), __webpack_require__(579389), __webpack_require__(118772), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(504895), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(215195), __webpack_require__(714913), 
    __webpack_require__(498741), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(407899), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(103101), __webpack_require__(936012);
    var web3_min = __webpack_require__(946450), web3_min_default = __webpack_require__.n(web3_min), client = __webpack_require__(60941), index_browser_esm = __webpack_require__(262643), httpService = __webpack_require__(227383), dist = __webpack_require__(856129), tool_method = __webpack_require__(326394), tool_const = __webpack_require__(498050);
    __webpack_require__(906048);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var GateRPC = function() {
      function GateRPC(rpc) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, GateRPC), _defineProperty(this, "_rpcAddress", ""), this._rpcAddress = rpc;
      }
      var Constructor, protoProps, staticProps, _sendTransaction, _generateTransaction, _balanceOf, _getTx, _getBlock;
      return Constructor = GateRPC, protoProps = [ {
        key: "getBlock",
        value: (_getBlock = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
          var blockHeight, url, res, _args = arguments;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return blockHeight = _args.length > 0 && void 0 !== _args[0] ? _args[0] : "latest", 
              url = "".concat(this._rpcAddress, "/v1/block/").concat(blockHeight), _context.next = 4, 
              (0, httpService.axiosRequest)("get", url);

             case 4:
              return res = _context.sent, _context.abrupt("return", res.data);

             case 6:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function() {
          return _getBlock.apply(this, arguments);
        })
      }, {
        key: "getTx",
        value: (_getTx = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(hash) {
          var url, res;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return url = "".concat(this._rpcAddress, "/v1/tx/").concat(hash), _context2.next = 3, 
              (0, httpService.axiosRequest)("get", url);

             case 3:
              return res = _context2.sent, _context2.abrupt("return", res.data);

             case 5:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x) {
          return _getTx.apply(this, arguments);
        })
      }, {
        key: "balanceOf",
        value: (_balanceOf = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(address) {
          var requestUrl, res;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return requestUrl = "".concat(this._rpcAddress, "/v1/account/balance/").concat(address), 
              _context3.next = 4, (0, httpService.axiosRequest)("get", requestUrl);

             case 4:
              if (200 !== (res = _context3.sent).status || !res.data.result.length) {
                _context3.next = 7;
                break;
              }
              return _context3.abrupt("return", res.data.result[0].amount);

             case 7:
              return _context3.abrupt("return", "");

             case 8:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x2) {
          return _balanceOf.apply(this, arguments);
        })
      }, {
        key: "generateTransaction",
        value: (_generateTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(from, to, amount, _ref) {
          var _ref$fee, fee, _ref$simulate, simulate, _yield$this$getBlock, height, url, params, response;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _ref$fee = _ref.fee, fee = void 0 === _ref$fee ? "100000" : _ref$fee, _ref$simulate = _ref.simulate, 
              simulate = void 0 !== _ref$simulate && _ref$simulate, _context4.next = 3, this.getBlock();

             case 3:
              return _yield$this$getBlock = _context4.sent, height = _yield$this$getBlock.height, 
              url = "".concat(this._rpcAddress, "/v1/tx/send/").concat(to), params = {
                base_req: {
                  from,
                  memo: "",
                  chain_id: "mainnet",
                  gas: "200000",
                  fees: [ {
                    denom: "NANOGT",
                    amount: fee
                  } ],
                  simulate,
                  valid_height: [ height, (0, tool_method.dataOperation)(height, 200, "add").toString() ]
                },
                amount: [ {
                  denom: "NANOGT",
                  amount: amount.toString()
                } ]
              }, _context4.next = 9, (0, httpService.axiosRequest)("post", url, params);

             case 9:
              return response = _context4.sent, _context4.abrupt("return", response.data);

             case 11:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x3, _x4, _x5, _x6) {
          return _generateTransaction.apply(this, arguments);
        })
      }, {
        key: "sendTransaction",
        value: (_sendTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(tx) {
          var url, result;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return url = "".concat(this._rpcAddress, "/v1/tx"), _context5.next = 3, (0, httpService.axiosRequest)("post", url, tx);

             case 3:
              return result = _context5.sent, _context5.abrupt("return", result.data);

             case 5:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x7) {
          return _sendTransaction.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: function(rpc) {
          return this._ins || (this._ins = new GateRPC(rpc)), this._ins;
        }
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), GateRPC;
    }();
    _defineProperty(GateRPC, "_ins", void 0);
    __webpack_require__(653360), __webpack_require__(804632), __webpack_require__(64189), 
    __webpack_require__(741412), __webpack_require__(734606), __webpack_require__(597755);
    var gt_fetch = __webpack_require__(525735);
    function custom_http_provider_typeof(obj) {
      return custom_http_provider_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, custom_http_provider_typeof(obj);
    }
    function custom_http_provider_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, custom_http_provider_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === custom_http_provider_typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return _assertThisInitialized(self);
        }(this, result);
      };
    }
    function _assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    function custom_http_provider_defineProperty(obj, key, value) {
      return (key = custom_http_provider_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function custom_http_provider_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== custom_http_provider_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== custom_http_provider_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === custom_http_provider_typeof(key) ? key : String(key);
    }
    const custom_http_provider = function(_Web3$providers$HttpP) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(CustomHttpProvider, _Web3$providers$HttpP);
      var Constructor, protoProps, staticProps, _super = _createSuper(CustomHttpProvider);
      function CustomHttpProvider(rpcAddress, options) {
        var _this;
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CustomHttpProvider), custom_http_provider_defineProperty(_assertThisInitialized(_this = _super.call(this, rpcAddress, options)), "rpcAddress", void 0), 
        custom_http_provider_defineProperty(_assertThisInitialized(_this), "options", void 0), 
        _this.rpcAddress = rpcAddress, _this.options = options, _this;
      }
      return Constructor = CustomHttpProvider, (protoProps = [ {
        key: "send",
        value: function(payload, callback) {
          var url = this.rpcAddress, query = void 0;
          this.options.isTRX && (url = this.rpcAddress + "?_bs_protocol_=jsonrpc", query = {
            _bs_protocol_: "jsonrpc"
          }), (0, gt_fetch.Lu)("POST", url, payload, {
            "content-type": "application/json"
          }, void 0, query, {
            type: "data"
          }).then((function(res) {
            callback(null, res);
          })).catch((function(err) {
            callback(err);
          }));
        }
      } ]) && custom_http_provider_defineProperties(Constructor.prototype, protoProps), 
      staticProps && custom_http_provider_defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CustomHttpProvider;
    }(web3_min_default().providers.HttpProvider);
    __webpack_require__(410121), __webpack_require__(863051);
    var errors = __webpack_require__(930467), http_transport = __webpack_require__(957397);
    function sui_http_transport_typeof(obj) {
      return sui_http_transport_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, sui_http_transport_typeof(obj);
    }
    function sui_http_transport_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function sui_http_transport_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, (arg = descriptor.key, 
        key = void 0, key = function(input, hint) {
          if ("object" !== sui_http_transport_typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== sui_http_transport_typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string"), "symbol" === sui_http_transport_typeof(key) ? key : String(key)), descriptor);
      }
      var arg, key;
    }
    function sui_http_transport_setPrototypeOf(o, p) {
      return sui_http_transport_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, sui_http_transport_setPrototypeOf(o, p);
    }
    function sui_http_transport_createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = sui_http_transport_getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = sui_http_transport_getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === sui_http_transport_typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return sui_http_transport_assertThisInitialized(self);
        }(this, result);
      };
    }
    function sui_http_transport_assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    function sui_http_transport_getPrototypeOf(o) {
      return sui_http_transport_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, sui_http_transport_getPrototypeOf(o);
    }
    function _classPrivateFieldInitSpec(obj, privateMap, value) {
      !function(obj, privateCollection) {
        if (privateCollection.has(obj)) throw new TypeError("Cannot initialize the same private elements twice on an object");
      }(obj, privateMap), privateMap.set(obj, value);
    }
    function _classPrivateFieldGet(receiver, privateMap) {
      return function(receiver, descriptor) {
        if (descriptor.get) return descriptor.get.call(receiver);
        return descriptor.value;
      }(receiver, _classExtractFieldDescriptor(receiver, privateMap, "get"));
    }
    function _classPrivateFieldSet(receiver, privateMap, value) {
      return function(receiver, descriptor, value) {
        if (descriptor.set) descriptor.set.call(receiver, value); else {
          if (!descriptor.writable) throw new TypeError("attempted to set read only private field");
          descriptor.value = value;
        }
      }(receiver, _classExtractFieldDescriptor(receiver, privateMap, "set"), value), value;
    }
    function _classExtractFieldDescriptor(receiver, privateMap, action) {
      if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
      return privateMap.get(receiver);
    }
    var _requestId = new WeakMap, _options = new WeakMap;
    const sui_http_transport = function(_SuiHTTPTransport) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && sui_http_transport_setPrototypeOf(subClass, superClass);
      }(CustomSuiHTTPTransport, _SuiHTTPTransport);
      var Constructor, protoProps, staticProps, fn, _request, _super = sui_http_transport_createSuper(CustomSuiHTTPTransport);
      function CustomSuiHTTPTransport(options) {
        var _this;
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CustomSuiHTTPTransport), _classPrivateFieldInitSpec(sui_http_transport_assertThisInitialized(_this = _super.call(this, options)), _requestId, {
          writable: !0,
          value: 0
        }), _classPrivateFieldInitSpec(sui_http_transport_assertThisInitialized(_this), _options, {
          writable: !0,
          value: void 0
        }), _classPrivateFieldSet(sui_http_transport_assertThisInitialized(_this), _options, options), 
        _this;
      }
      return Constructor = CustomSuiHTTPTransport, protoProps = [ {
        key: "request",
        value: (fn = regeneratorRuntime.mark((function _callee(input) {
          var res, data;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _classPrivateFieldSet(this, _requestId, _classPrivateFieldGet(this, _requestId) + 1), 
              _context.next = 3, (0, httpService.postJson)(_classPrivateFieldGet(this, _options).url, {
                jsonrpc: "2.0",
                id: _classPrivateFieldGet(this, _requestId),
                method: input.method,
                params: input.params
              });

             case 3:
              if (200 === (res = _context.sent).status) {
                _context.next = 6;
                break;
              }
              throw new errors.Up("Unexpected status code: ".concat(res.status), res.status, res.statusText);

             case 6:
              if (!("error" in (data = res.data)) || null == data.error) {
                _context.next = 9;
                break;
              }
              throw new errors.Gm(data.error.message, data.error.code);

             case 9:
              return _context.abrupt("return", data.result);

             case 10:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        })), _request = function() {
          var self = this, args = arguments;
          return new Promise((function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              sui_http_transport_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              sui_http_transport_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          }));
        }, function(_x) {
          return _request.apply(this, arguments);
        })
      } ], protoProps && sui_http_transport_defineProperties(Constructor.prototype, protoProps), 
      staticProps && sui_http_transport_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CustomSuiHTTPTransport;
    }(http_transport.t);
    var fetching = __webpack_require__(460322), gt_networks = __webpack_require__(660862), custom_json_rpc_provider_quai = __webpack_require__(116239), gt_wallet_config = __webpack_require__(291842);
    function allWeb3Method_typeof(obj) {
      return allWeb3Method_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, allWeb3Method_typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          allWeb3Method_defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function allWeb3Method_defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== allWeb3Method_typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== allWeb3Method_typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === allWeb3Method_typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function allWeb3Method_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function allWeb3Method_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            allWeb3Method_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            allWeb3Method_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getNetworkObject = function() {
      var _ref = allWeb3Method_asyncToGenerator(regeneratorRuntime.mark((function _callee(networkKey, signer, isEVM, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var rpcAddress, connection, provider, signingClient, options, _provider, web3;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.prev = 0, _context.next = 3, (0, gt_networks.gL)(totalNetworkDic, networkKey, rpcUrls[networkKey], lastGetSuccessRpcTime);

           case 3:
            if (!(rpcAddress = _context.sent)) {
              _context.next = 37;
              break;
            }
            if (![].concat(_toConsumableArray(gt_wallet_config.cI), [ "SONIC_GATETEST" ]).includes(networkKey)) {
              _context.next = 10;
              break;
            }
            return connection = new index_browser_esm.Ng(rpcAddress, {
              fetch: function(input, init) {
                var body = null != init && init.body ? "string" == typeof init.body ? JSON.parse(init.body) : init.body : {};
                return (0, fetching.Lu)("POST", input, body, (null == init ? void 0 : init.headers) || {}, void 0, void 0, {
                  rawResponse: !0
                });
              }
            }), _context.abrupt("return", connection);

           case 10:
            if ("SUI" != networkKey) {
              _context.next = 15;
              break;
            }
            return provider = new client.xl({
              transport: new sui_http_transport({
                url: rpcAddress
              })
            }), _context.abrupt("return", provider);

           case 15:
            if ("SEI" != networkKey) {
              _context.next = 22;
              break;
            }
            return _context.next = 18, (0, dist.getSigningClient)(rpcAddress, signer);

           case 18:
            return signingClient = _context.sent, _context.abrupt("return", signingClient);

           case 22:
            if ("GT_ORG" != networkKey) {
              _context.next = 26;
              break;
            }
            return _context.abrupt("return", GateRPC.init(rpcAddress));

           case 26:
            if ("QUAI_GATETEST" != networkKey) {
              _context.next = 30;
              break;
            }
            return _context.abrupt("return", {
              eth: new custom_json_rpc_provider_quai.A(rpcAddress, null, {
                usePathing: !0
              }),
              isQuai: !0
            });

           case 30:
            if (!isEVM && ![ "TRX" ].includes(networkKey)) {
              _context.next = 35;
              break;
            }
            return options = {
              timeout: 3e4
            }, _provider = null != rpcAddress && rpcAddress.startsWith("ws") ? new (web3_min_default().providers.WebsocketProvider)(rpcAddress, options) : new custom_http_provider(rpcAddress, _objectSpread(_objectSpread({}, options), {}, {
              isTRX: [ "TRX" ].includes(networkKey)
            })), web3 = new (web3_min_default())(_provider), _context.abrupt("return", web3);

           case 35:
            _context.next = 38;
            break;

           case 37:
            return _context.abrupt("return", null);

           case 38:
            _context.next = 43;
            break;

           case 40:
            return _context.prev = 40, _context.t0 = _context.catch(0), _context.abrupt("return", null);

           case 43:
           case "end":
            return _context.stop();
          }
        }), _callee, null, [ [ 0, 40 ] ]);
      })));
      return function(_x, _x2, _x3, _x4, _x5, _x6) {
        return _ref.apply(this, arguments);
      };
    }(), getEthDelayTime = function(rpcAddress) {
      return new Promise((function(resolve) {
        var params = {
          jsonrpc: "2.0",
          method: "eth_blockNumber",
          params: [],
          id: 1
        };
        if (null != rpcAddress && rpcAddress.startsWith("ws")) {
          var start, ws = new WebSocket(rpcAddress);
          ws.addEventListener("open", (function() {
            start = (new Date).getTime(), ws.send(JSON.stringify(params));
          })), ws.addEventListener("message", (function() {
            ws.close();
            var end = (new Date).getTime();
            resolve(end - start);
          }));
        } else {
          var _start = (new Date).getTime();
          (0, httpService.axiosRequest)("post", rpcAddress, params).then((function(resultModel) {
            if (200 === (null == resultModel ? void 0 : resultModel.status)) {
              var end = (new Date).getTime();
              resolve(end - _start);
            }
          }));
        }
        var timeout = setTimeout((function() {
          clearTimeout(timeout), resolve(1e4);
        }), 1e4);
      }));
    }, getRpcInfo = function() {
      var _ref2 = allWeb3Method_asyncToGenerator(regeneratorRuntime.mark((function _callee2(rpcAddress) {
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.abrupt("return", new Promise((function(resolve, reject) {
              var params = {
                jsonrpc: "2.0",
                method: "eth_chainId",
                params: [],
                id: 1
              };
              if (null != rpcAddress && rpcAddress.startsWith("ws")) {
                var ws = new WebSocket(rpcAddress);
                ws.addEventListener("open", (function() {
                  ws.send(JSON.stringify(params));
                })), ws.addEventListener("message", (function(data) {
                  ws.close();
                  try {
                    var res = {
                      status: 200,
                      data: JSON.parse(data.data)
                    };
                    resolve(res);
                  } catch (err) {
                    reject();
                  }
                })), ws.addEventListener("error", (function(err) {
                  reject(err);
                }));
              } else (0, httpService.axiosRequest)("post", rpcAddress, params).then((function(res) {
                resolve(res);
              })).catch((function(err) {
                reject(err);
              }));
            })));

           case 1:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x7) {
        return _ref2.apply(this, arguments);
      };
    }(), getMainCoin = function() {
      var _ref3 = allWeb3Method_asyncToGenerator(regeneratorRuntime.mark((function _callee3(sendTokenInfo, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _sendInfo$coinNetwork, _ref4, method, sendInfo, cacheData, _name, _getNetworkSort, standardCosmosNetworks, rpcAddress, val, web3MethodSui, mainInfo, solMethod, btcMethod, res, _mainInfo, aptMethod, _mainInfo2, tronMethod, dashSend, _mainInfo3, cosmosMethod, bnbORGMethod, adaMethod, _mainInfo4, tonMethod, _mainInfo5, venomMethod, web3Method;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 326394));

           case 2:
            if (method = _context3.sent, _context3.t0 = sendTokenInfo, _context3.t0) {
              _context3.next = 8;
              break;
            }
            return _context3.next = 7, (0, tool_method.getDefiItem)("sendTokenInfo");

           case 7:
            _context3.t0 = _context3.sent;

           case 8:
            return sendInfo = _context3.t0, _context3.next = 11, (0, tool_method.getDefiItem)("cacheSendData");

           case 11:
            if (_context3.t1 = _context3.sent, _context3.t1) {
              _context3.next = 14;
              break;
            }
            _context3.t1 = {};

           case 14:
            if (cacheData = _context3.t1, _name = null == sendInfo || null === (_sendInfo$coinNetwork = sendInfo.coinNetworkKey) || void 0 === _sendInfo$coinNetwork ? void 0 : _sendInfo$coinNetwork.toUpperCase(), 
            _getNetworkSort = (0, gt_networks.Fb)(totalNetworkDic), standardCosmosNetworks = _getNetworkSort.standardCosmosNetworks, 
            rpcAddress = "", null === (_ref4 = [].concat(_toConsumableArray(standardCosmosNetworks), _toConsumableArray(tool_const.APTOS_CHAINS), [ "TRX", "TON" ])) || void 0 === _ref4 || !_ref4.includes(_name)) {
              _context3.next = 22;
              break;
            }
            return _context3.next = 21, (0, gt_networks.gL)(totalNetworkDic, _name, rpcUrls[_name], lastGetSuccessRpcTime);

           case 21:
            rpcAddress = _context3.sent;

           case 22:
            if (val = "", "SUI" != _name) {
              _context3.next = 32;
              break;
            }
            return _context3.next = 26, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 100397));

           case 26:
            return web3MethodSui = _context3.sent, _context3.next = 29, web3MethodSui.getFinalTokenBalance(totalNetworkDic.SUI, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 29:
            val = _context3.sent, _context3.next = 138;
            break;

           case 32:
            if ("SOL" != _name) {
              _context3.next = 42;
              break;
            }
            return mainInfo = {
              coinIsMain: !0,
              coinTransferFromAddress: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
              coinPrecision: null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision
            }, _context3.next = 36, __webpack_require__.e(2065).then(__webpack_require__.bind(__webpack_require__, 872065));

           case 36:
            return solMethod = _context3.sent, _context3.next = 39, solMethod.getSolanBlance(mainInfo, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 39:
            val = _context3.sent, _context3.next = 138;
            break;

           case 42:
            if (!tool_const.MORE_ADDRESS_CHAIN.includes(_name)) {
              _context3.next = 52;
              break;
            }
            return _context3.next = 45, Promise.all([ __webpack_require__.e(705), __webpack_require__.e(3397), __webpack_require__.e(4113) ]).then(__webpack_require__.bind(__webpack_require__, 62179));

           case 45:
            return btcMethod = _context3.sent, _context3.next = 48, btcMethod.getBTCBalanceV2(sendInfo);

           case 48:
            res = _context3.sent, val = method.dataOperation((null == res ? void 0 : res.balance) - (null == res ? void 0 : res.lockBalance), Math.pow(10, null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision), "/"), 
            _context3.next = 138;
            break;

           case 52:
            if (!tool_const.APTOS_CHAINS.includes(_name)) {
              _context3.next = 62;
              break;
            }
            return _mainInfo = {
              coinIsMain: !0,
              coinTransferFromAddress: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
              coinPrecision: null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision,
              coinNetworkRpcAddress: rpcAddress,
              coinNetworkKey: _name
            }, _context3.next = 56, __webpack_require__.e(2611).then(__webpack_require__.bind(__webpack_require__, 882611));

           case 56:
            return aptMethod = _context3.sent, _context3.next = 59, aptMethod.getAptBalance(_mainInfo, totalNetworkDic);

           case 59:
            val = _context3.sent, _context3.next = 138;
            break;

           case 62:
            if ("TRX" != _name) {
              _context3.next = 72;
              break;
            }
            return _mainInfo2 = {
              coinIsMain: !0,
              coinTransferFromAddress: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
              coinNetworkPrecision: null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision,
              coinNetworkRpcAddress: rpcAddress
            }, _context3.next = 66, __webpack_require__.e(2523).then(__webpack_require__.bind(__webpack_require__, 312523));

           case 66:
            return tronMethod = _context3.sent, _context3.next = 69, tronMethod.getTronBalance(_mainInfo2, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 69:
            val = _context3.sent, _context3.next = 138;
            break;

           case 72:
            if ("DASH" != _name && "DOGE" != _name) {
              _context3.next = 84;
              break;
            }
            return _context3.next = 75, Promise.all([ __webpack_require__.e(705), __webpack_require__.e(9050), __webpack_require__.e(3397), __webpack_require__.e(6494) ]).then(__webpack_require__.bind(__webpack_require__, 609050));

           case 75:
            return dashSend = _context3.sent, _context3.next = 78, dashSend.getDashBalance(sendInfo, _name, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 78:
            if (_context3.t2 = _context3.sent, _context3.t2) {
              _context3.next = 81;
              break;
            }
            _context3.t2 = "";

           case 81:
            val = _context3.t2, _context3.next = 138;
            break;

           case 84:
            if (null == standardCosmosNetworks || !standardCosmosNetworks.includes(_name)) {
              _context3.next = 94;
              break;
            }
            return _mainInfo3 = {
              coinIsMain: !0,
              coinTransferFromAddress: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
              coinPrecision: null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision,
              coinNetworkRpcAddress: rpcAddress,
              coinNetworkKey: _name
            }, _context3.next = 88, __webpack_require__.e(3655).then(__webpack_require__.bind(__webpack_require__, 883655));

           case 88:
            return cosmosMethod = _context3.sent, _context3.next = 91, cosmosMethod.getCosmosBalance(_mainInfo3);

           case 91:
            val = _context3.sent, _context3.next = 138;
            break;

           case 94:
            if ("BNB_ORG" !== _name) {
              _context3.next = 103;
              break;
            }
            return _context3.next = 97, __webpack_require__.e(4971).then(__webpack_require__.bind(__webpack_require__, 544971));

           case 97:
            return bnbORGMethod = _context3.sent, _context3.next = 100, bnbORGMethod.getBNBBalance(sendInfo, totalNetworkDic);

           case 100:
            val = _context3.sent, _context3.next = 138;
            break;

           case 103:
            if ("ADA" !== _name) {
              _context3.next = 112;
              break;
            }
            return _context3.next = 106, __webpack_require__.e(9889).then(__webpack_require__.bind(__webpack_require__, 59889));

           case 106:
            return adaMethod = _context3.sent, _context3.next = 109, adaMethod.getADABalance(sendInfo, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 109:
            val = _context3.sent, _context3.next = 138;
            break;

           case 112:
            if ("TON" !== _name) {
              _context3.next = 122;
              break;
            }
            return _mainInfo4 = {
              coinIsMain: !0,
              coinTransferFromAddress: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
              coinPrecision: null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision,
              coinNetworkRpcAddress: rpcAddress
            }, _context3.next = 116, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 333043));

           case 116:
            return tonMethod = _context3.sent, _context3.next = 119, tonMethod.getTonBalance(_mainInfo4);

           case 119:
            val = _context3.sent, _context3.next = 138;
            break;

           case 122:
            if ("VENOM" !== _name) {
              _context3.next = 132;
              break;
            }
            return _mainInfo5 = {
              coinIsMain: !0,
              coinTransferFromAddress: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
              coinPrecision: null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision
            }, _context3.next = 126, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 898879));

           case 126:
            return venomMethod = _context3.sent, _context3.next = 129, venomMethod.getVenomBalance(_mainInfo5, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 129:
            val = _context3.sent, _context3.next = 138;
            break;

           case 132:
            return _context3.next = 134, Promise.resolve().then(__webpack_require__.bind(__webpack_require__, 84477));

           case 134:
            return web3Method = _context3.sent, _context3.next = 137, web3Method.getTokenBalance({
              coinAddress: "-",
              networkKey: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
              networkPrecision: null == sendInfo ? void 0 : sendInfo.coinNetworkPrecision,
              coinTransferFromAddress: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress
            }, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 137:
            val = _context3.sent;

           case 138:
            return method.setDefiData({
              cacheSendData: _objectSpread(_objectSpread({}, cacheData), {}, {
                mainNum: val
              })
            }), _context3.abrupt("return", val);

           case 140:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x8, _x9, _x10, _x11) {
        return _ref3.apply(this, arguments);
      };
    }();
  },
  460322: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Lu: () => fetchWithAppHeader,
      u9: () => fetchWithTimeout
    });
    __webpack_require__(207452), __webpack_require__(118772), __webpack_require__(505086), 
    __webpack_require__(269193), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(194009), 
    __webpack_require__(815852), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602);
    var _popup_lib_tool_someMethod__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(691940), ethers__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(802192);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var timeoutMs, fetchWithTimeout = (timeoutMs = 1e4, function() {
      var _fetchWithTimeout = _asyncToGenerator(regeneratorRuntime.mark((function _callee(requestInfo, options) {
        var controller, id, response;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return controller = new AbortController, id = setTimeout((function() {
              return ethers__WEBPACK_IMPORTED_MODULE_22__.logger.warn("Request to ", requestInfo, " timed out"), 
              controller.abort();
            }), timeoutMs), _context.next = 4, fetch(requestInfo, _objectSpread(_objectSpread({}, options), {}, {
              signal: controller.signal
            }));

           case 4:
            return response = _context.sent, clearTimeout(id), _context.abrupt("return", response);

           case 7:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2) {
        return _fetchWithTimeout.apply(this, arguments);
      };
    }()), fetchWithAppHeader = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(method, url) {
        var data, headers, signal, query, conifg, appHeader, middleware, res, _args2 = arguments;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return data = _args2.length > 2 && void 0 !== _args2[2] ? _args2[2] : {}, headers = _args2.length > 3 && void 0 !== _args2[3] ? _args2[3] : {}, 
            signal = _args2.length > 4 ? _args2[4] : void 0, query = _args2.length > 5 ? _args2[5] : void 0, 
            conifg = _args2.length > 6 ? _args2[6] : void 0, _context2.next = 7, (0, _popup_lib_tool_someMethod__WEBPACK_IMPORTED_MODULE_21__.XH)(method, url, data, query);

           case 7:
            return appHeader = _context2.sent, _context2.next = 10, fetch(url, {
              method,
              body: "POST" === method ? JSON.stringify(data) : null,
              headers: _objectSpread(_objectSpread({}, headers), appHeader),
              signal
            });

           case 10:
            if (middleware = _context2.sent, null == conifg || !conifg.rawResponse) {
              _context2.next = 13;
              break;
            }
            return _context2.abrupt("return", middleware);

           case 13:
            return _context2.next = 15, middleware.json();

           case 15:
            return res = _context2.sent, _context2.abrupt("return", res);

           case 17:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x3, _x4) {
        return _ref.apply(this, arguments);
      };
    }();
  },
  461276: () => {},
  473804: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => __WEBPACK_DEFAULT_EXPORT__
    });
    __webpack_require__(207452), __webpack_require__(380115), __webpack_require__(804632), 
    __webpack_require__(64189), __webpack_require__(741412), __webpack_require__(734606), 
    __webpack_require__(597755), __webpack_require__(815852), __webpack_require__(312091), 
    __webpack_require__(110678), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(505086), 
    __webpack_require__(194009), __webpack_require__(269193), __webpack_require__(504895), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(714913), __webpack_require__(498741), 
    __webpack_require__(215195), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(103101), 
    __webpack_require__(936012);
    var _polkadot_api__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(711025), _httpService__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(227383), _polkadot_util__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(660205);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    function _get() {
      return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(target, property, receiver) {
        var base = function(object, property) {
          for (;!Object.prototype.hasOwnProperty.call(object, property) && null !== (object = _getPrototypeOf(object)); ) ;
          return object;
        }(target, property);
        if (base) {
          var desc = Object.getOwnPropertyDescriptor(base, property);
          return desc.get ? desc.get.call(arguments.length < 3 ? target : receiver) : desc.value;
        }
      }, _get.apply(this, arguments);
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return function(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
          }(self);
        }(this, result);
      };
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    const __WEBPACK_DEFAULT_EXPORT__ = function(_HttpProvider) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(CustomHttpProviderSubstrate, _HttpProvider);
      var Constructor, protoProps, staticProps, fn, _send, _super = _createSuper(CustomHttpProviderSubstrate);
      function CustomHttpProviderSubstrate() {
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CustomHttpProviderSubstrate), _super.apply(this, arguments);
      }
      return Constructor = CustomHttpProviderSubstrate, protoProps = [ {
        key: "send",
        value: (fn = regeneratorRuntime.mark((function _callee(method, params, isCacheable) {
          var _this$__internal__cod, _this$__internal__cod2, body, cacheKey, appHeaders, resultPromise;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return this.__internal__stats.total.requests++, _this$__internal__cod = this.__internal__coder.encodeJson(method, params), 
              _this$__internal__cod2 = _slicedToArray(_this$__internal__cod, 2), body = _this$__internal__cod2[1], 
              cacheKey = isCacheable ? "".concat(method, "::").concat((0, _polkadot_util__WEBPACK_IMPORTED_MODULE_33__.A)(params)) : "", 
              _context.prev = 3, _context.next = 6, (0, _httpService__WEBPACK_IMPORTED_MODULE_32__.getRequestHeader)("POST", this.__internal__endpoint, JSON.parse(body));

             case 6:
              appHeaders = _context.sent, _context.next = 11;
              break;

             case 9:
              _context.prev = 9, _context.t0 = _context.catch(3);

             case 11:
              return this.__internal__headers = _objectSpread(_objectSpread({}, this.__internal__headers || {}), appHeaders || {}), 
              (resultPromise = isCacheable ? this.__internal__callCache.get(cacheKey) : null) ? this.__internal__stats.total.cached++ : (resultPromise = _get(_getPrototypeOf(CustomHttpProviderSubstrate.prototype), "__internal__send", this).call(this, body), 
              isCacheable && this.__internal__callCache.set(cacheKey, resultPromise)), _context.abrupt("return", resultPromise);

             case 15:
             case "end":
              return _context.stop();
            }
          }), _callee, this, [ [ 3, 9 ] ]);
        })), _send = function() {
          var self = this, args = arguments;
          return new Promise((function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          }));
        }, function(_x, _x2, _x3) {
          return _send.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CustomHttpProviderSubstrate;
    }(_polkadot_api__WEBPACK_IMPORTED_MODULE_31__.e);
  },
  488663: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      B: () => YLChainTronMethod
    });
    __webpack_require__(207452), __webpack_require__(754989), __webpack_require__(752231), 
    __webpack_require__(579389), __webpack_require__(505086), __webpack_require__(906048), 
    __webpack_require__(380115), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(348825), __webpack_require__(678636), __webpack_require__(259581), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(269193), __webpack_require__(564216), __webpack_require__(418665), 
    __webpack_require__(929979), __webpack_require__(14602);
    var _btc_constant__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(320913), _api_httpService__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(227383), _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(84477), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(700313), _method__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(326394), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(259159), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(660862), _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(745788);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var YLChainTronMethod = function() {
      function YLChainTronMethod(url, wasm, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _this = this;
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, YLChainTronMethod), _defineProperty(this, "mRestUrl", ""), _defineProperty(this, "wasm", {}), 
        _defineProperty(this, "totalNetworkDic", {}), _defineProperty(this, "rpcUrls", {}), 
        _defineProperty(this, "lastGetSuccessRpcTime", 0), _defineProperty(this, "signContractTransaction", function() {
          var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(params, customGasLimit) {
            var _toHexAddress, _this$wasm, HexCoding, AnySigner, CoinType, coinType, blockInfo, block, toHexAddress, fee, input, encoded, outputData, output;
            return regeneratorRuntime.wrap((function(_context) {
              for (;;) switch (_context.prev = _context.next) {
               case 0:
                return _this$wasm = _this.wasm, HexCoding = _this$wasm.HexCoding, AnySigner = _this$wasm.AnySigner, 
                CoinType = _this$wasm.CoinType, coinType = CoinType[params.coinName], _context.next = 4, 
                _this.getBlock();

               case 4:
                return blockInfo = _context.sent, block = blockInfo.block_header.raw_data, _context.next = 8, 
                _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_25__.tron2HexAddress(params.contractAddress);

               case 8:
                if (toHexAddress = _context.sent, null !== (_toHexAddress = toHexAddress) && void 0 !== _toHexAddress && _toHexAddress.startsWith("41") && (toHexAddress = toHexAddress.substring(2)), 
                !customGasLimit) {
                  _context.next = 14;
                  break;
                }
                fee = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_30__.dataOperation)(customGasLimit, Math.pow(10, 6)), 
                _context.next = 17;
                break;

               case 14:
                return _context.next = 16, _this.calculateContractFee(params.contractAddress, params.ownerAddress, "", params);

               case 16:
                fee = _context.sent;

               case 17:
                return input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningInput.create({
                  privateKey: HexCoding.decode(params.privateKeyHex),
                  transaction: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.Transaction.create({
                    feeLimit: parseInt(fee),
                    blockHeader: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.BlockHeader.create({
                      txTrieRoot: HexCoding.decode(block.txTrieRoot.toString()),
                      parentHash: HexCoding.decode(block.parentHash.toString()),
                      number: parseInt(block.number),
                      witnessAddress: HexCoding.decode(block.witness_address.toString()),
                      timestamp: parseInt(block.timestamp),
                      version: block.version
                    }),
                    triggerSmartContract: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.TriggerSmartContract.create({
                      ownerAddress: params.ownerAddress,
                      contractAddress: params.contractAddress,
                      callValue: parseInt(params.amount),
                      data: (0, _method__WEBPACK_IMPORTED_MODULE_27__.hexToBytes)(params.data.substring(2)),
                      callTokenValue: params.tokenValue ? parseInt(params.tokenValue) : null,
                      tokenId: params.tokenId ? parseInt(params.tokenId) : null
                    })
                  })
                }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningInput.encode(input).finish(), 
                outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningOutput.decode(outputData), 
                _context.abrupt("return", output.json);

               case 22:
               case "end":
                return _context.stop();
              }
            }), _callee);
          })));
          return function(_x, _x2) {
            return _ref.apply(this, arguments);
          };
        }()), this.mRestUrl = url, this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, 
        this.rpcUrls = rpcUrls, this.lastGetSuccessRpcTime = lastGetSuccessRpcTime;
      }
      var Constructor, protoProps, staticProps, _init, _getAccountResource, _getBlock, _getTransactionInfoById, _sendRawTransaction, _sendTransaction, _createTransaction, _getEnergyPrice, _estimateContractGas, _estimateGas, _calculateNormalFee, _calculateContractFee, _numberToBytes, _IntToBytesBigEndian, _signTokenTransaction, _signTransaction, _getBandwidthPrices, _isAccountActive, _getTokenBalance, _getBalance, _createAccount;
      return Constructor = YLChainTronMethod, protoProps = [ {
        key: "createAccount",
        value: (_createAccount = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(ownerAddress, accountAddress) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.createAccount), 
              _context2.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                owner_address: ownerAddress,
                account_address: accountAddress,
                visible: !0
              });

             case 3:
              return res = _context2.sent, _context2.abrupt("return", res.data.txID.toString());

             case 5:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x3, _x4) {
          return _createAccount.apply(this, arguments);
        })
      }, {
        key: "getBalance",
        value: (_getBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(walletAddress) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.getAccount), 
              _context3.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                address: walletAddress,
                visible: !0
              });

             case 3:
              return res = _context3.sent, _context3.abrupt("return", parseInt(res.data.balance));

             case 5:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x5) {
          return _getBalance.apply(this, arguments);
        })
      }, {
        key: "getTokenBalance",
        value: (_getTokenBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(item) {
          var result;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _context4.next = 2, _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_25__.getTokenBalance(item, this.totalNetworkDic, this.rpcUrls, this.lastGetSuccessRpcTime);

             case 2:
              return result = _context4.sent, _context4.abrupt("return", result);

             case 4:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x6) {
          return _getTokenBalance.apply(this, arguments);
        })
      }, {
        key: "isAccountActive",
        value: (_isAccountActive = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(walletAddress) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.getAccount), 
              _context5.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                address: walletAddress,
                visible: !0
              });

             case 3:
              return res = _context5.sent, _context5.abrupt("return", Boolean(res.data.balance));

             case 5:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x7) {
          return _isAccountActive.apply(this, arguments);
        })
      }, {
        key: "getBandwidthPrices",
        value: (_getBandwidthPrices = _asyncToGenerator(regeneratorRuntime.mark((function _callee6() {
          var path, res, prices, priceArray, currentPrice;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.getBandwidthPrices), 
              _context6.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path);

             case 3:
              if (res = _context6.sent, null == (prices = res.data.prices)) {
                _context6.next = 11;
                break;
              }
              return priceArray = prices.toString().split(","), currentPrice = priceArray[priceArray.length - 1].toString().split(":")[1], 
              _context6.abrupt("return", parseInt(currentPrice));

             case 11:
              throw "Get Energy Price Error";

             case 12:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function() {
          return _getBandwidthPrices.apply(this, arguments);
        })
      }, {
        key: "signTransaction",
        value: (_signTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(ownerAddress, toAddress, privateKeyHex, amount, coinName) {
          var _this$wasm2, HexCoding, AnySigner, CoinType, coinType, blockInfo, block, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return _this$wasm2 = this.wasm, HexCoding = _this$wasm2.HexCoding, AnySigner = _this$wasm2.AnySigner, 
              CoinType = _this$wasm2.CoinType, coinType = CoinType[coinName], _context7.next = 4, 
              this.getBlock();

             case 4:
              return blockInfo = _context7.sent, block = blockInfo.block_header.raw_data, input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningInput.create({
                privateKey: HexCoding.decode(privateKeyHex),
                transaction: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.Transaction.create({
                  blockHeader: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.BlockHeader.create({
                    txTrieRoot: HexCoding.decode(block.txTrieRoot.toString()),
                    parentHash: HexCoding.decode(block.parentHash.toString()),
                    number: parseInt(block.number),
                    witnessAddress: HexCoding.decode(block.witness_address.toString()),
                    timestamp: parseInt(block.timestamp),
                    version: block.version
                  }),
                  transfer: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.TransferContract.create({
                    ownerAddress,
                    toAddress,
                    amount: parseInt(amount)
                  })
                })
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningOutput.decode(outputData), 
              _context7.abrupt("return", output.json);

             case 11:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x8, _x9, _x10, _x11, _x12) {
          return _signTransaction.apply(this, arguments);
        })
      }, {
        key: "encodeTRC20Transfer",
        value: function(targetAddress, amount) {
          var _this$wasm3 = this.wasm, HexCoding = _this$wasm3.HexCoding, EthereumAbi = _this$wasm3.EthereumAbi, func = _this$wasm3.EthereumAbiFunction.createWithString("transfer"), tAddressHex = HexCoding.decode(targetAddress);
          func.addParamAddress(tAddressHex, 0);
          var amountBytes = (0, _method__WEBPACK_IMPORTED_MODULE_27__.hexToBytes)(parseInt(amount).toString(16));
          return func.addParamUInt256(amountBytes, 0), EthereumAbi.encode(func);
        }
      }, {
        key: "signTokenTransaction",
        value: (_signTokenTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(ownerAddress, toAddress, contractAddress, amount, privateKeyHex, fee, coinName) {
          var _this$wasm4, HexCoding, AnySigner, CoinType, coinType, blockInfo, block, _toHexAddress2, toHexAddress, data, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return _this$wasm4 = this.wasm, HexCoding = _this$wasm4.HexCoding, AnySigner = _this$wasm4.AnySigner, 
              CoinType = _this$wasm4.CoinType, coinType = CoinType[coinName], _context8.next = 4, 
              this.getBlock();

             case 4:
              if (blockInfo = _context8.sent, block = blockInfo.block_header.raw_data, fee) {
                _context8.next = 16;
                break;
              }
              return _context8.next = 9, _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_25__.tron2HexAddress(toAddress);

             case 9:
              return toHexAddress = _context8.sent, null !== (_toHexAddress2 = toHexAddress) && void 0 !== _toHexAddress2 && _toHexAddress2.startsWith("41") && (toHexAddress = toHexAddress.substring(2)), 
              data = this.encodeTRC20Transfer(toHexAddress, parseInt(amount)), _context8.next = 15, 
              this.calculateContractFee(contractAddress, ownerAddress, "transfer(address,uint256)", {
                data
              });

             case 15:
              fee = _context8.sent;

             case 16:
              return input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningInput.create({
                privateKey: HexCoding.decode(privateKeyHex),
                transaction: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.Transaction.create({
                  feeLimit: parseInt(fee),
                  blockHeader: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.BlockHeader.create({
                    txTrieRoot: HexCoding.decode(block.txTrieRoot.toString()),
                    parentHash: HexCoding.decode(block.parentHash.toString()),
                    number: parseInt(block.number),
                    witnessAddress: HexCoding.decode(block.witness_address.toString()),
                    timestamp: parseInt(block.timestamp),
                    version: block.version
                  }),
                  transferTrc20Contract: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.TransferTRC20Contract.create({
                    ownerAddress,
                    toAddress,
                    contractAddress,
                    amount: (0, _method__WEBPACK_IMPORTED_MODULE_27__.hexToBytes)(parseInt(amount).toString(16))
                  })
                })
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.TW.Tron.Proto.SigningOutput.decode(outputData), 
              _context8.abrupt("return", output.json);

             case 21:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x13, _x14, _x15, _x16, _x17, _x18, _x19) {
          return _signTokenTransaction.apply(this, arguments);
        })
      }, {
        key: "IntToBytesBigEndian",
        value: (_IntToBytesBigEndian = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(number, length) {
          var bytes, i;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              bytes = [], i = length;
              do {
                bytes[--i] = 255 & number, number >>= 8;
              } while (i);
              return _context9.abrupt("return", bytes);

             case 4:
             case "end":
              return _context9.stop();
            }
          }), _callee9);
        }))), function(_x20, _x21) {
          return _IntToBytesBigEndian.apply(this, arguments);
        })
      }, {
        key: "numberToBytes",
        value: (_numberToBytes = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(num) {
          var binary, paddedBinary, bytes, decimalBytes;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return binary = num.toString(8), paddedBinary = binary.padStart(8 * Math.ceil(binary.length / 8), "0"), 
              bytes = paddedBinary.match(/.{1,8}/g), decimalBytes = bytes.map((function(_byte) {
                return parseInt(_byte, 8);
              })), _context10.abrupt("return", decimalBytes);

             case 5:
             case "end":
              return _context10.stop();
            }
          }), _callee10);
        }))), function(_x22) {
          return _numberToBytes.apply(this, arguments);
        })
      }, {
        key: "calculateContractFee",
        value: (_calculateContractFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(contractAddress, ownerAddress, func, params) {
          var price, gas;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return _context11.next = 2, this.getEnergyPrice();

             case 2:
              return price = _context11.sent, _context11.next = 5, this.estimateGas(contractAddress, ownerAddress, func, params);

             case 5:
              return gas = _context11.sent, _context11.abrupt("return", gas * price);

             case 7:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x23, _x24, _x25, _x26) {
          return _calculateContractFee.apply(this, arguments);
        })
      }, {
        key: "calculateNormalFee",
        value: (_calculateNormalFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(ownerAddress, toAddress, amount) {
          var _transaction$raw_data, _this$wasm5, HexCoding, CoinType, HDWallet, transaction, rawTransaction, wallet, rawLength, res, signStr, sig, bytes;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return _this$wasm5 = this.wasm, HexCoding = _this$wasm5.HexCoding, CoinType = _this$wasm5.CoinType, 
              HDWallet = _this$wasm5.HDWallet, _context12.next = 3, this.createTransaction(ownerAddress, toAddress, amount);

             case 3:
              if (!(transaction = _context12.sent).Error) {
                _context12.next = 6;
                break;
              }
              throw new Error(transaction.Error);

             case 6:
              return rawTransaction = null === (_transaction$raw_data = transaction.raw_data_hex) || void 0 === _transaction$raw_data ? void 0 : _transaction$raw_data.toString(), 
              wallet = new HDWallet.create(128, ""), rawLength = HexCoding.decode(rawTransaction).length, 
              _context12.next = 11, this.signTransaction(ownerAddress, toAddress, HexCoding.encode(wallet.getKeyForCoin(CoinType.tron).data()), parseInt(amount), "tron");

             case 11:
              return res = _context12.sent, signStr = JSON.parse(res).signature[0].toString(), 
              sig = HexCoding.decode(signStr).length, bytes = rawLength + sig + 64 + 5, _context12.abrupt("return", bytes);

             case 16:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x27, _x28, _x29) {
          return _calculateNormalFee.apply(this, arguments);
        })
      }, {
        key: "estimateGas",
        value: (_estimateGas = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(contractAddress, ownerAddress, func, params) {
          var _res$data$energy_used, path, HexCoding, query, res, energyUsed;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.estimate), 
              HexCoding = this.wasm.HexCoding, query = "object" !== _typeof(params.data) ? {
                owner_address: ownerAddress,
                contract_address: contractAddress,
                function_selector: func || "",
                data: params.data,
                call_value: parseInt((null == params ? void 0 : params.amount) || 0),
                fee_limit: "1000000000",
                visible: !0
              } : {
                owner_address: ownerAddress,
                contract_address: contractAddress,
                function_selector: func,
                parameter: HexCoding.encode(params.data).substring(10),
                fee_limit: 1e9,
                visible: !0
              }, _context13.next = 5, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, query);

             case 5:
              return res = _context13.sent, energyUsed = parseInt(null === (_res$data$energy_used = res.data.energy_used) || void 0 === _res$data$energy_used ? void 0 : _res$data$energy_used.toString()), 
              _context13.abrupt("return", energyUsed);

             case 8:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x30, _x31, _x32, _x33) {
          return _estimateGas.apply(this, arguments);
        })
      }, {
        key: "estimateContractGas",
        value: (_estimateContractGas = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(contractAddress, ownerAddress, func, param, feeLimit, callValue, visible) {
          var path, res, energyUsed;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.estimate), 
              _context14.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                owner_address: ownerAddress,
                contract_address: contractAddress,
                function_selector: func,
                parameter: param,
                fee_limit: feeLimit,
                call_value: callValue,
                visible
              });

             case 3:
              return res = _context14.sent, energyUsed = parseInt(res.data.energy_used.toString()), 
              _context14.abrupt("return", energyUsed);

             case 6:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x34, _x35, _x36, _x37, _x38, _x39, _x40) {
          return _estimateContractGas.apply(this, arguments);
        })
      }, {
        key: "getEnergyPrice",
        value: (_getEnergyPrice = _asyncToGenerator(regeneratorRuntime.mark((function _callee15() {
          var url, res, prices, priceArray, currentPrice;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return url = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.gasPrice), 
              _context15.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.getData)(url);

             case 3:
              if (res = _context15.sent, null == (prices = res.data.prices)) {
                _context15.next = 11;
                break;
              }
              return priceArray = prices.toString().split(","), currentPrice = priceArray[priceArray.length - 1].toString().split(":")[1], 
              _context15.abrupt("return", parseInt(currentPrice));

             case 11:
              throw "Get Energy Price Error";

             case 12:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this);
        }))), function() {
          return _getEnergyPrice.apply(this, arguments);
        })
      }, {
        key: "createTransaction",
        value: (_createTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(ownerAddress, toAddress, amount) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.createTransaction), 
              _context16.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                to_address: toAddress,
                owner_address: ownerAddress,
                amount: parseInt(amount),
                visible: !0
              });

             case 3:
              return res = _context16.sent, _context16.abrupt("return", res.data);

             case 5:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this);
        }))), function(_x41, _x42, _x43) {
          return _createTransaction.apply(this, arguments);
        })
      }, {
        key: "sendTransaction",
        value: (_sendTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(signedTransaction) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.broadcast), 
              _context17.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                transaction: signedTransaction
              });

             case 3:
              return res = _context17.sent, _context17.abrupt("return", res.data.txid.toString());

             case 5:
             case "end":
              return _context17.stop();
            }
          }), _callee17, this);
        }))), function(_x44) {
          return _sendTransaction.apply(this, arguments);
        })
      }, {
        key: "sendRawTransaction",
        value: (_sendRawTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee18(transaction, history_data) {
          var result;
          return regeneratorRuntime.wrap((function(_context18) {
            for (;;) switch (_context18.prev = _context18.next) {
             case 0:
              return _context18.next = 2, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_26__.IM)("TRX", transaction, history_data);

             case 2:
              return result = _context18.sent, _context18.abrupt("return", result.hash);

             case 4:
             case "end":
              return _context18.stop();
            }
          }), _callee18);
        }))), function(_x45, _x46) {
          return _sendRawTransaction.apply(this, arguments);
        })
      }, {
        key: "getTransactionInfoById",
        value: (_getTransactionInfoById = _asyncToGenerator(regeneratorRuntime.mark((function _callee19(hash) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context19) {
            for (;;) switch (_context19.prev = _context19.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.getTransactionInfoById), 
              _context19.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                value: hash
              });

             case 3:
              return res = _context19.sent, _context19.abrupt("return", res.data);

             case 5:
             case "end":
              return _context19.stop();
            }
          }), _callee19, this);
        }))), function(_x47) {
          return _getTransactionInfoById.apply(this, arguments);
        })
      }, {
        key: "getBlock",
        value: (_getBlock = _asyncToGenerator(regeneratorRuntime.mark((function _callee20() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context20) {
            for (;;) switch (_context20.prev = _context20.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.getblock), 
              _context20.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {});

             case 3:
              return res = _context20.sent, _context20.abrupt("return", res.data);

             case 5:
             case "end":
              return _context20.stop();
            }
          }), _callee20, this);
        }))), function() {
          return _getBlock.apply(this, arguments);
        })
      }, {
        key: "getAccountResource",
        value: (_getAccountResource = _asyncToGenerator(regeneratorRuntime.mark((function _callee21(address) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context21) {
            for (;;) switch (_context21.prev = _context21.next) {
             case 0:
              return path = "".concat(this.mRestUrl, "/").concat(_btc_constant__WEBPACK_IMPORTED_MODULE_23__.QR.getAccountResource), 
              _context21.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)(path, {
                address,
                visible: !0
              });

             case 3:
              return res = _context21.sent, _context21.abrupt("return", res.data.freeNetLimit - res.data.freeNetUsed);

             case 5:
             case "end":
              return _context21.stop();
            }
          }), _callee21, this);
        }))), function(_x48) {
          return _getAccountResource.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee22(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var wasm, _getNetworkRestInfo, url;
          return regeneratorRuntime.wrap((function(_context22) {
            for (;;) switch (_context22.prev = _context22.next) {
             case 0:
              return _context22.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_28__.t)();

             case 2:
              return wasm = _context22.sent, _getNetworkRestInfo = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_29__.nD)("TRX", totalNetworkDic), 
              url = _getNetworkRestInfo.url, _context22.abrupt("return", new YLChainTronMethod(url, wasm, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime));

             case 5:
             case "end":
              return _context22.stop();
            }
          }), _callee22);
        }))), function(_x49, _x50, _x51) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), YLChainTronMethod;
    }();
  },
  495437: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Ey: () => getSubNonce,
      Rt: () => calculateTransactionFee,
      a4: () => sendSubToken,
      qy: () => isSubstrateAddress
    });
    __webpack_require__(207452), __webpack_require__(418665), __webpack_require__(107918), 
    __webpack_require__(505086), __webpack_require__(929979), __webpack_require__(579404), 
    __webpack_require__(39982), __webpack_require__(957399), __webpack_require__(686970), 
    __webpack_require__(811048), __webpack_require__(202236), __webpack_require__(971650), 
    __webpack_require__(326884), __webpack_require__(58710), __webpack_require__(563617), 
    __webpack_require__(383019), __webpack_require__(698657), __webpack_require__(753380), 
    __webpack_require__(14602), __webpack_require__(754989), __webpack_require__(269193), 
    __webpack_require__(118772), __webpack_require__(219693), __webpack_require__(714913), 
    __webpack_require__(579389), __webpack_require__(906048), __webpack_require__(380115), 
    __webpack_require__(689560), __webpack_require__(259581), __webpack_require__(153270), 
    __webpack_require__(658565), __webpack_require__(196088), __webpack_require__(334867), 
    __webpack_require__(194009), __webpack_require__(498741), __webpack_require__(215195), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(564216), 
    __webpack_require__(504895);
    var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(671897), _polkadot_api__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(36061), _polkadot_api__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(150742), _polkadot_api__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(378604), _api_provider_custom_http_provider_substrate__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(473804), ethers__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(937457), ethers__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(647821), _gate_gui__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(279386), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(700313), _method__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(326394), _popup_lib_tool_evm_send__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(688280), _lang_string__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(212864), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(660862);
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e2) {
              throw _e2;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e3) {
          didErr = !0, err = _e3;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var apiCache = new Map, balanceCache = new Map, isSubstrateAddress = function(address) {
      try {
        return (0, _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_40__.F)(address), !0;
      } catch (error) {
        return !1;
      }
    }, calculateTransactionFee = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(sendInfo, chainName, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var MAX_RETRIES, RETRY_DELAY, retryCount, rpcAddress, executeFeeCalculation;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return MAX_RETRIES = 3, RETRY_DELAY = 5e3, retryCount = 0, _context2.next = 5, (0, 
            _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.gL)(totalNetworkDic, chainName, rpcUrls[chainName], lastGetSuccessRpcTime);

           case 5:
            return rpcAddress = _context2.sent, executeFeeCalculation = function() {
              var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
                var subApi, provider, decimals, recipientAddress, coinTransferAmount, amount, index, walletAddr, amountHex, transfer, paymentInfo, partialFee, balanceBN, humanReadableBalance;
                return regeneratorRuntime.wrap((function(_context) {
                  for (;;) switch (_context.prev = _context.next) {
                   case 0:
                    if (subApi = apiCache.get(rpcAddress)) {
                      _context.next = 18;
                      break;
                    }
                    return _context.prev = 2, provider = rpcAddress.startsWith("wss://") ? new _polkadot_api__WEBPACK_IMPORTED_MODULE_43__.E(rpcAddress) : new _api_provider_custom_http_provider_substrate__WEBPACK_IMPORTED_MODULE_44__.A(rpcAddress), 
                    _context.next = 6, _polkadot_api__WEBPACK_IMPORTED_MODULE_41__.G.create({
                      provider
                    });

                   case 6:
                    subApi = _context.sent, apiCache.set(rpcAddress, subApi), _context.next = 18;
                    break;

                   case 10:
                    if (_context.prev = 10, _context.t0 = _context.catch(2), !(retryCount < MAX_RETRIES)) {
                      _context.next = 17;
                      break;
                    }
                    return retryCount++, _context.next = 16, new Promise((function(resolve) {
                      return setTimeout(resolve, RETRY_DELAY);
                    }));

                   case 16:
                   case 42:
                    return _context.abrupt("return", executeFeeCalculation());

                   case 17:
                    throw _context.t0;

                   case 18:
                    return decimals = null == sendInfo ? void 0 : sendInfo.coinPrecision, recipientAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, 
                    coinTransferAmount = null == sendInfo ? void 0 : sendInfo.coinTransferAmount, amount = "0", 
                    "string" == typeof coinTransferAmount ? (index = coinTransferAmount.indexOf("."), 
                    amount = -1 !== index ? coinTransferAmount.slice(0, index + decimals + 1) : coinTransferAmount) : amount = "0", 
                    walletAddr = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, amountHex = _method__WEBPACK_IMPORTED_MODULE_49__.dataOperation(amount, Math.pow(10, decimals)), 
                    _context.prev = 25, transfer = subApi.tx.balances.transferKeepAlive(recipientAddress, amountHex), 
                    _context.next = 29, transfer.paymentInfo(walletAddr);

                   case 29:
                    return paymentInfo = _context.sent, partialFee = paymentInfo.partialFee, balanceBN = ethers__WEBPACK_IMPORTED_MODULE_45__.gH.from(partialFee.toString()), 
                    humanReadableBalance = ethers__WEBPACK_IMPORTED_MODULE_46__.formatUnits(balanceBN, decimals), 
                    _context.abrupt("return", humanReadableBalance);

                   case 36:
                    if (_context.prev = 36, _context.t1 = _context.catch(25), !(retryCount < MAX_RETRIES)) {
                      _context.next = 43;
                      break;
                    }
                    return retryCount++, _context.next = 42, new Promise((function(resolve) {
                      return setTimeout(resolve, RETRY_DELAY);
                    }));

                   case 43:
                    throw _context.t1;

                   case 44:
                   case "end":
                    return _context.stop();
                  }
                }), _callee, null, [ [ 2, 10 ], [ 25, 36 ] ]);
              })));
              return function() {
                return _ref2.apply(this, arguments);
              };
            }(), _context2.prev = 7, _context2.next = 10, executeFeeCalculation();

           case 10:
            return _context2.abrupt("return", _context2.sent);

           case 13:
            return _context2.prev = 13, _context2.t0 = _context2.catch(7), _context2.abrupt("return", 0);

           case 16:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 7, 13 ] ]);
      })));
      return function(_x, _x2, _x3, _x4, _x5) {
        return _ref.apply(this, arguments);
      };
    }(), getSubBalance = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(sendInfo, chainName, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var MAX_RETRIES, retryCount, cacheKey, cached, networkKey, rpcAddress, executeBalanceCheck;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            if (MAX_RETRIES = 10, retryCount = 0, cacheKey = "".concat(chainName, "-").concat(null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress), 
            !((cached = balanceCache.get(cacheKey)) && Date.now() - cached.timestamp < 6e4)) {
              _context4.next = 6;
              break;
            }
            return _context4.abrupt("return", cached.value);

           case 6:
            return networkKey = null == sendInfo ? void 0 : sendInfo.coinNetworkKey, _context4.next = 9, 
            (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.gL)(totalNetworkDic, networkKey, rpcUrls[networkKey], lastGetSuccessRpcTime);

           case 9:
            return rpcAddress = _context4.sent, executeBalanceCheck = function() {
              var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
                var address, decimals, subApi, provider, result, existentialDeposit, balance, balanceBN_exist, existentialDepositBalance, balanceBN, humanReadableBalance, resultData;
                return regeneratorRuntime.wrap((function(_context3) {
                  for (;;) switch (_context3.prev = _context3.next) {
                   case 0:
                    if (address = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, decimals = null == sendInfo ? void 0 : sendInfo.coinPrecision, 
                    subApi = apiCache.get(rpcAddress)) {
                      _context3.next = 9;
                      break;
                    }
                    return provider = rpcAddress.startsWith("wss://") ? new _polkadot_api__WEBPACK_IMPORTED_MODULE_43__.E(rpcAddress) : new _api_provider_custom_http_provider_substrate__WEBPACK_IMPORTED_MODULE_44__.A(rpcAddress), 
                    _context3.next = 7, _polkadot_api__WEBPACK_IMPORTED_MODULE_41__.G.create({
                      provider
                    });

                   case 7:
                    subApi = _context3.sent, apiCache.set(rpcAddress, subApi);

                   case 9:
                    return _context3.prev = 9, _context3.next = 12, subApi.query.system.account(address);

                   case 12:
                    return result = _context3.sent, existentialDeposit = subApi.consts.balances.existentialDeposit, 
                    balance = result.data.free, balanceBN_exist = ethers__WEBPACK_IMPORTED_MODULE_45__.gH.from(existentialDeposit.toString()), 
                    existentialDepositBalance = ethers__WEBPACK_IMPORTED_MODULE_46__.formatUnits(balanceBN_exist, decimals), 
                    balanceBN = ethers__WEBPACK_IMPORTED_MODULE_45__.gH.from(balance.toString()), humanReadableBalance = ethers__WEBPACK_IMPORTED_MODULE_46__.formatUnits(balanceBN, decimals), 
                    resultData = {
                      isActive: balance.gte(existentialDeposit),
                      activeLimit: existentialDepositBalance,
                      balance: humanReadableBalance
                    }, balanceCache.set(cacheKey, {
                      value: resultData,
                      timestamp: Date.now()
                    }), _context3.abrupt("return", resultData);

                   case 24:
                    if (_context3.prev = 24, _context3.t0 = _context3.catch(9), !(retryCount < MAX_RETRIES)) {
                      _context3.next = 31;
                      break;
                    }
                    return retryCount++, _context3.next = 30, new Promise((function(resolve) {
                      return setTimeout(resolve, 5e3);
                    }));

                   case 30:
                    return _context3.abrupt("return", executeBalanceCheck());

                   case 31:
                    throw _context3.t0;

                   case 32:
                   case "end":
                    return _context3.stop();
                  }
                }), _callee3, null, [ [ 9, 24 ] ]);
              })));
              return function() {
                return _ref4.apply(this, arguments);
              };
            }(), _context4.abrupt("return", executeBalanceCheck());

           case 12:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x6, _x7, _x8, _x9, _x10) {
        return _ref3.apply(this, arguments);
      };
    }();
    setInterval((function() {
      var _step, now = Date.now(), _iterator = _createForOfIteratorHelper(balanceCache);
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _step$value = _slicedToArray(_step.value, 2), key = _step$value[0];
          now - _step$value[1].timestamp > 6e4 && balanceCache.delete(key);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }), 6e4);
    var getSubNonce = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(address, chainName, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var rpcAddress, subApi, provider, data;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _context6.next = 2, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.gL)(totalNetworkDic, chainName, rpcUrls[chainName], lastGetSuccessRpcTime);

           case 2:
            if (rpcAddress = _context6.sent, subApi = apiCache.get(rpcAddress)) {
              _context6.next = 10;
              break;
            }
            return provider = rpcAddress.startsWith("wss://") ? new _polkadot_api__WEBPACK_IMPORTED_MODULE_43__.E(rpcAddress) : new _api_provider_custom_http_provider_substrate__WEBPACK_IMPORTED_MODULE_44__.A(rpcAddress), 
            _context6.next = 8, _polkadot_api__WEBPACK_IMPORTED_MODULE_41__.G.create({
              provider
            });

           case 8:
            subApi = _context6.sent, apiCache.set(rpcAddress, subApi);

           case 10:
            return _context6.next = 12, subApi.query.system.account(address);

           case 12:
            return data = _context6.sent, _context6.abrupt("return", data.nonce.toString());

           case 14:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x16, _x17, _x18, _x19, _x20) {
        return _ref8.apply(this, arguments);
      };
    }(), sendSubToken = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(chainName, sendInfo, privateKey, setLoading, history) {
        var isReturn, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, rpcAddress, subApi, provider, balanceInfo, decimals, transferAmount, feeAmount, totalRequired, currentBalance, existentialDeposit, remainingBalance, finnalPriveteKey, chainSS58, sender, keyring, _keyring, amountHex, transfer, signedTransaction, transBalanceUsd, history_data, result, txhash, _args7 = arguments;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return isReturn = _args7.length > 5 && void 0 !== _args7[5] && _args7[5], totalNetworkDic = _args7.length > 6 ? _args7[6] : void 0, 
            rpcUrls = _args7.length > 7 ? _args7[7] : void 0, lastGetSuccessRpcTime = _args7.length > 8 ? _args7[8] : void 0, 
            _context7.next = 6, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.gL)(totalNetworkDic, chainName, rpcUrls[chainName], lastGetSuccessRpcTime);

           case 6:
            if (rpcAddress = _context7.sent, subApi = apiCache.get(rpcAddress)) {
              _context7.next = 14;
              break;
            }
            return provider = rpcAddress.startsWith("wss://") ? new _polkadot_api__WEBPACK_IMPORTED_MODULE_43__.E(rpcAddress) : new _api_provider_custom_http_provider_substrate__WEBPACK_IMPORTED_MODULE_44__.A(rpcAddress), 
            _context7.next = 12, _polkadot_api__WEBPACK_IMPORTED_MODULE_41__.G.create({
              provider
            });

           case 12:
            subApi = _context7.sent, apiCache.set(rpcAddress, subApi);

           case 14:
            return _context7.next = 16, getSubBalance(sendInfo, chainName, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 16:
            if (balanceInfo = _context7.sent, decimals = null == sendInfo ? void 0 : sendInfo.coinPrecision, 
            transferAmount = parseFloat(null == sendInfo ? void 0 : sendInfo.coinTransferAmount), 
            feeAmount = parseFloat((null == sendInfo ? void 0 : sendInfo.coinTransferFee) || "0"), 
            totalRequired = transferAmount + feeAmount, !((currentBalance = parseFloat(balanceInfo.balance)) < totalRequired)) {
              _context7.next = 26;
              break;
            }
            return setLoading(!1), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_47__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_51__.lang_string)("Insufficient balance to cover transfer amount and fees")
            }), _context7.abrupt("return", null);

           case 26:
            if (existentialDeposit = parseFloat(balanceInfo.activeLimit), !((remainingBalance = currentBalance - totalRequired) > 0 && remainingBalance < existentialDeposit)) {
              _context7.next = 32;
              break;
            }
            return setLoading(!1), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_47__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_51__.lang_string)("Transfer would leave account below existential deposit")
            }), _context7.abrupt("return", null);

           case 32:
            return finnalPriveteKey = privateKey.startsWith("0x") ? privateKey : "0x" + privateKey, 
            chainSS58 = subApi.registry.chainSS58, "ed25519" === (null == sendInfo ? void 0 : sendInfo.accountFormat) ? (keyring = new _polkadot_api__WEBPACK_IMPORTED_MODULE_42__.S({
              type: "ed25519",
              ss58Format: chainSS58
            }), sender = keyring.addFromUri(finnalPriveteKey)) : (_keyring = new _polkadot_api__WEBPACK_IMPORTED_MODULE_42__.S({
              type: "sr25519",
              ss58Format: chainSS58
            }), sender = _keyring.addFromUri(finnalPriveteKey)), amountHex = _method__WEBPACK_IMPORTED_MODULE_49__.dataOperation(null == sendInfo ? void 0 : sendInfo.coinTransferAmount, Math.pow(10, decimals)), 
            transfer = subApi.tx.balances.transferKeepAlive(null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, amountHex), 
            _context7.next = 39, transfer.signAsync(sender);

           case 39:
            if (signedTransaction = _context7.sent, !isReturn || !signedTransaction) {
              _context7.next = 42;
              break;
            }
            return _context7.abrupt("return", signedTransaction);

           case 42:
            return transBalanceUsd = "number" == typeof (null == sendInfo ? void 0 : sendInfo.coinUnitPrice) ? Number(null == sendInfo ? void 0 : sendInfo.coinUnitPrice).toFixed(4) : "0.0000", 
            history_data = {
              chain_type: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
              address: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
              chain_name: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
              token_addr: null == sendInfo ? void 0 : sendInfo.coinContractAddress,
              token_name: sendInfo.coinSimpleName,
              token_short_name: sendInfo.coinSimpleName,
              trans_type: "send",
              chain_key: null == sendInfo ? void 0 : sendInfo.coinNetworkSymbol,
              trans_time: Math.floor((new Date).getTime() / 1e3),
              trans_balance: null == sendInfo ? void 0 : sendInfo.coinTransferAmount,
              trans_balance_usd: transBalanceUsd,
              nonce: null == sendInfo ? void 0 : sendInfo.coinTransferNonce,
              is_contra: "0",
              trans_oppo_address: null == sendInfo ? void 0 : sendInfo.coinTransferToAddress,
              trans_gas_fee: null == sendInfo ? void 0 : sendInfo.coinTransferFee,
              inputs: "",
              outputs: "",
              action_type: 1,
              memo: null == sendInfo ? void 0 : sendInfo.memo,
              memo_name: null == sendInfo ? void 0 : sendInfo.memo_name,
              platform_operation: null == sendInfo ? void 0 : sendInfo.platform_operation,
              platform_name: null == sendInfo ? void 0 : sendInfo.platform_name
            }, _context7.prev = 44, _context7.next = 47, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_48__.IM)(null == sendInfo ? void 0 : sendInfo.coinNetworkKey, signedTransaction, history_data);

           case 47:
            if (200 !== (result = _context7.sent).status) {
              _context7.next = 60;
              break;
            }
            if (200 !== result.data.code) {
              _context7.next = 56;
              break;
            }
            return txhash = result.data.data.hash_id, _popup_lib_tool_evm_send__WEBPACK_IMPORTED_MODULE_50__.M6(sendInfo, txhash, history), 
            setLoading(!1), _context7.abrupt("return", result.data.data.hash_id);

           case 56:
            setLoading(!1), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_47__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_51__.lang_string)("发送失败")
            });

           case 58:
            _context7.next = 63;
            break;

           case 60:
            return setLoading(!1), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_47__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_51__.lang_string)("发送失败")
            }), _context7.abrupt("return", null);

           case 63:
            _context7.next = 68;
            break;

           case 65:
            return _context7.prev = 65, _context7.t0 = _context7.catch(44), _context7.abrupt("return", _context7.t0);

           case 68:
           case "end":
            return _context7.stop();
          }
        }), _callee7, null, [ [ 44, 65 ] ]);
      })));
      return function(_x21, _x22, _x23, _x24, _x25) {
        return _ref9.apply(this, arguments);
      };
    }();
  },
  503591: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Hw: () => SOLANA_CREATE_AMOUNT,
      U: () => SEND_ERROR_TYPE_MAP,
      ZP: () => SOLANA_SPL2022_CREATE_AMOUNT,
      aA: () => SVM_CREATE_AMOUNT_MAP,
      gs: () => MIN_SEND_AMOUNT_MAP,
      iE: () => LTC_MIN_KEEP_AMOUNT,
      z: () => SOLANA_SPL20_CREATE_AMOUNT
    });
    var LTC_MIN_KEEP_AMOUNT = 546e-6, SOLANA_CREATE_AMOUNT = 89088e-8, SOLANA_SPL20_CREATE_AMOUNT = .00203928, SOLANA_SPL2022_CREATE_AMOUNT = .00207408, SVM_CREATE_AMOUNT_MAP = {
      SOL: 89088e-8,
      SONIC_SVM: 89088e-8,
      SOON_ETH: 8e-6,
      SOONBASE: 768e-9,
      SVMBNB: 768e-9,
      ECLIPSE: 89088e-8
    }, MIN_SEND_AMOUNT_MAP = {
      BTC: 1e3,
      FB: 1e3,
      DASH: 546,
      DOGE: 1e6,
      LTC: 1e4,
      BCH: 1e3,
      SOL: 890880,
      SONIC_SVM: 890880,
      SOON_ETH: 800,
      SOONBASE: 768,
      SVMBNB: 768,
      ECLIPSE: 890880,
      ADA: 1e6,
      CKB: 62e8,
      TBC: 42
    }, SEND_ERROR_TYPE_MAP = {
      EMPTY: -2,
      LOADING: -1,
      NORMAL: 0,
      ERROR: 1,
      INSUFFICIENT_BALANCE: 2,
      INSUFFICIENT_MAIN_TOKEN_BALANCE: 3,
      INSUFFICIENT_BTC: 4
    };
  },
  508699: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      getAccountAddressByWeb3Name: () => getAccountAddressByWeb3Name,
      getAccountDomainByAddress: () => getAccountDomainByAddress,
      getEVMAddressFromIOTX: () => getEVMAddressFromIOTX,
      getIOTXAddress: () => getIOTXAddress,
      getTonAddress: () => getTonAddress,
      getTonEQAddress: () => getTonEQAddress,
      omitAddress: () => omitAddress
    });
    __webpack_require__(207452), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(380115), __webpack_require__(447746), 
    __webpack_require__(43148), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(210557), __webpack_require__(868329), __webpack_require__(269193);
    var _iotexproject_iotex_address_ts__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(242005), _ton_ton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(823515), _tallyho_hd_keyring__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(53719), _web3_name_sdk_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(642451), _gt_api_account__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(724959);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getIOTXAddress = function(address) {
      try {
        var _from;
        return null === (_from = (0, _iotexproject_iotex_address_ts__WEBPACK_IMPORTED_MODULE_12__.HT)(address)) || void 0 === _from ? void 0 : _from.string();
      } catch (_unused) {
        return "";
      }
    }, getTonAddress = function(address) {
      try {
        return _ton_ton__WEBPACK_IMPORTED_MODULE_13__.Address.parse(address).toString({
          bounceable: !1
        });
      } catch (_unused2) {
        return "";
      }
    }, getTonEQAddress = function(address) {
      try {
        return _ton_ton__WEBPACK_IMPORTED_MODULE_13__.Address.parse(address).toString({
          bounceable: !0
        });
      } catch (_unused3) {
        return "";
      }
    }, getEVMAddressFromIOTX = function(address) {
      try {
        var _from2;
        return (0, _tallyho_hd_keyring__WEBPACK_IMPORTED_MODULE_14__.BA)(null === (_from2 = (0, 
        _iotexproject_iotex_address_ts__WEBPACK_IMPORTED_MODULE_12__.HT)(address)) || void 0 === _from2 ? void 0 : _from2.stringEth());
      } catch (_unused4) {
        return "";
      }
    }, omitAddress = function(str, len1, len2) {
      return (null == str ? void 0 : str.length) > len1 + len2 ? "".concat(str.substring(0, len1), "...").concat(str.substring(str.length - len2)) : str;
    }, getAccountAddressByWeb3Name = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(name) {
        var web3Name, address, spaceName, _name$split, _name$split$reverse, _name$split$reverse$, _res$data$data$addres, _res$data, _res$data$data, tld, res;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            if (!(name.includes(".bnb") || name.includes(".eth") || name.includes(".arb"))) {
              _context.next = 14;
              break;
            }
            return _context.prev = 1, web3Name = (0, _web3_name_sdk_core__WEBPACK_IMPORTED_MODULE_15__.N)(), 
            _context.next = 5, web3Name.getAddress(name, {
              timeout: 5e3
            });

           case 5:
            return address = _context.sent, _context.abrupt("return", null != address ? address : "");

           case 9:
            return _context.prev = 9, _context.t0 = _context.catch(1), _context.abrupt("return", "");

           case 12:
            _context.next = 28;
            break;

           case 14:
            if (_context.prev = 14, spaceName = "", !name.includes(".")) {
              _context.next = 22;
              break;
            }
            return tld = null == name || null === (_name$split = name.split(".")) || void 0 === _name$split || null === (_name$split$reverse = _name$split.reverse()) || void 0 === _name$split$reverse || null === (_name$split$reverse$ = _name$split$reverse[0]) || void 0 === _name$split$reverse$ ? void 0 : _name$split$reverse$.trim(), 
            _context.next = 20, (0, _gt_api_account__WEBPACK_IMPORTED_MODULE_16__.O8)({
              domain: name,
              tld
            });

           case 20:
            res = _context.sent, spaceName = null !== (_res$data$data$addres = null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$data = _res$data.data) || void 0 === _res$data$data ? void 0 : _res$data$data.address) && void 0 !== _res$data$data$addres ? _res$data$data$addres : "";

           case 22:
            return _context.abrupt("return", spaceName);

           case 25:
            return _context.prev = 25, _context.t1 = _context.catch(14), _context.abrupt("return", "");

           case 28:
           case "end":
            return _context.stop();
          }
        }), _callee, null, [ [ 1, 9 ], [ 14, 25 ] ]);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), getAccountDomainByAddress = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(address, chainId) {
        var name, _yield$web3Name$getDo, web3Name;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return name = "", _context2.prev = 1, web3Name = (0, _web3_name_sdk_core__WEBPACK_IMPORTED_MODULE_15__.N)(), 
            _context2.next = 5, web3Name.getDomainName({
              address,
              queryChainIdList: [ chainId ]
            });

           case 5:
            if (_context2.t1 = _yield$web3Name$getDo = _context2.sent, _context2.t0 = null !== _context2.t1, 
            !_context2.t0) {
              _context2.next = 9;
              break;
            }
            _context2.t0 = void 0 !== _yield$web3Name$getDo;

           case 9:
            if (!_context2.t0) {
              _context2.next = 13;
              break;
            }
            _context2.t2 = _yield$web3Name$getDo, _context2.next = 14;
            break;

           case 13:
            _context2.t2 = "";

           case 14:
            name = _context2.t2, _context2.next = 20;
            break;

           case 17:
            return _context2.prev = 17, _context2.t3 = _context2.catch(1), _context2.abrupt("return", "");

           case 20:
            return _context2.abrupt("return", name);

           case 21:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 1, 17 ] ]);
      })));
      return function(_x2, _x3) {
        return _ref2.apply(this, arguments);
      };
    }();
  },
  524394: () => {},
  530966: () => {},
  540093: () => {},
  551258: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      AC: () => editToken,
      Am: () => getInfoCoin,
      Aq: () => addCustomTokenInCustomNetwork,
      JY: () => getHomeTokenSearch,
      L$: () => getSupportSwap,
      PC: () => getCoinDetail,
      Qr: () => getTokenInfo,
      SB: () => getCoinMedia,
      X2: () => getSupportToken,
      Y1: () => getTokenSearch,
      Y6: () => postConfigTokenInfo,
      YO: () => getAssetPrice,
      ah: () => getTokenAggregation,
      dc: () => getHomeTokenList,
      f0: () => postAssetReport,
      p2: () => customerEvmTransAllCoin,
      qR: () => customerEvmToken,
      u7: () => getAddressToken,
      uC: () => addCustomToken,
      uN: () => postWalletCoinDetail,
      vG: () => postCustomerEvmCoinDetail,
      wc: () => delCustomNetworkToken
    });
    __webpack_require__(207452), __webpack_require__(259581), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(407899), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(505086), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(103101), 
    __webpack_require__(936012), __webpack_require__(269193), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602);
    var _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(525735), ___WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(358547);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var postWalletCoinDetail = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/asset/wallet/coin/detail"), {}, params);
    }, postCustomerEvmCoinDetail = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.O5, "/customerNetwork/customerEvmCoinDetail"), {}, params);
    }, getCoinDetail = function(query, language) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/coin-detail"), query, {}, "", {}, {
        language
      });
    }, getCoinMedia = function(query) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/coin-media"), query);
    }, getInfoCoin = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.zC, "/token/native-price"), {}, params);
    }, getSupportToken = function(query) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/support"), query);
    }, customerEvmTransAllCoin = function(query) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.O5, "/customerNetwork/customerEvmTransAllCoin"), query);
    }, getTokenSearch = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/search"), params, void 0, void 0, void 0, {
        cancelPrevious: !0,
        ignoreParams: !0
      });
    }, getTokenInfo = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.zC, "/token/info"), _objectSpread({
        url: "/token/info"
      }, params));
    }, editToken = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/edit"), {}, params, "data");
    }, delCustomNetworkToken = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.O5, "/customerNetwork/delCustomerNetworkToken"), {}, params, "data");
    }, addCustomToken = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/add"), {}, params, "data");
    }, addCustomTokenInCustomNetwork = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.O5, "/customerNetwork/addCustomerNetworkToken"), {}, params, "data");
    }, dataDeal = function(data) {
      if (!data) return data;
      var processItems = function(items) {
        return items ? items.map((function(item) {
          var network = (null == item ? void 0 : item.network) || {};
          return Object.keys(network).forEach((function(key) {
            item[key] = network[key];
          })), item;
        })) : items;
      };
      return data.coinArrValidate = processItems(data.coinArrValidate), data.hotTokenList = processItems(data.hotTokenList), 
      data;
    }, getHomeTokenList = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
        var originalData;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/wallet/token-list"), void 0, params);

           case 2:
            return originalData = _context.sent, _context.abrupt("return", dataDeal(originalData));

           case 4:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), getHomeTokenSearch = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
        var originalData;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/index-search"), _objectSpread({
              url: "/token/address"
            }, params));

           case 2:
            return originalData = _context2.sent, _context2.abrupt("return", dataDeal(originalData));

           case 4:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x2) {
        return _ref2.apply(this, arguments);
      };
    }(), customerEvmToken = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.O5, "/customerNetwork/customerEvmToken"), {}, params);
    }, getTokenAggregation = function() {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/aggregation"));
    }, postAssetReport = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/asset/project/asset-report"), {}, params);
    }, getAddressToken = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.bj, "/token/address"), params);
    }, getAssetPrice = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.zC, "/wallet/total-asset"), {}, params);
    }, getSupportSwap = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_22__.zC, "/token/support-swap"), params);
    }, postConfigTokenInfo = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_21__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_22__.zC, "/v1/defi/config/token/info"), params);
    };
  },
  566560: () => {},
  574867: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      DA: () => createAccountByExtendPrivateKey,
      F8: () => createAccountByMnemonic,
      Vj: () => createAccountByPrivateKey,
      a6: () => everCode,
      aM: () => getAddressByPublicKey,
      zj: () => getConfig
    });
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(207452);
    var _eversdk_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(11054), _walletCore_account__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(266744), _method__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(326394), _public_eversdk_1_45_wasm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(205093), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(259159), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(660862);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    _eversdk_core__WEBPACK_IMPORTED_MODULE_3__.TonClient.useBinaryLibrary(_public_eversdk_1_45_wasm_js__WEBPACK_IMPORTED_MODULE_6__.U);
    var everCode = "te6cckEBBgEA/AABFP8A9KQT9LzyyAsBAgEgAgMABNIwAubycdcBAcAA8nqDCNcY7UTQgwfXAdcLP8j4KM8WI88WyfkAA3HXAQHDAJqDB9cBURO68uBk3oBA1wGAINcBgCDXAVQWdfkQ8qj4I7vyeWa++COBBwiggQPoqFIgvLHydAIgghBM7mRsuuMPAcjL/8s/ye1UBAUAmDAC10zQ+kCDBtcBcdcBeNcB10z4AHCAEASqAhSxyMsFUAXPFlAD+gLLaSLQIc8xIddJoIQJuZgzcAHLAFjPFpcwcQHLABLM4skB+wAAPoIQFp4+EbqOEfgAApMg10qXeNcB1AL7AOjRkzLyPOI+zYS/", getAddressByPublicKey = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(publicKey, client) {
        var encodeBoc, initData, encodeStateInit, stateInit, hash, address;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, client.abi.encode_boc({
              params: [ {
                name: "publicKey",
                type: "uint256"
              }, {
                name: "timestamp",
                type: "uint64"
              } ],
              data: {
                publicKey: (0, _method__WEBPACK_IMPORTED_MODULE_5__.addHexPrefix)(publicKey),
                timestamp: 0
              }
            });

           case 2:
            return encodeBoc = _context.sent, initData = null == encodeBoc ? void 0 : encodeBoc.boc, 
            _context.next = 6, client.boc.encode_state_init({
              code: everCode,
              data: initData
            });

           case 6:
            return encodeStateInit = _context.sent, stateInit = null == encodeStateInit ? void 0 : encodeStateInit.state_init, 
            _context.next = 10, client.boc.get_boc_hash({
              boc: stateInit
            });

           case 10:
            return hash = _context.sent, address = "0:".concat(null == hash ? void 0 : hash.hash), 
            _context.abrupt("return", address);

           case 13:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }(), getConfig = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var config, rpc;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return config = {
              network: {
                endpoints: [ "https://gql.venom.foundation/graphql" ],
                message_retries_count: 5,
                message_processing_timeout: 4e4,
                wait_for_timeout: 4e4,
                out_of_sync_threshold: 15e3,
                access_key: ""
              },
              crypto: {
                fish_param: ""
              },
              abi: {
                message_expiration_timeout: 4e4,
                message_expiration_timeout_grow_factor: 1.5
              }
            }, _context2.prev = 2, _context2.next = 5, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_8__.gL)(totalNetworkDic, "VENOM", rpcUrls.VENOM, lastGetSuccessRpcTime);

           case 5:
            return rpc = _context2.sent, config.network.endpoints = [ rpc ], _context2.abrupt("return", config);

           case 10:
            _context2.prev = 10, _context2.t0 = _context2.catch(2);

           case 12:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 2, 10 ] ]);
      })));
      return function(_x3, _x4, _x5) {
        return _ref2.apply(this, arguments);
      };
    }(), createAccountByPrivateKey = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(privatekeyHex, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _yield$getWasm, PrivateKey, HexCoding, config, mClient, publicKey, address, model;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_7__.t)();

           case 2:
            return _yield$getWasm = _context3.sent, PrivateKey = _yield$getWasm.PrivateKey, 
            HexCoding = _yield$getWasm.HexCoding, _yield$getWasm.Curve, _context3.next = 8, 
            getConfig(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 8:
            return config = _context3.sent, mClient = new _eversdk_core__WEBPACK_IMPORTED_MODULE_3__.TonClient(config), 
            publicKey = HexCoding.encode(PrivateKey.createWithData(HexCoding.decode(privatekeyHex)).getPublicKeyEd25519().data()), 
            _context3.next = 13, getAddressByPublicKey(publicKey, mClient);

           case 13:
            return address = _context3.sent, model = new _walletCore_account__WEBPACK_IMPORTED_MODULE_4__.QY("VENOM", 0, address, privatekeyHex, (0, 
            _method__WEBPACK_IMPORTED_MODULE_5__.addHexPrefix)(publicKey), "", "", "m/44'/396'/0'/0/0", "m/44'/396'/0'/0/0"), 
            _context3.abrupt("return", model);

           case 16:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x6, _x7, _x8, _x9) {
        return _ref3.apply(this, arguments);
      };
    }(), createAccountByExtendPrivateKey = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(xprv, path, position, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var config, mClient, pair, publicKey, secret, address, model;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.next = 2, getConfig(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return config = _context4.sent, mClient = new _eversdk_core__WEBPACK_IMPORTED_MODULE_3__.TonClient(config), 
            _context4.next = 6, mClient.crypto.hdkey_derive_from_xprv_path({
              xprv,
              path
            });

           case 6:
            return pair = _context4.sent, _context4.next = 9, mClient.crypto.hdkey_public_from_xprv({
              xprv: null == pair ? void 0 : pair.xprv
            });

           case 9:
            return publicKey = _context4.sent, _context4.next = 12, mClient.crypto.hdkey_secret_from_xprv({
              xprv: pair.xprv
            });

           case 12:
            return secret = _context4.sent, _context4.next = 15, getAddressByPublicKey(null == publicKey ? void 0 : publicKey.public, mClient);

           case 15:
            return address = _context4.sent, model = new _walletCore_account__WEBPACK_IMPORTED_MODULE_4__.QY("VENOM", position, address, (0, 
            _method__WEBPACK_IMPORTED_MODULE_5__.addHexPrefix)(null == secret ? void 0 : secret.secret), (0, 
            _method__WEBPACK_IMPORTED_MODULE_5__.addHexPrefix)(null == publicKey ? void 0 : publicKey.public), xprv, "", "m/44'/396'/0'/0/0", "m/44'/396'/0'/0/0"), 
            _context4.abrupt("return", model);

           case 18:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x10, _x11, _x12, _x13, _x14, _x15) {
        return _ref4.apply(this, arguments);
      };
    }(), createAccountByMnemonic = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(mnemonic, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var config, mClient, xPrivInfo, pair, publicKey, secret, address, model;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return _context5.next = 2, getConfig(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return config = _context5.sent, mClient = new _eversdk_core__WEBPACK_IMPORTED_MODULE_3__.TonClient(config), 
            _context5.next = 6, mClient.crypto.hdkey_xprv_from_mnemonic({
              phrase: mnemonic
            });

           case 6:
            return xPrivInfo = _context5.sent, _context5.next = 9, mClient.crypto.hdkey_derive_from_xprv_path({
              xprv: null == xPrivInfo ? void 0 : xPrivInfo.xprv,
              path: "m/44'/396'/0'/0/0"
            });

           case 9:
            return pair = _context5.sent, _context5.next = 12, mClient.crypto.hdkey_public_from_xprv({
              xprv: null == pair ? void 0 : pair.xprv
            });

           case 12:
            return publicKey = _context5.sent, _context5.next = 15, mClient.crypto.hdkey_secret_from_xprv({
              xprv: null == pair ? void 0 : pair.xprv
            });

           case 15:
            return secret = _context5.sent, _context5.next = 18, getAddressByPublicKey(null == publicKey ? void 0 : publicKey.public, mClient);

           case 18:
            return address = _context5.sent, model = new _walletCore_account__WEBPACK_IMPORTED_MODULE_4__.QY("VENOM", 0, address, (0, 
            _method__WEBPACK_IMPORTED_MODULE_5__.addHexPrefix)(null == secret ? void 0 : secret.secret), (0, 
            _method__WEBPACK_IMPORTED_MODULE_5__.addHexPrefix)(null == publicKey ? void 0 : publicKey.public), null == xPrivInfo ? void 0 : xPrivInfo.xprv, "", "m/44'/396'/0'/0/0", "m/44'/396'/0'/0"), 
            _context5.abrupt("return", model);

           case 21:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })));
      return function(_x16, _x17, _x18, _x19) {
        return _ref5.apply(this, arguments);
      };
    }();
  },
  578131: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      changePublicKey: () => changePublicKey,
      cloudPasswordVerify: () => cloudPasswordVerify,
      contrastUid: () => contrastUid,
      createWalletEncrypt: () => createWalletEncrypt,
      decodeItemPut: () => decodeItemPut,
      decodeSingleWallet: () => decodeSingleWallet,
      decryptionTxt: () => decryptionTxt,
      editEncryption: () => editEncryption,
      fundEncode: () => fundEncode,
      getJoinStr: () => getJoinStr,
      localDataEncryption: () => localDataEncryption,
      postBackupItem: () => postBackupItem,
      pushkeyVal: () => pushkeyVal,
      regroupAppData: () => regroupAppData,
      resetUploadBackupData: () => resetUploadBackupData
    });
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(700017), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(504895), 
    __webpack_require__(687136), __webpack_require__(158649), __webpack_require__(80475), 
    __webpack_require__(992157), __webpack_require__(407899), __webpack_require__(259581), 
    __webpack_require__(663555), __webpack_require__(929979), __webpack_require__(418665), 
    __webpack_require__(14602), __webpack_require__(718636), __webpack_require__(380115), 
    __webpack_require__(107918), __webpack_require__(579404), __webpack_require__(39982), 
    __webpack_require__(957399), __webpack_require__(686970), __webpack_require__(811048), 
    __webpack_require__(202236), __webpack_require__(971650), __webpack_require__(326884), 
    __webpack_require__(58710), __webpack_require__(563617), __webpack_require__(383019), 
    __webpack_require__(698657), __webpack_require__(753380), __webpack_require__(168763), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(110678), __webpack_require__(103101), __webpack_require__(936012), 
    __webpack_require__(564216), __webpack_require__(215195), __webpack_require__(714913), 
    __webpack_require__(498741), __webpack_require__(207452);
    var _crypto_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(532437), uuid__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(418562), _model_defiWalletData__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(535561), _evm_wallet__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(98751), _model_projectData__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(315733), _api_api__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(653360), _method__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(326394), _lang_string__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(212864), _gate_gui__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(279386), _utils__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(219740), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(660862);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var changePublicKey = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(cookiesStr) {
        var scene, pubRandom, ECDHSecret, body, datesRes, _args = arguments;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return scene = _args.length > 1 && void 0 !== _args[1] ? _args[1] : "", _context.next = 3, 
            _method__WEBPACK_IMPORTED_MODULE_53__.getDefiItem("ECDHPublicKey");

           case 3:
            if (!_context.sent) {
              _context.next = 9;
              break;
            }
            return _context.next = 6, _method__WEBPACK_IMPORTED_MODULE_53__.getDefiItem("ECDHPublicKey");

           case 6:
            _context.t0 = _context.sent, _context.next = 10;
            break;

           case 9:
            _context.t0 = {};

           case 10:
            if (_context.t0, _method__WEBPACK_IMPORTED_MODULE_53__.getNowTime(), pubRandom = (0, 
            _crypto_js__WEBPACK_IMPORTED_MODULE_47__.UC)(), ECDHSecret = "", body = {
              cookie_web: cookiesStr,
              scene
            }, datesRes = {}, !cookiesStr) {
              _context.next = 19;
              break;
            }
            return _context.next = 19, _api_api__WEBPACK_IMPORTED_MODULE_52__.getECDHPublicKey(body).then((function(res) {
              var _datesRes, datas = res.datas, resMsg = res.resMsg;
              0 === (null == resMsg ? void 0 : resMsg.code) ? (datesRes = _objectSpread(_objectSpread({}, datas), {}, {
                code: null == resMsg ? void 0 : resMsg.code
              }), ECDHSecret = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.hF)(null == pubRandom ? void 0 : pubRandom.key, null === (_datesRes = datesRes) || void 0 === _datesRes ? void 0 : _datesRes.pub), 
              _method__WEBPACK_IMPORTED_MODULE_53__.setDefiData({
                ECDHPublicKey: datas
              })) : (datesRes = _objectSpread(_objectSpread({}, datas), {}, {
                code: null == resMsg ? void 0 : resMsg.code
              }), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                type: "error",
                message: null == resMsg ? void 0 : resMsg.message
              }));
            })).catch((function(res) {
              var resMsg = res.resMsg;
              datesRes = {
                code: null == resMsg ? void 0 : resMsg.code
              }, (0, _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                type: "error",
                message: null == resMsg ? void 0 : resMsg.message
              });
            }));

           case 19:
            return _context.abrupt("return", _objectSpread(_objectSpread({}, datesRes), {}, {
              ECDHSecret,
              public: null == pubRandom ? void 0 : pubRandom.public
            }));

           case 20:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), fundEncode = function(str, userCookies) {
      var scene = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "createAccount", pwValue = arguments.length > 3 ? arguments[3] : void 0, encTicket = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "";
      return new Promise((function(resolve, reject) {
        changePublicKey(userCookies, scene).then(function() {
          var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(pubRes) {
            var paramsData;
            return regeneratorRuntime.wrap((function(_context2) {
              for (;;) switch (_context2.prev = _context2.next) {
               case 0:
                0 != pubRes.code && reject({}), paramsData = {
                  clientPubKey: pubRes.public,
                  encryptStr: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(str, pubRes.ECDHSecret),
                  scene: scene || "createAccount",
                  encryptMD5Key: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.vL)(pwValue),
                  cookie_web: userCookies,
                  encTicket
                }, _api_api__WEBPACK_IMPORTED_MODULE_52__.encryptionBatch(paramsData).then((function(response) {
                  var _response$resMsg, _response$resMsg2;
                  0 != (null == response || null === (_response$resMsg = response.resMsg) || void 0 === _response$resMsg ? void 0 : _response$resMsg.code) && (0, 
                  _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                    type: "error",
                    message: null == response || null === (_response$resMsg2 = response.resMsg) || void 0 === _response$resMsg2 ? void 0 : _response$resMsg2.message
                  });
                  resolve(_objectSpread(_objectSpread({}, response), {}, {
                    ECDHSecret: pubRes.ECDHSecret
                  }));
                })).catch((function(err) {
                  (0, _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                    type: "error",
                    message: null == err ? void 0 : err.message
                  }), reject(err);
                }));

               case 3:
               case "end":
                return _context2.stop();
              }
            }), _callee2);
          })));
          return function(_x2) {
            return _ref2.apply(this, arguments);
          };
        }());
      }));
    }, createWalletEncrypt = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(errorPlaintextCode, errorCode, dataItem, userCookies, bigNetworkKeys, totalNetworkDic) {
        var walletItem, _yield$ProjectData$ge, lock, dealLock, pwValue, str;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            if (walletItem = JSON.parse(JSON.stringify(dataItem)), 1 != (walletItem = localDataEncryption(walletItem, errorCode, totalNetworkDic)).errcode_type) {
              _context3.next = 6;
              break;
            }
            return _context3.abrupt("return", walletItem);

           case 6:
            return _context3.next = 8, _model_projectData__WEBPACK_IMPORTED_MODULE_51__.jq((0, 
            _crypto_js__WEBPACK_IMPORTED_MODULE_47__.dT)(errorCode));

           case 8:
            return _yield$ProjectData$ge = _context3.sent, lock = _yield$ProjectData$ge.pValue.lock, 
            dealLock = lock, lock && 16 == (null == lock ? void 0 : lock.length) && (dealLock = (0, 
            _crypto_js__WEBPACK_IMPORTED_MODULE_47__.dT)(lock)), pwValue = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(errorPlaintextCode, dealLock), 
            str = getJoinStr(walletItem, bigNetworkKeys), _context3.abrupt("return", fundEncode(str, userCookies, "createWallet", pwValue).then((function(res) {
              var datas = res.datas, resMsg = res.resMsg, ECDHSecret = res.ECDHSecret;
              if (0 === (null == resMsg ? void 0 : resMsg.code)) {
                var dataArr = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.A3)((0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(datas, ECDHSecret));
                return pushkeyVal(walletItem, dataArr, bigNetworkKeys).walletItem;
              }
            })));

           case 15:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x3, _x4, _x5, _x6, _x7, _x8) {
        return _ref3.apply(this, arguments);
      };
    }(), editEncryption = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(datalist, bigNetworkKeys, totalNetworkDic) {
        var body, _yield$DefiWalletData, defiWallet, walletArrDefiWallet, walletArrCopy, encryptStr, userInfo, userId, matchingWallets, localWallets, remoteWallets, allWalletStr, decryptionArr, allDecryptedData, pubRes, res, datas, resMsg, dataArr;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return body = _objectSpread({
              oldPw: "",
              pwValue: "",
              userCookies: "",
              encryptionType: 1,
              scene: "decryptGroup"
            }, datalist), _context4.next = 3, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_49__.$();

           case 3:
            return _yield$DefiWalletData = _context4.sent, defiWallet = _yield$DefiWalletData.defiWallet, 
            walletArrDefiWallet = JSON.parse(JSON.stringify(defiWallet)), walletArrCopy = JSON.parse(JSON.stringify(null == defiWallet ? void 0 : defiWallet.walletArr)), 
            encryptStr = "", _context4.next = 10, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.pZ)("uid");

           case 10:
            if (userInfo = _context4.sent, userId = null == userInfo ? void 0 : userInfo.checkValue, 
            0 !== (matchingWallets = walletArrCopy.filter((function(walletItem) {
              return walletItem.errcode && (walletItem.errcode == (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.dT)(null == body ? void 0 : body.oldPw) || (0, 
              _crypto_js__WEBPACK_IMPORTED_MODULE_47__.dT)(walletItem.errcode) == (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.dT)(null == body ? void 0 : body.oldPw));
            }))).length) {
              _context4.next = 15;
              break;
            }
            return _context4.abrupt("return", !1);

           case 15:
            if (localWallets = matchingWallets.filter((function(wallet) {
              return 1 == wallet.errcode_type;
            })), !((remoteWallets = matchingWallets.filter((function(wallet) {
              return 2 == wallet.errcode_type;
            }))).length > 0)) {
              _context4.next = 35;
              break;
            }
            return _context4.prev = 18, allWalletStr = "", remoteWallets.forEach((function(walletItem, index) {
              var walletStr = getJoinStr(walletItem, bigNetworkKeys);
              allWalletStr += walletStr + (index == remoteWallets.length - 1 ? "" : "***,");
            })), _context4.next = 23, decryptionTxt(null == body ? void 0 : body.userCookies, body.scene || "decryptGroup", allWalletStr, null == body ? void 0 : body.oldPw, null == body ? void 0 : body.oldPw, !1);

           case 23:
            if (!((decryptionArr = _context4.sent) && decryptionArr.length > 0)) {
              _context4.next = 29;
              break;
            }
            allDecryptedData = Array.isArray(decryptionArr) ? null == decryptionArr ? void 0 : decryptionArr.join("/&/").split("/&/***/&/") : [], 
            remoteWallets.forEach((function(walletItem, walletIndex) {
              if (allDecryptedData[walletIndex]) {
                var newEncryptedWallet, decryptedWallet = pushkeyVal(walletItem, allDecryptedData[walletIndex].split("/&/"), bigNetworkKeys).walletItem;
                if (1 == body.encryptionType) {
                  var str = filterEditItemPw(decryptedWallet, null == body ? void 0 : body.oldPw, (0, 
                  _crypto_js__WEBPACK_IMPORTED_MODULE_47__.gm)(body.pwValue), bigNetworkKeys).str;
                  encryptStr = encryptStr + str + (walletIndex == remoteWallets.length - 1 && 0 === localWallets.length ? "" : "***,"), 
                  (newEncryptedWallet = decryptedWallet).errcode_type = 2;
                } else (newEncryptedWallet = localDataEncryption(decryptedWallet, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.gm)(body.pwValue), totalNetworkDic)).errcode = (0, 
                _crypto_js__WEBPACK_IMPORTED_MODULE_47__.jS)(body.pwValue), newEncryptedWallet.errcode_type = 1;
                var originalIndex = walletArrCopy.findIndex((function(item) {
                  return item.walletID === walletItem.walletID;
                }));
                -1 !== originalIndex && (walletArrCopy[originalIndex] = newEncryptedWallet);
              }
            })), _context4.next = 30;
            break;

           case 29:
           case 60:
            return _context4.abrupt("return", !1);

           case 30:
            _context4.next = 35;
            break;

           case 32:
            return _context4.prev = 32, _context4.t0 = _context4.catch(18), _context4.abrupt("return", !1);

           case 35:
            if (localWallets.length > 0 && localWallets.forEach((function(walletItem, walletIndex) {
              if (walletItem.u_number = userId || "", 1 == body.encryptionType) {
                var str = filterEditItemPw(walletItem, null == body ? void 0 : body.oldPw, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.gm)(body.pwValue), bigNetworkKeys).str;
                encryptStr = encryptStr + str + (walletIndex == localWallets.length - 1 ? "" : "***,"), 
                walletItem.errcode_type = 2;
              } else walletItem.walletMnemonic && (walletItem.walletMnemonic = decodeChangeEncrypt(walletItem.walletMnemonic, null == body ? void 0 : body.oldPw, (0, 
              _crypto_js__WEBPACK_IMPORTED_MODULE_47__.gm)(body.pwValue))), bigNetworkKeys.forEach((function(item) {
                walletItem[item] && walletItem[item].forEach((function(a) {
                  a.walletExtendPrivateKey = decodeChangeEncrypt(null == a ? void 0 : a.walletExtendPrivateKey, null == body ? void 0 : body.oldPw, (0, 
                  _crypto_js__WEBPACK_IMPORTED_MODULE_47__.gm)(body.pwValue));
                }));
              })), walletItem.walletAccountArr.forEach((function(accountItem) {
                Object.keys(accountItem).forEach((function(network) {
                  accountItem[network] && accountItem[network] instanceof Array && accountItem[network].forEach((function(acctItem) {
                    acctItem.accountPrivateKey && (acctItem.accountPrivateKey = decodeChangeEncrypt(null == acctItem ? void 0 : acctItem.accountPrivateKey, null == body ? void 0 : body.oldPw, (0, 
                    _crypto_js__WEBPACK_IMPORTED_MODULE_47__.gm)(body.pwValue)));
                  })), "mnemonic" == network && (accountItem.mnemonic = decodeChangeEncrypt(accountItem.mnemonic, null == body ? void 0 : body.oldPw, (0, 
                  _crypto_js__WEBPACK_IMPORTED_MODULE_47__.gm)(body.pwValue)));
                }));
              })), walletItem.errcode = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.jS)(body.pwValue), 
              walletItem.errcode_type = 1;
              var originalIndex = walletArrCopy.findIndex((function(item) {
                return item.walletID === walletItem.walletID;
              }));
              -1 !== originalIndex && (walletArrCopy[originalIndex] = walletItem);
            })), 1 == body.encryptionType) {
              _context4.next = 43;
              break;
            }
            return walletArrDefiWallet.walletArr = walletArrCopy, _context4.next = 40, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_49__.s(walletArrDefiWallet);

           case 40:
           case 57:
           case 71:
            return _context4.abrupt("return", !0);

           case 43:
            if (!encryptStr) {
              _context4.next = 68;
              break;
            }
            return _context4.prev = 44, _context4.next = 47, changePublicKey(null == body ? void 0 : body.userCookies, body.scene);

           case 47:
            return pubRes = _context4.sent, _context4.next = 50, _api_api__WEBPACK_IMPORTED_MODULE_52__.encryptionBatch({
              clientPubKey: pubRes.public,
              encryptStr: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(encryptStr, pubRes.ECDHSecret),
              scene: body.scene || "createAccount",
              encryptMD5Key: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.vL)(null == body ? void 0 : body.pwValue),
              cookie_web: null == body ? void 0 : body.userCookies
            });

           case 50:
            if (res = _context4.sent, datas = res.datas, 0 !== (null == (resMsg = res.resMsg) ? void 0 : resMsg.code)) {
              _context4.next = 60;
              break;
            }
            return dataArr = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.A3)((0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(datas, pubRes.ECDHSecret)), 
            walletArrDefiWallet.walletArr = loopAllWalletAssign(dataArr, walletArrCopy, bigNetworkKeys), 
            _context4.next = 57, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_49__.s(walletArrDefiWallet);

           case 61:
            _context4.next = 66;
            break;

           case 63:
            return _context4.prev = 63, _context4.t1 = _context4.catch(44), _context4.abrupt("return", !1);

           case 66:
            _context4.next = 72;
            break;

           case 68:
            return walletArrDefiWallet.walletArr = walletArrCopy, _context4.next = 71, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_49__.s(walletArrDefiWallet);

           case 72:
           case "end":
            return _context4.stop();
          }
        }), _callee4, null, [ [ 18, 32 ], [ 44, 63 ] ]);
      })));
      return function(_x9, _x10, _x11) {
        return _ref4.apply(this, arguments);
      };
    }(), filterEditItemPw = function(walletItem, oldPw, newPw, bigNetworkKeys) {
      var str = "";
      return str = walletItem.walletMnemonic ? str + "".concat(decodeChangeEncrypt(walletItem.walletMnemonic, oldPw, newPw), ",") : str + ",", 
      bigNetworkKeys.forEach((function(item) {
        walletItem[item] && walletItem[item] instanceof Array ? walletItem[item].forEach((function(a) {
          str = null != a && a.walletExtendPrivateKey ? str + "".concat(decodeChangeEncrypt(null == a ? void 0 : a.walletExtendPrivateKey, oldPw, newPw), ",") : str + ",";
        })) : str += ",";
      })), walletItem.errcode_type && (walletItem.errcode_type = 2), walletItem.errcode && (walletItem.errcode = (0, 
      _crypto_js__WEBPACK_IMPORTED_MODULE_47__.dT)(newPw)), walletItem.walletAccountArr.forEach((function(accountItem) {
        var _EVM = ",", accountNetworkArr = {};
        bigNetworkKeys.forEach((function(networkKey) {
          "ETH" !== networkKey && (accountNetworkArr[networkKey] = ",");
        })), Object.keys(accountItem).forEach((function(network) {
          accountItem[network] && accountItem[network] instanceof Array && accountItem[network].forEach((function(accItem, accIndex) {
            accItem.accountPrivateKey && (accountNetworkArr[network] ? accountNetworkArr[network] = (0 == accIndex ? "" : accountNetworkArr[network]) + "".concat(decodeChangeEncrypt(null == accItem ? void 0 : accItem.accountPrivateKey, oldPw, newPw), ",") : _EVM = "".concat(decodeChangeEncrypt(null == accItem ? void 0 : accItem.accountPrivateKey, oldPw, newPw), ","));
          })), "mnemonic" == network && "".concat(decodeChangeEncrypt(accountItem.mnemonic, oldPw, newPw), ","), 
          accountItem.errcode_type && (accountItem.errcode_type = 2), accountItem.errcode && (accountItem.errcode = (0, 
          _crypto_js__WEBPACK_IMPORTED_MODULE_47__.dT)(newPw));
        })), str = str + _EVM + (0, _utils__WEBPACK_IMPORTED_MODULE_56__.t_)(accountNetworkArr) + ",";
      })), {
        str,
        editWalletItem: walletItem
      };
    }, decodeItemPut = function(item, oldPw, totalNetworkDic) {
      var walletItem = JSON.parse(JSON.stringify(item));
      return walletItem.walletMnemonic && (walletItem.walletMnemonic = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(walletItem.walletMnemonic, oldPw, !0)), 
      (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_57__.Fb)(totalNetworkDic).allBigNetworkKeys.forEach((function(networkKey) {
        walletItem[networkKey] && walletItem[networkKey] instanceof Array && walletItem[networkKey].forEach((function(a) {
          a.walletExtendPrivateKey && (a.walletExtendPrivateKey = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(null == a ? void 0 : a.walletExtendPrivateKey, oldPw, !0));
        }));
      })), walletItem.walletAccountArr ? walletItem.walletAccountArr.forEach((function(accountItem) {
        Object.keys(accountItem).forEach((function(network) {
          accountItem[network] && accountItem[network] instanceof Array && accountItem[network].forEach((function(accItem) {
            accItem.accountPrivateKey && (accItem.accountPrivateKey = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(accItem.accountPrivateKey, oldPw, !0));
          })), "mnemonic" == network && (accountItem.mnemonic = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(accountItem.mnemonic, oldPw, !0));
        }));
      })) : Object.keys(walletItem).forEach((function(network) {
        walletItem[network] && walletItem[network] instanceof Array && walletItem[network].forEach((function(a) {
          a.accountPrivateKey = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(a.accountPrivateKey, oldPw, !0);
        })), "mnemonic" == network && (walletItem.mnemonic = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(walletItem.mnemonic, oldPw, !0));
      })), walletItem;
    }, localDataEncryption = function(item, errorCode, totalNetworkDic) {
      var walletItem = JSON.parse(JSON.stringify(item));
      return walletItem.walletMnemonic && (walletItem.walletMnemonic = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(walletItem.walletMnemonic, errorCode, !0)), 
      (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_57__.Fb)(totalNetworkDic).allBigNetworkKeys.forEach((function(networkKey) {
        walletItem[networkKey] && walletItem[networkKey] instanceof Array && walletItem[networkKey].forEach((function(a) {
          a.walletExtendPrivateKey && (a.walletExtendPrivateKey = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(null == a ? void 0 : a.walletExtendPrivateKey, errorCode, !0));
        }));
      })), walletItem.walletAccountArr ? walletItem.walletAccountArr.forEach((function(accountItem) {
        Object.keys(accountItem).forEach((function(network) {
          accountItem[network] && accountItem[network] instanceof Array && accountItem[network].forEach((function(accItem) {
            accItem.accountPrivateKey && (accItem.accountPrivateKey = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(accItem.accountPrivateKey, errorCode, !0));
          })), "mnemonic" == network && "{}" !== JSON.stringify(accountItem.mnemonic) && (accountItem.mnemonic = (0, 
          _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(accountItem.mnemonic, errorCode, !0));
        }));
      })) : Object.keys(walletItem).forEach((function(network) {
        walletItem[network] && walletItem[network] instanceof Array && walletItem[network].forEach((function(accItem) {
          accItem.accountPrivateKey = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(accItem.accountPrivateKey, errorCode, !0);
        })), "mnemonic" == network && "{}" !== JSON.stringify(walletItem.mnemonic) && (walletItem.mnemonic = (0, 
        _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(walletItem.mnemonic, errorCode, !0));
      })), walletItem;
    }, getJoinStr = function(walletItem, bigNetworkKeys) {
      var str = "";
      if (walletItem.walletAccountArr) str = walletItem.walletMnemonic ? str + "".concat(walletItem.walletMnemonic, ",") : str + ",", 
      bigNetworkKeys.forEach((function(item) {
        walletItem[item] && walletItem[item] instanceof Array ? walletItem[item].forEach((function(a) {
          str = a.walletExtendPrivateKey ? str + "".concat(null == a ? void 0 : a.walletExtendPrivateKey, ",") : str + ",";
        })) : str += ",";
      })), walletItem.walletAccountArr.forEach((function(accountItem) {
        var _EVM = ",", _mnemonic = ",", accountNetworkArr = {};
        bigNetworkKeys.forEach((function(networkKey) {
          "ETH" !== networkKey && (accountNetworkArr[networkKey] = ",");
        })), Object.keys(accountItem).map((function(network) {
          var _accountItem$network$;
          accountItem[network] && accountItem[network] instanceof Array && null !== (_accountItem$network$ = accountItem[network][0]) && void 0 !== _accountItem$network$ && _accountItem$network$.accountAddress && accountItem[network].forEach((function(accItem, accIndex) {
            accItem.accountPrivateKey && (accountNetworkArr[network] ? accountNetworkArr[network] = (0 == accIndex ? "" : accountNetworkArr[network]) + "".concat(null == accItem ? void 0 : accItem.accountPrivateKey, ",") : _EVM = "".concat(null == accItem ? void 0 : accItem.accountPrivateKey, ","));
          })), "mnemonic" != network || null != accountItem && accountItem.isMnemonicDecode || (_mnemonic = "".concat(accountItem.mnemonic, ","));
        })), str = str + _EVM + (0, _utils__WEBPACK_IMPORTED_MODULE_56__.t_)(accountNetworkArr) + (null != accountItem && accountItem.isMnemonicDecode ? "," : _mnemonic);
      })); else {
        var _EVM = ",", _mnemonic = ",", accountNetworkArr = {};
        bigNetworkKeys.forEach((function(networkKey) {
          "ETH" !== networkKey && (accountNetworkArr[networkKey] = ",");
        })), Object.keys(walletItem).map((function(network) {
          walletItem[network] && walletItem[network] instanceof Array && walletItem[network].forEach((function(accItem, accIndex) {
            accountNetworkArr[network] ? accountNetworkArr[network] = (0 == accIndex ? "" : accountNetworkArr[network]) + "".concat(null == accItem ? void 0 : accItem.accountPrivateKey, ",") : "ETH" == network && (_EVM = accItem.accountPrivateKey ? "".concat(null == accItem ? void 0 : accItem.accountPrivateKey, ",") : ",");
          })), "mnemonic" != network || null != walletItem && walletItem.isMnemonicDecode || (_mnemonic = "".concat(walletItem.mnemonic, ","));
        })), str = str + _EVM + (0, _utils__WEBPACK_IMPORTED_MODULE_56__.t_)(accountNetworkArr) + (null != walletItem && walletItem.isMnemonicDecode ? "," : _mnemonic);
      }
      return str;
    }, pushkeyVal = function(dataItem, dataArr, bigNetworkKeys) {
      var networkCodeData = {};
      bigNetworkKeys.forEach((function(networkKey) {
        "ETH" !== networkKey && (networkCodeData[networkKey] = ",");
      }));
      var walletItem = dataItem ? JSON.parse(JSON.stringify(dataItem)) : {}, chainListLength = 1;
      if (walletItem.walletAccountArr) dataArr[0] && (walletItem.walletMnemonic = dataArr[0]), 
      bigNetworkKeys.forEach((function(item) {
        walletItem[item] && walletItem[item] instanceof Array && walletItem[item].forEach((function(a, aIndex) {
          aIndex > 0 && chainListLength++, dataArr[chainListLength] && a.walletExtendPrivateKey && (a.walletExtendPrivateKey = dataArr[chainListLength]);
        })), chainListLength++;
      })), walletItem.walletAccountArr.forEach((function(accountItem, accountIndex) {
        var accountRoundIndex = chainListLength * (accountIndex + 1), moreAddressNum = 0;
        if (bigNetworkKeys.forEach((function(chain, chainIndex) {
          var _accountItem$chain;
          "ETH" == chain ? Object.keys(accountItem).forEach((function(network) {
            var _accountItem$network, _accountItem$network$2;
            accountItem[network] && accountItem[network] instanceof Array && null !== (_accountItem$network = accountItem[network]) && void 0 !== _accountItem$network && null !== (_accountItem$network$2 = _accountItem$network[0]) && void 0 !== _accountItem$network$2 && _accountItem$network$2.accountPrivateKey && !networkCodeData[network] && accountItem[network].forEach((function(accItem, accIndex) {
              accIndex > 0 && moreAddressNum++, accItem.accountPrivateKey && (accItem.accountPrivateKey = dataArr[accountRoundIndex + chainIndex + moreAddressNum]);
            }));
          })) : accountItem[chain] && accountItem[chain] instanceof Array && "accountPrivateKey" in (null === (_accountItem$chain = accountItem[chain]) || void 0 === _accountItem$chain ? void 0 : _accountItem$chain[0]) && accountItem[chain].forEach((function(accItem, accIndex) {
            accIndex > 0 && moreAddressNum++, accItem.accountPrivateKey && (accItem.accountPrivateKey = dataArr[accountRoundIndex + chainIndex + moreAddressNum]);
          }));
        })), "mnemonic" in accountItem && !accountItem.isMnemonicDecode) {
          var chainLength = bigNetworkKeys.length;
          accountItem.mnemonic = dataArr[accountRoundIndex + chainLength + moreAddressNum + 1];
        }
      })); else {
        chainListLength = 0;
        var moreAddressNum = 0;
        if (bigNetworkKeys.forEach((function(chain, chainIndex) {
          var _walletItem$chain;
          "ETH" == chain && walletItem[chain] ? Object.keys(walletItem).forEach((function(network) {
            var _walletItem$network, _walletItem$network$;
            walletItem[network] && walletItem[network] instanceof Array && null !== (_walletItem$network = walletItem[network]) && void 0 !== _walletItem$network && null !== (_walletItem$network$ = _walletItem$network[0]) && void 0 !== _walletItem$network$ && _walletItem$network$.accountPrivateKey && !networkCodeData[network] && walletItem[network].forEach((function(accItem, accIndex) {
              accIndex > 0 && moreAddressNum++, accItem.accountPrivateKey && (accItem.accountPrivateKey = dataArr[chainListLength + chainIndex + moreAddressNum]);
            }));
          })) : walletItem[chain] && walletItem[chain] instanceof Array && "accountPrivateKey" in (null === (_walletItem$chain = walletItem[chain]) || void 0 === _walletItem$chain ? void 0 : _walletItem$chain[0]) && walletItem[chain].forEach((function(accItem, accIndex) {
            accIndex > 0 && moreAddressNum++, accItem.accountPrivateKey && (accItem.accountPrivateKey = dataArr[chainListLength + chainIndex + moreAddressNum]);
          }));
        })), "mnemonic" in walletItem && !walletItem.isMnemonicDecode) {
          var chainLength = bigNetworkKeys.length;
          walletItem.mnemonic = dataArr[chainListLength + chainLength + moreAddressNum];
        }
      }
      return {
        walletItem
      };
    }, decodeChangeEncrypt = function(data, oldPw, newPw) {
      return (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)((0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(data, oldPw, !0), newPw, !0);
    }, decryptionTxt = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(userCookies) {
        var scene, txt, pwValue, oldPw, isDeal, typeData, _args6 = arguments;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return scene = _args6.length > 1 && void 0 !== _args6[1] ? _args6[1] : "createAccount", 
            txt = _args6.length > 2 ? _args6[2] : void 0, pwValue = _args6.length > 3 ? _args6[3] : void 0, 
            oldPw = _args6.length > 4 ? _args6[4] : void 0, isDeal = !(_args6.length > 5 && void 0 !== _args6[5]) || _args6[5], 
            typeData = _args6.length > 6 ? _args6[6] : void 0, _context6.next = 8, changePublicKey(userCookies, scene).then(function() {
              var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(pubRes) {
                return regeneratorRuntime.wrap((function(_context5) {
                  for (;;) switch (_context5.prev = _context5.next) {
                   case 0:
                    return _context5.next = 2, _api_api__WEBPACK_IMPORTED_MODULE_52__.decryptionBatch({
                      decryptStr: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(txt, null == pubRes ? void 0 : pubRes.ECDHSecret),
                      clientPubKey: null == pubRes ? void 0 : pubRes.public,
                      scene: scene || "createAccount",
                      encryptMD5Key: isDeal ? (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.vL)(pwValue) : pwValue.substring(0, 4),
                      cookie_web: userCookies
                    }).then((function(res) {
                      var datas = res.datas, resMsg = res.resMsg;
                      if (0 === (null == resMsg ? void 0 : resMsg.code)) {
                        var dataArr = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.A3)((0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(datas, null == pubRes ? void 0 : pubRes.ECDHSecret)), list = dataArr.list, encTicket = dataArr.encTicket, strData = [];
                        return list.map((function(listItem, listIndex) {
                          var _item = listItem && "***" != listItem ? (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Hw)(listItem, oldPw, !0) : listItem;
                          strData.push(_item);
                        })), "encTicket" == typeData ? {
                          strData,
                          encTicket
                        } : strData;
                      }
                      return (0, _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                        type: "error",
                        message: (null == resMsg ? void 0 : resMsg.message) || (0, _lang_string__WEBPACK_IMPORTED_MODULE_54__.lang_string)("失败")
                      }), "";
                    })).catch((function(error) {}));

                   case 2:
                    return _context5.abrupt("return", _context5.sent);

                   case 3:
                   case "end":
                    return _context5.stop();
                  }
                }), _callee5);
              })));
              return function(_x13) {
                return _ref6.apply(this, arguments);
              };
            }());

           case 8:
            return _context6.abrupt("return", _context6.sent);

           case 9:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x12) {
        return _ref5.apply(this, arguments);
      };
    }(), cloudPasswordVerify = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(_ref7) {
        var safePwd, cookie_web, walletStr, pubRes, res;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return safePwd = _ref7.safePwd, cookie_web = _ref7.cookie_web, walletStr = _ref7.walletStr, 
            _context7.next = 3, changePublicKey(cookie_web, "");

           case 3:
            return pubRes = _context7.sent, _context7.next = 6, _api_api__WEBPACK_IMPORTED_MODULE_52__.decryptionBatch({
              decryptStr: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(walletStr, null == pubRes ? void 0 : pubRes.ECDHSecret),
              clientPubKey: null == pubRes ? void 0 : pubRes.public,
              scene: "",
              encryptMD5Key: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.vL)(safePwd),
              cookie_web,
              isVerify: 1
            });

           case 6:
            return res = _context7.sent, _context7.abrupt("return", res);

           case 8:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })));
      return function(_x14) {
        return _ref8.apply(this, arguments);
      };
    }(), getArrayDataIndex = function(array1, array2) {
      if (array1) return 1 == (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1) ? Object.keys(array1).filter((function(item) {
        return Object.keys(array2).some((function(ele) {
          return ele === item;
        }));
      })) : Object.keys(array1).filter((function(item) {
        return !Object.keys(array2).some((function(ele) {
          return ele === item;
        }));
      }));
    }, regroupAppData = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8() {
        var pwValue, walletData, cacheData, totalNetworkDic, includeLocalWallets, defiData, _yield$getPageCookies, checkValue, defiWallet, _defiData$defiWallet, walletArr, selectedWalletDic, newWalletData, appData, _loop, walletIndex, matchWalletData, _selectedWalletDic, wallet, _wallet$walletAccount, account, _args10 = arguments;
        return regeneratorRuntime.wrap((function(_context10) {
          for (;;) switch (_context10.prev = _context10.next) {
           case 0:
            return pwValue = _args10.length > 0 && void 0 !== _args10[0] ? _args10[0] : "", 
            walletData = _args10.length > 1 ? _args10[1] : void 0, cacheData = _args10.length > 2 ? _args10[2] : void 0, 
            totalNetworkDic = _args10.length > 3 ? _args10[3] : void 0, includeLocalWallets = !(_args10.length > 4 && void 0 !== _args10[4]) || _args10[4], 
            _context10.next = 7, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_49__.$();

           case 7:
            return defiData = _context10.sent, _context10.next = 10, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.pZ)("uid");

           case 10:
            _yield$getPageCookies = _context10.sent, checkValue = _yield$getPageCookies.checkValue, 
            defiWallet = defiData.defiWallet, _defiData$defiWallet = defiData.defiWallet, walletArr = _defiData$defiWallet.walletArr, 
            selectedWalletDic = _defiData$defiWallet.selectedWalletDic, newWalletData = [], 
            appData = JSON.parse(JSON.stringify(walletData)), _loop = regeneratorRuntime.mark((function _loop(walletIndex) {
              var aItem, dicArr, _Object$keys, walletBackupData, accountArr, accountItem, aItemAccountArr, _loop2, accountIndex;
              return regeneratorRuntime.wrap((function(_context9) {
                for (;;) switch (_context9.prev = _context9.next) {
                 case 0:
                  null != (aItem = appData[walletIndex]) && aItem.walletNetworkDic ? null == (dicArr = getArrayDataIndex(null == aItem ? void 0 : aItem.walletNetworkDic, totalNetworkDic, 2)) || dicArr.forEach((function(a) {
                    null == aItem || delete aItem.walletNetworkDic[a];
                  })) : aItem.walletNetworkDic = {}, null != aItem && aItem.walletNetworkDic && (null == aItem ? void 0 : aItem.walletNetworkDic) instanceof Object && "{}" !== JSON.stringify(null == aItem ? void 0 : aItem.walletNetworkDic) && (null === (_Object$keys = Object.keys(null == aItem ? void 0 : aItem.walletNetworkDic)) || void 0 === _Object$keys || _Object$keys.forEach((function(item) {
                    var _aItem$walletNetworkD, chainArr = null == aItem || null === (_aItem$walletNetworkD = aItem.walletNetworkDic) || void 0 === _aItem$walletNetworkD ? void 0 : _aItem$walletNetworkD[item];
                    chainArr && (null == chainArr ? void 0 : chainArr.length) > 0 && (null == chainArr || chainArr.forEach((function(i) {
                      i.accountFormat = (null == i ? void 0 : i.accountFormat) || (null == i ? void 0 : i.walletExtendFormat) || "";
                    })));
                  }))), walletBackupData = {
                    walletBackupVersion: "2",
                    errcode: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.jS)(pwValue),
                    errcode_type: 2,
                    u_number: checkValue || "",
                    walletID: (0, uuid__WEBPACK_IMPORTED_MODULE_48__.A)(),
                    walletCreateType: "",
                    walletName: "--",
                    walletMnemonic: "",
                    walletAmount: "",
                    walletUnfold: !1,
                    walletCloudBackup: !1,
                    walletAccountArr: [],
                    walletPasswordType: ""
                  }, accountArr = [], accountItem = {}, walletBackupData.walletCreateType = null == aItem ? void 0 : aItem.walletCreateType, 
                  walletBackupData.walletName = null != aItem && aItem.walletName ? null == aItem ? void 0 : aItem.walletName : "2" == (type = null == aItem ? void 0 : aItem.walletCreateType) ? (0, 
                  _lang_string__WEBPACK_IMPORTED_MODULE_54__.lang_string)("私钥钱包") : "3" == type ? (0, 
                  _lang_string__WEBPACK_IMPORTED_MODULE_54__.lang_string)("Keystore钱包") : (0, _lang_string__WEBPACK_IMPORTED_MODULE_54__.lang_string)("账户"), 
                  walletBackupData.walletMnemonic = null == aItem ? void 0 : aItem.walletMnemonic, 
                  walletBackupData.walletCloudBackup = !0, walletBackupData.walletPasswordType = null == aItem ? void 0 : aItem.walletPasswordType, 
                  walletBackupData = _objectSpread(_objectSpread({}, walletBackupData), null == aItem ? void 0 : aItem.walletNetworkDic), 
                  (aItemAccountArr = aItem.walletAccountArr).forEach((function(item) {
                    var _item$accountNetworkD;
                    Array.isArray(null == item ? void 0 : item.accountNetworkDic) && 0 == (null == item || null === (_item$accountNetworkD = item.accountNetworkDic) || void 0 === _item$accountNetworkD ? void 0 : _item$accountNetworkD.length) && (item.accountNetworkDic = {});
                  })), _loop2 = regeneratorRuntime.mark((function _loop2(accountIndex) {
                    var accountErrcode, mnemonicData, _dicArr, networkCollection;
                    return regeneratorRuntime.wrap((function(_context8) {
                      for (;;) switch (_context8.prev = _context8.next) {
                       case 0:
                        if (accountErrcode = {}, 2 != (null == aItem ? void 0 : aItem.walletCreateType) && 3 != (null == aItem ? void 0 : aItem.walletCreateType)) {
                          _context8.next = 10;
                          break;
                        }
                        return _context8.next = 4, _evm_wallet__WEBPACK_IMPORTED_MODULE_50__.Zu();

                       case 4:
                        if (_context8.t0 = _context8.sent, _context8.t0) {
                          _context8.next = 7;
                          break;
                        }
                        _context8.t0 = "";

                       case 7:
                        (mnemonicData = _context8.t0) && (mnemonicData = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(mnemonicData, pwValue)), 
                        accountErrcode = {
                          errcode: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.jS)(pwValue),
                          errcode_type: 2,
                          mnemonic: mnemonicData,
                          isMnemonicDecode: !0
                        };

                       case 10:
                        aItemAccountArr[accountIndex].accountNetworkDic && (_dicArr = Object.keys(aItemAccountArr[accountIndex].accountNetworkDic), 
                        networkCollection = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_57__.Fv)(totalNetworkDic), 
                        _dicArr.forEach((function(val) {
                          networkCollection[val] || delete aItemAccountArr[accountIndex].accountNetworkDic[val], 
                          networkCollection[val] && networkCollection[val] instanceof Array && networkCollection[val].forEach((function(i) {
                            aItemAccountArr[accountIndex].accountNetworkDic = _objectSpread(_objectSpread({}, aItemAccountArr[accountIndex].accountNetworkDic), {}, _defineProperty({}, i, aItemAccountArr[accountIndex].accountNetworkDic[val]));
                          }));
                        }))), accountItem = _objectSpread({
                          accountID: (0, uuid__WEBPACK_IMPORTED_MODULE_48__.A)(),
                          accountIndex: aItemAccountArr[accountIndex].accountIndex,
                          accountName: aItemAccountArr[accountIndex].accountName,
                          accountAddress: "",
                          accountCoinArr: []
                        }, aItemAccountArr[accountIndex].accountNetworkDic), 2 != (null == aItem ? void 0 : aItem.walletCreateType) && 3 != (null == aItem ? void 0 : aItem.walletCreateType) || (accountItem = _objectSpread(_objectSpread(_objectSpread({}, accountItem), accountErrcode), {}, {
                          walletCloudBackup: !0
                        })), accountArr = [].concat(_toConsumableArray(accountArr), [ accountItem ]);

                       case 14:
                       case "end":
                        return _context8.stop();
                      }
                    }), _loop2);
                  })), accountIndex = 0;

                 case 16:
                  if (!(accountIndex < aItemAccountArr.length)) {
                    _context9.next = 21;
                    break;
                  }
                  return _context9.delegateYield(_loop2(accountIndex), "t0", 18);

                 case 18:
                  accountIndex++, _context9.next = 16;
                  break;

                 case 21:
                  walletBackupData.walletAccountArr = accountArr, newWalletData.push(walletBackupData);

                 case 23:
                 case "end":
                  return _context9.stop();
                }
                var type;
              }), _loop);
            })), walletIndex = 0;

           case 17:
            if (!(walletIndex < appData.length)) {
              _context10.next = 22;
              break;
            }
            return _context10.delegateYield(_loop(walletIndex), "t0", 19);

           case 19:
            walletIndex++, _context10.next = 17;
            break;

           case 22:
            return matchWalletData = includeLocalWallets ? matchLocalData(walletArr, newWalletData) : newWalletData, 
            _selectedWalletDic = JSON.parse(JSON.stringify(selectedWalletDic)), defiWallet.walletArr = matchWalletData, 
            defiWallet.selectedWalletDic = _selectedWalletDic, (wallet = matchWalletData.find((function(val) {
              return val.walletID === _selectedWalletDic.walletID;
            }))) && (account = null == wallet || null === (_wallet$walletAccount = wallet.walletAccountArr) || void 0 === _wallet$walletAccount ? void 0 : _wallet$walletAccount.find((function(val) {
              return val.accountID === _selectedWalletDic.accountID;
            }))) && (null == cacheData || cacheData.setSelectedWallet({
              wallet,
              account
            })), _context10.abrupt("return", new Promise((function(resolve, reject) {
              try {
                resolve({
                  code: !0,
                  defiWallet
                });
              } catch (error) {
                reject({
                  code: !1,
                  error
                });
              }
            })));

           case 29:
           case "end":
            return _context10.stop();
          }
        }), _callee8);
      })));
      return function() {
        return _ref9.apply(this, arguments);
      };
    }(), matchLocalData = function(oldData, newData) {
      var oldDataCopy = JSON.parse(JSON.stringify(oldData)), newWalletData = JSON.parse(JSON.stringify(newData));
      if (oldDataCopy.length > 0) {
        for (var addPrivateKeyWalletItem = {}, addKeyStoreWalletItem = {}, i = 0, length = null === (_oldDataCopy = oldDataCopy) || void 0 === _oldDataCopy ? void 0 : _oldDataCopy.length; i < length; i++) {
          var _oldDataCopy;
          addPrivateKeyWalletItem = {}, addKeyStoreWalletItem = {};
          for (var oldWalletItem = oldDataCopy[i], oldAccountDic = null == oldWalletItem ? void 0 : oldWalletItem.walletAccountArr[0], otherPrivateKeyNewAccount = [], otherKeystoreNewAccount = [], oldAccount = null == oldWalletItem ? void 0 : oldWalletItem.walletAccountArr, newWalletItem = {}, j = 0, _length = null == newData ? void 0 : newData.length; j < _length; j++) {
            var _newWalletItem, newAccountDic = null === (_newWalletItem = newWalletItem = newData[j]) || void 0 === _newWalletItem ? void 0 : _newWalletItem.walletAccountArr[0], repeatData = _method__WEBPACK_IMPORTED_MODULE_53__.repeatingData(oldAccountDic || {}, newAccountDic || {}, "accountAddress");
            if (2 == oldWalletItem.errcode_type) {
              var _newWalletItem2, _newWalletItem5, _newWalletItem6, newAccount = JSON.parse(JSON.stringify(null === (_newWalletItem2 = newWalletItem) || void 0 === _newWalletItem2 ? void 0 : _newWalletItem2.walletAccountArr));
              if (repeatData.length > 0) {
                var _newWalletItem3, _newWalletItem4, _newAccountDic$repeat, _newAccountDic$repeat2, _oldAccountDic$repeat, _oldAccountDic$repeat2, repeatDataIndex = repeatData[0];
                if (!(0 != (null == oldWalletItem ? void 0 : oldWalletItem.walletCreateType) && 1 != (null == oldWalletItem ? void 0 : oldWalletItem.walletCreateType) || 0 != (null === (_newWalletItem3 = newWalletItem) || void 0 === _newWalletItem3 ? void 0 : _newWalletItem3.walletCreateType) && 1 != (null === (_newWalletItem4 = newWalletItem) || void 0 === _newWalletItem4 ? void 0 : _newWalletItem4.walletCreateType))) (null === (_newAccountDic$repeat = newAccountDic[repeatDataIndex][0]) || void 0 === _newAccountDic$repeat || null === (_newAccountDic$repeat2 = _newAccountDic$repeat.accountAddress) || void 0 === _newAccountDic$repeat2 ? void 0 : _newAccountDic$repeat2.toLowerCase()) == (null === (_oldAccountDic$repeat = oldAccountDic[repeatDataIndex][0]) || void 0 === _oldAccountDic$repeat || null === (_oldAccountDic$repeat2 = _oldAccountDic$repeat.accountAddress) || void 0 === _oldAccountDic$repeat2 ? void 0 : _oldAccountDic$repeat2.toLowerCase()) && (oldDataCopy[i] = newData[j], 
                newWalletData[j] = null);
              }
              "2" == (null === (_newWalletItem5 = newWalletItem) || void 0 === _newWalletItem5 ? void 0 : _newWalletItem5.walletCreateType) && (otherPrivateKeyNewAccount = [].concat(_toConsumableArray(otherPrivateKeyNewAccount), _toConsumableArray(newAccount)), 
              newWalletData[j] = null, arrContainsVal(oldDataCopy, "walletCreateType", "2") || (addPrivateKeyWalletItem = newData[j])), 
              "3" == (null === (_newWalletItem6 = newWalletItem) || void 0 === _newWalletItem6 ? void 0 : _newWalletItem6.walletCreateType) && (otherKeystoreNewAccount = [].concat(_toConsumableArray(otherKeystoreNewAccount), _toConsumableArray(newAccount)), 
              newWalletData[j] = null, arrContainsVal(oldDataCopy, "walletCreateType", "3") || (addKeyStoreWalletItem = newData[j]));
            }
          }
          "2" == (null == oldWalletItem ? void 0 : oldWalletItem.walletCreateType) ? (oldAccount = compareWalletFunc(oldAccount, otherPrivateKeyNewAccount), 
          oldDataCopy[i].walletAccountArr = oldAccount) : otherPrivateKeyNewAccount.length > 0 && "{}" != JSON.stringify(addPrivateKeyWalletItem) && (addPrivateKeyWalletItem.walletAccountArr = uniqueFunc(otherPrivateKeyNewAccount, "accountID")), 
          "3" == (null == oldWalletItem ? void 0 : oldWalletItem.walletCreateType) ? (oldAccount = compareWalletFunc(oldAccount, otherKeystoreNewAccount), 
          oldDataCopy[i].walletAccountArr = oldAccount) : otherKeystoreNewAccount.length > 0 && "{}" != JSON.stringify(addKeyStoreWalletItem) && (addKeyStoreWalletItem.walletAccountArr = uniqueFunc(otherKeystoreNewAccount, "accountID"));
        }
        "{}" != JSON.stringify(addPrivateKeyWalletItem) && (oldDataCopy = [].concat(_toConsumableArray(oldDataCopy), [ addPrivateKeyWalletItem ])), 
        "{}" != JSON.stringify(addKeyStoreWalletItem) && (oldDataCopy = [].concat(_toConsumableArray(oldDataCopy), [ addKeyStoreWalletItem ]));
      } else {
        for (var publicKeyItem = {}, keystoreItem = {}, _j = 0, _length2 = null == newData ? void 0 : newData.length; _j < _length2; _j++) {
          var _newWalletItem7 = newData[_j];
          2 == (null == _newWalletItem7 ? void 0 : _newWalletItem7.walletCreateType) && (publicKeyItem.walletAccountArr ? publicKeyItem.walletAccountArr = [].concat(_toConsumableArray(publicKeyItem.walletAccountArr), _toConsumableArray(null == _newWalletItem7 ? void 0 : _newWalletItem7.walletAccountArr)) : publicKeyItem = _newWalletItem7, 
          newWalletData[_j] = null), 3 == (null == _newWalletItem7 ? void 0 : _newWalletItem7.walletCreateType) && (keystoreItem.walletAccountArr ? keystoreItem.walletAccountArr = [].concat(_toConsumableArray(keystoreItem.walletAccountArr), _toConsumableArray(null == _newWalletItem7 ? void 0 : _newWalletItem7.walletAccountArr)) : keystoreItem = _newWalletItem7, 
          newWalletData[_j] = null);
        }
        publicKeyItem.walletCreateType && (newWalletData = [].concat(_toConsumableArray(newWalletData), [ publicKeyItem ])), 
        keystoreItem.walletCreateType && (newWalletData = [].concat(_toConsumableArray(newWalletData), [ keystoreItem ]));
      }
      return oldDataCopy = [].concat(_toConsumableArray(oldDataCopy), _toConsumableArray(removePropertyOfNull(newWalletData)));
    };
    function arrContainsVal(arr, key, val) {
      for (var i = arr.length; i--; ) if (arr[i][key] == val) return !0;
      return !1;
    }
    var uniqueFunc = function(arr, uniId) {
      var res = new Map;
      return arr.filter((function(item) {
        return !res.has(item[uniId]) && res.set(item[uniId], 1);
      }));
    }, compareWalletFunc = function(oldAccount, newAccount) {
      return newAccount.forEach((function(item) {
        var index = oldAccount.findIndex((function(oldItem) {
          var _oldItem$otherRepeatD, _oldItem$otherRepeatD2, _item$otherRepeatData, _item$otherRepeatData2, otherRepeatData = _method__WEBPACK_IMPORTED_MODULE_53__.repeatingData(item, oldItem);
          if (otherRepeatData.length > 0 && (null === (_oldItem$otherRepeatD = oldItem[otherRepeatData[0]][0]) || void 0 === _oldItem$otherRepeatD || null === (_oldItem$otherRepeatD2 = _oldItem$otherRepeatD.accountAddress) || void 0 === _oldItem$otherRepeatD2 ? void 0 : _oldItem$otherRepeatD2.toLowerCase()) == (null === (_item$otherRepeatData = item[otherRepeatData[0]][0]) || void 0 === _item$otherRepeatData || null === (_item$otherRepeatData2 = _item$otherRepeatData.accountAddress) || void 0 === _item$otherRepeatData2 ? void 0 : _item$otherRepeatData2.toLowerCase())) return !0;
        }));
        index > -1 ? oldAccount[index] = item : oldAccount.push(item);
      })), oldAccount;
    }, removePropertyOfNull = function(obj) {
      for (var i = obj.length; i--; ) null === obj[i] && obj.splice(i, 1);
      return obj;
    }, resetUploadBackupData = function(selectEditItem, totalNetworkDic) {
      var walletItem = selectEditItem.walletItem, selectAccountItem = selectEditItem.accountItem, uploadData = JSON.parse(JSON.stringify(walletItem)), walletList = {
        walletBackupVersion: "2",
        walletCreateType: "",
        walletEncryptType: "1",
        walletCreateTime: "",
        walletName: "",
        walletMnemonic: "",
        walletNetworkDic: {},
        walletAccountArr: [],
        walletPasswordType: ""
      };
      walletList.walletCreateType = null == uploadData ? void 0 : uploadData.walletCreateType, 
      walletList.walletPasswordType = null == uploadData ? void 0 : uploadData.walletPasswordType, 
      walletList.walletName = null == uploadData ? void 0 : uploadData.walletName, null != uploadData && uploadData.walletMnemonic && (walletList.walletMnemonic = null == uploadData ? void 0 : uploadData.walletMnemonic), 
      Object.keys(uploadData).forEach((function(network) {
        uploadData[network] && uploadData[network][0] && uploadData[network][0].walletExtendPrivateKey && (walletList.walletNetworkDic = _objectSpread(_objectSpread({}, walletList.walletNetworkDic), {}, _defineProperty({}, network, uploadData[network])));
      }));
      var walletAccountArr = [];
      selectAccountItem && "1" != (null == uploadData ? void 0 : uploadData.walletCreateType) && "0" != (null == uploadData ? void 0 : uploadData.walletCreateType) ? (walletList.walletCreateTime = null == selectAccountItem ? void 0 : selectAccountItem.walletCreateTime, 
      walletAccountArr = [ selectAccountItem ]) : (walletList.walletCreateTime = null == uploadData ? void 0 : uploadData.walletCreateTime, 
      walletAccountArr = null == uploadData ? void 0 : uploadData.walletAccountArr);
      for (var networkCollection = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_57__.Fv)(totalNetworkDic), _loop3 = function(j, length) {
        var accountItem = walletAccountArr[j], accountList = {
          accountIndex: j,
          accountName: accountItem.accountName,
          accountNetworkDic: {}
        };
        Object.keys(accountItem).forEach((function(key) {
          accountItem[key] && accountItem[key][0] && accountItem[key][0].accountPrivateKey && networkCollection[key] && (accountList.accountNetworkDic = _objectSpread(_objectSpread({}, accountList.accountNetworkDic), {}, _defineProperty({}, key, accountItem[key])));
        })), walletList.walletAccountArr.push(accountList);
      }, j = 0, length = null === (_walletAccountArr = walletAccountArr) || void 0 === _walletAccountArr ? void 0 : _walletAccountArr.length; j < length; ++j) {
        var _walletAccountArr;
        _loop3(j);
      }
      return (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.Cw)(JSON.stringify(walletList));
    }, postBackupItem = function() {
      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(userCookies, selectEditItem, pwValue) {
        var type, scene, selectItem, _args11 = arguments;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            return type = _args11.length > 3 && void 0 !== _args11[3] ? _args11[3] : "backup", 
            scene = _args11.length > 4 && void 0 !== _args11[4] ? _args11[4] : "", selectItem = resetUploadBackupData(selectEditItem, _args11.length > 5 ? _args11[5] : void 0), 
            _context11.next = 6, changePublicKey(userCookies, scene).then((function(pubRes) {
              if (0 == pubRes.code) return _api_api__WEBPACK_IMPORTED_MODULE_52__.postBackupBatchV2({
                cookie_web: userCookies,
                encryptList: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.yv)(selectItem, null == pubRes ? void 0 : pubRes.ECDHSecret),
                encryptMD5Key: (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.vL)(pwValue),
                clientPubKey: null == pubRes ? void 0 : pubRes.public,
                scene
              }).then((function(res) {
                var resMsg = res.resMsg;
                if (0 == resMsg.code) {
                  var walletItem = selectEditItem.walletItem, accountItem = selectEditItem.accountItem;
                  return _method__WEBPACK_IMPORTED_MODULE_53__.modifyWalletData(walletItem, accountItem, "walletCloudBackup", !0).then((function(res) {
                    if (res) return "addChain" == type && (0, _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                      type: "success",
                      autoClose: 3e3,
                      message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_54__.lang_string)("添加成功")
                    }), !0;
                  }));
                }
                (0, _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                  type: "error",
                  message: null == resMsg ? void 0 : resMsg.message
                });
              })).catch((function(error) {
                return "backup" == type && (0, _gate_gui__WEBPACK_IMPORTED_MODULE_55__.Ds)({
                  type: "error",
                  message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_54__.lang_string)("备份失败")
                }), !1;
              }));
            }));

           case 6:
            return _context11.abrupt("return", _context11.sent);

           case 7:
           case "end":
            return _context11.stop();
          }
        }), _callee9);
      })));
      return function(_x15, _x16, _x17) {
        return _ref10.apply(this, arguments);
      };
    }(), contrastUid = function() {
      var _ref11 = _asyncToGenerator(regeneratorRuntime.mark((function _callee10() {
        var flag, _yield$ProjectData$ge2, userInfo, res, walletArr, userId;
        return regeneratorRuntime.wrap((function(_context12) {
          for (;;) switch (_context12.prev = _context12.next) {
           case 0:
            return flag = {
              u_number: "",
              hasWalletUid: !1
            }, _context12.next = 3, _model_projectData__WEBPACK_IMPORTED_MODULE_51__.jq();

           case 3:
            if (_yield$ProjectData$ge2 = _context12.sent, 1 != _yield$ProjectData$ge2.pValue.type) {
              _context12.next = 8;
              break;
            }
            return flag.hasWalletUid = !0, _context12.abrupt("return", flag);

           case 8:
            return _context12.next = 10, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.pZ)("uid");

           case 10:
            return userInfo = _context12.sent, _context12.next = 13, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_49__.$();

           case 13:
            if (res = _context12.sent, walletArr = res.defiWallet.walletArr, !(!(userId = null == userInfo ? void 0 : userInfo.checkValue) && 0 == walletArr.length || userId && 0 == walletArr.length)) {
              _context12.next = 18;
              break;
            }
            return _context12.abrupt("return", flag);

           case 18:
            return walletArr.forEach((function(item) {
              flag.u_number = item.u_number, item.u_number != userId || (flag.hasWalletUid = !0);
            })), flag.isFreePwd = (null == userInfo ? void 0 : userInfo.isFreePwd) || !1, flag.cookiesStr = null == userInfo ? void 0 : userInfo.cookiesStr, 
            _context12.abrupt("return", flag);

           case 22:
           case "end":
            return _context12.stop();
          }
        }), _callee10);
      })));
      return function() {
        return _ref11.apply(this, arguments);
      };
    }(), decodeSingleWallet = function() {
      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(_walletArr, pwValue, scene, bigNetworkKeys) {
        var userCookies, walletArr, decryptionArr;
        return regeneratorRuntime.wrap((function(_context13) {
          for (;;) switch (_context13.prev = _context13.next) {
           case 0:
            return _context13.next = 2, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_47__.pZ)();

           case 2:
            return userCookies = _context13.sent, walletArr = _walletArr, _context13.next = 6, 
            decryptionTxt(userCookies, scene, allCipherTextStr(walletArr, bigNetworkKeys), pwValue, pwValue, !1);

           case 6:
            return decryptionArr = _context13.sent, _context13.abrupt("return", loopAllWalletAssign(decryptionArr, walletArr, bigNetworkKeys));

           case 8:
           case "end":
            return _context13.stop();
          }
        }), _callee11);
      })));
      return function(_x18, _x19, _x20, _x21) {
        return _ref12.apply(this, arguments);
      };
    }(), allCipherTextStr = function(_walletArr, bigNetworkKeys) {
      var allStr = "";
      for (var i in _walletArr) allStr = allStr + getJoinStr(_walletArr[i], bigNetworkKeys) + (i == _walletArr.length - 1 ? "" : "***,");
      return allStr;
    }, loopAllWalletAssign = function(decryptionArr, _walletArr, bigNetworkKeys) {
      var copyWallet = JSON.parse(JSON.stringify(_walletArr));
      return (Array.isArray(decryptionArr) ? null == decryptionArr ? void 0 : decryptionArr.join("/&/").split("/&/***/&/") : []).forEach((function(item, index) {
        if (item) {
          var walletItem = pushkeyVal(copyWallet[index], item.split("/&/"), bigNetworkKeys).walletItem;
          copyWallet[index] = walletItem;
        }
      })), copyWallet;
    };
  },
  584426: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A_: () => gSingleInputAndWitnessBaseSize,
      DN: () => CKB_MAX_FEE,
      Gz: () => gBlankWitnessBytes,
      PF: () => CKB_MAINNET_INFO,
      X2: () => cellDepSize,
      _2: () => CKB_TESTNET_INFO,
      eP: () => DEFAULT_UDT_ARGS_SIZE,
      i9: () => CKB_UNIT,
      mD: () => transactionBaseSizeFromWalletCoreDefine,
      zb: () => uint32Size,
      zx: () => CKB_MIN_CAPACITY
    });
    __webpack_require__(418665), __webpack_require__(301772), __webpack_require__(505086), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083);
    var Buffer = __webpack_require__(348287).Buffer, CKB_MAINNET_INFO = {
      Secp256k1LockDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("71a7ba8fc96349fea0ed3a5c47992e3b4084b031a42264a018e0072e8172e46c", "hex")),
          index: 0
        },
        depType: "dep_group"
      },
      XUDTTypeScript: {
        codeHash: new Uint8Array(Buffer.from("0x50bd8d6680b8b9cf98b73f3c08faf8b2a21914311954118ad6609be6e78a1b95", "hex")),
        hashType: "data1",
        args: new Uint8Array(Buffer.from("", "hex"))
      },
      XUDTTypeDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("0xc07844ce21b38e4b071dd0e1ee3b0e27afd8d7532491327f39b786343f558ab7", "hex")),
          index: 0
        },
        depType: "code"
      },
      JOYIDTypeDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("0xf05188e5f3a6767fc4687faf45ba5f1a6e25d3ada6129dae8722cb282f262493", "hex")),
          index: 0
        },
        depType: "dep_group"
      },
      UniqueTypeScript: {
        codeHash: new Uint8Array(Buffer.from("0x2c8c11c985da60b0a330c61a85507416d6382c130ba67f0c47ab071e00aec628", "hex")),
        hashType: "data1",
        args: new Uint8Array(Buffer.from("", "hex"))
      },
      UniqueTypeDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("0x67524c01c0cb5492e499c7c7e406f2f9d823e162d6b0cf432eacde0c9808c2ad", "hex")),
          index: 0
        },
        depType: "code"
      }
    }, CKB_TESTNET_INFO = {
      Secp256k1LockDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("0xf8de3bb47d055cdf460d93a2a6e1b05f7432f9777c8c474abf4eec1d4aee5d37", "hex")),
          index: 0
        },
        depType: "dep_group"
      },
      XUDTTypeScript: {
        codeHash: new Uint8Array(Buffer.from("0x25c29dc317811a6f6f3985a7a9ebc4838bd388d19d0feeecf0bcd60f6c0975bb", "hex")),
        hashType: "type",
        args: new Uint8Array(Buffer.from(""))
      },
      XUDTTypeDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("0xbf6fb538763efec2a70a6a3dcb7242787087e1030c4e7d86585bc63a9d337f5f", "hex")),
          index: 0
        },
        depType: "code"
      },
      JOYIDTypeDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("0xf05188e5f3a6767fc4687faf45ba5f1a6e25d3ada6129dae8722cb282f262493", "hex")),
          index: 0
        },
        depType: "dep_group"
      },
      UniqueTypeScript: {
        codeHash: new Uint8Array(Buffer.from("0x8e341bcfec6393dcd41e635733ff2dca00a6af546949f70c57a706c0f344df8b", "hex")),
        hashType: "type",
        args: new Uint8Array(Buffer.from(""))
      },
      UniqueTypeDep: {
        outPoint: {
          txHash: new Uint8Array(Buffer.from("0xff91b063c78ed06f10a1ed436122bd7d671f9a72ef5f5fa28d05252c17cf4cef", "hex")),
          index: 0
        },
        depType: "code"
      }
    }, DEFAULT_UDT_ARGS_SIZE = 32, CKB_UNIT = BigInt(1e8), CKB_MAX_FEE = BigInt(2e7), CKB_MIN_CAPACITY = BigInt(62) * BigInt(1e8), transactionBaseSizeFromWalletCoreDefine = 72, cellDepSize = 37, uint32Size = 4, gSingleInputAndWitnessBaseSize = 44, gBlankWitnessBytes = 65;
  },
  592824: () => {},
  601110: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Dr: () => signAndSendTransaction,
      Gb: () => gateSignAndSendTransaction,
      Q$: () => getSendBlob20Data,
      QR: () => sendCustomNetworkRawTransaction,
      SF: () => getBlobFeeCapTotal,
      Yi: () => blob20Inscription,
      aZ: () => signSendTransaction,
      o$: () => getBlobFeeCap,
      y8: () => signAndInscribeTx,
      yL: () => signEVMTransaction,
      ym: () => getTransactionCount
    });
    __webpack_require__(207452), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(418665), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(754989), 
    __webpack_require__(194009), __webpack_require__(752231), __webpack_require__(259581), 
    __webpack_require__(269193), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(504895), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(407899), __webpack_require__(700017), __webpack_require__(110678), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(564216), 
    __webpack_require__(714913), __webpack_require__(498741), __webpack_require__(215195);
    var _web3RpcMethod__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(458939), _connect_eth__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(224882), _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(426451), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(326394), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(700313), ethers__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(937457), ethers__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(455523), ethers__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(838905), ethers6__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(131450), ethers6__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(433861), ethers6__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(400990), _popup_pages_CreateWallet_Hardware_utils_GateWalletHid__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(888745), _utils__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(219740), _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(350234), kzg_wasm__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(973557), bignumber_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(760346), viem__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(444391), borc__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(747516), ethers_lib_utils__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(788149), _evm_send__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(688280), quais__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(491190), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(259159), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(660862), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var ethName = new _connect_eth__WEBPACK_IMPORTED_MODULE_55__.EthNameSpace, getVersionedHash = function(version, hash) {
      for (var versioned = version.toString(16); versioned.length < 2; ) versioned = "0" + versioned;
      return "0x" + (versioned += (0, ethers6__WEBPACK_IMPORTED_MODULE_64__.s)(hash).substring(4));
    }, calcExcessBlobGas = function(parentExcessBlobGas, parentBlobGasUsed) {
      var excessBlobGas = parentExcessBlobGas + parentBlobGasUsed;
      return (0, bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(excessBlobGas).isLessThan(393216) ? 0n : (0, 
      bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(excessBlobGas).minus(393216).toString();
    }, calcBlobFee = function(excessBlobGas) {
      return function(factor, numerator, denominator) {
        for (var output = new bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g(0), accum = (0, 
        bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(factor).multipliedBy(denominator), i = new bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g(1); accum.isGreaterThan(0); ) output = output.plus(accum), 
        accum = (accum = accum.multipliedBy(numerator).dividedToIntegerBy(denominator)).dividedToIntegerBy(i), 
        i = i.plus(1);
        return output.dividedToIntegerBy(denominator).toString();
      }(1, excessBlobGas, 3338477);
    }, getBlobFeeCap = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(coinNetworkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var web3, latestBlock, excessBlobGas, blobGasUsed, parentExcessBlobGas;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_56__.Qp(coinNetworkKey, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return web3 = _context.sent, _context.next = 5, web3.eth.getBlock("latest", !0);

           case 5:
            return latestBlock = _context.sent, excessBlobGas = latestBlock.excessBlobGas, blobGasUsed = latestBlock.blobGasUsed, 
            parentExcessBlobGas = calcExcessBlobGas(excessBlobGas, blobGasUsed), _context.abrupt("return", calcBlobFee(parentExcessBlobGas));

           case 10:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2, _x3, _x4) {
        return _ref.apply(this, arguments);
      };
    }(), getBlobFeeCapTotal = function() {
      var blobsCount = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, blobFeeCap = arguments.length > 1 ? arguments[1] : void 0;
      return _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.dataOperation(131072 * blobsCount, blobFeeCap);
    };
    var signEip4844EVMTransaction = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
        var chainId, nonce, gasLimit, ethAmount, maxFeePerGas, maxPriorityFeePerGas, toAddress, privateKey, dataBlobs, data, networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, kzg, blobs, randomValues, blobList, blobVersionedHashes, maxFeePerBlobGas, wallet, rawTransaction;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return chainId = params.chainId, nonce = params.nonce, gasLimit = params.gasLimit, 
            ethAmount = params.ethAmount, maxFeePerGas = params.maxFeePerGas, maxPriorityFeePerGas = params.maxPriorityFeePerGas, 
            toAddress = params.toAddress, privateKey = params.privateKey, dataBlobs = params.dataBlobs, 
            data = params.data, networkKey = params.networkKey, totalNetworkDic = params.totalNetworkDic, 
            rpcUrls = params.rpcUrls, lastGetSuccessRpcTime = params.lastGetSuccessRpcTime, 
            _context2.prev = 1, _context2.next = 4, (0, kzg_wasm__WEBPACK_IMPORTED_MODULE_68__.N)();

           case 4:
            if (kzg = _context2.sent, blobs = [], dataBlobs ? blobs = dataBlobs : (blobs.push(new Blob), 
            zeroArray = void 0, zeroArray = new Uint8Array(131072), randomValues = new Blob([ zeroArray ]), 
            blobs.push(new Blob([ randomValues ]))), blobList = [], blobVersionedHashes = [], 
            blobs.forEach((function(b) {
              var commit = kzg.blobToKzgCommitment(b), proof = kzg.computeBlobKzgProof(b, commit);
              if (131072 !== b.length) {
                var padded = new Uint8Array(131072);
                padded.set(b), b = padded;
              }
              blobList.push({
                data: (0, ethers_lib_utils__WEBPACK_IMPORTED_MODULE_72__.hexlify)(b),
                commitment: (0, ethers_lib_utils__WEBPACK_IMPORTED_MODULE_72__.hexlify)(commit),
                proof: (0, ethers_lib_utils__WEBPACK_IMPORTED_MODULE_72__.hexlify)(proof)
              }), blobVersionedHashes.push(getVersionedHash(1, commit));
            })), null == params || !params.maxFeePerBlobGas) {
              _context2.next = 13;
              break;
            }
            _context2.t0 = null == params ? void 0 : params.maxFeePerBlobGas, _context2.next = 16;
            break;

           case 13:
            return _context2.next = 15, getBlobFeeCap(networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 15:
            _context2.t0 = _context2.sent;

           case 16:
            return maxFeePerBlobGas = _context2.t0, wallet = new ethers6__WEBPACK_IMPORTED_MODULE_62__.u(privateKey), 
            _context2.next = 20, wallet.signTransaction({
              type: 3,
              to: toAddress,
              gasLimit,
              maxFeePerBlobGas,
              maxPriorityFeePerGas,
              maxFeePerGas,
              data: null != data && data.startsWith("0x") ? data : "0x".concat(data || ""),
              value: ethAmount,
              chainId,
              nonce,
              blobVersionedHashes,
              blobs: blobList,
              kzg
            });

           case 20:
            return rawTransaction = _context2.sent, _context2.abrupt("return", rawTransaction);

           case 24:
            _context2.prev = 24, _context2.t1 = _context2.catch(1);

           case 26:
           case "end":
            return _context2.stop();
          }
          var zeroArray;
        }), _callee2, null, [ [ 1, 24 ] ]);
      })));
      return function(_x5) {
        return _ref2.apply(this, arguments);
      };
    }(), signEVMTransaction = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(chainId, nonce, gasPrice, gasLimit, ethAmount, maxFeePerGas, maxPriorityFeePerGas, toAddress, privateKey, data, coinType) {
        var _yield$getWasm, AnySigner, HexCoding, CoinType, input, encoded, outputData, output, rawTransaction;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.t)();

           case 2:
            return _yield$getWasm = _context3.sent, AnySigner = _yield$getWasm.AnySigner, HexCoding = _yield$getWasm.HexCoding, 
            CoinType = _yield$getWasm.CoinType, input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.SigningInput.create({
              txMode: maxFeePerGas && maxPriorityFeePerGas ? _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.TransactionMode.Enveloped : null,
              toAddress,
              chainId: HexCoding.decode(chainId),
              nonce: HexCoding.decode(nonce),
              gasPrice: HexCoding.decode(gasPrice),
              gasLimit: HexCoding.decode(gasLimit),
              maxFeePerGas: HexCoding.decode(maxFeePerGas || ""),
              maxInclusionFeePerGas: HexCoding.decode(maxPriorityFeePerGas || ""),
              transaction: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.Transaction.create({
                transfer: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.Transaction.Transfer.create({
                  amount: ethAmount ? HexCoding.decode(ethAmount) : null,
                  data: data ? HexCoding.decode(data) : null
                })
              }),
              privateKey: HexCoding.decode(privateKey)
            }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.SigningInput.encode(input).finish(), 
            outputData = AnySigner.sign(encoded, CoinType.ethereum), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.SigningOutput.decode(outputData), 
            rawTransaction = HexCoding.encode(output.encoded), _context3.abrupt("return", rawTransaction);

           case 12:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {
        return _ref3.apply(this, arguments);
      };
    }(), gateSignAndSendTransaction = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(_ref4) {
        var networkKey, chainId, fromAddress, toAddress, amount, data, privateKeyHex, coinType, preGasPrice, preGasLimit, historyData, _ref4$isReturn, isReturn, mpcWallet, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, rpcUrl, manually, accountID, _count, _gasPrice, _gasLimit, web3, countHex, gasPriceHex, gasLimitHex, signedTransaction, txParams, rawTx, keccak256Hash, rsv;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return networkKey = _ref4.networkKey, chainId = _ref4.chainId, fromAddress = _ref4.fromAddress, 
            toAddress = _ref4.toAddress, amount = _ref4.amount, data = _ref4.data, privateKeyHex = _ref4.privateKeyHex, 
            coinType = _ref4.coinType, preGasPrice = _ref4.preGasPrice, preGasLimit = _ref4.preGasLimit, 
            historyData = _ref4.historyData, _ref4$isReturn = _ref4.isReturn, isReturn = void 0 !== _ref4$isReturn && _ref4$isReturn, 
            mpcWallet = _ref4.mpcWallet, totalNetworkDic = _ref4.totalNetworkDic, rpcUrls = _ref4.rpcUrls, 
            lastGetSuccessRpcTime = _ref4.lastGetSuccessRpcTime, rpcUrl = _ref4.rpcUrl, manually = _ref4.manually, 
            accountID = _ref4.accountID, _context4.prev = 1, _context4.next = 4, getTransactionCount(networkKey, fromAddress, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 4:
            if (_count = _context4.sent, null == preGasPrice) {
              _context4.next = 9;
              break;
            }
            _context4.t0 = preGasPrice, _context4.next = 12;
            break;

           case 9:
            return _context4.next = 11, gasPrice(networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 11:
            _context4.t0 = _context4.sent;

           case 12:
            if (_gasPrice = _context4.t0, null == preGasLimit) {
              _context4.next = 17;
              break;
            }
            _context4.t1 = preGasLimit, _context4.next = 20;
            break;

           case 17:
            return _context4.next = 19, estimateGas({
              networkKey,
              fromAddress,
              toAddress,
              value: amount,
              data,
              totalNetworkDic,
              rpcUrls,
              lastGetSuccessRpcTime
            });

           case 19:
            _context4.t1 = _context4.sent;

           case 20:
            return _gasLimit = _context4.t1, _context4.next = 23, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_56__.Qp(networkKey, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 23:
            if (web3 = _context4.sent, countHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_count))), 
            gasPriceHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_gasPrice)), 
            gasLimitHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_gasLimit)), 
            signedTransaction = "", !mpcWallet) {
              _context4.next = 38;
              break;
            }
            return txParams = {
              to: toAddress,
              gasPrice: gasPriceHex,
              gasLimit: gasLimitHex,
              value: amount,
              data,
              nonce: countHex,
              chainId: ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber()
            }, rawTx = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams), keccak256Hash = (0, 
            _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_67__.keccak256)(rawTx), _context4.next = 34, 
            (0, _utils__WEBPACK_IMPORTED_MODULE_66__.uY)({
              fromAddress: mpcWallet.address,
              mpcWallet,
              rawTx: keccak256Hash
            });

           case 34:
            rsv = _context4.sent, signedTransaction = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams, rsv), 
            _context4.next = 41;
            break;

           case 38:
            return _context4.next = 40, signEVMTransaction(chainId, countHex, gasPriceHex, gasLimitHex, amount, null, null, toAddress, privateKeyHex, data, coinType);

           case 40:
            signedTransaction = _context4.sent;

           case 41:
            if (!isReturn || !signedTransaction) {
              _context4.next = 43;
              break;
            }
            return _context4.abrupt("return", signedTransaction);

           case 43:
            return _context4.abrupt("return", sendRawTransaction(networkKey, signedTransaction, historyData, rpcUrl, manually, accountID));

           case 46:
            return _context4.prev = 46, _context4.t2 = _context4.catch(1), _context4.abrupt("return", null);

           case 49:
           case "end":
            return _context4.stop();
          }
        }), _callee4, null, [ [ 1, 46 ] ]);
      })));
      return function(_x17) {
        return _ref5.apply(this, arguments);
      };
    }(), signAndSendTransaction = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(networkKey, chainId, fromAddress, toAddress, amount, data, privateKeyHex, coinType, preGasPrice, preGasLimit, recordData) {
        var isReturn, hardWare, coinTransferNonce, coinItem, mpcWallet, isCustomOrTest, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, _count, _gasPrice, _gasLimit, toHex, countHex, gasPriceHex, maxFeePerGasHex, maxPriorityFeePerGasHex, gasLimitHex, signedTransaction, blob20SignedTx, json, _params, _blob20SignedTx, txParams, rawTx, _hardWare$device, uint8Array, sign, _hardWare$device2, _hardWare$device3, signedRsv, rsv, keccak256Hash, _rsv, provider, wallet, _args5 = arguments;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            if (isReturn = _args5.length > 11 && void 0 !== _args5[11] && _args5[11], hardWare = _args5.length > 12 && void 0 !== _args5[12] ? _args5[12] : null, 
            coinItem = _args5.length > 14 ? _args5[14] : void 0, mpcWallet = _args5.length > 15 && void 0 !== _args5[15] ? _args5[15] : null, 
            isCustomOrTest = _args5.length > 16 ? _args5[16] : void 0, totalNetworkDic = _args5.length > 17 ? _args5[17] : void 0, 
            rpcUrls = _args5.length > 18 ? _args5[18] : void 0, lastGetSuccessRpcTime = _args5.length > 19 ? _args5[19] : void 0, 
            null == (coinTransferNonce = _args5.length > 13 ? _args5[13] : void 0)) {
              _context5.next = 13;
              break;
            }
            _context5.t0 = coinTransferNonce, _context5.next = 16;
            break;

           case 13:
            return _context5.next = 15, getTransactionCount(networkKey, fromAddress, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 15:
            _context5.t0 = _context5.sent;

           case 16:
            if (_count = _context5.t0, null == preGasPrice) {
              _context5.next = 21;
              break;
            }
            _context5.t1 = preGasPrice, _context5.next = 24;
            break;

           case 21:
            return _context5.next = 23, gasPrice(networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 23:
            _context5.t1 = _context5.sent;

           case 24:
            if (_gasPrice = _context5.t1, null == preGasLimit) {
              _context5.next = 29;
              break;
            }
            _context5.t2 = preGasLimit, _context5.next = 32;
            break;

           case 29:
            return _context5.next = 31, estimateGas({
              networkKey,
              fromAddress,
              toAddress,
              value: amount,
              data,
              totalNetworkDic,
              rpcUrls,
              lastGetSuccessRpcTime
            });

           case 31:
            _context5.t2 = _context5.sent;

           case 32:
            if (_gasLimit = _context5.t2, toHex = ethers6__WEBPACK_IMPORTED_MODULE_63__.up, 
            countHex = toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_count)), 
            gasPriceHex = toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_gasPrice)), 
            maxFeePerGasHex = coinItem.maxFeePerGas ? toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(coinItem.maxFeePerGas)) : null, 
            maxPriorityFeePerGasHex = coinItem.maxPriorityFeePerGas ? toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(coinItem.maxPriorityFeePerGas)) : null, 
            gasLimitHex = toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_gasLimit)), 
            signedTransaction = null, "BLOB-20" !== coinItem.protocolLabel) {
              _context5.next = 46;
              break;
            }
            return json = (0, _evm_send__WEBPACK_IMPORTED_MODULE_73__.hL)(coinItem.coinTransferToAddress, coinItem.coinTransferAmount, coinItem.coinTick), 
            _params = {
              chainId,
              nonce: countHex,
              gasLimit: gasLimitHex,
              ethAmount: "0x0",
              maxFeePerGas: maxFeePerGasHex,
              maxPriorityFeePerGas: maxPriorityFeePerGasHex,
              toAddress: coinItem.coinTransferFromAddress,
              privateKey: privateKeyHex,
              json,
              data,
              networkKey: coinItem.coinNetworkKey,
              totalNetworkDic,
              rpcUrls,
              lastGetSuccessRpcTime
            }, _context5.next = 45, blob20Inscription(_params);

           case 45:
            blob20SignedTx = _context5.sent;

           case 46:
            if (!hardWare && !mpcWallet) {
              _context5.next = 72;
              break;
            }
            if (txParams = {
              to: toAddress,
              gasPrice: gasPriceHex,
              gasLimit: gasLimitHex,
              value: amount,
              data,
              nonce: countHex,
              chainId: ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber()
            }, maxFeePerGasHex && maxPriorityFeePerGasHex && mpcWallet && (txParams.type = 2, 
            txParams.maxFeePerGas = maxFeePerGasHex, txParams.maxPriorityFeePerGas = maxPriorityFeePerGasHex), 
            rawTx = null !== (_blob20SignedTx = blob20SignedTx) && void 0 !== _blob20SignedTx ? _blob20SignedTx : ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams), 
            !hardWare) {
              _context5.next = 64;
              break;
            }
            return uint8Array = ethers__WEBPACK_IMPORTED_MODULE_61__.arrayify(rawTx), _context5.next = 54, 
            null == hardWare || null === (_hardWare$device = hardWare.device) || void 0 === _hardWare$device ? void 0 : _hardWare$device.signTxRaw(coinItem.coinNetworkSymbol, uint8Array, {
              t: [ {
                a: "-" !== (null == coinItem ? void 0 : coinItem.coinContractAddress) ? null == coinItem ? void 0 : coinItem.coinContractAddress : "",
                s: null == coinItem ? void 0 : coinItem.coinSimpleName,
                d: Number(null == coinItem ? void 0 : coinItem.coinPrecision),
                t: 0
              } ],
              c: [ {
                t: 0,
                ca: "ETH",
                sy: coinItem.coinNetworkSymbol,
                d: Number(coinItem.coinNetworkPrecision),
                ch: coinItem.coinNetworkName,
                ci: ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber()
              } ]
            });

           case 54:
            if (null == (sign = _context5.sent) || !sign.sign) {
              _context5.next = 63;
              break;
            }
            return _context5.next = 58, null == hardWare || null === (_hardWare$device2 = hardWare.device) || void 0 === _hardWare$device2 ? void 0 : _hardWare$device2.request(null == hardWare ? void 0 : hardWare.path, 0, "00");

           case 58:
            signedRsv = _context5.sent, rsv = null == hardWare || null === (_hardWare$device3 = hardWare.device) || void 0 === _hardWare$device3 ? void 0 : _hardWare$device3.hexToMsgSignature(_popup_pages_CreateWallet_Hardware_utils_GateWalletHid__WEBPACK_IMPORTED_MODULE_65__.RX.gate, signedRsv, ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber()), 
            signedTransaction = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams, rsv), 
            _context5.next = 64;
            break;

           case 63:
            return _context5.abrupt("return");

           case 64:
            if (!mpcWallet) {
              _context5.next = 70;
              break;
            }
            return keccak256Hash = (0, _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_67__.keccak256)(rawTx), 
            _context5.next = 68, (0, _utils__WEBPACK_IMPORTED_MODULE_66__.uY)({
              fromAddress,
              mpcWallet,
              rawTx: keccak256Hash
            });

           case 68:
            _rsv = _context5.sent, signedTransaction = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams, _rsv);

           case 70:
            _context5.next = 90;
            break;

           case 72:
            if ("BLOB-20" !== coinItem.protocolLabel) {
              _context5.next = 76;
              break;
            }
            signedTransaction = blob20SignedTx, _context5.next = 90;
            break;

           case 76:
            if ("QUAI_GATETEST" !== networkKey) {
              _context5.next = 87;
              break;
            }
            return _context5.next = 79, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_56__.Qp(networkKey, null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 79:
            return provider = _context5.sent, (wallet = new quais__WEBPACK_IMPORTED_MODULE_74__.u(privateKeyHex, provider.eth)).connect(provider.eth), 
            _context5.next = 84, wallet.signTransaction({
              to: toAddress,
              from: fromAddress,
              chainId: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(chainId).toNumber(),
              gasLimit: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(parseInt(_gasLimit)).toString(),
              maxPriorityFeePerGas: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(parseInt(_gasPrice)).toString(),
              value: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(amount).toString(),
              maxFeePerGas: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_69__.g)(_gasPrice).toString(),
              data,
              nonce: _count
            });

           case 84:
            signedTransaction = _context5.sent, _context5.next = 90;
            break;

           case 87:
            return _context5.next = 89, signEVMTransaction(chainId, countHex, gasPriceHex, gasLimitHex, amount, maxFeePerGasHex, maxPriorityFeePerGasHex, toAddress, privateKeyHex, data, coinType);

           case 89:
            signedTransaction = _context5.sent;

           case 90:
            if (!isReturn || !signedTransaction) {
              _context5.next = 92;
              break;
            }
            return _context5.abrupt("return", signedTransaction);

           case 92:
            if (!isCustomOrTest) {
              _context5.next = 96;
              break;
            }
            return _context5.abrupt("return", sendCustomNetworkRawTransaction(signedTransaction, recordData, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime));

           case 96:
            return _context5.abrupt("return", sendRawTransaction(networkKey, signedTransaction, recordData));

           case 97:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })));
      return function(_x18, _x19, _x20, _x21, _x22, _x23, _x24, _x25, _x26, _x27, _x28) {
        return _ref6.apply(this, arguments);
      };
    }(), blob20Inscription = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
        var dataBlobs, _params$blobs, blob20blobscription;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return null != params && params.blobs ? dataBlobs = null == params || null === (_params$blobs = params.blobs) || void 0 === _params$blobs ? void 0 : _params$blobs.map((function(item) {
              return new Uint8Array(Buffer.from(item, "hex"));
            })) : (blob20blobscription = borc__WEBPACK_IMPORTED_MODULE_71__.lF({
              contentType: "application/json",
              content: params.json
            }), dataBlobs = (0, viem__WEBPACK_IMPORTED_MODULE_70__.w)({
              data: blob20blobscription
            })), _context6.next = 3, signEip4844EVMTransaction(_objectSpread(_objectSpread({}, params), {}, {
              dataBlobs
            }));

           case 3:
            return _context6.abrupt("return", _context6.sent);

           case 4:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x29) {
        return _ref7.apply(this, arguments);
      };
    }(), getSendBlob20Data = function() {
      return "0x".concat(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.stringToHex("data:;rule=esip6,"));
    }, signEVMTxSync = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(chainId, nonce, gasPrice, gasLimit, ethAmount, maxFeePerGas, maxPriorityFeePerGas, toAddress, privateKey, data, coinType, wasm, coinItemType, networkKey) {
        var rawTransaction, AnySigner, HexCoding, CoinType, input, encoded, outputData, output, txParams, rawTx, keccak256Hash, rsv;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            if (rawTransaction = "", "string" != typeof privateKey) {
              _context7.next = 16;
              break;
            }
            if ("blob20" !== coinItemType) {
              _context7.next = 8;
              break;
            }
            return _context7.next = 5, blob20Inscription({
              chainId,
              nonce,
              gasLimit,
              ethAmount,
              maxFeePerGas,
              maxPriorityFeePerGas,
              toAddress,
              privateKey,
              dataBlobs,
              data: "0x",
              networkKey
            });

           case 5:
            rawTransaction = _context7.sent, _context7.next = 14;
            break;

           case 8:
            AnySigner = wasm.AnySigner, HexCoding = wasm.HexCoding, CoinType = wasm.CoinType, 
            input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.SigningInput.create({
              txMode: maxFeePerGas && maxPriorityFeePerGas ? _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.TransactionMode.Enveloped : null,
              toAddress,
              chainId: HexCoding.decode(chainId),
              nonce: HexCoding.decode(nonce),
              gasPrice: HexCoding.decode(gasPrice),
              gasLimit: HexCoding.decode(gasLimit),
              maxFeePerGas: HexCoding.decode(maxFeePerGas || ""),
              maxInclusionFeePerGas: HexCoding.decode(maxPriorityFeePerGas || ""),
              transaction: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.Transaction.create({
                transfer: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.Transaction.Transfer.create({
                  amount: ethAmount ? HexCoding.decode(ethAmount) : null,
                  data: data ? HexCoding.decode(data) : null
                })
              }),
              privateKey: HexCoding.decode(privateKey)
            }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.SigningInput.encode(input).finish(), 
            outputData = AnySigner.sign(encoded, CoinType.ethereum), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.TW.Ethereum.Proto.SigningOutput.decode(outputData), 
            rawTransaction = HexCoding.encode(output.encoded);

           case 14:
            _context7.next = 24;
            break;

           case 16:
            return txParams = {
              to: toAddress,
              gasPrice,
              gasLimit,
              value: ethAmount,
              data,
              nonce,
              chainId: ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber()
            }, maxFeePerGas && maxPriorityFeePerGas && (txParams.type = "blob20" === coinItemType ? 3 : 2, 
            txParams.maxFeePerGas = maxFeePerGas, txParams.maxPriorityFeePerGas = maxPriorityFeePerGas, 
            "blob20" === coinItemType && borc__WEBPACK_IMPORTED_MODULE_71__.lF({
              contentType: "application/json",
              content: params.data
            })), rawTx = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams), keccak256Hash = (0, 
            _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_67__.keccak256)(rawTx), _context7.next = 22, 
            (0, _utils__WEBPACK_IMPORTED_MODULE_66__.uY)({
              fromAddress: privateKey.address,
              privateKey,
              rawTx: keccak256Hash
            });

           case 22:
            rsv = _context7.sent, rawTransaction = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams, rsv);

           case 24:
            return _context7.abrupt("return", rawTransaction);

           case 25:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })));
      return function(_x30, _x31, _x32, _x33, _x34, _x35, _x36, _x37, _x38, _x39, _x40, _x41, _x42, _x43) {
        return _ref8.apply(this, arguments);
      };
    }(), signAndInscribeTx = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(networkKey, chainId, fromAddress, toAddress, datas, privateKeyHex, coinType, gasPrice, gasLimit, maxPriorityFeePerGas, coinItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var CoinType, _yield$Promise$all, _yield$Promise$all2, startCount, web3, gasPriceHex, gasLimitHex, maxPriorityFeePerGasHex, count, signedTxs, index, data, countHex, signedTx;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            return _context8.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_75__.t)();

           case 2:
            return CoinType = _context8.sent, _context8.next = 5, Promise.all([ getTransactionCount(networkKey, fromAddress, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime), _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_56__.Qp(networkKey, null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) ]);

           case 5:
            if (_yield$Promise$all = _context8.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
            startCount = _yield$Promise$all2[0], web3 = _yield$Promise$all2[1], gasPriceHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(gasPrice)), 
            gasLimitHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(gasLimit)), 
            maxPriorityFeePerGasHex = maxPriorityFeePerGas ? web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(maxPriorityFeePerGas)) : "", 
            count = startCount, signedTxs = [], !Array.isArray(datas)) {
              _context8.next = 27;
              break;
            }
            index = 0;

           case 16:
            if (!(index < datas.length)) {
              _context8.next = 27;
              break;
            }
            return data = datas[index], countHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(count)), 
            _context8.next = 21, signEVMTxSync(chainId, countHex, gasPriceHex, gasLimitHex, "0x0", gasPriceHex, maxPriorityFeePerGasHex, toAddress, privateKeyHex, data, coinType, CoinType, coinItem.type, networkKey);

           case 21:
            signedTx = _context8.sent, signedTxs.push({
              signedTx,
              nonce: count
            }), count++;

           case 24:
            index++, _context8.next = 16;
            break;

           case 27:
            return _context8.abrupt("return", signedTxs);

           case 28:
           case "end":
            return _context8.stop();
          }
        }), _callee8);
      })));
      return function(_x44, _x45, _x46, _x47, _x48, _x49, _x50, _x51, _x52, _x53, _x54, _x55, _x56, _x57) {
        return _ref9.apply(this, arguments);
      };
    }(), getTransactionCount = function() {
      var _ref15 = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(networkKey, address, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var web3;
        return regeneratorRuntime.wrap((function(_context14) {
          for (;;) switch (_context14.prev = _context14.next) {
           case 0:
            return _context14.next = 2, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_56__.Qp(networkKey, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return web3 = _context14.sent, _context14.next = 5, web3.eth.getTransactionCount(address, "latest");

           case 5:
            return _context14.abrupt("return", _context14.sent);

           case 6:
           case "end":
            return _context14.stop();
          }
        }), _callee14);
      })));
      return function(_x73, _x74, _x75, _x76, _x77) {
        return _ref15.apply(this, arguments);
      };
    }(), sendRawTransaction = function() {
      var _ref16 = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(networkKey, signedTransaction, historyData, rpcUrl, manually, accountID) {
        var result;
        return regeneratorRuntime.wrap((function(_context15) {
          for (;;) switch (_context15.prev = _context15.next) {
           case 0:
            return signedTransaction.startsWith("0x") || (signedTransaction = "0x".concat(signedTransaction)), 
            _context15.next = 3, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_58__.IM)(networkKey, [ signedTransaction ], historyData, rpcUrl, manually, accountID);

           case 3:
            return result = _context15.sent, _context15.abrupt("return", result.hash);

           case 5:
           case "end":
            return _context15.stop();
          }
        }), _callee15);
      })));
      return function(_x78, _x79, _x80, _x81, _x82, _x83) {
        return _ref16.apply(this, arguments);
      };
    }(), sendCustomNetworkRawTransaction = function() {
      var _ref17 = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(signedTransaction, recordData, isEVM, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var result;
        return regeneratorRuntime.wrap((function(_context16) {
          for (;;) switch (_context16.prev = _context16.next) {
           case 0:
            return signedTransaction.startsWith("0x") || (signedTransaction = "0x".concat(signedTransaction)), 
            _context16.next = 3, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_58__.$N)([ signedTransaction ], recordData, isEVM, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 3:
            return result = _context16.sent, _context16.abrupt("return", result.data.data.hash_id);

           case 5:
           case "end":
            return _context16.stop();
          }
        }), _callee16);
      })));
      return function(_x84, _x85, _x86, _x87, _x88, _x89) {
        return _ref17.apply(this, arguments);
      };
    }(), gasPrice = function() {
      var _ref18 = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var rpcAddress, requestMethod, provider, result;
        return regeneratorRuntime.wrap((function(_context17) {
          for (;;) switch (_context17.prev = _context17.next) {
           case 0:
            return _context17.next = 2, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_76__.gL)(totalNetworkDic, networkKey, rpcUrls[networkKey], lastGetSuccessRpcTime);

           case 2:
            return rpcAddress = _context17.sent, requestMethod = "post", _context17.next = 6, 
            _web3RpcMethod__WEBPACK_IMPORTED_MODULE_54__.K.init(rpcAddress);

           case 6:
            return provider = _context17.sent, _context17.next = 9, provider.send(requestMethod, rpcAddress, ethName.eth_gasPrice());

           case 9:
            return result = _context17.sent, _context17.abrupt("return", result);

           case 11:
           case "end":
            return _context17.stop();
          }
        }), _callee17);
      })));
      return function(_x90, _x91, _x92, _x93) {
        return _ref18.apply(this, arguments);
      };
    }(), estimateGas = function() {
      var _ref20 = _asyncToGenerator(regeneratorRuntime.mark((function _callee18(_ref19) {
        var networkKey, fromAddress, toAddress, data, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, rpcAddress, requestMethod, provider, InterfaceTxObj, result;
        return regeneratorRuntime.wrap((function(_context18) {
          for (;;) switch (_context18.prev = _context18.next) {
           case 0:
            return networkKey = _ref19.networkKey, fromAddress = _ref19.fromAddress, toAddress = _ref19.toAddress, 
            _ref19.value, _ref19.amountOfGas, _ref19.gasPrice, _ref19.maxPriorityFeePerGas, 
            _ref19.maxFeePerGas, data = _ref19.data, totalNetworkDic = _ref19.totalNetworkDic, 
            rpcUrls = _ref19.rpcUrls, lastGetSuccessRpcTime = _ref19.lastGetSuccessRpcTime, 
            _context18.next = 3, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_76__.gL)(totalNetworkDic, networkKey, rpcUrls[networkKey], lastGetSuccessRpcTime);

           case 3:
            return rpcAddress = _context18.sent, requestMethod = "post", _context18.next = 7, 
            _web3RpcMethod__WEBPACK_IMPORTED_MODULE_54__.K.init(rpcAddress);

           case 7:
            return provider = _context18.sent, InterfaceTxObj = {
              to: toAddress,
              from: fromAddress,
              data: data || "0x"
            }, _context18.next = 11, provider.send(requestMethod, rpcAddress, ethName.eth_estimateGas(InterfaceTxObj));

           case 11:
            return result = _context18.sent, _context18.abrupt("return", result);

           case 13:
           case "end":
            return _context18.stop();
          }
        }), _callee18);
      })));
      return function(_x94) {
        return _ref20.apply(this, arguments);
      };
    }(), signSendTransaction = function() {
      var _ref21 = _asyncToGenerator(regeneratorRuntime.mark((function _callee19(networkKey, chainId, fromAddress, toAddress, amount, data, privateKeyHex, coinType, preGasPrice, preGasLimit) {
        var isReturn, hardWare, coinTransferNonce, coinItem, mpcWallet, isAddNonce, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, _count, _gasPrice, _gasLimit, web3, nonce, countHex, gasPriceHex, maxFeePerGasHex, maxPriorityFeePerGasHex, gasLimitHex, signedTransaction, txParams, rawTx, _hardWare$device4, uint8Array, sign, _hardWare$device5, _hardWare$device6, signedRsv, rsv, keccak256Hash, _rsv2, _args19 = arguments;
        return regeneratorRuntime.wrap((function(_context19) {
          for (;;) switch (_context19.prev = _context19.next) {
           case 0:
            if (isReturn = _args19.length > 10 && void 0 !== _args19[10] && _args19[10], hardWare = _args19.length > 11 && void 0 !== _args19[11] ? _args19[11] : null, 
            coinItem = _args19.length > 13 ? _args19[13] : void 0, mpcWallet = _args19.length > 14 && void 0 !== _args19[14] ? _args19[14] : null, 
            isAddNonce = _args19.length > 15 && void 0 !== _args19[15] && _args19[15], totalNetworkDic = _args19.length > 16 ? _args19[16] : void 0, 
            rpcUrls = _args19.length > 17 ? _args19[17] : void 0, lastGetSuccessRpcTime = _args19.length > 18 ? _args19[18] : void 0, 
            null == (coinTransferNonce = _args19.length > 12 ? _args19[12] : void 0)) {
              _context19.next = 13;
              break;
            }
            _context19.t0 = coinTransferNonce, _context19.next = 16;
            break;

           case 13:
            return _context19.next = 15, getTransactionCount(networkKey, fromAddress, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 15:
            _context19.t0 = _context19.sent;

           case 16:
            if (_count = _context19.t0, null == preGasPrice) {
              _context19.next = 21;
              break;
            }
            _context19.t1 = preGasPrice, _context19.next = 24;
            break;

           case 21:
            return _context19.next = 23, gasPrice(networkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 23:
            _context19.t1 = _context19.sent;

           case 24:
            if (_gasPrice = _context19.t1, null == preGasLimit) {
              _context19.next = 29;
              break;
            }
            _context19.t2 = preGasLimit, _context19.next = 32;
            break;

           case 29:
            return _context19.next = 31, estimateGas({
              networkKey,
              fromAddress,
              toAddress,
              value: amount,
              data,
              totalNetworkDic,
              rpcUrls,
              lastGetSuccessRpcTime
            });

           case 31:
            _context19.t2 = _context19.sent;

           case 32:
            return _gasLimit = _context19.t2, _context19.next = 35, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_56__.Qp(networkKey, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 35:
            if (web3 = _context19.sent, nonce = isAddNonce ? Number(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_count)) + 1 : _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_count), 
            countHex = web3.utils.toHex(nonce), gasPriceHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_gasPrice)), 
            maxFeePerGasHex = coinItem.maxFeePerGas ? web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(coinItem.maxFeePerGas)) : null, 
            maxPriorityFeePerGasHex = coinItem.maxPriorityFeePerGas ? web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(coinItem.maxPriorityFeePerGas)) : null, 
            gasLimitHex = web3.utils.toHex(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_57__.cutInteger(_gasLimit)), 
            signedTransaction = null, !hardWare && !mpcWallet) {
              _context19.next = 68;
              break;
            }
            if (txParams = {
              to: toAddress,
              gasPrice: gasPriceHex,
              gasLimit: gasLimitHex,
              value: amount,
              data,
              nonce: countHex,
              chainId: ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber(),
              type: 2,
              maxFeePerGas: maxFeePerGasHex,
              maxPriorityFeePerGas: maxPriorityFeePerGasHex
            }, rawTx = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams), !hardWare) {
              _context19.next = 60;
              break;
            }
            return uint8Array = ethers__WEBPACK_IMPORTED_MODULE_61__.arrayify(rawTx), _context19.next = 50, 
            null == hardWare || null === (_hardWare$device4 = hardWare.device) || void 0 === _hardWare$device4 ? void 0 : _hardWare$device4.signTxRaw(coinItem.coinNetworkSymbol, uint8Array, {
              t: [ {
                a: "-" !== (null == coinItem ? void 0 : coinItem.coinContractAddress) ? null == coinItem ? void 0 : coinItem.coinContractAddress : "",
                s: null == coinItem ? void 0 : coinItem.coinSimpleName,
                d: Number(null == coinItem ? void 0 : coinItem.coinPrecision),
                t: 0
              } ],
              c: [ {
                t: 0,
                ca: "ETH",
                sy: coinItem.coinNetworkSymbol,
                d: Number(coinItem.coinNetworkPrecision),
                ch: coinItem.coinNetworkName,
                ci: ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber()
              } ]
            });

           case 50:
            if (null == (sign = _context19.sent) || !sign.sign) {
              _context19.next = 59;
              break;
            }
            return _context19.next = 54, null == hardWare || null === (_hardWare$device5 = hardWare.device) || void 0 === _hardWare$device5 ? void 0 : _hardWare$device5.request(null == hardWare ? void 0 : hardWare.path, 0, "00");

           case 54:
            signedRsv = _context19.sent, rsv = null == hardWare || null === (_hardWare$device6 = hardWare.device) || void 0 === _hardWare$device6 ? void 0 : _hardWare$device6.hexToMsgSignature(_popup_pages_CreateWallet_Hardware_utils_GateWalletHid__WEBPACK_IMPORTED_MODULE_65__.RX.gate, signedRsv, ethers__WEBPACK_IMPORTED_MODULE_59__.gH.from(chainId).toNumber()), 
            signedTransaction = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams, rsv), 
            _context19.next = 60;
            break;

           case 59:
            return _context19.abrupt("return");

           case 60:
            if (!mpcWallet) {
              _context19.next = 66;
              break;
            }
            return keccak256Hash = (0, _ethersproject_keccak256__WEBPACK_IMPORTED_MODULE_67__.keccak256)(rawTx), 
            _context19.next = 64, (0, _utils__WEBPACK_IMPORTED_MODULE_66__.uY)({
              fromAddress,
              mpcWallet,
              rawTx: keccak256Hash
            });

           case 64:
            _rsv2 = _context19.sent, signedTransaction = ethers__WEBPACK_IMPORTED_MODULE_60__.serialize(txParams, _rsv2);

           case 66:
            _context19.next = 71;
            break;

           case 68:
            return _context19.next = 70, signEVMTransaction(chainId, countHex, gasPriceHex, gasLimitHex, amount, maxFeePerGasHex, maxPriorityFeePerGasHex, toAddress, privateKeyHex, data, coinType);

           case 70:
            signedTransaction = _context19.sent;

           case 71:
            if (!isReturn || !signedTransaction) {
              _context19.next = 73;
              break;
            }
            return _context19.abrupt("return", signedTransaction);

           case 73:
            return _context19.abrupt("return", signedTransaction);

           case 74:
           case "end":
            return _context19.stop();
          }
        }), _callee19);
      })));
      return function(_x95, _x96, _x97, _x98, _x99, _x100, _x101, _x102, _x103, _x104) {
        return _ref21.apply(this, arguments);
      };
    }();
  },
  620107: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      $m: () => isValidAddress,
      Dp: () => getAccountByPrivatekey,
      F8: () => createAccountByMnemonic,
      Nv: () => isValidCosmosAddress,
      U5: () => toHexString,
      XR: () => decodeWIFPrivateKey,
      a7: () => creatManyAccountsByPrivateKey,
      bg: () => concatKeyPairToB58SecretKey,
      j7: () => encodeWIFPrivateKey,
      jx: () => createBTCAccountByExtendedPrivateKey,
      mP: () => createAccountByExtendedPrivateKey,
      oI: () => createAccountByMnemonicAndType,
      ro: () => getPrivateKeyFromB58SecretKey
    });
    __webpack_require__(207452), __webpack_require__(700533), __webpack_require__(348825), 
    __webpack_require__(579389), __webpack_require__(505086), __webpack_require__(906048), 
    __webpack_require__(380115), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(754989), __webpack_require__(418665), __webpack_require__(269193), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(259581), 
    __webpack_require__(700017), __webpack_require__(718636), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(447746), __webpack_require__(43148), 
    __webpack_require__(219693), __webpack_require__(210557), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(407899), __webpack_require__(110678), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(103101), __webpack_require__(936012), 
    __webpack_require__(504895), __webpack_require__(564216), __webpack_require__(215195), 
    __webpack_require__(714913), __webpack_require__(498741);
    var _utils__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(921225), _account__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(266744), wif__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(557513), wif__WEBPACK_IMPORTED_MODULE_40___default = __webpack_require__.n(wif__WEBPACK_IMPORTED_MODULE_40__), _venom_venomWallet__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(574867), _const__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(498050), _method__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(326394), bech32__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(722343), _substrate_subWalletMethod__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(163363), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(259159), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(660862), _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(291842), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e) {
              throw _e;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e2) {
          didErr = !0, err = _e2;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    __webpack_require__(650251);
    var toHexString = function(bytes) {
      return bytes.reduce((function(str, _byte) {
        return str + _byte.toString(16).padStart(2, "0");
      }), "");
    }, _getZeroDeepthDerivationPath = function(coinType, CoinTypeExt, CoinType) {
      var _CoinType$cardano, _CoinType$move, _CoinType$sonic;
      if (coinType.value == (null === (_CoinType$cardano = CoinType.cardano) || void 0 === _CoinType$cardano ? void 0 : _CoinType$cardano.value)) return "m/1852'/1815'";
      var purpose = CoinTypeExt.purpose(coinType);
      return coinType.value == (null === (_CoinType$move = CoinType.move) || void 0 === _CoinType$move ? void 0 : _CoinType$move.value) ? coinType = CoinType.aptos : coinType.value == (null === (_CoinType$sonic = CoinType.sonic) || void 0 === _CoinType$sonic ? void 0 : _CoinType$sonic.value) && (coinType = CoinType.solana), 
      "m/".concat(purpose.value, "'/").concat(coinType.value, "'");
    }, _getZeroDeepthChainCodeKeyString = function(mnemonic, coinType, HDWallet, CoinTypeExt, CoinType) {
      var _CoinType$cardano2;
      if ((null == coinType ? void 0 : coinType.value) == (null === (_CoinType$cardano2 = CoinType.cardano) || void 0 === _CoinType$cardano2 ? void 0 : _CoinType$cardano2.value)) {
        window.HDWallet = HDWallet;
        var node = HDWallet.getHDNodeCardano(mnemonic, coinType, _getZeroDeepthDerivationPath(coinType, CoinTypeExt, CoinType)).split(",");
        if (node.length < 3) return "";
        var key = node[0], ext = node[1], map = {
          chainCode: node[2],
          key,
          extension: ext
        };
        return JSON.stringify(map);
      }
      var _node = HDWallet.getHDNode(mnemonic, coinType, _getZeroDeepthDerivationPath(coinType, CoinTypeExt, CoinType)).split(",");
      if (_node.length < 2) return "";
      var _map = {
        chainCode: _node[0],
        key: _node[1]
      };
      return JSON.stringify(_map);
    }, _getWrokAroundDerivationPath = function(coinType, CoinType, CoinTypeExt) {
      var res = "";
      switch (coinType.value) {
       case CoinType.ethereum.value:
        res = "m/44'/60'/0'";
        break;

       case CoinType.solana.value:
       case CoinType.solana.value:
        res = "m/44'/501'";
        break;

       default:
        res = CoinTypeExt.derivationPath(coinType);
      }
      return res;
    }, _checkHaveExtendedPrivateKey = function(coinType, CoinTypeExt, Curve) {
      var curve = CoinTypeExt.curve(coinType);
      return curve == Curve.nist256p1 || curve == Curve.secp256k1;
    }, strip0x = function(key) {
      return key && key.startsWith("0x") ? key.substring(2) : key;
    }, concatKeyPairToB58SecretKey = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(privateKey, publicKey) {
        var _yield$getWasm2, Base58, secretKey;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 2:
            return _yield$getWasm2 = _context2.sent, Base58 = _yield$getWasm2.Base58, secretKey = "".concat(strip0x(privateKey)).concat(strip0x(publicKey)), 
            _context2.abrupt("return", Base58.encodeNoCheck(Buffer.from(secretKey, "hex")));

           case 6:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x, _x2) {
        return _ref2.apply(this, arguments);
      };
    }(), encodeWIFPrivateKey = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(privateKey, coinType) {
        var _yield$getWasm3, CoinType, _coinType, version, encoded;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 2:
            return _yield$getWasm3 = _context3.sent, CoinType = _yield$getWasm3.CoinType, _coinType = coinType || CoinType.bitcoin, 
            version = 128, _coinType.value === CoinType.bitcoin.value || _coinType.value === CoinType.bitcoinCash.value || _coinType.value === CoinType.turingBitChain.value ? version = 128 : _coinType.value === CoinType.dogecoin.value ? version = 158 : _coinType.value === CoinType.litecoin.value ? version = 176 : _coinType.value === CoinType.dash.value ? version = 204 : _coinType.value === CoinType.bitcoinTestnet.value && (version = 239), 
            encoded = wif__WEBPACK_IMPORTED_MODULE_40___default().encode(version, Buffer.from(privateKey, "hex"), !0), 
            _context3.abrupt("return", encoded);

           case 9:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x3, _x4) {
        return _ref3.apply(this, arguments);
      };
    }(), decodeWIFPrivateKey = function(privateKey) {
      return toHexString(wif__WEBPACK_IMPORTED_MODULE_40___default().decode(privateKey).privateKey);
    }, createAccountByMnemonicAndType = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(mnemonic, coinName, accountPosition) {
        var wasm, HDWallet, CoinType, CoinTypeExt, Curve, HDVersion, CoinTypeConfiguration, hdWallet, coinType, accountAddress, privateKey, accountPrivateKey, curve, hasExtendedPrivateKey, publicKey, accountPublicKey, xprv, xpub, purpose, accountExtendedPrivateKey, accountExtendedPublicKey, chainKey, extenedPath, model;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 2:
            return wasm = _context4.sent, HDWallet = wasm.HDWallet, CoinType = wasm.CoinType, 
            CoinTypeExt = wasm.CoinTypeExt, Curve = wasm.Curve, HDVersion = wasm.HDVersion, 
            CoinTypeConfiguration = wasm.CoinTypeConfiguration, hdWallet = HDWallet.createWithMnemonic(_utils__WEBPACK_IMPORTED_MODULE_38__.YA(mnemonic), ""), 
            coinType = CoinType[coinName], accountAddress = hdWallet.getAddressForCoin(coinType), 
            privateKey = hdWallet.getKeyForCoin(coinType), accountPrivateKey = toHexString(privateKey.data()), 
            curve = CoinTypeExt.curve(coinType), hasExtendedPrivateKey = _checkHaveExtendedPrivateKey(coinType, CoinTypeExt, Curve), 
            publicKey = privateKey.getPublicKey(curve), accountPublicKey = toHexString(publicKey.data()), 
            xprv = CoinTypeExt.xprvVersion(coinType), xpub = CoinTypeExt.xpubVersion(coinType), 
            purpose = CoinTypeExt.purpose(coinType), accountExtendedPrivateKey = "", accountExtendedPublicKey = "", 
            hasExtendedPrivateKey ? (accountExtendedPrivateKey = hdWallet.getExtendedPrivateKey(purpose, coinType, xprv == HDVersion.none ? HDVersion.xprv : xprv), 
            accountExtendedPublicKey = hdWallet.getExtendedPublicKey(purpose, coinType, xpub == HDVersion.none ? HDVersion.xpub : xpub)) : accountExtendedPrivateKey = _getZeroDeepthChainCodeKeyString(mnemonic, coinType, HDWallet, CoinTypeExt, CoinType), 
            chainKey = _utils__WEBPACK_IMPORTED_MODULE_38__.R$(CoinTypeConfiguration.getSymbol(coinType)), 
            extenedPath = CoinTypeExt.derivationPath(coinType), model = new _account__WEBPACK_IMPORTED_MODULE_39__.QY(chainKey, accountPosition, accountAddress, accountPrivateKey, accountPublicKey, accountExtendedPrivateKey, accountExtendedPublicKey, extenedPath, _getWrokAroundDerivationPath(coinType, CoinType, CoinTypeExt)), 
            _context4.next = 24, model.generateExtendKey(coinType, wasm);

           case 24:
            return _context4.next = 26, model.extendBitcoinInfo(hdWallet, coinType, wasm, mnemonic, accountPosition);

           case 26:
            return _context4.abrupt("return", model);

           case 27:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x5, _x6, _x7) {
        return _ref4.apply(this, arguments);
      };
    }(), createAccountByMnemonic = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(mnemonic, coinTypes, _wasm, totalNetworkDic) {
        var _list2, wasm, _getNetworkSort, standardCosmosNetworks, _list, list, atomAccount, standardCosmosChainListWithoutAtom, cosmosAccounts;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            if (null == _wasm) {
              _context6.next = 4;
              break;
            }
            _context6.t0 = _wasm, _context6.next = 7;
            break;

           case 4:
            return _context6.next = 6, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 6:
            _context6.t0 = _context6.sent;

           case 7:
            return wasm = _context6.t0, _getNetworkSort = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_47__.Fb)(totalNetworkDic), 
            standardCosmosNetworks = _getNetworkSort.standardCosmosNetworks, _context6.next = 11, 
            Promise.all(coinTypes.map((function(coinType) {
              return new Promise((function(resolve) {
                null != coinType && coinType.values ? wrapAccountModel(mnemonic, coinType.values, wasm).then((function(model) {
                  var _totalNetworkDic$mode, _totalNetworkDic$mode2, _totalNetworkDic$coin, _totalNetworkDic$coin2, chainArchitecture = null == totalNetworkDic || null === (_totalNetworkDic$mode = totalNetworkDic[null == model ? void 0 : model.chainKey]) || void 0 === _totalNetworkDic$mode || null === (_totalNetworkDic$mode2 = _totalNetworkDic$mode.chainArchitecture) || void 0 === _totalNetworkDic$mode2 ? void 0 : _totalNetworkDic$mode2.toUpperCase();
                  "APT" === chainArchitecture && (model.address = (0, _method__WEBPACK_IMPORTED_MODULE_43__.getRealAptosAddress)(null == model ? void 0 : model.address)), 
                  null !== (_totalNetworkDic$coin = totalNetworkDic[coinType.keys]) && void 0 !== _totalNetworkDic$coin && _totalNetworkDic$coin.isTest && "EVM" !== (null === (_totalNetworkDic$coin2 = totalNetworkDic[coinType.keys]) || void 0 === _totalNetworkDic$coin2 ? void 0 : _totalNetworkDic$coin2.chainArchitecture) && model.setChainKey(coinType.keys), 
                  "SOL" === chainArchitecture && model.setChainKey(coinType.keys), resolve(model);
                })) : resolve({
                  not_found: !0
                });
              }));
            })));

           case 11:
            if (_list = _context6.sent, list = _list.filter((function(item) {
              return !(null != item && item.not_found);
            })), !(atomAccount = null === (_list2 = list) || void 0 === _list2 ? void 0 : _list2.find((function(item) {
              return "ATOM" === (null == item ? void 0 : item.chainKey);
            })))) {
              _context6.next = 20;
              break;
            }
            return standardCosmosChainListWithoutAtom = standardCosmosNetworks.filter((function(item) {
              return "ATOM" !== item;
            })), _context6.next = 18, Promise.all(standardCosmosChainListWithoutAtom.map(function() {
              var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(network) {
                var _totalNetworkDic$netw, _totalNetworkDic$netw2, hrp, accountAddress;
                return regeneratorRuntime.wrap((function(_context5) {
                  for (;;) switch (_context5.prev = _context5.next) {
                   case 0:
                    return hrp = null == totalNetworkDic || null === (_totalNetworkDic$netw = totalNetworkDic[network]) || void 0 === _totalNetworkDic$netw || null === (_totalNetworkDic$netw2 = _totalNetworkDic$netw.accountCreateParams) || void 0 === _totalNetworkDic$netw2 ? void 0 : _totalNetworkDic$netw2.hrp, 
                    _context5.next = 3, (0, _substrate_subWalletMethod__WEBPACK_IMPORTED_MODULE_45__.Zr)({
                      publicKey: null == atomAccount ? void 0 : atomAccount.publicKey,
                      hrp
                    });

                   case 3:
                    return accountAddress = _context5.sent, _context5.abrupt("return", _objectSpread(_objectSpread({}, atomAccount), {}, {
                      chainKey: network,
                      address: accountAddress
                    }));

                   case 5:
                   case "end":
                    return _context5.stop();
                  }
                }), _callee5);
              })));
              return function(_x12) {
                return _ref6.apply(this, arguments);
              };
            }()));

           case 18:
            cosmosAccounts = _context6.sent, list = [].concat(_toConsumableArray(list), _toConsumableArray(cosmosAccounts));

           case 20:
            return _context6.abrupt("return", list);

           case 21:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x8, _x9, _x10, _x11) {
        return _ref5.apply(this, arguments);
      };
    }(), getAccountByPrivatekey = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(privateKeyHex, coinTypeSingle, chainName, _wasm, totalNetworkDic) {
        var _totalNetworkDic$mode3, _totalNetworkDic$mode4, wasm, CoinType, PrivateKey, CoinTypeExt, AnyAddress, CoinTypeConfiguration, privateKey, publicKey, address, chainKey, model;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            if (null == _wasm) {
              _context7.next = 4;
              break;
            }
            _context7.t0 = _wasm, _context7.next = 7;
            break;

           case 4:
            return _context7.next = 6, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 6:
            _context7.t0 = _context7.sent;

           case 7:
            if (wasm = _context7.t0, CoinType = wasm.CoinType, PrivateKey = wasm.PrivateKey, 
            CoinTypeExt = wasm.CoinTypeExt, AnyAddress = wasm.AnyAddress, CoinTypeConfiguration = wasm.CoinTypeConfiguration, 
            privateKeyHex.toLowerCase().startsWith("0x") && (privateKeyHex = privateKeyHex.substring(2)), 
            privateKey = PrivateKey.createWithData(Buffer.from(privateKeyHex, "hex")), publicKey = privateKey.getPublicKey(coinTypeSingle), 
            address = AnyAddress.createWithPublicKey(publicKey, coinTypeSingle), chainKey = 1 === coinTypeSingle.value ? chainName || "SIGNET_TEST_GATETEST" : 10000501 === coinTypeSingle.value ? "SONIC_GATETEST" : coinTypeSingle.value === CoinType.solana.value && chainName ? chainName : _utils__WEBPACK_IMPORTED_MODULE_38__.R$(CoinTypeConfiguration.getSymbol(coinTypeSingle)), 
            model = new _account__WEBPACK_IMPORTED_MODULE_39__.QY(chainKey, 0, address.description(), privateKeyHex, toHexString(publicKey.data()), "", "", "", _getWrokAroundDerivationPath(coinTypeSingle, CoinType, CoinTypeExt)), 
            ![].concat(_toConsumableArray(_bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_48__.cI), [ "SOON" ]).includes(chainKey)) {
              _context7.next = 20;
              break;
            }
            return _context7.next = 18, model.generateExtendKey(CoinType.solana, wasm);

           case 18:
            _context7.next = 73;
            break;

           case 20:
            if ("BTC" != chainKey && "FB" != chainKey) {
              _context7.next = 27;
              break;
            }
            return _context7.next = 23, model.generateExtendKey(CoinType.bitcoin, wasm);

           case 23:
            return _context7.next = 25, model.extendBitcoinInfoByPrivateKey(CoinType.bitcoin, privateKey, wasm);

           case 25:
            _context7.next = 73;
            break;

           case 27:
            if ("LTC" != chainKey) {
              _context7.next = 34;
              break;
            }
            return _context7.next = 30, model.generateExtendKey(CoinType.litecoin, wasm);

           case 30:
            return _context7.next = 32, model.extendBitcoinInfoByPrivateKey(CoinType.litecoin, privateKey, wasm);

           case 32:
            _context7.next = 73;
            break;

           case 34:
            if ("DASH" != chainKey) {
              _context7.next = 39;
              break;
            }
            return _context7.next = 37, model.generateExtendKey(CoinType.dash, wasm);

           case 37:
            _context7.next = 73;
            break;

           case 39:
            if ("BCH" != chainKey) {
              _context7.next = 46;
              break;
            }
            return _context7.next = 42, model.generateExtendKey(CoinType.bitcoinCash, wasm);

           case 42:
            return _context7.next = 44, model.extendBitcoinInfoByPrivateKey(CoinType.bitcoinCash, privateKey, wasm);

           case 44:
            _context7.next = 73;
            break;

           case 46:
            if ("DOGE" != chainKey) {
              _context7.next = 51;
              break;
            }
            return _context7.next = 49, model.generateExtendKey(CoinType.dogecoin, wasm);

           case 49:
            _context7.next = 73;
            break;

           case 51:
            if ("TBC" != chainKey) {
              _context7.next = 58;
              break;
            }
            return _context7.next = 54, model.generateExtendKey(CoinType.turingBitChain, wasm);

           case 54:
            return _context7.next = 56, model.extendTuringBitChainInfoByPrivateKey();

           case 56:
            _context7.next = 73;
            break;

           case 58:
            if ("CKB" != chainKey) {
              _context7.next = 63;
              break;
            }
            return _context7.next = 61, model.generateExtendKey(CoinType.nervos, wasm);

           case 61:
            _context7.next = 73;
            break;

           case 63:
            if ("VARA" != chainKey) {
              _context7.next = 68;
              break;
            }
            return _context7.next = 66, model.generateExtendKey(CoinType.vara, wasm);

           case 66:
            _context7.next = 73;
            break;

           case 68:
            if (!_const__WEBPACK_IMPORTED_MODULE_42__.EXTRA_TEST_NETWORKS.includes(chainKey)) {
              _context7.next = 73;
              break;
            }
            return _context7.next = 71, model.generateExtendKey(CoinType.bitcoinTestnet, wasm);

           case 71:
            return _context7.next = 73, model.extendBitcoinInfoByPrivateKey(CoinType.bitcoinTestnet, privateKey, wasm);

           case 73:
            return "APT" === (null == totalNetworkDic || null === (_totalNetworkDic$mode3 = totalNetworkDic[null == model ? void 0 : model.chainKey]) || void 0 === _totalNetworkDic$mode3 || null === (_totalNetworkDic$mode4 = _totalNetworkDic$mode3.chainArchitecture) || void 0 === _totalNetworkDic$mode4 ? void 0 : _totalNetworkDic$mode4.toUpperCase()) && (model.address = (0, 
            _method__WEBPACK_IMPORTED_MODULE_43__.getRealAptosAddress)(null == model ? void 0 : model.address)), 
            _context7.abrupt("return", model);

           case 76:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })));
      return function(_x13, _x14, _x15, _x16, _x17) {
        return _ref7.apply(this, arguments);
      };
    }(), creatManyAccountsByPrivateKey = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(privateKeyHex, coinTypes, CoinType, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var list, i, _CoinType$everscale, coinTypeInfo, coinName, model;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            list = [], i = 0;

           case 2:
            if (!(i < coinTypes.length)) {
              _context8.next = 19;
              break;
            }
            if (coinTypeInfo = coinTypes[i], coinName = coinTypeInfo.values, model = void 0, 
            (null == coinName ? void 0 : coinName.value) !== (null === (_CoinType$everscale = CoinType.everscale) || void 0 === _CoinType$everscale ? void 0 : _CoinType$everscale.value)) {
              _context8.next = 12;
              break;
            }
            return _context8.next = 9, _venom_venomWallet__WEBPACK_IMPORTED_MODULE_41__.Vj(privateKeyHex, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 9:
            model = _context8.sent, _context8.next = 15;
            break;

           case 12:
            return _context8.next = 14, getAccountByPrivatekey(privateKeyHex, coinName, null, null, totalNetworkDic);

           case 14:
            model = _context8.sent;

           case 15:
            list.push(model);

           case 16:
            i++, _context8.next = 2;
            break;

           case 19:
            return _context8.abrupt("return", list);

           case 20:
           case "end":
            return _context8.stop();
          }
        }), _callee8);
      })));
      return function(_x18, _x19, _x20, _x21, _x22, _x23) {
        return _ref8.apply(this, arguments);
      };
    }(), createAccountByExtendedPrivateKey = function() {
      var _ref11 = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(extendedPrivateKey, derivationPath, coinTypeSingle, position, coinTypeKey, _wasm, totalNetworkDic) {
        var _totalNetworkDic$coin3, _totalNetworkDic$coin4, _totalNetworkDic$mode5, _totalNetworkDic$mode6, wasm, CoinTypeExt, Curve, CoinType, AnyAddress, CoinTypeConfiguration, HDWallet, chainKey, _getNetworkSort2, standardCosmosNetworks, isCosmosStandard, chainDerivationPath, privateKey, _map$chainCode, _map$key, _CoinType$cardano3, map, chainCode, key, _map$extension, extension, accountPrivateKey, publicKey, accountPublicKey, address, accountAddress, model;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            if (null == _wasm) {
              _context11.next = 4;
              break;
            }
            _context11.t0 = _wasm, _context11.next = 7;
            break;

           case 4:
            return _context11.next = 6, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 6:
            _context11.t0 = _context11.sent;

           case 7:
            if (wasm = _context11.t0, CoinTypeExt = wasm.CoinTypeExt, Curve = wasm.Curve, CoinType = wasm.CoinType, 
            AnyAddress = wasm.AnyAddress, CoinTypeConfiguration = wasm.CoinTypeConfiguration, 
            HDWallet = wasm.HDWallet, chainKey = _utils__WEBPACK_IMPORTED_MODULE_38__.R$(10000501 === (null == coinTypeSingle ? void 0 : coinTypeSingle.value) ? "SONIC" : CoinTypeConfiguration.getSymbol(coinTypeSingle)), 
            _getNetworkSort2 = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_47__.Fb)(totalNetworkDic), 
            standardCosmosNetworks = _getNetworkSort2.standardCosmosNetworks, isCosmosStandard = null == standardCosmosNetworks ? void 0 : standardCosmosNetworks.includes(coinTypeKey), 
            "ETH" == chainKey ? chainDerivationPath = "m/44'/60'/0'/0/" + position : [].concat(_toConsumableArray(_bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_48__.cI), [ "SOON" ]).includes(chainKey) ? chainDerivationPath = "m/" + position + "'/0'" : "SUI" == chainKey ? chainDerivationPath = "m/" + position + "'/0'/0'" : isCosmosStandard || [ "SEI" ].includes(chainKey) ? chainDerivationPath = "m/44'/118'/0'/0/" + position : [ "INJ" ].includes(chainKey) ? chainDerivationPath = "m/44'/10000060'/0'/0/" + position : [ "APT", "MOVE" ].includes(chainKey) ? chainDerivationPath = "m/" + position + "'/0'/0'" : "TRX" == chainKey ? chainDerivationPath = "m/44'/195'/0'/0/" + position : "DASH" == chainKey ? chainDerivationPath = "m/44'/5'/0'/0/" + position : "BCH" == chainKey ? chainDerivationPath = "m/44'/145'/0'/0/" + position : "LTC" == chainKey ? chainDerivationPath = "m/44'/2'/0'/0/" + position : "TBC" == chainKey ? chainDerivationPath = "m/44'/236'/0'/1/" + position : "DOGE" == chainKey ? chainDerivationPath = "m/44'/3'/0'/0/" + position : "BNB_ORG" == chainKey ? chainDerivationPath = "m/44'/714'/0'/0/" + position : "ADA" == chainKey ? chainDerivationPath = "m/" + position + "'/0/0" : "TON" == chainKey ? chainDerivationPath = "m/" + position + "'" : "VENOM" == chainKey ? chainDerivationPath = "m/44'/396'/0'/0/" + position : "CKB" == chainKey ? chainDerivationPath = "m/44'/309'/0'/0/0" + position : "VARA" == chainKey ? chainDerivationPath = "m/" + position + "'/0'/0'" : "SONIC" == chainKey && (chainDerivationPath = "m/" + position + "'"), 
            derivationPath = derivationPath || chainDerivationPath, _checkHaveExtendedPrivateKey(coinTypeSingle, CoinTypeExt, Curve) ? privateKey = HDWallet.getPrivateKeyFromExtended(extendedPrivateKey, coinTypeSingle, derivationPath) : (map = JSON.parse(extendedPrivateKey), 
            chainCode = null === (_map$chainCode = map.chainCode) || void 0 === _map$chainCode ? void 0 : _map$chainCode.toString(), 
            key = null === (_map$key = map.key) || void 0 === _map$key ? void 0 : _map$key.toString(), 
            (null == coinTypeSingle ? void 0 : coinTypeSingle.value) == (null === (_CoinType$cardano3 = CoinType.cardano) || void 0 === _CoinType$cardano3 ? void 0 : _CoinType$cardano3.value) ? (extension = null === (_map$extension = map.extension) || void 0 === _map$extension ? void 0 : _map$extension.toString(), 
            privateKey = HDWallet.getPrivateKeyByChainCodeCardano(key, extension, chainCode, coinTypeSingle, derivationPath)) : privateKey = HDWallet.getPrivateKeyByChainCode(chainCode, key, coinTypeSingle, derivationPath)), 
            accountPrivateKey = toHexString(privateKey.data()), publicKey = privateKey.getPublicKey(coinTypeSingle), 
            accountPublicKey = toHexString(publicKey.data()), address = AnyAddress.createWithPublicKey(publicKey, coinTypeSingle), 
            accountAddress = address.description(), model = new _account__WEBPACK_IMPORTED_MODULE_39__.QY(chainKey, position, accountAddress, accountPrivateKey, accountPublicKey, "", "", derivationPath, _getWrokAroundDerivationPath(coinTypeSingle, CoinType, CoinTypeExt)), 
            !_bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_48__.cI.includes(chainKey)) {
              _context11.next = 27;
              break;
            }
            return _context11.next = 25, model.generateExtendKey(CoinType.solana, wasm);

           case 25:
            _context11.next = 59;
            break;

           case 27:
            if ("LTC" != chainKey) {
              _context11.next = 34;
              break;
            }
            return _context11.next = 30, model.generateExtendKey(CoinType.litecoin, wasm);

           case 30:
            return _context11.next = 32, model.extendBitcoinInfoByPrivateKey(CoinType.litecoin, privateKey, wasm);

           case 32:
            _context11.next = 59;
            break;

           case 34:
            if ("DASH" != chainKey) {
              _context11.next = 39;
              break;
            }
            return _context11.next = 37, model.generateExtendKey(CoinType.dash, wasm);

           case 37:
            _context11.next = 59;
            break;

           case 39:
            if ("BCH" != chainKey) {
              _context11.next = 46;
              break;
            }
            return _context11.next = 42, model.generateExtendKey(CoinType.bitcoinCash, wasm);

           case 42:
            return _context11.next = 44, model.extendBitcoinInfoByPrivateKey(CoinType.bitcoinCash, privateKey, wasm);

           case 44:
            _context11.next = 59;
            break;

           case 46:
            if ("DOGE" != chainKey) {
              _context11.next = 51;
              break;
            }
            return _context11.next = 49, model.generateExtendKey(CoinType.dogecoin, wasm);

           case 49:
            _context11.next = 59;
            break;

           case 51:
            if ("TBC" != chainKey) {
              _context11.next = 58;
              break;
            }
            return _context11.next = 54, model.generateExtendKey(CoinType.turingBitChain, wasm);

           case 54:
            return _context11.next = 56, model.extendTuringBitChainInfoByPrivateKey();

           case 56:
            _context11.next = 59;
            break;

           case 58:
            (null !== (_totalNetworkDic$coin3 = totalNetworkDic[coinTypeKey]) && void 0 !== _totalNetworkDic$coin3 && _totalNetworkDic$coin3.isTest && "EVM" !== (null === (_totalNetworkDic$coin4 = totalNetworkDic[coinTypeKey]) || void 0 === _totalNetworkDic$coin4 ? void 0 : _totalNetworkDic$coin4.chainArchitecture) || null != standardCosmosNetworks && standardCosmosNetworks.includes(coinTypeKey)) && model.setChainKey(coinTypeKey);

           case 59:
            return "APT" === (null == totalNetworkDic || null === (_totalNetworkDic$mode5 = totalNetworkDic[null == model ? void 0 : model.chainKey]) || void 0 === _totalNetworkDic$mode5 || null === (_totalNetworkDic$mode6 = _totalNetworkDic$mode5.chainArchitecture) || void 0 === _totalNetworkDic$mode6 ? void 0 : _totalNetworkDic$mode6.toUpperCase()) && (model.address = (0, 
            _method__WEBPACK_IMPORTED_MODULE_43__.getRealAptosAddress)(null == model ? void 0 : model.address)), 
            _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_48__.cI.includes(coinTypeKey) && (model.chainKey = coinTypeKey), 
            _context11.abrupt("return", model);

           case 63:
           case "end":
            return _context11.stop();
          }
        }), _callee11);
      })));
      return function(_x29, _x30, _x31, _x32, _x33, _x34, _x35) {
        return _ref11.apply(this, arguments);
      };
    }(), createBTCAccountByExtendedPrivateKey = function() {
      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(chainAccounts, position, networkKey, coinName, bipPrivateKey) {
        var wasm, CoinTypeExt, Curve, CoinType, HDWallet, coinType, model, _iterator, _step, account, derivationPath, extendedPrivateKey, hasFlag, privateKey, index, _map$chainCode2, _map$key2, map, chainCode, key;
        return regeneratorRuntime.wrap((function(_context12) {
          for (;;) switch (_context12.prev = _context12.next) {
           case 0:
            return _context12.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 2:
            return wasm = _context12.sent, CoinTypeExt = wasm.CoinTypeExt, Curve = wasm.Curve, 
            CoinType = wasm.CoinType, wasm.CoinTypeConfiguration, HDWallet = wasm.HDWallet, 
            coinType = "bitcoinTestnet" === coinName ? CoinType.bitcoinTestnet : CoinType[coinName], 
            model = new _account__WEBPACK_IMPORTED_MODULE_39__.QY(networkKey, position, "", "", "", "", "", "", _getWrokAroundDerivationPath(coinType, CoinType, CoinTypeExt)), 
            _context12.next = 8, model.generateExtendKey(coinType, wasm);

           case 8:
            _iterator = _createForOfIteratorHelper(chainAccounts), _context12.prev = 9, _iterator.s();

           case 11:
            if ((_step = _iterator.n()).done) {
              _context12.next = 24;
              break;
            }
            return account = _step.value, derivationPath = null == account ? void 0 : account.walletExtendPath, 
            extendedPrivateKey = null == account ? void 0 : account.walletExtendPrivateKey, 
            hasFlag = _checkHaveExtendedPrivateKey(coinType, CoinTypeExt, Curve), privateKey = void 0, 
            index = derivationPath.split("").reverse().indexOf("/"), derivationPath = "".concat(derivationPath.substring(0, derivationPath.length - index - 1), "/").concat(position), 
            hasFlag ? privateKey = HDWallet.getPrivateKeyFromExtended(extendedPrivateKey, coinType, derivationPath) : (map = JSON.parse(extendedPrivateKey), 
            chainCode = null === (_map$chainCode2 = map.chainCode) || void 0 === _map$chainCode2 ? void 0 : _map$chainCode2.toString(), 
            key = null === (_map$key2 = map.key) || void 0 === _map$key2 ? void 0 : _map$key2.toString(), 
            privateKey = HDWallet.getPrivateKeyByChainCode(chainCode, key, coinType, derivationPath)), 
            _context12.next = 22, model.createSubAccount(coinType, privateKey, wasm, account.accountFormat, bipPrivateKey);

           case 22:
            _context12.next = 11;
            break;

           case 24:
            _context12.next = 29;
            break;

           case 26:
            _context12.prev = 26, _context12.t0 = _context12.catch(9), _iterator.e(_context12.t0);

           case 29:
            return _context12.prev = 29, _iterator.f(), _context12.finish(29);

           case 32:
            return _context12.abrupt("return", model);

           case 33:
           case "end":
            return _context12.stop();
          }
        }), _callee12, null, [ [ 9, 26, 29, 32 ] ]);
      })));
      return function(_x36, _x37, _x38, _x39, _x40) {
        return _ref12.apply(this, arguments);
      };
    }(), wrapAccountModel = function() {
      var _ref13 = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(mnemonic, coinTypeSubInfo, _wasm) {
        var wasm, HDWallet, CoinType, CoinTypeExt, Curve, HDVersion, CoinTypeConfiguration, hdWallet, accountAddress, privateKey, accountPrivateKey, hasExtendedPrivateKey, publicKey, accountPublicKey, xprv, xpub, purpose, accountExtendedPrivateKey, accountExtendedPublicKey, chainKey, accountPosition, extenedPath, model;
        return regeneratorRuntime.wrap((function(_context13) {
          for (;;) switch (_context13.prev = _context13.next) {
           case 0:
            if (null == _wasm) {
              _context13.next = 4;
              break;
            }
            _context13.t0 = _wasm, _context13.next = 7;
            break;

           case 4:
            return _context13.next = 6, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 6:
            _context13.t0 = _context13.sent;

           case 7:
            if (wasm = _context13.t0, HDWallet = wasm.HDWallet, CoinType = wasm.CoinType, CoinTypeExt = wasm.CoinTypeExt, 
            Curve = wasm.Curve, HDVersion = wasm.HDVersion, CoinTypeConfiguration = wasm.CoinTypeConfiguration, 
            hdWallet = HDWallet.createWithMnemonic(_utils__WEBPACK_IMPORTED_MODULE_38__.YA(mnemonic), ""), 
            accountAddress = hdWallet.getAddressForCoin(coinTypeSubInfo), privateKey = hdWallet.getKeyForCoin(coinTypeSubInfo), 
            accountPrivateKey = toHexString(privateKey.data()), hasExtendedPrivateKey = _checkHaveExtendedPrivateKey(coinTypeSubInfo, CoinTypeExt, Curve), 
            publicKey = privateKey.getPublicKey(coinTypeSubInfo), accountPublicKey = toHexString(publicKey.data()), 
            xprv = CoinTypeExt.xprvVersion(coinTypeSubInfo), xpub = CoinTypeExt.xpubVersion(coinTypeSubInfo), 
            purpose = CoinTypeExt.purpose(coinTypeSubInfo), accountExtendedPrivateKey = "", 
            accountExtendedPublicKey = "", hasExtendedPrivateKey ? (accountExtendedPrivateKey = hdWallet.getExtendedPrivateKey(purpose, coinTypeSubInfo, xprv == HDVersion.none ? HDVersion.xprv : xprv), 
            accountExtendedPublicKey = hdWallet.getExtendedPublicKey(purpose, coinTypeSubInfo, xpub == HDVersion.none ? HDVersion.xpub : xpub)) : accountExtendedPrivateKey = _getZeroDeepthChainCodeKeyString(mnemonic, coinTypeSubInfo, HDWallet, CoinTypeExt, CoinType), 
            chainKey = 1 === coinTypeSubInfo.value ? "SIGNET_TEST_GATETEST" : 10000501 === coinTypeSubInfo.value ? "SONIC_GATETEST" : _utils__WEBPACK_IMPORTED_MODULE_38__.R$(CoinTypeConfiguration.getSymbol(coinTypeSubInfo)), 
            accountPosition = 0, extenedPath = CoinTypeExt.derivationPath(coinTypeSubInfo), 
            model = new _account__WEBPACK_IMPORTED_MODULE_39__.QY(chainKey, accountPosition, accountAddress, accountPrivateKey, accountPublicKey, accountExtendedPrivateKey, accountExtendedPublicKey, extenedPath, _getWrokAroundDerivationPath(coinTypeSubInfo, CoinType, CoinTypeExt)), 
            ![].concat(_toConsumableArray(_bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_48__.cI), [ "SOON", "SONIC_GATETEST" ]).includes(chainKey)) {
              _context13.next = 31;
              break;
            }
            return _context13.next = 29, model.generateExtendKey(CoinType.solana, wasm);

           case 29:
            _context13.next = 73;
            break;

           case 31:
            if ("BTC" != chainKey && "FB" != chainKey) {
              _context13.next = 38;
              break;
            }
            return _context13.next = 34, model.generateExtendKey(CoinType.bitcoin, wasm);

           case 34:
            return _context13.next = 36, model.extendBitcoinInfo(hdWallet, CoinType.bitcoin, wasm, mnemonic, accountPosition);

           case 36:
            _context13.next = 73;
            break;

           case 38:
            if ("LTC" != chainKey) {
              _context13.next = 45;
              break;
            }
            return _context13.next = 41, model.generateExtendKey(CoinType.litecoin, wasm);

           case 41:
            return _context13.next = 43, model.extendBitcoinInfo(hdWallet, CoinType.litecoin, wasm, mnemonic, accountPosition);

           case 43:
            _context13.next = 73;
            break;

           case 45:
            if ("DASH" != chainKey) {
              _context13.next = 50;
              break;
            }
            return _context13.next = 48, model.generateExtendKey(CoinType.dash, wasm);

           case 48:
            _context13.next = 73;
            break;

           case 50:
            if ("BCH" != chainKey) {
              _context13.next = 57;
              break;
            }
            return _context13.next = 53, model.generateExtendKey(CoinType.bitcoinCash, wasm);

           case 53:
            return _context13.next = 55, model.extendBitcoinInfo(hdWallet, CoinType.bitcoinCash, wasm, mnemonic, accountPosition);

           case 55:
            _context13.next = 73;
            break;

           case 57:
            if ("DOGE" != chainKey) {
              _context13.next = 62;
              break;
            }
            return _context13.next = 60, model.generateExtendKey(CoinType.dogecoin, wasm);

           case 60:
            _context13.next = 73;
            break;

           case 62:
            if ("SIGNET_TEST_GATETEST" != chainKey) {
              _context13.next = 69;
              break;
            }
            return _context13.next = 65, model.generateExtendKey(CoinType.bitcoinTestnet, wasm);

           case 65:
            return _context13.next = 67, model.extendBitcoinInfo(hdWallet, CoinType.bitcoinTestnet, wasm, mnemonic, accountPosition);

           case 67:
            _context13.next = 73;
            break;

           case 69:
            if ("TBC" != chainKey) {
              _context13.next = 73;
              break;
            }
            return _context13.next = 72, model.generateExtendKey(CoinType.turingBitChain, wasm);

           case 72:
            model.extendTuringBitChainInfo(hdWallet, CoinType.turingBitChain, wasm);

           case 73:
            return _context13.abrupt("return", model);

           case 74:
           case "end":
            return _context13.stop();
          }
        }), _callee13);
      })));
      return function(_x41, _x42, _x43) {
        return _ref13.apply(this, arguments);
      };
    }(), isValidAddress = function() {
      var _ref14 = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(address, coinName) {
        var _yield$getWasm4, AnyAddress, CoinType, coinType;
        return regeneratorRuntime.wrap((function(_context14) {
          for (;;) switch (_context14.prev = _context14.next) {
           case 0:
            return _context14.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 2:
            return _yield$getWasm4 = _context14.sent, AnyAddress = _yield$getWasm4.AnyAddress, 
            CoinType = _yield$getWasm4.CoinType, _context14.prev = 5, coinType = CoinType[coinName], 
            _context14.abrupt("return", AnyAddress.isValid(address, coinType));

           case 10:
            return _context14.prev = 10, _context14.t0 = _context14.catch(5), _context14.abrupt("return", !1);

           case 13:
           case "end":
            return _context14.stop();
          }
        }), _callee14, null, [ [ 5, 10 ] ]);
      })));
      return function(_x44, _x45) {
        return _ref14.apply(this, arguments);
      };
    }(), isValidCosmosAddress = function(_ref15) {
      var address = _ref15.address, hrp = _ref15.hrp;
      try {
        return null == hrp ? (bech32__WEBPACK_IMPORTED_MODULE_44__.bech32.decode(address), 
        !0) : bech32__WEBPACK_IMPORTED_MODULE_44__.bech32.decode(address).prefix == hrp;
      } catch (_) {
        return !1;
      }
    }, getPrivateKeyFromB58SecretKey = function() {
      var _ref17 = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(secretKeyB58, wasm) {
        var _ref18, Base58, secretKey, hexSecreKey, secretKeyHex;
        return regeneratorRuntime.wrap((function(_context16) {
          for (;;) switch (_context16.prev = _context16.next) {
           case 0:
            if (null == wasm) {
              _context16.next = 4;
              break;
            }
            _context16.t0 = wasm, _context16.next = 7;
            break;

           case 4:
            return _context16.next = 6, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_46__.t)();

           case 6:
            _context16.t0 = _context16.sent;

           case 7:
            return _ref18 = _context16.t0, Base58 = _ref18.Base58, secretKey = Base58.decodeNoCheck(secretKeyB58), 
            hexSecreKey = toHexString(secretKey), secretKeyHex = strip0x(hexSecreKey), _context16.abrupt("return", secretKeyHex.substring(0, 64));

           case 13:
           case "end":
            return _context16.stop();
          }
        }), _callee16);
      })));
      return function(_x48, _x49) {
        return _ref17.apply(this, arguments);
      };
    }();
  },
  639319: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      HX: () => getCurrentWalletData,
      IQ: () => setCurrentWalletAddressId,
      NM: () => getAccountsCsvList,
      O$: () => checkPasswordExists,
      RR: () => getCurrentWalletIDObject,
      YP: () => setWalletDataToStorage,
      _y: () => setPasswordToStorage,
      bB: () => setDefiDataToStorage,
      fw: () => getWalletDataFromStorage,
      td: () => defaultWalletData,
      wQ: () => getCurrentWalletAddressId
    });
    __webpack_require__(207452), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(219693), __webpack_require__(714913), __webpack_require__(380115), 
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(504895), 
    __webpack_require__(754989), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(215195), __webpack_require__(498741), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(194009), 
    __webpack_require__(815852), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(103101), __webpack_require__(936012);
    var _popup_lib_tool_walletCore_account__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(266744), _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(224145), _bg_utils_gt_crypto__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(362088), _bg_utils_gt_web_cookies__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(370123), _gt_address__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(508699);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var defaultWalletData = {
      walletArr: [],
      selectedWalletDic: {
        walletID: "",
        accountID: "",
        walletCreateType: ""
      },
      walletTotalAmount: "0.00"
    };
    function setWalletDataToStorage(_x) {
      return _setWalletDataToStorage.apply(this, arguments);
    }
    function _setWalletDataToStorage() {
      return (_setWalletDataToStorage = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(value) {
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.setMany({
              defiWallet: value
            });

           case 2:
            return _context3.abrupt("return", _context3.sent);

           case 3:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })))).apply(this, arguments);
    }
    function getWalletDataFromStorage() {
      return _getWalletDataFromStorage.apply(this, arguments);
    }
    function _getWalletDataFromStorage() {
      return (_getWalletDataFromStorage = _asyncToGenerator(regeneratorRuntime.mark((function _callee5() {
        var data;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return _context5.next = 2, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.get("defiWallet");

           case 2:
            return data = _context5.sent, _context5.abrupt("return", data || defaultWalletData);

           case 4:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })))).apply(this, arguments);
    }
    function getCurrentWalletIDObject() {
      return _getCurrentWalletIDObject.apply(this, arguments);
    }
    function _getCurrentWalletIDObject() {
      return (_getCurrentWalletIDObject = _asyncToGenerator(regeneratorRuntime.mark((function _callee6() {
        var _data, selectedWalletDic;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _context6.next = 2, getWalletDataFromStorage();

           case 2:
            return _data = _context6.sent, selectedWalletDic = _data.selectedWalletDic, _context6.abrupt("return", selectedWalletDic);

           case 5:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })))).apply(this, arguments);
    }
    function setDefiDataToStorage(_x3) {
      return _setDefiDataToStorage.apply(this, arguments);
    }
    function _setDefiDataToStorage() {
      return (_setDefiDataToStorage = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(item) {
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            if (item && "object" === _typeof(item) && !Array.isArray(item)) {
              _context7.next = 2;
              break;
            }
            return _context7.abrupt("return", !1);

           case 2:
            return _context7.prev = 2, _context7.next = 5, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.setMany(item);

           case 5:
            return _context7.abrupt("return", !0);

           case 8:
            throw _context7.prev = 8, _context7.t0 = _context7.catch(2), _context7.t0;

           case 11:
           case "end":
            return _context7.stop();
          }
        }), _callee7, null, [ [ 2, 8 ] ]);
      })))).apply(this, arguments);
    }
    var getCurrentWalletData = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
        var walletIDVal, accountIDVal, walletInfo, selectedWallet, selectedWalletDic, walletArr, _walletID, _accountID, _args = arguments;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return walletIDVal = _args.length > 0 && void 0 !== _args[0] ? _args[0] : "", accountIDVal = _args.length > 1 && void 0 !== _args[1] ? _args[1] : "", 
            _context.next = 4, getWalletDataFromStorage();

           case 4:
            return walletInfo = _context.sent, selectedWallet = {
              wallet: {},
              account: {}
            }, walletInfo && "{}" !== JSON.stringify(walletInfo) && (selectedWalletDic = walletInfo.selectedWalletDic, 
            walletArr = walletInfo.walletArr, "{}" !== JSON.stringify(selectedWalletDic) && (walletIDVal && accountIDVal ? (_walletID = walletIDVal, 
            _accountID = accountIDVal) : (_walletID = null == selectedWalletDic ? void 0 : selectedWalletDic.walletID, 
            _accountID = null == selectedWalletDic ? void 0 : selectedWalletDic.accountID), 
            null == walletArr || walletArr.forEach((function(Item) {
              Item.walletID == _walletID && Item.walletAccountArr.forEach((function(a) {
                a.accountID == _accountID && (selectedWallet = {
                  wallet: Item,
                  account: a
                });
              }));
            })))), _context.abrupt("return", selectedWallet);

           case 8:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function() {
        return _ref.apply(this, arguments);
      };
    }();
    function setPasswordToStorage(_x4) {
      return _setPasswordToStorage.apply(this, arguments);
    }
    function _setPasswordToStorage() {
      return (_setPasswordToStorage = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(value) {
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            if (localStorage.setItem("init", "true"), !value.lock) {
              _context8.next = 5;
              break;
            }
            return _context8.next = 4, (0, _bg_utils_gt_crypto__WEBPACK_IMPORTED_MODULE_29__.VF)(value.lock, value.lock);

           case 4:
            value.lock = _context8.sent;

           case 5:
            return _context8.next = 7, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.setMany({
              pValue: value
            });

           case 7:
           case "end":
            return _context8.stop();
          }
        }), _callee8);
      })))).apply(this, arguments);
    }
    function setCurrentWalletAddressId(_x5) {
      return _setCurrentWalletAddressId.apply(this, arguments);
    }
    function _setCurrentWalletAddressId() {
      return (_setCurrentWalletAddressId = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(passwordIdentifier) {
        var cookies, uid, identifierWithUid;
        return regeneratorRuntime.wrap((function(_context9) {
          for (;;) switch (_context9.prev = _context9.next) {
           case 0:
            return _context9.next = 2, (0, _bg_utils_gt_web_cookies__WEBPACK_IMPORTED_MODULE_30__.pZ)("uid");

           case 2:
            return cookies = _context9.sent, uid = (null == cookies ? void 0 : cookies.checkValue) || "", 
            identifierWithUid = uid ? "".concat(uid, "_").concat(passwordIdentifier) : passwordIdentifier, 
            _context9.next = 7, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.setMany({
              currentPasswordIdentifier: identifierWithUid
            });

           case 7:
           case "end":
            return _context9.stop();
          }
        }), _callee9);
      })))).apply(this, arguments);
    }
    function getCurrentWalletAddressId() {
      return _getCurrentWalletAddressId.apply(this, arguments);
    }
    function _getCurrentWalletAddressId() {
      return (_getCurrentWalletAddressId = _asyncToGenerator(regeneratorRuntime.mark((function _callee10() {
        var cookies, currentUid, data, storedValue, expectedPrefix;
        return regeneratorRuntime.wrap((function(_context10) {
          for (;;) switch (_context10.prev = _context10.next) {
           case 0:
            return _context10.next = 2, (0, _bg_utils_gt_web_cookies__WEBPACK_IMPORTED_MODULE_30__.pZ)("uid");

           case 2:
            return cookies = _context10.sent, currentUid = (null == cookies ? void 0 : cookies.checkValue) || "", 
            _context10.next = 6, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.get("currentPasswordIdentifier");

           case 6:
            if (data = _context10.sent, storedValue = data || "") {
              _context10.next = 10;
              break;
            }
            return _context10.abrupt("return", "");

           case 10:
            if (currentUid) {
              _context10.next = 14;
              break;
            }
            return _context10.next = 13, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.remove("currentPasswordIdentifier");

           case 13:
           case 18:
            return _context10.abrupt("return", "");

           case 14:
            if (expectedPrefix = "".concat(currentUid, "_"), storedValue.startsWith(expectedPrefix)) {
              _context10.next = 19;
              break;
            }
            return _context10.next = 18, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.remove("currentPasswordIdentifier");

           case 19:
            return _context10.abrupt("return", storedValue.substring(expectedPrefix.length));

           case 20:
           case "end":
            return _context10.stop();
          }
        }), _callee10);
      })))).apply(this, arguments);
    }
    function checkPasswordExists() {
      return _checkPasswordExists.apply(this, arguments);
    }
    function _checkPasswordExists() {
      return (_checkPasswordExists = _asyncToGenerator(regeneratorRuntime.mark((function _callee11() {
        var pValue, hasValidPassword;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            if (_context11.prev = 0, localStorage.getItem("init")) {
              _context11.next = 4;
              break;
            }
            return _context11.abrupt("return", !1);

           case 4:
            return _context11.next = 6, _bg_gt_bg_storage_storage__WEBPACK_IMPORTED_MODULE_28__.Ay.get("pValue");

           case 6:
            if ((pValue = _context11.sent) && "object" === _typeof(pValue)) {
              _context11.next = 9;
              break;
            }
            return _context11.abrupt("return", !1);

           case 9:
            return hasValidPassword = (null == pValue ? void 0 : pValue.lock) && (null == pValue ? void 0 : pValue.type), 
            _context11.abrupt("return", !!hasValidPassword);

           case 13:
            return _context11.prev = 13, _context11.t0 = _context11.catch(0), _context11.abrupt("return", !1);

           case 16:
           case "end":
            return _context11.stop();
          }
        }), _callee11, null, [ [ 0, 13 ] ]);
      })))).apply(this, arguments);
    }
    var getAccountsCsvList = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(toDownloadWallets, totalNetworkDic) {
        var walletArr, walletInfo, list;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            if (!toDownloadWallets) {
              _context2.next = 4;
              break;
            }
            walletArr = toDownloadWallets, _context2.next = 8;
            break;

           case 4:
            return _context2.next = 6, getWalletDataFromStorage();

           case 6:
            walletInfo = _context2.sent, walletArr = null == walletInfo ? void 0 : walletInfo.walletArr;

           case 8:
            return list = [], walletArr.forEach((function(item) {
              var _item$walletAccountAr, titleLine = [ null == item ? void 0 : item.walletName ], accountLines = [];
              null == item || null === (_item$walletAccountAr = item.walletAccountArr) || void 0 === _item$walletAccountAr || _item$walletAccountAr.forEach((function(account) {
                var accountLine = [ null == account ? void 0 : account.accountName ], _loop = function(_key) {
                  var _account$_key, _account$_key$, _ref3 = totalNetworkDic[_key] || {}, isTest = _ref3.isTest, isCustom = _ref3.isCustom;
                  isTest || isCustom || null === (_account$_key = account[_key]) || void 0 === _account$_key || null === (_account$_key$ = _account$_key[0]) || void 0 === _account$_key$ || !_account$_key$.accountAddress || account[_key].forEach((function(subAccount) {
                    var _totalNetworkDic$_key, name = _key;
                    0 !== (null == item ? void 0 : item.walletCreateType) && 1 !== (null == item ? void 0 : item.walletCreateType) && "EVM" === (null === (_totalNetworkDic$_key = totalNetworkDic[_key]) || void 0 === _totalNetworkDic$_key ? void 0 : _totalNetworkDic$_key.chainArchitecture) && (name = "ETH"), 
                    null != subAccount && subAccount.accountFormat && account[_key].length > 1 && (name = name + " (" + _popup_lib_tool_walletCore_account__WEBPACK_IMPORTED_MODULE_27__.P3[subAccount.accountFormat] + ")");
                    var index = titleLine.slice(1).indexOf(name) + 1;
                    0 === index && (titleLine.push(name), index = titleLine.length - 1), accountLine[index] = subAccount.accountAddress, 
                    "TON" === _key && (accountLine[index] = (0, _gt_address__WEBPACK_IMPORTED_MODULE_31__.getTonAddress)(subAccount.accountAddress)), 
                    "IOTX" === _key && (accountLine[index] = "".concat(accountLine[index], "\n").concat((0, 
                    _gt_address__WEBPACK_IMPORTED_MODULE_31__.getIOTXAddress)(subAccount.accountAddress)));
                  }));
                };
                for (var _key in account) _loop(_key);
                accountLines.push(accountLine);
              }));
              var accounts = [ titleLine ].concat(accountLines);
              list = [].concat(_toConsumableArray(list), _toConsumableArray(accounts));
            })), _context2.abrupt("return", list);

           case 11:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x6, _x7) {
        return _ref2.apply(this, arguments);
      };
    }();
  },
  648865: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      b: () => CosmosRpcMethod
    });
    __webpack_require__(207452), __webpack_require__(380115), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(906048), __webpack_require__(752231), 
    __webpack_require__(868329), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(194009), 
    __webpack_require__(815852), __webpack_require__(269193), __webpack_require__(407899), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(103101), __webpack_require__(936012), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602);
    var _api_httpService__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(227383), _btc_constant__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(320913), long__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(274442), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(700313), _method__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(326394), bignumber_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(760346), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(259159);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var CosmosRpcMethod = function() {
      function CosmosRpcMethod(url, wasm) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CosmosRpcMethod), _defineProperty(this, "mRestUrl", ""), _defineProperty(this, "wasm", {}), 
        this.mRestUrl = url, this.wasm = wasm;
      }
      var Constructor, protoProps, staticProps, _init, _signArbitrary, _signDirect, _signAndSendTransaction, _signTransactionSinger, _getCosmosHardwareTransaction, _calculateFee, _getChainId, _simulate, _queryAccountInfo, _getNibiTransactionByHash, _getTiaTransactionByHash, _getSeiTransactionByHash, _boardcastTransaction, _getAllBalance, _getSeiBalance;
      return Constructor = CosmosRpcMethod, protoProps = [ {
        key: "getSeiBalance",
        value: (_getSeiBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee(seiAddress, denom) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return path = _btc_constant__WEBPACK_IMPORTED_MODULE_26__.rL.queryBalanceByDenom(seiAddress, denom), 
              _context.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.getData)("".concat(this.mRestUrl).concat(path));

             case 3:
              return res = _context.sent, _context.abrupt("return", res.data.balance.amount);

             case 5:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x, _x2) {
          return _getSeiBalance.apply(this, arguments);
        })
      }, {
        key: "getAllBalance",
        value: (_getAllBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(address) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return path = _btc_constant__WEBPACK_IMPORTED_MODULE_26__.rL.queryBalance(address), 
              _context2.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.getData)("".concat(this.mRestUrl).concat(path));

             case 3:
              return res = _context2.sent, _context2.abrupt("return", res.data.balances.toString());

             case 5:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x3) {
          return _getAllBalance.apply(this, arguments);
        })
      }, {
        key: "boardcastTransaction",
        value: (_boardcastTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(txBytes, mode) {
          var tx, result;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return tx = {
                tx_bytes: txBytes,
                mode: mode || "BROADCAST_MODE_BLOCK"
              }, _context3.next = 4, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_28__.IM)("TIA", tx);

             case 4:
              return result = _context3.sent, _context3.abrupt("return", result.data.data.hash_id);

             case 6:
             case "end":
              return _context3.stop();
            }
          }), _callee3);
        }))), function(_x4, _x5) {
          return _boardcastTransaction.apply(this, arguments);
        })
      }, {
        key: "getSeiTransactionByHash",
        value: (_getSeiTransactionByHash = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(hash) {
          var _res$data, payload, res;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return payload = {
                jsonrpc: "2.0",
                id: 1,
                method: "tx_search",
                params: {
                  query: "tx.hash='".concat(hash, "'"),
                  page: "1",
                  per_page: "100"
                }
              }, _context4.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.postJson)("".concat(this.mRestUrl), payload);

             case 3:
              return res = _context4.sent, _context4.abrupt("return", null == res || null === (_res$data = res.data) || void 0 === _res$data ? void 0 : _res$data.result);

             case 5:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x6) {
          return _getSeiTransactionByHash.apply(this, arguments);
        })
      }, {
        key: "getTiaTransactionByHash",
        value: (_getTiaTransactionByHash = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(hash) {
          var _res$data2, u, res;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return u = "/tx_search?query=\"tx.hash='".concat(hash, "'\"&prove=false&per_page=100"), 
              _context5.next = 3, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.getData)("".concat(this.mRestUrl).concat(u));

             case 3:
              return res = _context5.sent, _context5.abrupt("return", null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 ? void 0 : _res$data2.result);

             case 5:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x7) {
          return _getTiaTransactionByHash.apply(this, arguments);
        })
      }, {
        key: "getNibiTransactionByHash",
        value: (_getNibiTransactionByHash = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(hash) {
          var res;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return _context6.next = 2, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.getData)("".concat(this.mRestUrl).concat(_btc_constant__WEBPACK_IMPORTED_MODULE_26__.rL.boardcastTransaction, "/").concat(hash));

             case 2:
              return res = _context6.sent, _context6.abrupt("return", null == res ? void 0 : res.data);

             case 4:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x8) {
          return _getNibiTransactionByHash.apply(this, arguments);
        })
      }, {
        key: "queryAccountInfo",
        value: (_queryAccountInfo = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(address) {
          var path, url, res, account;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return path = _btc_constant__WEBPACK_IMPORTED_MODULE_26__.rL.queryAccountInfoByAddress(address), 
              url = "".concat(this.mRestUrl).concat(path), _context7.next = 4, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.getData)(url);

             case 4:
              return res = _context7.sent, account = res.data.account, _context7.abrupt("return", (null == account ? void 0 : account.base_account) || account);

             case 7:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x9) {
          return _queryAccountInfo.apply(this, arguments);
        })
      }, {
        key: "simulate",
        value: (_simulate = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(txBytes) {
          var _res$data3, res;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return _context8.next = 2, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.postJson)("".concat(this.mRestUrl).concat(_btc_constant__WEBPACK_IMPORTED_MODULE_26__.rL.simulate), {
                tx_bytes: txBytes
              });

             case 2:
              if (res = _context8.sent, 5e3 !== (null === (_res$data3 = res.data) || void 0 === _res$data3 ? void 0 : _res$data3.code)) {
                _context8.next = 5;
                break;
              }
              throw new Error(5e3);

             case 5:
              return _context8.abrupt("return", res.data.gas_info);

             case 6:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x10) {
          return _simulate.apply(this, arguments);
        })
      }, {
        key: "getChainId",
        value: (_getChainId = _asyncToGenerator(regeneratorRuntime.mark((function _callee9() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return path = _btc_constant__WEBPACK_IMPORTED_MODULE_26__.rL.status, _context9.next = 3, 
              (0, _api_httpService__WEBPACK_IMPORTED_MODULE_25__.getData)("".concat(this.mRestUrl).concat(path));

             case 3:
              return res = _context9.sent, _context9.abrupt("return", res.data.default_node_info.network);

             case 5:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function() {
          return _getChainId.apply(this, arguments);
        })
      }, {
        key: "calculateFee",
        value: (_calculateFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(fromAddress, toAddress, amount, _ref, privateKeyHex) {
          var denom, coinName, _this$wasm, CoinType, AnySigner, HexCoding, coinType, privateKey, fee, chainId, txAmount, sendCoinMsg, message, feeAmount, seiFee, accountInfo, signingInput, encoded, outputData, output, map, txBytes, res, dealGasUsed;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              if (denom = _ref.denom, _ref.memo, coinName = _ref.coinName, !(0, bignumber_js__WEBPACK_IMPORTED_MODULE_30__.g)(amount).isZero()) {
                _context10.next = 3;
                break;
              }
              return _context10.abrupt("return", "0");

             case 3:
              return _this$wasm = this.wasm, CoinType = _this$wasm.CoinType, AnySigner = _this$wasm.AnySigner, 
              HexCoding = _this$wasm.HexCoding, coinType = CoinType[coinName], privateKey = HexCoding.decode(privateKeyHex), 
              fee = "1", _context10.next = 9, this.getChainId();

             case 9:
              return chainId = _context10.sent, txAmount = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Amount.create({
                denom,
                amount
              }), sendCoinMsg = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message.Send.create({
                amounts: [ txAmount ],
                fromAddress,
                toAddress
              }), message = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message.create({
                sendCoinsMessage: sendCoinMsg
              }), feeAmount = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Amount.create({
                amount: fee,
                denom
              }), seiFee = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Fee.create({
                amounts: [ feeAmount ],
                gas: long__WEBPACK_IMPORTED_MODULE_27__.A.fromString("200000")
              }), _context10.next = 17, this.queryAccountInfo(fromAddress);

             case 17:
              if (accountInfo = _context10.sent, signingInput = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.create({
                accountNumber: parseInt(accountInfo.account_number),
                signingMode: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningMode.Protobuf,
                fee: seiFee,
                chainId,
                sequence: parseInt(accountInfo.sequence),
                privateKey,
                messages: [ message ]
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.encode(signingInput).finish(), 
              outputData = AnySigner.sign(encoded, coinType), "string" != typeof (output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningOutput.decode(outputData)).serialized || "" === output.serialized.trim()) {
                _context10.next = 38;
                break;
              }
              return _context10.prev = 23, map = JSON.parse(output.serialized), txBytes = map.tx_bytes.toString(), 
              _context10.next = 28, this.simulate(txBytes);

             case 28:
              return res = _context10.sent, dealGasUsed = (0, _method__WEBPACK_IMPORTED_MODULE_29__.dataOperation)(res.gas_used, 1.5), 
              _context10.abrupt("return", {
                gasUsed: Math.ceil(dealGasUsed)
              });

             case 33:
              return _context10.prev = 33, _context10.t0 = _context10.catch(23), _context10.abrupt("return", {
                cosmosError: null === _context10.t0 || void 0 === _context10.t0 ? void 0 : _context10.t0.message,
                gasUsed: 0
              });

             case 36:
              _context10.next = 39;
              break;

             case 38:
              return _context10.abrupt("return", {
                gasUsed: 0
              });

             case 39:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this, [ [ 23, 33 ] ]);
        }))), function(_x11, _x12, _x13, _x14, _x15) {
          return _calculateFee.apply(this, arguments);
        })
      }, {
        key: "getCosmosHardwareTransaction",
        value: (_getCosmosHardwareTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(fromAddress, targetAddress, amount, _ref2) {
          var denom, chain_id, accountInfo, account_number, transactionBodyFee, sequence, result;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return denom = _ref2.denom, _context11.next = 3, this.getChainId();

             case 3:
              return chain_id = _context11.sent, _context11.next = 6, this.queryAccountInfo(fromAddress);

             case 6:
              return accountInfo = _context11.sent, account_number = accountInfo.account_number.toString(), 
              transactionBodyFee = {
                amount: [ {
                  amount,
                  denom
                } ],
                gas: "200000"
              }, sequence = accountInfo.sequence.toString(), result = {
                chain_id,
                account_number,
                fee: transactionBodyFee,
                memo: "",
                msgs: [ {
                  type: "cosmos-sdk/MsgSend",
                  value: {
                    amount: [ {
                      denom,
                      amount
                    } ],
                    from_address: fromAddress,
                    to_address: targetAddress
                  }
                } ],
                sequence
              }, _context11.abrupt("return", result);

             case 15:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x16, _x17, _x18, _x19) {
          return _getCosmosHardwareTransaction.apply(this, arguments);
        })
      }, {
        key: "signTransactionSinger",
        value: (_signTransactionSinger = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(privateKeyHex, fromAddress, targetAddress, amount, _ref3) {
          var denom, fee, gasUsed, coinName, _this$wasm2, HexCoding, AnySigner, CoinType, coinType, chainId, txAmount, sendCoinMsg, message, feeAmount, seiFee, accountInfo, signingInput, encoded, outputData, output, map;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return denom = _ref3.denom, fee = _ref3.fee, gasUsed = _ref3.gasUsed, coinName = _ref3.coinName, 
              _this$wasm2 = this.wasm, HexCoding = _this$wasm2.HexCoding, AnySigner = _this$wasm2.AnySigner, 
              CoinType = _this$wasm2.CoinType, coinType = CoinType[coinName], _context12.next = 5, 
              this.getChainId();

             case 5:
              return chainId = _context12.sent, txAmount = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Amount.create({
                denom,
                amount
              }), sendCoinMsg = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message.Send.create({
                amounts: [ txAmount ],
                fromAddress,
                toAddress: targetAddress
              }), message = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message.create({
                sendCoinsMessage: sendCoinMsg
              }), feeAmount = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Amount.create({
                amount: null == fee ? void 0 : fee.toString(),
                denom
              }), seiFee = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Fee.create({
                amounts: [ feeAmount ],
                gas: long__WEBPACK_IMPORTED_MODULE_27__.A.fromNumber(gasUsed)
              }), _context12.next = 13, this.queryAccountInfo(fromAddress);

             case 13:
              return accountInfo = _context12.sent, signingInput = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.create({
                accountNumber: long__WEBPACK_IMPORTED_MODULE_27__.A.fromString(accountInfo.account_number.toString()),
                signingMode: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningMode.Protobuf,
                fee: seiFee,
                chainId: chainId.toString(),
                sequence: long__WEBPACK_IMPORTED_MODULE_27__.A.fromString(accountInfo.sequence.toString()),
                privateKey: HexCoding.decode(privateKeyHex),
                messages: [ message ]
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.encode(signingInput).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningOutput.decode(outputData), 
              map = JSON.parse(output.serialized), _context12.abrupt("return", _objectSpread(_objectSpread({}, map), {}, {
                tx_bytes: map.tx_bytes.toString()
              }));

             case 20:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x20, _x21, _x22, _x23, _x24) {
          return _signTransactionSinger.apply(this, arguments);
        })
      }, {
        key: "signAndSendTransaction",
        value: (_signAndSendTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(privateKeyHex, fromAddress, targetAddress, amount, _ref4) {
          var denom, fee, gasUsed, coinName, map, txBytes, res;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return denom = _ref4.denom, fee = _ref4.fee, gasUsed = _ref4.gasUsed, coinName = _ref4.coinName, 
              _context13.next = 3, this.signTransactionSinger(privateKeyHex, fromAddress, targetAddress, amount, {
                denom,
                fee,
                gasUsed,
                coinName
              });

             case 3:
              return map = _context13.sent, txBytes = map.tx_bytes, _context13.next = 7, this.boardcastTransaction(txBytes, map.mode);

             case 7:
              return res = _context13.sent, _context13.abrupt("return", res);

             case 9:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x25, _x26, _x27, _x28, _x29) {
          return _signAndSendTransaction.apply(this, arguments);
        })
      }, {
        key: "signDirect",
        value: (_signDirect = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(privateKeyHex, fromAddress, chainId, bodyBytes, authBytes, coinName) {
          var CoinType, coinType, accountInfo, _this$wasm3, HexCoding, AnySigner, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return CoinType = this.wasm.CoinType, coinType = CoinType[coinName], _context14.next = 4, 
              this.queryAccountInfo(fromAddress);

             case 4:
              return accountInfo = _context14.sent, _this$wasm3 = this.wasm, HexCoding = _this$wasm3.HexCoding, 
              AnySigner = _this$wasm3.AnySigner, input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.create({
                accountNumber: parseInt(accountInfo.accountNumber),
                signingMode: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningMode.Protobuf,
                chainId,
                privateKey: HexCoding.decode(privateKeyHex),
                messages: [ _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message.create({
                  signDirectMessage: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message_SignDirect.create({
                    bodyBytes,
                    authInfoBytes: authBytes
                  })
                }) ]
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningOutput.decode(outputData), 
              _context14.abrupt("return", output.signatureJson);

             case 11:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x30, _x31, _x32, _x33, _x34, _x35) {
          return _signDirect.apply(this, arguments);
        })
      }, {
        key: "signArbitrary",
        value: (_signArbitrary = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(privateKeyHex, fromAddress, data, coinName) {
          var CoinType, coinType, _this$wasm4, HexCoding, AnySigner, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return CoinType = this.wasm.CoinType, coinType = CoinType[coinName], _this$wasm4 = this.wasm, 
              HexCoding = _this$wasm4.HexCoding, AnySigner = _this$wasm4.AnySigner, input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.create({
                signingMode: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningMode.JSON,
                privateKey: HexCoding.decode(privateKeyHex),
                messages: [ _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message.create({
                  rawJsonMessage: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.Message_RawJSON.create({
                    type: "sign/MsgSignData",
                    value: data
                  })
                }) ]
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.TW.Cosmos.Proto.SigningOutput.decode(outputData), 
              _context15.abrupt("return", jsonEncode(jsonDecode(output.signatureJson)[0]));

             case 8:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this);
        }))), function(_x36, _x37, _x38, _x39) {
          return _signArbitrary.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(REST_RPC_URL) {
          var wasm;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return _context16.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_31__.t)();

             case 2:
              return wasm = _context16.sent, _context16.abrupt("return", new CosmosRpcMethod(REST_RPC_URL, wasm));

             case 4:
             case "end":
              return _context16.stop();
            }
          }), _callee16);
        }))), function(_x40) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CosmosRpcMethod;
    }();
  },
  650251: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      BaseContract: () => BaseContract,
      BigNumber: () => BigNumber,
      Contract: () => Contract,
      ContractFactory: () => ContractFactory,
      FixedNumber: () => FixedNumber,
      Signer: () => Signer,
      VoidSigner: () => VoidSigner,
      Wallet: () => Wallet,
      Wordlist: () => Wordlist,
      constants: () => index$1,
      errors: () => ErrorCode,
      ethers: () => ethers,
      getDefaultProvider: () => getDefaultProvider,
      logger: () => logger$H,
      providers: () => index$3,
      utils: () => utils$1,
      version: () => version$o,
      wordlists: () => wordlists
    });
    __webpack_require__(207452), __webpack_require__(268123), __webpack_require__(407899), 
    __webpack_require__(815852), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(110678), __webpack_require__(504895), __webpack_require__(687136), 
    __webpack_require__(640173), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(153270), __webpack_require__(658565), 
    __webpack_require__(327956), __webpack_require__(165987), __webpack_require__(619323), 
    __webpack_require__(498741), __webpack_require__(158649), __webpack_require__(80475), 
    __webpack_require__(714913), __webpack_require__(418665), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(752231), __webpack_require__(259581), __webpack_require__(700533), 
    __webpack_require__(678636), __webpack_require__(312824), __webpack_require__(196088), 
    __webpack_require__(269193), __webpack_require__(741412), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(59250), __webpack_require__(219693), 
    __webpack_require__(979073), __webpack_require__(868329), __webpack_require__(803446), 
    __webpack_require__(752357), __webpack_require__(380115), __webpack_require__(541145), 
    __webpack_require__(232982), __webpack_require__(700017), __webpack_require__(335231), 
    __webpack_require__(597755), __webpack_require__(64189), __webpack_require__(118772), 
    __webpack_require__(210557), __webpack_require__(793016), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(275417), __webpack_require__(594582), 
    __webpack_require__(564216), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(194009), __webpack_require__(804632), __webpack_require__(734606), 
    __webpack_require__(312091), __webpack_require__(215195);
    var process = __webpack_require__(365606);
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _get() {
      return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(target, property, receiver) {
        var base = function(object, property) {
          for (;!Object.prototype.hasOwnProperty.call(object, property) && null !== (object = _getPrototypeOf(object)); ) ;
          return object;
        }(target, property);
        if (base) {
          var desc = Object.getOwnPropertyDescriptor(base, property);
          return desc.get ? desc.get.call(arguments.length < 3 ? target : receiver) : desc.value;
        }
      }, _get.apply(this, arguments);
    }
    function _inherits(subClass, superClass) {
      if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: !0,
          configurable: !0
        }
      }), Object.defineProperty(subClass, "prototype", {
        writable: !1
      }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return _assertThisInitialized(self);
        }(this, result);
      };
    }
    function _assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), Constructor;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    var commonjsGlobal = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof self ? self : {};
    function createCommonjsModule(fn, basedir, module) {
      return module = {
        path: basedir,
        exports: {},
        require: function(path, base) {
          return function() {
            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
          }(null == base && module.path);
        }
      }, fn(module, module.exports), module.exports;
    }
    var bn = createCommonjsModule((function(module) {
      !function(module, exports) {
        function assert(val, msg) {
          if (!val) throw new Error(msg || "Assertion failed");
        }
        function inherits(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {};
          TempCtor.prototype = superCtor.prototype, ctor.prototype = new TempCtor, ctor.prototype.constructor = ctor;
        }
        function BN(number, base, endian) {
          if (BN.isBN(number)) return number;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== number && ("le" !== base && "be" !== base || (endian = base, 
          base = 10), this._init(number || 0, base || 10, endian || "be"));
        }
        var Buffer;
        "object" === _typeof(module) ? module.exports = BN : exports.BN = BN, BN.BN = BN, 
        BN.wordSize = 26;
        try {
          Buffer = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : null.Buffer;
        } catch (e) {}
        function parseHex4Bits(string, index) {
          var c = string.charCodeAt(index);
          return c >= 65 && c <= 70 ? c - 55 : c >= 97 && c <= 102 ? c - 87 : c - 48 & 15;
        }
        function parseHexByte(string, lowerBound, index) {
          var r = parseHex4Bits(string, index);
          return index - 1 >= lowerBound && (r |= parseHex4Bits(string, index - 1) << 4), 
          r;
        }
        function parseBase(str, start, end, mul) {
          for (var r = 0, len = Math.min(str.length, end), i = start; i < len; i++) {
            var c = str.charCodeAt(i) - 48;
            r *= mul, r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c;
          }
          return r;
        }
        BN.isBN = function(num) {
          return num instanceof BN || null !== num && "object" === _typeof(num) && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
        }, BN.max = function(left, right) {
          return left.cmp(right) > 0 ? left : right;
        }, BN.min = function(left, right) {
          return left.cmp(right) < 0 ? left : right;
        }, BN.prototype._init = function(number, base, endian) {
          if ("number" == typeof number) return this._initNumber(number, base, endian);
          if ("object" === _typeof(number)) return this._initArray(number, base, endian);
          "hex" === base && (base = 16), assert(base === (0 | base) && base >= 2 && base <= 36);
          var start = 0;
          "-" === (number = number.toString().replace(/\s+/g, ""))[0] && (start++, this.negative = 1), 
          start < number.length && (16 === base ? this._parseHex(number, start, endian) : (this._parseBase(number, base, start), 
          "le" === endian && this._initArray(this.toArray(), base, endian)));
        }, BN.prototype._initNumber = function(number, base, endian) {
          number < 0 && (this.negative = 1, number = -number), number < 67108864 ? (this.words = [ 67108863 & number ], 
          this.length = 1) : number < 4503599627370496 ? (this.words = [ 67108863 & number, number / 67108864 & 67108863 ], 
          this.length = 2) : (assert(number < 9007199254740992), this.words = [ 67108863 & number, number / 67108864 & 67108863, 1 ], 
          this.length = 3), "le" === endian && this._initArray(this.toArray(), base, endian);
        }, BN.prototype._initArray = function(number, base, endian) {
          if (assert("number" == typeof number.length), number.length <= 0) return this.words = [ 0 ], 
          this.length = 1, this;
          this.length = Math.ceil(number.length / 3), this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) this.words[i] = 0;
          var j, w, off = 0;
          if ("be" === endian) for (i = number.length - 1, j = 0; i >= 0; i -= 3) w = number[i] | number[i - 1] << 8 | number[i - 2] << 16, 
          this.words[j] |= w << off & 67108863, this.words[j + 1] = w >>> 26 - off & 67108863, 
          (off += 24) >= 26 && (off -= 26, j++); else if ("le" === endian) for (i = 0, j = 0; i < number.length; i += 3) w = number[i] | number[i + 1] << 8 | number[i + 2] << 16, 
          this.words[j] |= w << off & 67108863, this.words[j + 1] = w >>> 26 - off & 67108863, 
          (off += 24) >= 26 && (off -= 26, j++);
          return this.strip();
        }, BN.prototype._parseHex = function(number, start, endian) {
          this.length = Math.ceil((number.length - start) / 6), this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) this.words[i] = 0;
          var w, off = 0, j = 0;
          if ("be" === endian) for (i = number.length - 1; i >= start; i -= 2) w = parseHexByte(number, start, i) << off, 
          this.words[j] |= 67108863 & w, off >= 18 ? (off -= 18, j += 1, this.words[j] |= w >>> 26) : off += 8; else for (i = (number.length - start) % 2 == 0 ? start + 1 : start; i < number.length; i += 2) w = parseHexByte(number, start, i) << off, 
          this.words[j] |= 67108863 & w, off >= 18 ? (off -= 18, j += 1, this.words[j] |= w >>> 26) : off += 8;
          this.strip();
        }, BN.prototype._parseBase = function(number, base, start) {
          this.words = [ 0 ], this.length = 1;
          for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
          limbLen--, limbPow = limbPow / base | 0;
          for (var total = number.length - start, mod = total % limbLen, end = Math.min(total, total - mod) + start, word = 0, i = start; i < end; i += limbLen) word = parseBase(number, i, i + limbLen, base), 
          this.imuln(limbPow), this.words[0] + word < 67108864 ? this.words[0] += word : this._iaddn(word);
          if (0 !== mod) {
            var pow = 1;
            for (word = parseBase(number, i, number.length, base), i = 0; i < mod; i++) pow *= base;
            this.imuln(pow), this.words[0] + word < 67108864 ? this.words[0] += word : this._iaddn(word);
          }
          this.strip();
        }, BN.prototype.copy = function(dest) {
          dest.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
          dest.length = this.length, dest.negative = this.negative, dest.red = this.red;
        }, BN.prototype.clone = function() {
          var r = new BN(null);
          return this.copy(r), r;
        }, BN.prototype._expand = function(size) {
          for (;this.length < size; ) this.words[this.length++] = 0;
          return this;
        }, BN.prototype.strip = function() {
          for (;this.length > 1 && 0 === this.words[this.length - 1]; ) this.length--;
          return this._normSign();
        }, BN.prototype._normSign = function() {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, BN.prototype.inspect = function() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        };
        var zeros = [ "", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000" ], groupSizes = [ 0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ], groupBases = [ 0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176 ];
        function smallMulTo(self, num, out) {
          out.negative = num.negative ^ self.negative;
          var len = self.length + num.length | 0;
          out.length = len, len = len - 1 | 0;
          var a = 0 | self.words[0], b = 0 | num.words[0], r = a * b, lo = 67108863 & r, carry = r / 67108864 | 0;
          out.words[0] = lo;
          for (var k = 1; k < len; k++) {
            for (var ncarry = carry >>> 26, rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
              var i = k - j | 0;
              ncarry += (r = (a = 0 | self.words[i]) * (b = 0 | num.words[j]) + rword) / 67108864 | 0, 
              rword = 67108863 & r;
            }
            out.words[k] = 0 | rword, carry = 0 | ncarry;
          }
          return 0 !== carry ? out.words[k] = 0 | carry : out.length--, out.strip();
        }
        BN.prototype.toString = function(base, padding) {
          var out;
          if (padding = 0 | padding || 1, 16 === (base = base || 10) || "hex" === base) {
            out = "";
            for (var off = 0, carry = 0, i = 0; i < this.length; i++) {
              var w = this.words[i], word = (16777215 & (w << off | carry)).toString(16);
              out = 0 !== (carry = w >>> 24 - off & 16777215) || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out, 
              (off += 2) >= 26 && (off -= 26, i--);
            }
            for (0 !== carry && (out = carry.toString(16) + out); out.length % padding != 0; ) out = "0" + out;
            return 0 !== this.negative && (out = "-" + out), out;
          }
          if (base === (0 | base) && base >= 2 && base <= 36) {
            var groupSize = groupSizes[base], groupBase = groupBases[base];
            out = "";
            var c = this.clone();
            for (c.negative = 0; !c.isZero(); ) {
              var r = c.modn(groupBase).toString(base);
              out = (c = c.idivn(groupBase)).isZero() ? r + out : zeros[groupSize - r.length] + r + out;
            }
            for (this.isZero() && (out = "0" + out); out.length % padding != 0; ) out = "0" + out;
            return 0 !== this.negative && (out = "-" + out), out;
          }
          assert(!1, "Base should be between 2 and 36");
        }, BN.prototype.toNumber = function() {
          var ret = this.words[0];
          return 2 === this.length ? ret += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? ret += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 
          0 !== this.negative ? -ret : ret;
        }, BN.prototype.toJSON = function() {
          return this.toString(16);
        }, BN.prototype.toBuffer = function(endian, length) {
          return assert(void 0 !== Buffer), this.toArrayLike(Buffer, endian, length);
        }, BN.prototype.toArray = function(endian, length) {
          return this.toArrayLike(Array, endian, length);
        }, BN.prototype.toArrayLike = function(ArrayType, endian, length) {
          var byteLength = this.byteLength(), reqLength = length || Math.max(1, byteLength);
          assert(byteLength <= reqLength, "byte array longer than desired length"), assert(reqLength > 0, "Requested array length <= 0"), 
          this.strip();
          var b, i, littleEndian = "le" === endian, res = new ArrayType(reqLength), q = this.clone();
          if (littleEndian) {
            for (i = 0; !q.isZero(); i++) b = q.andln(255), q.iushrn(8), res[i] = b;
            for (;i < reqLength; i++) res[i] = 0;
          } else {
            for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
            for (i = 0; !q.isZero(); i++) b = q.andln(255), q.iushrn(8), res[reqLength - i - 1] = b;
          }
          return res;
        }, Math.clz32 ? BN.prototype._countBits = function(w) {
          return 32 - Math.clz32(w);
        } : BN.prototype._countBits = function(w) {
          var t = w, r = 0;
          return t >= 4096 && (r += 13, t >>>= 13), t >= 64 && (r += 7, t >>>= 7), t >= 8 && (r += 4, 
          t >>>= 4), t >= 2 && (r += 2, t >>>= 2), r + t;
        }, BN.prototype._zeroBits = function(w) {
          if (0 === w) return 26;
          var t = w, r = 0;
          return 0 == (8191 & t) && (r += 13, t >>>= 13), 0 == (127 & t) && (r += 7, t >>>= 7), 
          0 == (15 & t) && (r += 4, t >>>= 4), 0 == (3 & t) && (r += 2, t >>>= 2), 0 == (1 & t) && r++, 
          r;
        }, BN.prototype.bitLength = function() {
          var w = this.words[this.length - 1], hi = this._countBits(w);
          return 26 * (this.length - 1) + hi;
        }, BN.prototype.zeroBits = function() {
          if (this.isZero()) return 0;
          for (var r = 0, i = 0; i < this.length; i++) {
            var b = this._zeroBits(this.words[i]);
            if (r += b, 26 !== b) break;
          }
          return r;
        }, BN.prototype.byteLength = function() {
          return Math.ceil(this.bitLength() / 8);
        }, BN.prototype.toTwos = function(width) {
          return 0 !== this.negative ? this.abs().inotn(width).iaddn(1) : this.clone();
        }, BN.prototype.fromTwos = function(width) {
          return this.testn(width - 1) ? this.notn(width).iaddn(1).ineg() : this.clone();
        }, BN.prototype.isNeg = function() {
          return 0 !== this.negative;
        }, BN.prototype.neg = function() {
          return this.clone().ineg();
        }, BN.prototype.ineg = function() {
          return this.isZero() || (this.negative ^= 1), this;
        }, BN.prototype.iuor = function(num) {
          for (;this.length < num.length; ) this.words[this.length++] = 0;
          for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
          return this.strip();
        }, BN.prototype.ior = function(num) {
          return assert(0 == (this.negative | num.negative)), this.iuor(num);
        }, BN.prototype.or = function(num) {
          return this.length > num.length ? this.clone().ior(num) : num.clone().ior(this);
        }, BN.prototype.uor = function(num) {
          return this.length > num.length ? this.clone().iuor(num) : num.clone().iuor(this);
        }, BN.prototype.iuand = function(num) {
          var b;
          b = this.length > num.length ? num : this;
          for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
          return this.length = b.length, this.strip();
        }, BN.prototype.iand = function(num) {
          return assert(0 == (this.negative | num.negative)), this.iuand(num);
        }, BN.prototype.and = function(num) {
          return this.length > num.length ? this.clone().iand(num) : num.clone().iand(this);
        }, BN.prototype.uand = function(num) {
          return this.length > num.length ? this.clone().iuand(num) : num.clone().iuand(this);
        }, BN.prototype.iuxor = function(num) {
          var a, b;
          this.length > num.length ? (a = this, b = num) : (a = num, b = this);
          for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
          if (this !== a) for (;i < a.length; i++) this.words[i] = a.words[i];
          return this.length = a.length, this.strip();
        }, BN.prototype.ixor = function(num) {
          return assert(0 == (this.negative | num.negative)), this.iuxor(num);
        }, BN.prototype.xor = function(num) {
          return this.length > num.length ? this.clone().ixor(num) : num.clone().ixor(this);
        }, BN.prototype.uxor = function(num) {
          return this.length > num.length ? this.clone().iuxor(num) : num.clone().iuxor(this);
        }, BN.prototype.inotn = function(width) {
          assert("number" == typeof width && width >= 0);
          var bytesNeeded = 0 | Math.ceil(width / 26), bitsLeft = width % 26;
          this._expand(bytesNeeded), bitsLeft > 0 && bytesNeeded--;
          for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
          return bitsLeft > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft), 
          this.strip();
        }, BN.prototype.notn = function(width) {
          return this.clone().inotn(width);
        }, BN.prototype.setn = function(bit, val) {
          assert("number" == typeof bit && bit >= 0);
          var off = bit / 26 | 0, wbit = bit % 26;
          return this._expand(off + 1), this.words[off] = val ? this.words[off] | 1 << wbit : this.words[off] & ~(1 << wbit), 
          this.strip();
        }, BN.prototype.iadd = function(num) {
          var r, a, b;
          if (0 !== this.negative && 0 === num.negative) return this.negative = 0, r = this.isub(num), 
          this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== num.negative) return num.negative = 0, r = this.isub(num), 
          num.negative = 1, r._normSign();
          this.length > num.length ? (a = this, b = num) : (a = num, b = this);
          for (var carry = 0, i = 0; i < b.length; i++) r = (0 | a.words[i]) + (0 | b.words[i]) + carry, 
          this.words[i] = 67108863 & r, carry = r >>> 26;
          for (;0 !== carry && i < a.length; i++) r = (0 | a.words[i]) + carry, this.words[i] = 67108863 & r, 
          carry = r >>> 26;
          if (this.length = a.length, 0 !== carry) this.words[this.length] = carry, this.length++; else if (a !== this) for (;i < a.length; i++) this.words[i] = a.words[i];
          return this;
        }, BN.prototype.add = function(num) {
          var res;
          return 0 !== num.negative && 0 === this.negative ? (num.negative = 0, res = this.sub(num), 
          num.negative ^= 1, res) : 0 === num.negative && 0 !== this.negative ? (this.negative = 0, 
          res = num.sub(this), this.negative = 1, res) : this.length > num.length ? this.clone().iadd(num) : num.clone().iadd(this);
        }, BN.prototype.isub = function(num) {
          if (0 !== num.negative) {
            num.negative = 0;
            var r = this.iadd(num);
            return num.negative = 1, r._normSign();
          }
          if (0 !== this.negative) return this.negative = 0, this.iadd(num), this.negative = 1, 
          this._normSign();
          var a, b, cmp = this.cmp(num);
          if (0 === cmp) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          cmp > 0 ? (a = this, b = num) : (a = num, b = this);
          for (var carry = 0, i = 0; i < b.length; i++) carry = (r = (0 | a.words[i]) - (0 | b.words[i]) + carry) >> 26, 
          this.words[i] = 67108863 & r;
          for (;0 !== carry && i < a.length; i++) carry = (r = (0 | a.words[i]) + carry) >> 26, 
          this.words[i] = 67108863 & r;
          if (0 === carry && i < a.length && a !== this) for (;i < a.length; i++) this.words[i] = a.words[i];
          return this.length = Math.max(this.length, i), a !== this && (this.negative = 1), 
          this.strip();
        }, BN.prototype.sub = function(num) {
          return this.clone().isub(num);
        };
        var comb10MulTo = function(self, num, out) {
          var lo, mid, hi, a = self.words, b = num.words, o = out.words, c = 0, a0 = 0 | a[0], al0 = 8191 & a0, ah0 = a0 >>> 13, a1 = 0 | a[1], al1 = 8191 & a1, ah1 = a1 >>> 13, a2 = 0 | a[2], al2 = 8191 & a2, ah2 = a2 >>> 13, a3 = 0 | a[3], al3 = 8191 & a3, ah3 = a3 >>> 13, a4 = 0 | a[4], al4 = 8191 & a4, ah4 = a4 >>> 13, a5 = 0 | a[5], al5 = 8191 & a5, ah5 = a5 >>> 13, a6 = 0 | a[6], al6 = 8191 & a6, ah6 = a6 >>> 13, a7 = 0 | a[7], al7 = 8191 & a7, ah7 = a7 >>> 13, a8 = 0 | a[8], al8 = 8191 & a8, ah8 = a8 >>> 13, a9 = 0 | a[9], al9 = 8191 & a9, ah9 = a9 >>> 13, b0 = 0 | b[0], bl0 = 8191 & b0, bh0 = b0 >>> 13, b1 = 0 | b[1], bl1 = 8191 & b1, bh1 = b1 >>> 13, b2 = 0 | b[2], bl2 = 8191 & b2, bh2 = b2 >>> 13, b3 = 0 | b[3], bl3 = 8191 & b3, bh3 = b3 >>> 13, b4 = 0 | b[4], bl4 = 8191 & b4, bh4 = b4 >>> 13, b5 = 0 | b[5], bl5 = 8191 & b5, bh5 = b5 >>> 13, b6 = 0 | b[6], bl6 = 8191 & b6, bh6 = b6 >>> 13, b7 = 0 | b[7], bl7 = 8191 & b7, bh7 = b7 >>> 13, b8 = 0 | b[8], bl8 = 8191 & b8, bh8 = b8 >>> 13, b9 = 0 | b[9], bl9 = 8191 & b9, bh9 = b9 >>> 13;
          out.negative = self.negative ^ num.negative, out.length = 19;
          var w0 = (c + (lo = Math.imul(al0, bl0)) | 0) + ((8191 & (mid = (mid = Math.imul(al0, bh0)) + Math.imul(ah0, bl0) | 0)) << 13) | 0;
          c = ((hi = Math.imul(ah0, bh0)) + (mid >>> 13) | 0) + (w0 >>> 26) | 0, w0 &= 67108863, 
          lo = Math.imul(al1, bl0), mid = (mid = Math.imul(al1, bh0)) + Math.imul(ah1, bl0) | 0, 
          hi = Math.imul(ah1, bh0);
          var w1 = (c + (lo = lo + Math.imul(al0, bl1) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh1) | 0) + Math.imul(ah0, bl1) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh1) | 0) + (mid >>> 13) | 0) + (w1 >>> 26) | 0, 
          w1 &= 67108863, lo = Math.imul(al2, bl0), mid = (mid = Math.imul(al2, bh0)) + Math.imul(ah2, bl0) | 0, 
          hi = Math.imul(ah2, bh0), lo = lo + Math.imul(al1, bl1) | 0, mid = (mid = mid + Math.imul(al1, bh1) | 0) + Math.imul(ah1, bl1) | 0, 
          hi = hi + Math.imul(ah1, bh1) | 0;
          var w2 = (c + (lo = lo + Math.imul(al0, bl2) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh2) | 0) + Math.imul(ah0, bl2) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh2) | 0) + (mid >>> 13) | 0) + (w2 >>> 26) | 0, 
          w2 &= 67108863, lo = Math.imul(al3, bl0), mid = (mid = Math.imul(al3, bh0)) + Math.imul(ah3, bl0) | 0, 
          hi = Math.imul(ah3, bh0), lo = lo + Math.imul(al2, bl1) | 0, mid = (mid = mid + Math.imul(al2, bh1) | 0) + Math.imul(ah2, bl1) | 0, 
          hi = hi + Math.imul(ah2, bh1) | 0, lo = lo + Math.imul(al1, bl2) | 0, mid = (mid = mid + Math.imul(al1, bh2) | 0) + Math.imul(ah1, bl2) | 0, 
          hi = hi + Math.imul(ah1, bh2) | 0;
          var w3 = (c + (lo = lo + Math.imul(al0, bl3) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh3) | 0) + Math.imul(ah0, bl3) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh3) | 0) + (mid >>> 13) | 0) + (w3 >>> 26) | 0, 
          w3 &= 67108863, lo = Math.imul(al4, bl0), mid = (mid = Math.imul(al4, bh0)) + Math.imul(ah4, bl0) | 0, 
          hi = Math.imul(ah4, bh0), lo = lo + Math.imul(al3, bl1) | 0, mid = (mid = mid + Math.imul(al3, bh1) | 0) + Math.imul(ah3, bl1) | 0, 
          hi = hi + Math.imul(ah3, bh1) | 0, lo = lo + Math.imul(al2, bl2) | 0, mid = (mid = mid + Math.imul(al2, bh2) | 0) + Math.imul(ah2, bl2) | 0, 
          hi = hi + Math.imul(ah2, bh2) | 0, lo = lo + Math.imul(al1, bl3) | 0, mid = (mid = mid + Math.imul(al1, bh3) | 0) + Math.imul(ah1, bl3) | 0, 
          hi = hi + Math.imul(ah1, bh3) | 0;
          var w4 = (c + (lo = lo + Math.imul(al0, bl4) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh4) | 0) + Math.imul(ah0, bl4) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh4) | 0) + (mid >>> 13) | 0) + (w4 >>> 26) | 0, 
          w4 &= 67108863, lo = Math.imul(al5, bl0), mid = (mid = Math.imul(al5, bh0)) + Math.imul(ah5, bl0) | 0, 
          hi = Math.imul(ah5, bh0), lo = lo + Math.imul(al4, bl1) | 0, mid = (mid = mid + Math.imul(al4, bh1) | 0) + Math.imul(ah4, bl1) | 0, 
          hi = hi + Math.imul(ah4, bh1) | 0, lo = lo + Math.imul(al3, bl2) | 0, mid = (mid = mid + Math.imul(al3, bh2) | 0) + Math.imul(ah3, bl2) | 0, 
          hi = hi + Math.imul(ah3, bh2) | 0, lo = lo + Math.imul(al2, bl3) | 0, mid = (mid = mid + Math.imul(al2, bh3) | 0) + Math.imul(ah2, bl3) | 0, 
          hi = hi + Math.imul(ah2, bh3) | 0, lo = lo + Math.imul(al1, bl4) | 0, mid = (mid = mid + Math.imul(al1, bh4) | 0) + Math.imul(ah1, bl4) | 0, 
          hi = hi + Math.imul(ah1, bh4) | 0;
          var w5 = (c + (lo = lo + Math.imul(al0, bl5) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh5) | 0) + Math.imul(ah0, bl5) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh5) | 0) + (mid >>> 13) | 0) + (w5 >>> 26) | 0, 
          w5 &= 67108863, lo = Math.imul(al6, bl0), mid = (mid = Math.imul(al6, bh0)) + Math.imul(ah6, bl0) | 0, 
          hi = Math.imul(ah6, bh0), lo = lo + Math.imul(al5, bl1) | 0, mid = (mid = mid + Math.imul(al5, bh1) | 0) + Math.imul(ah5, bl1) | 0, 
          hi = hi + Math.imul(ah5, bh1) | 0, lo = lo + Math.imul(al4, bl2) | 0, mid = (mid = mid + Math.imul(al4, bh2) | 0) + Math.imul(ah4, bl2) | 0, 
          hi = hi + Math.imul(ah4, bh2) | 0, lo = lo + Math.imul(al3, bl3) | 0, mid = (mid = mid + Math.imul(al3, bh3) | 0) + Math.imul(ah3, bl3) | 0, 
          hi = hi + Math.imul(ah3, bh3) | 0, lo = lo + Math.imul(al2, bl4) | 0, mid = (mid = mid + Math.imul(al2, bh4) | 0) + Math.imul(ah2, bl4) | 0, 
          hi = hi + Math.imul(ah2, bh4) | 0, lo = lo + Math.imul(al1, bl5) | 0, mid = (mid = mid + Math.imul(al1, bh5) | 0) + Math.imul(ah1, bl5) | 0, 
          hi = hi + Math.imul(ah1, bh5) | 0;
          var w6 = (c + (lo = lo + Math.imul(al0, bl6) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh6) | 0) + Math.imul(ah0, bl6) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh6) | 0) + (mid >>> 13) | 0) + (w6 >>> 26) | 0, 
          w6 &= 67108863, lo = Math.imul(al7, bl0), mid = (mid = Math.imul(al7, bh0)) + Math.imul(ah7, bl0) | 0, 
          hi = Math.imul(ah7, bh0), lo = lo + Math.imul(al6, bl1) | 0, mid = (mid = mid + Math.imul(al6, bh1) | 0) + Math.imul(ah6, bl1) | 0, 
          hi = hi + Math.imul(ah6, bh1) | 0, lo = lo + Math.imul(al5, bl2) | 0, mid = (mid = mid + Math.imul(al5, bh2) | 0) + Math.imul(ah5, bl2) | 0, 
          hi = hi + Math.imul(ah5, bh2) | 0, lo = lo + Math.imul(al4, bl3) | 0, mid = (mid = mid + Math.imul(al4, bh3) | 0) + Math.imul(ah4, bl3) | 0, 
          hi = hi + Math.imul(ah4, bh3) | 0, lo = lo + Math.imul(al3, bl4) | 0, mid = (mid = mid + Math.imul(al3, bh4) | 0) + Math.imul(ah3, bl4) | 0, 
          hi = hi + Math.imul(ah3, bh4) | 0, lo = lo + Math.imul(al2, bl5) | 0, mid = (mid = mid + Math.imul(al2, bh5) | 0) + Math.imul(ah2, bl5) | 0, 
          hi = hi + Math.imul(ah2, bh5) | 0, lo = lo + Math.imul(al1, bl6) | 0, mid = (mid = mid + Math.imul(al1, bh6) | 0) + Math.imul(ah1, bl6) | 0, 
          hi = hi + Math.imul(ah1, bh6) | 0;
          var w7 = (c + (lo = lo + Math.imul(al0, bl7) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh7) | 0) + Math.imul(ah0, bl7) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh7) | 0) + (mid >>> 13) | 0) + (w7 >>> 26) | 0, 
          w7 &= 67108863, lo = Math.imul(al8, bl0), mid = (mid = Math.imul(al8, bh0)) + Math.imul(ah8, bl0) | 0, 
          hi = Math.imul(ah8, bh0), lo = lo + Math.imul(al7, bl1) | 0, mid = (mid = mid + Math.imul(al7, bh1) | 0) + Math.imul(ah7, bl1) | 0, 
          hi = hi + Math.imul(ah7, bh1) | 0, lo = lo + Math.imul(al6, bl2) | 0, mid = (mid = mid + Math.imul(al6, bh2) | 0) + Math.imul(ah6, bl2) | 0, 
          hi = hi + Math.imul(ah6, bh2) | 0, lo = lo + Math.imul(al5, bl3) | 0, mid = (mid = mid + Math.imul(al5, bh3) | 0) + Math.imul(ah5, bl3) | 0, 
          hi = hi + Math.imul(ah5, bh3) | 0, lo = lo + Math.imul(al4, bl4) | 0, mid = (mid = mid + Math.imul(al4, bh4) | 0) + Math.imul(ah4, bl4) | 0, 
          hi = hi + Math.imul(ah4, bh4) | 0, lo = lo + Math.imul(al3, bl5) | 0, mid = (mid = mid + Math.imul(al3, bh5) | 0) + Math.imul(ah3, bl5) | 0, 
          hi = hi + Math.imul(ah3, bh5) | 0, lo = lo + Math.imul(al2, bl6) | 0, mid = (mid = mid + Math.imul(al2, bh6) | 0) + Math.imul(ah2, bl6) | 0, 
          hi = hi + Math.imul(ah2, bh6) | 0, lo = lo + Math.imul(al1, bl7) | 0, mid = (mid = mid + Math.imul(al1, bh7) | 0) + Math.imul(ah1, bl7) | 0, 
          hi = hi + Math.imul(ah1, bh7) | 0;
          var w8 = (c + (lo = lo + Math.imul(al0, bl8) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh8) | 0) + Math.imul(ah0, bl8) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh8) | 0) + (mid >>> 13) | 0) + (w8 >>> 26) | 0, 
          w8 &= 67108863, lo = Math.imul(al9, bl0), mid = (mid = Math.imul(al9, bh0)) + Math.imul(ah9, bl0) | 0, 
          hi = Math.imul(ah9, bh0), lo = lo + Math.imul(al8, bl1) | 0, mid = (mid = mid + Math.imul(al8, bh1) | 0) + Math.imul(ah8, bl1) | 0, 
          hi = hi + Math.imul(ah8, bh1) | 0, lo = lo + Math.imul(al7, bl2) | 0, mid = (mid = mid + Math.imul(al7, bh2) | 0) + Math.imul(ah7, bl2) | 0, 
          hi = hi + Math.imul(ah7, bh2) | 0, lo = lo + Math.imul(al6, bl3) | 0, mid = (mid = mid + Math.imul(al6, bh3) | 0) + Math.imul(ah6, bl3) | 0, 
          hi = hi + Math.imul(ah6, bh3) | 0, lo = lo + Math.imul(al5, bl4) | 0, mid = (mid = mid + Math.imul(al5, bh4) | 0) + Math.imul(ah5, bl4) | 0, 
          hi = hi + Math.imul(ah5, bh4) | 0, lo = lo + Math.imul(al4, bl5) | 0, mid = (mid = mid + Math.imul(al4, bh5) | 0) + Math.imul(ah4, bl5) | 0, 
          hi = hi + Math.imul(ah4, bh5) | 0, lo = lo + Math.imul(al3, bl6) | 0, mid = (mid = mid + Math.imul(al3, bh6) | 0) + Math.imul(ah3, bl6) | 0, 
          hi = hi + Math.imul(ah3, bh6) | 0, lo = lo + Math.imul(al2, bl7) | 0, mid = (mid = mid + Math.imul(al2, bh7) | 0) + Math.imul(ah2, bl7) | 0, 
          hi = hi + Math.imul(ah2, bh7) | 0, lo = lo + Math.imul(al1, bl8) | 0, mid = (mid = mid + Math.imul(al1, bh8) | 0) + Math.imul(ah1, bl8) | 0, 
          hi = hi + Math.imul(ah1, bh8) | 0;
          var w9 = (c + (lo = lo + Math.imul(al0, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al0, bh9) | 0) + Math.imul(ah0, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah0, bh9) | 0) + (mid >>> 13) | 0) + (w9 >>> 26) | 0, 
          w9 &= 67108863, lo = Math.imul(al9, bl1), mid = (mid = Math.imul(al9, bh1)) + Math.imul(ah9, bl1) | 0, 
          hi = Math.imul(ah9, bh1), lo = lo + Math.imul(al8, bl2) | 0, mid = (mid = mid + Math.imul(al8, bh2) | 0) + Math.imul(ah8, bl2) | 0, 
          hi = hi + Math.imul(ah8, bh2) | 0, lo = lo + Math.imul(al7, bl3) | 0, mid = (mid = mid + Math.imul(al7, bh3) | 0) + Math.imul(ah7, bl3) | 0, 
          hi = hi + Math.imul(ah7, bh3) | 0, lo = lo + Math.imul(al6, bl4) | 0, mid = (mid = mid + Math.imul(al6, bh4) | 0) + Math.imul(ah6, bl4) | 0, 
          hi = hi + Math.imul(ah6, bh4) | 0, lo = lo + Math.imul(al5, bl5) | 0, mid = (mid = mid + Math.imul(al5, bh5) | 0) + Math.imul(ah5, bl5) | 0, 
          hi = hi + Math.imul(ah5, bh5) | 0, lo = lo + Math.imul(al4, bl6) | 0, mid = (mid = mid + Math.imul(al4, bh6) | 0) + Math.imul(ah4, bl6) | 0, 
          hi = hi + Math.imul(ah4, bh6) | 0, lo = lo + Math.imul(al3, bl7) | 0, mid = (mid = mid + Math.imul(al3, bh7) | 0) + Math.imul(ah3, bl7) | 0, 
          hi = hi + Math.imul(ah3, bh7) | 0, lo = lo + Math.imul(al2, bl8) | 0, mid = (mid = mid + Math.imul(al2, bh8) | 0) + Math.imul(ah2, bl8) | 0, 
          hi = hi + Math.imul(ah2, bh8) | 0;
          var w10 = (c + (lo = lo + Math.imul(al1, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al1, bh9) | 0) + Math.imul(ah1, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah1, bh9) | 0) + (mid >>> 13) | 0) + (w10 >>> 26) | 0, 
          w10 &= 67108863, lo = Math.imul(al9, bl2), mid = (mid = Math.imul(al9, bh2)) + Math.imul(ah9, bl2) | 0, 
          hi = Math.imul(ah9, bh2), lo = lo + Math.imul(al8, bl3) | 0, mid = (mid = mid + Math.imul(al8, bh3) | 0) + Math.imul(ah8, bl3) | 0, 
          hi = hi + Math.imul(ah8, bh3) | 0, lo = lo + Math.imul(al7, bl4) | 0, mid = (mid = mid + Math.imul(al7, bh4) | 0) + Math.imul(ah7, bl4) | 0, 
          hi = hi + Math.imul(ah7, bh4) | 0, lo = lo + Math.imul(al6, bl5) | 0, mid = (mid = mid + Math.imul(al6, bh5) | 0) + Math.imul(ah6, bl5) | 0, 
          hi = hi + Math.imul(ah6, bh5) | 0, lo = lo + Math.imul(al5, bl6) | 0, mid = (mid = mid + Math.imul(al5, bh6) | 0) + Math.imul(ah5, bl6) | 0, 
          hi = hi + Math.imul(ah5, bh6) | 0, lo = lo + Math.imul(al4, bl7) | 0, mid = (mid = mid + Math.imul(al4, bh7) | 0) + Math.imul(ah4, bl7) | 0, 
          hi = hi + Math.imul(ah4, bh7) | 0, lo = lo + Math.imul(al3, bl8) | 0, mid = (mid = mid + Math.imul(al3, bh8) | 0) + Math.imul(ah3, bl8) | 0, 
          hi = hi + Math.imul(ah3, bh8) | 0;
          var w11 = (c + (lo = lo + Math.imul(al2, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al2, bh9) | 0) + Math.imul(ah2, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah2, bh9) | 0) + (mid >>> 13) | 0) + (w11 >>> 26) | 0, 
          w11 &= 67108863, lo = Math.imul(al9, bl3), mid = (mid = Math.imul(al9, bh3)) + Math.imul(ah9, bl3) | 0, 
          hi = Math.imul(ah9, bh3), lo = lo + Math.imul(al8, bl4) | 0, mid = (mid = mid + Math.imul(al8, bh4) | 0) + Math.imul(ah8, bl4) | 0, 
          hi = hi + Math.imul(ah8, bh4) | 0, lo = lo + Math.imul(al7, bl5) | 0, mid = (mid = mid + Math.imul(al7, bh5) | 0) + Math.imul(ah7, bl5) | 0, 
          hi = hi + Math.imul(ah7, bh5) | 0, lo = lo + Math.imul(al6, bl6) | 0, mid = (mid = mid + Math.imul(al6, bh6) | 0) + Math.imul(ah6, bl6) | 0, 
          hi = hi + Math.imul(ah6, bh6) | 0, lo = lo + Math.imul(al5, bl7) | 0, mid = (mid = mid + Math.imul(al5, bh7) | 0) + Math.imul(ah5, bl7) | 0, 
          hi = hi + Math.imul(ah5, bh7) | 0, lo = lo + Math.imul(al4, bl8) | 0, mid = (mid = mid + Math.imul(al4, bh8) | 0) + Math.imul(ah4, bl8) | 0, 
          hi = hi + Math.imul(ah4, bh8) | 0;
          var w12 = (c + (lo = lo + Math.imul(al3, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al3, bh9) | 0) + Math.imul(ah3, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah3, bh9) | 0) + (mid >>> 13) | 0) + (w12 >>> 26) | 0, 
          w12 &= 67108863, lo = Math.imul(al9, bl4), mid = (mid = Math.imul(al9, bh4)) + Math.imul(ah9, bl4) | 0, 
          hi = Math.imul(ah9, bh4), lo = lo + Math.imul(al8, bl5) | 0, mid = (mid = mid + Math.imul(al8, bh5) | 0) + Math.imul(ah8, bl5) | 0, 
          hi = hi + Math.imul(ah8, bh5) | 0, lo = lo + Math.imul(al7, bl6) | 0, mid = (mid = mid + Math.imul(al7, bh6) | 0) + Math.imul(ah7, bl6) | 0, 
          hi = hi + Math.imul(ah7, bh6) | 0, lo = lo + Math.imul(al6, bl7) | 0, mid = (mid = mid + Math.imul(al6, bh7) | 0) + Math.imul(ah6, bl7) | 0, 
          hi = hi + Math.imul(ah6, bh7) | 0, lo = lo + Math.imul(al5, bl8) | 0, mid = (mid = mid + Math.imul(al5, bh8) | 0) + Math.imul(ah5, bl8) | 0, 
          hi = hi + Math.imul(ah5, bh8) | 0;
          var w13 = (c + (lo = lo + Math.imul(al4, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al4, bh9) | 0) + Math.imul(ah4, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah4, bh9) | 0) + (mid >>> 13) | 0) + (w13 >>> 26) | 0, 
          w13 &= 67108863, lo = Math.imul(al9, bl5), mid = (mid = Math.imul(al9, bh5)) + Math.imul(ah9, bl5) | 0, 
          hi = Math.imul(ah9, bh5), lo = lo + Math.imul(al8, bl6) | 0, mid = (mid = mid + Math.imul(al8, bh6) | 0) + Math.imul(ah8, bl6) | 0, 
          hi = hi + Math.imul(ah8, bh6) | 0, lo = lo + Math.imul(al7, bl7) | 0, mid = (mid = mid + Math.imul(al7, bh7) | 0) + Math.imul(ah7, bl7) | 0, 
          hi = hi + Math.imul(ah7, bh7) | 0, lo = lo + Math.imul(al6, bl8) | 0, mid = (mid = mid + Math.imul(al6, bh8) | 0) + Math.imul(ah6, bl8) | 0, 
          hi = hi + Math.imul(ah6, bh8) | 0;
          var w14 = (c + (lo = lo + Math.imul(al5, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al5, bh9) | 0) + Math.imul(ah5, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah5, bh9) | 0) + (mid >>> 13) | 0) + (w14 >>> 26) | 0, 
          w14 &= 67108863, lo = Math.imul(al9, bl6), mid = (mid = Math.imul(al9, bh6)) + Math.imul(ah9, bl6) | 0, 
          hi = Math.imul(ah9, bh6), lo = lo + Math.imul(al8, bl7) | 0, mid = (mid = mid + Math.imul(al8, bh7) | 0) + Math.imul(ah8, bl7) | 0, 
          hi = hi + Math.imul(ah8, bh7) | 0, lo = lo + Math.imul(al7, bl8) | 0, mid = (mid = mid + Math.imul(al7, bh8) | 0) + Math.imul(ah7, bl8) | 0, 
          hi = hi + Math.imul(ah7, bh8) | 0;
          var w15 = (c + (lo = lo + Math.imul(al6, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al6, bh9) | 0) + Math.imul(ah6, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah6, bh9) | 0) + (mid >>> 13) | 0) + (w15 >>> 26) | 0, 
          w15 &= 67108863, lo = Math.imul(al9, bl7), mid = (mid = Math.imul(al9, bh7)) + Math.imul(ah9, bl7) | 0, 
          hi = Math.imul(ah9, bh7), lo = lo + Math.imul(al8, bl8) | 0, mid = (mid = mid + Math.imul(al8, bh8) | 0) + Math.imul(ah8, bl8) | 0, 
          hi = hi + Math.imul(ah8, bh8) | 0;
          var w16 = (c + (lo = lo + Math.imul(al7, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al7, bh9) | 0) + Math.imul(ah7, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah7, bh9) | 0) + (mid >>> 13) | 0) + (w16 >>> 26) | 0, 
          w16 &= 67108863, lo = Math.imul(al9, bl8), mid = (mid = Math.imul(al9, bh8)) + Math.imul(ah9, bl8) | 0, 
          hi = Math.imul(ah9, bh8);
          var w17 = (c + (lo = lo + Math.imul(al8, bl9) | 0) | 0) + ((8191 & (mid = (mid = mid + Math.imul(al8, bh9) | 0) + Math.imul(ah8, bl9) | 0)) << 13) | 0;
          c = ((hi = hi + Math.imul(ah8, bh9) | 0) + (mid >>> 13) | 0) + (w17 >>> 26) | 0, 
          w17 &= 67108863;
          var w18 = (c + (lo = Math.imul(al9, bl9)) | 0) + ((8191 & (mid = (mid = Math.imul(al9, bh9)) + Math.imul(ah9, bl9) | 0)) << 13) | 0;
          return c = ((hi = Math.imul(ah9, bh9)) + (mid >>> 13) | 0) + (w18 >>> 26) | 0, w18 &= 67108863, 
          o[0] = w0, o[1] = w1, o[2] = w2, o[3] = w3, o[4] = w4, o[5] = w5, o[6] = w6, o[7] = w7, 
          o[8] = w8, o[9] = w9, o[10] = w10, o[11] = w11, o[12] = w12, o[13] = w13, o[14] = w14, 
          o[15] = w15, o[16] = w16, o[17] = w17, o[18] = w18, 0 !== c && (o[19] = c, out.length++), 
          out;
        };
        function jumboMulTo(self, num, out) {
          return (new FFTM).mulp(self, num, out);
        }
        function FFTM(x, y) {
          this.x = x, this.y = y;
        }
        Math.imul || (comb10MulTo = smallMulTo), BN.prototype.mulTo = function(num, out) {
          var res, len = this.length + num.length;
          return res = 10 === this.length && 10 === num.length ? comb10MulTo(this, num, out) : len < 63 ? smallMulTo(this, num, out) : len < 1024 ? function(self, num, out) {
            out.negative = num.negative ^ self.negative, out.length = self.length + num.length;
            for (var carry = 0, hncarry = 0, k = 0; k < out.length - 1; k++) {
              var ncarry = hncarry;
              hncarry = 0;
              for (var rword = 67108863 & carry, maxJ = Math.min(k, num.length - 1), j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                var i = k - j, r = (0 | self.words[i]) * (0 | num.words[j]), lo = 67108863 & r;
                rword = 67108863 & (lo = lo + rword | 0), hncarry += (ncarry = (ncarry = ncarry + (r / 67108864 | 0) | 0) + (lo >>> 26) | 0) >>> 26, 
                ncarry &= 67108863;
              }
              out.words[k] = rword, carry = ncarry, ncarry = hncarry;
            }
            return 0 !== carry ? out.words[k] = carry : out.length--, out.strip();
          }(this, num, out) : jumboMulTo(this, num, out), res;
        }, FFTM.prototype.makeRBT = function(N) {
          for (var t = new Array(N), l = BN.prototype._countBits(N) - 1, i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
          return t;
        }, FFTM.prototype.revBin = function(x, l, N) {
          if (0 === x || x === N - 1) return x;
          for (var rb = 0, i = 0; i < l; i++) rb |= (1 & x) << l - i - 1, x >>= 1;
          return rb;
        }, FFTM.prototype.permute = function(rbt, rws, iws, rtws, itws, N) {
          for (var i = 0; i < N; i++) rtws[i] = rws[rbt[i]], itws[i] = iws[rbt[i]];
        }, FFTM.prototype.transform = function(rws, iws, rtws, itws, N, rbt) {
          this.permute(rbt, rws, iws, rtws, itws, N);
          for (var s = 1; s < N; s <<= 1) for (var l = s << 1, rtwdf = Math.cos(2 * Math.PI / l), itwdf = Math.sin(2 * Math.PI / l), p = 0; p < N; p += l) for (var rtwdf_ = rtwdf, itwdf_ = itwdf, j = 0; j < s; j++) {
            var re = rtws[p + j], ie = itws[p + j], ro = rtws[p + j + s], io = itws[p + j + s], rx = rtwdf_ * ro - itwdf_ * io;
            io = rtwdf_ * io + itwdf_ * ro, ro = rx, rtws[p + j] = re + ro, itws[p + j] = ie + io, 
            rtws[p + j + s] = re - ro, itws[p + j + s] = ie - io, j !== l && (rx = rtwdf * rtwdf_ - itwdf * itwdf_, 
            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_, rtwdf_ = rx);
          }
        }, FFTM.prototype.guessLen13b = function(n, m) {
          var N = 1 | Math.max(m, n), odd = 1 & N, i = 0;
          for (N = N / 2 | 0; N; N >>>= 1) i++;
          return 1 << i + 1 + odd;
        }, FFTM.prototype.conjugate = function(rws, iws, N) {
          if (!(N <= 1)) for (var i = 0; i < N / 2; i++) {
            var t = rws[i];
            rws[i] = rws[N - i - 1], rws[N - i - 1] = t, t = iws[i], iws[i] = -iws[N - i - 1], 
            iws[N - i - 1] = -t;
          }
        }, FFTM.prototype.normalize13b = function(ws, N) {
          for (var carry = 0, i = 0; i < N / 2; i++) {
            var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
            ws[i] = 67108863 & w, carry = w < 67108864 ? 0 : w / 67108864 | 0;
          }
          return ws;
        }, FFTM.prototype.convert13b = function(ws, len, rws, N) {
          for (var carry = 0, i = 0; i < len; i++) carry += 0 | ws[i], rws[2 * i] = 8191 & carry, 
          carry >>>= 13, rws[2 * i + 1] = 8191 & carry, carry >>>= 13;
          for (i = 2 * len; i < N; ++i) rws[i] = 0;
          assert(0 === carry), assert(0 == (-8192 & carry));
        }, FFTM.prototype.stub = function(N) {
          for (var ph = new Array(N), i = 0; i < N; i++) ph[i] = 0;
          return ph;
        }, FFTM.prototype.mulp = function(x, y, out) {
          var N = 2 * this.guessLen13b(x.length, y.length), rbt = this.makeRBT(N), _ = this.stub(N), rws = new Array(N), rwst = new Array(N), iwst = new Array(N), nrws = new Array(N), nrwst = new Array(N), niwst = new Array(N), rmws = out.words;
          rmws.length = N, this.convert13b(x.words, x.length, rws, N), this.convert13b(y.words, y.length, nrws, N), 
          this.transform(rws, _, rwst, iwst, N, rbt), this.transform(nrws, _, nrwst, niwst, N, rbt);
          for (var i = 0; i < N; i++) {
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i], rwst[i] = rx;
          }
          return this.conjugate(rwst, iwst, N), this.transform(rwst, iwst, rmws, _, N, rbt), 
          this.conjugate(rmws, _, N), this.normalize13b(rmws, N), out.negative = x.negative ^ y.negative, 
          out.length = x.length + y.length, out.strip();
        }, BN.prototype.mul = function(num) {
          var out = new BN(null);
          return out.words = new Array(this.length + num.length), this.mulTo(num, out);
        }, BN.prototype.mulf = function(num) {
          var out = new BN(null);
          return out.words = new Array(this.length + num.length), jumboMulTo(this, num, out);
        }, BN.prototype.imul = function(num) {
          return this.clone().mulTo(num, this);
        }, BN.prototype.imuln = function(num) {
          assert("number" == typeof num), assert(num < 67108864);
          for (var carry = 0, i = 0; i < this.length; i++) {
            var w = (0 | this.words[i]) * num, lo = (67108863 & w) + (67108863 & carry);
            carry >>= 26, carry += w / 67108864 | 0, carry += lo >>> 26, this.words[i] = 67108863 & lo;
          }
          return 0 !== carry && (this.words[i] = carry, this.length++), this;
        }, BN.prototype.muln = function(num) {
          return this.clone().imuln(num);
        }, BN.prototype.sqr = function() {
          return this.mul(this);
        }, BN.prototype.isqr = function() {
          return this.imul(this.clone());
        }, BN.prototype.pow = function(num) {
          var w = function(num) {
            for (var w = new Array(num.bitLength()), bit = 0; bit < w.length; bit++) {
              var off = bit / 26 | 0, wbit = bit % 26;
              w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
            }
            return w;
          }(num);
          if (0 === w.length) return new BN(1);
          for (var res = this, i = 0; i < w.length && 0 === w[i]; i++, res = res.sqr()) ;
          if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) 0 !== w[i] && (res = res.mul(q));
          return res;
        }, BN.prototype.iushln = function(bits) {
          assert("number" == typeof bits && bits >= 0);
          var i, r = bits % 26, s = (bits - r) / 26, carryMask = 67108863 >>> 26 - r << 26 - r;
          if (0 !== r) {
            var carry = 0;
            for (i = 0; i < this.length; i++) {
              var newCarry = this.words[i] & carryMask, c = (0 | this.words[i]) - newCarry << r;
              this.words[i] = c | carry, carry = newCarry >>> 26 - r;
            }
            carry && (this.words[i] = carry, this.length++);
          }
          if (0 !== s) {
            for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
            for (i = 0; i < s; i++) this.words[i] = 0;
            this.length += s;
          }
          return this.strip();
        }, BN.prototype.ishln = function(bits) {
          return assert(0 === this.negative), this.iushln(bits);
        }, BN.prototype.iushrn = function(bits, hint, extended) {
          var h;
          assert("number" == typeof bits && bits >= 0), h = hint ? (hint - hint % 26) / 26 : 0;
          var r = bits % 26, s = Math.min((bits - r) / 26, this.length), mask = 67108863 ^ 67108863 >>> r << r, maskedWords = extended;
          if (h -= s, h = Math.max(0, h), maskedWords) {
            for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
          }
          if (0 === s) ; else if (this.length > s) for (this.length -= s, i = 0; i < this.length; i++) this.words[i] = this.words[i + s]; else this.words[0] = 0, 
          this.length = 1;
          var carry = 0;
          for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
            var word = 0 | this.words[i];
            this.words[i] = carry << 26 - r | word >>> r, carry = word & mask;
          }
          return maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry), 
          0 === this.length && (this.words[0] = 0, this.length = 1), this.strip();
        }, BN.prototype.ishrn = function(bits, hint, extended) {
          return assert(0 === this.negative), this.iushrn(bits, hint, extended);
        }, BN.prototype.shln = function(bits) {
          return this.clone().ishln(bits);
        }, BN.prototype.ushln = function(bits) {
          return this.clone().iushln(bits);
        }, BN.prototype.shrn = function(bits) {
          return this.clone().ishrn(bits);
        }, BN.prototype.ushrn = function(bits) {
          return this.clone().iushrn(bits);
        }, BN.prototype.testn = function(bit) {
          assert("number" == typeof bit && bit >= 0);
          var r = bit % 26, s = (bit - r) / 26, q = 1 << r;
          return !(this.length <= s) && !!(this.words[s] & q);
        }, BN.prototype.imaskn = function(bits) {
          assert("number" == typeof bits && bits >= 0);
          var r = bits % 26, s = (bits - r) / 26;
          if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= s) return this;
          if (0 !== r && s++, this.length = Math.min(s, this.length), 0 !== r) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
          }
          return this.strip();
        }, BN.prototype.maskn = function(bits) {
          return this.clone().imaskn(bits);
        }, BN.prototype.iaddn = function(num) {
          return assert("number" == typeof num), assert(num < 67108864), num < 0 ? this.isubn(-num) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < num ? (this.words[0] = num - (0 | this.words[0]), 
          this.negative = 0, this) : (this.negative = 0, this.isubn(num), this.negative = 1, 
          this) : this._iaddn(num);
        }, BN.prototype._iaddn = function(num) {
          this.words[0] += num;
          for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) this.words[i] -= 67108864, 
          i === this.length - 1 ? this.words[i + 1] = 1 : this.words[i + 1]++;
          return this.length = Math.max(this.length, i + 1), this;
        }, BN.prototype.isubn = function(num) {
          if (assert("number" == typeof num), assert(num < 67108864), num < 0) return this.iaddn(-num);
          if (0 !== this.negative) return this.negative = 0, this.iaddn(num), this.negative = 1, 
          this;
          if (this.words[0] -= num, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], 
          this.negative = 1; else for (var i = 0; i < this.length && this.words[i] < 0; i++) this.words[i] += 67108864, 
          this.words[i + 1] -= 1;
          return this.strip();
        }, BN.prototype.addn = function(num) {
          return this.clone().iaddn(num);
        }, BN.prototype.subn = function(num) {
          return this.clone().isubn(num);
        }, BN.prototype.iabs = function() {
          return this.negative = 0, this;
        }, BN.prototype.abs = function() {
          return this.clone().iabs();
        }, BN.prototype._ishlnsubmul = function(num, mul, shift) {
          var i, w, len = num.length + shift;
          this._expand(len);
          var carry = 0;
          for (i = 0; i < num.length; i++) {
            w = (0 | this.words[i + shift]) + carry;
            var right = (0 | num.words[i]) * mul;
            carry = ((w -= 67108863 & right) >> 26) - (right / 67108864 | 0), this.words[i + shift] = 67108863 & w;
          }
          for (;i < this.length - shift; i++) carry = (w = (0 | this.words[i + shift]) + carry) >> 26, 
          this.words[i + shift] = 67108863 & w;
          if (0 === carry) return this.strip();
          for (assert(-1 === carry), carry = 0, i = 0; i < this.length; i++) carry = (w = -(0 | this.words[i]) + carry) >> 26, 
          this.words[i] = 67108863 & w;
          return this.negative = 1, this.strip();
        }, BN.prototype._wordDiv = function(num, mode) {
          var shift = (this.length, num.length), a = this.clone(), b = num, bhi = 0 | b.words[b.length - 1];
          0 !== (shift = 26 - this._countBits(bhi)) && (b = b.ushln(shift), a.iushln(shift), 
          bhi = 0 | b.words[b.length - 1]);
          var q, m = a.length - b.length;
          if ("mod" !== mode) {
            (q = new BN(null)).length = m + 1, q.words = new Array(q.length);
            for (var i = 0; i < q.length; i++) q.words[i] = 0;
          }
          var diff = a.clone()._ishlnsubmul(b, 1, m);
          0 === diff.negative && (a = diff, q && (q.words[m] = 1));
          for (var j = m - 1; j >= 0; j--) {
            var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
            for (qj = Math.min(qj / bhi | 0, 67108863), a._ishlnsubmul(b, qj, j); 0 !== a.negative; ) qj--, 
            a.negative = 0, a._ishlnsubmul(b, 1, j), a.isZero() || (a.negative ^= 1);
            q && (q.words[j] = qj);
          }
          return q && q.strip(), a.strip(), "div" !== mode && 0 !== shift && a.iushrn(shift), 
          {
            div: q || null,
            mod: a
          };
        }, BN.prototype.divmod = function(num, mode, positive) {
          return assert(!num.isZero()), this.isZero() ? {
            div: new BN(0),
            mod: new BN(0)
          } : 0 !== this.negative && 0 === num.negative ? (res = this.neg().divmod(num, mode), 
          "mod" !== mode && (div = res.div.neg()), "div" !== mode && (mod = res.mod.neg(), 
          positive && 0 !== mod.negative && mod.iadd(num)), {
            div,
            mod
          }) : 0 === this.negative && 0 !== num.negative ? (res = this.divmod(num.neg(), mode), 
          "mod" !== mode && (div = res.div.neg()), {
            div,
            mod: res.mod
          }) : 0 != (this.negative & num.negative) ? (res = this.neg().divmod(num.neg(), mode), 
          "div" !== mode && (mod = res.mod.neg(), positive && 0 !== mod.negative && mod.isub(num)), 
          {
            div: res.div,
            mod
          }) : num.length > this.length || this.cmp(num) < 0 ? {
            div: new BN(0),
            mod: this
          } : 1 === num.length ? "div" === mode ? {
            div: this.divn(num.words[0]),
            mod: null
          } : "mod" === mode ? {
            div: null,
            mod: new BN(this.modn(num.words[0]))
          } : {
            div: this.divn(num.words[0]),
            mod: new BN(this.modn(num.words[0]))
          } : this._wordDiv(num, mode);
          var div, mod, res;
        }, BN.prototype.div = function(num) {
          return this.divmod(num, "div", !1).div;
        }, BN.prototype.mod = function(num) {
          return this.divmod(num, "mod", !1).mod;
        }, BN.prototype.umod = function(num) {
          return this.divmod(num, "mod", !0).mod;
        }, BN.prototype.divRound = function(num) {
          var dm = this.divmod(num);
          if (dm.mod.isZero()) return dm.div;
          var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod, half = num.ushrn(1), r2 = num.andln(1), cmp = mod.cmp(half);
          return cmp < 0 || 1 === r2 && 0 === cmp ? dm.div : 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
        }, BN.prototype.modn = function(num) {
          assert(num <= 67108863);
          for (var p = (1 << 26) % num, acc = 0, i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
          return acc;
        }, BN.prototype.idivn = function(num) {
          assert(num <= 67108863);
          for (var carry = 0, i = this.length - 1; i >= 0; i--) {
            var w = (0 | this.words[i]) + 67108864 * carry;
            this.words[i] = w / num | 0, carry = w % num;
          }
          return this.strip();
        }, BN.prototype.divn = function(num) {
          return this.clone().idivn(num);
        }, BN.prototype.egcd = function(p) {
          assert(0 === p.negative), assert(!p.isZero());
          var x = this, y = p.clone();
          x = 0 !== x.negative ? x.umod(p) : x.clone();
          for (var A = new BN(1), B = new BN(0), C = new BN(0), D = new BN(1), g = 0; x.isEven() && y.isEven(); ) x.iushrn(1), 
          y.iushrn(1), ++g;
          for (var yp = y.clone(), xp = x.clone(); !x.isZero(); ) {
            for (var i = 0, im = 1; 0 == (x.words[0] & im) && i < 26; ++i, im <<= 1) ;
            if (i > 0) for (x.iushrn(i); i-- > 0; ) (A.isOdd() || B.isOdd()) && (A.iadd(yp), 
            B.isub(xp)), A.iushrn(1), B.iushrn(1);
            for (var j = 0, jm = 1; 0 == (y.words[0] & jm) && j < 26; ++j, jm <<= 1) ;
            if (j > 0) for (y.iushrn(j); j-- > 0; ) (C.isOdd() || D.isOdd()) && (C.iadd(yp), 
            D.isub(xp)), C.iushrn(1), D.iushrn(1);
            x.cmp(y) >= 0 ? (x.isub(y), A.isub(C), B.isub(D)) : (y.isub(x), C.isub(A), D.isub(B));
          }
          return {
            a: C,
            b: D,
            gcd: y.iushln(g)
          };
        }, BN.prototype._invmp = function(p) {
          assert(0 === p.negative), assert(!p.isZero());
          var a = this, b = p.clone();
          a = 0 !== a.negative ? a.umod(p) : a.clone();
          for (var res, x1 = new BN(1), x2 = new BN(0), delta = b.clone(); a.cmpn(1) > 0 && b.cmpn(1) > 0; ) {
            for (var i = 0, im = 1; 0 == (a.words[0] & im) && i < 26; ++i, im <<= 1) ;
            if (i > 0) for (a.iushrn(i); i-- > 0; ) x1.isOdd() && x1.iadd(delta), x1.iushrn(1);
            for (var j = 0, jm = 1; 0 == (b.words[0] & jm) && j < 26; ++j, jm <<= 1) ;
            if (j > 0) for (b.iushrn(j); j-- > 0; ) x2.isOdd() && x2.iadd(delta), x2.iushrn(1);
            a.cmp(b) >= 0 ? (a.isub(b), x1.isub(x2)) : (b.isub(a), x2.isub(x1));
          }
          return (res = 0 === a.cmpn(1) ? x1 : x2).cmpn(0) < 0 && res.iadd(p), res;
        }, BN.prototype.gcd = function(num) {
          if (this.isZero()) return num.abs();
          if (num.isZero()) return this.abs();
          var a = this.clone(), b = num.clone();
          a.negative = 0, b.negative = 0;
          for (var shift = 0; a.isEven() && b.isEven(); shift++) a.iushrn(1), b.iushrn(1);
          for (;;) {
            for (;a.isEven(); ) a.iushrn(1);
            for (;b.isEven(); ) b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
              var t = a;
              a = b, b = t;
            } else if (0 === r || 0 === b.cmpn(1)) break;
            a.isub(b);
          }
          return b.iushln(shift);
        }, BN.prototype.invm = function(num) {
          return this.egcd(num).a.umod(num);
        }, BN.prototype.isEven = function() {
          return 0 == (1 & this.words[0]);
        }, BN.prototype.isOdd = function() {
          return 1 == (1 & this.words[0]);
        }, BN.prototype.andln = function(num) {
          return this.words[0] & num;
        }, BN.prototype.bincn = function(bit) {
          assert("number" == typeof bit);
          var r = bit % 26, s = (bit - r) / 26, q = 1 << r;
          if (this.length <= s) return this._expand(s + 1), this.words[s] |= q, this;
          for (var carry = q, i = s; 0 !== carry && i < this.length; i++) {
            var w = 0 | this.words[i];
            carry = (w += carry) >>> 26, w &= 67108863, this.words[i] = w;
          }
          return 0 !== carry && (this.words[i] = carry, this.length++), this;
        }, BN.prototype.isZero = function() {
          return 1 === this.length && 0 === this.words[0];
        }, BN.prototype.cmpn = function(num) {
          var res, negative = num < 0;
          if (0 !== this.negative && !negative) return -1;
          if (0 === this.negative && negative) return 1;
          if (this.strip(), this.length > 1) res = 1; else {
            negative && (num = -num), assert(num <= 67108863, "Number is too big");
            var w = 0 | this.words[0];
            res = w === num ? 0 : w < num ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -res : res;
        }, BN.prototype.cmp = function(num) {
          if (0 !== this.negative && 0 === num.negative) return -1;
          if (0 === this.negative && 0 !== num.negative) return 1;
          var res = this.ucmp(num);
          return 0 !== this.negative ? 0 | -res : res;
        }, BN.prototype.ucmp = function(num) {
          if (this.length > num.length) return 1;
          if (this.length < num.length) return -1;
          for (var res = 0, i = this.length - 1; i >= 0; i--) {
            var a = 0 | this.words[i], b = 0 | num.words[i];
            if (a !== b) {
              a < b ? res = -1 : a > b && (res = 1);
              break;
            }
          }
          return res;
        }, BN.prototype.gtn = function(num) {
          return 1 === this.cmpn(num);
        }, BN.prototype.gt = function(num) {
          return 1 === this.cmp(num);
        }, BN.prototype.gten = function(num) {
          return this.cmpn(num) >= 0;
        }, BN.prototype.gte = function(num) {
          return this.cmp(num) >= 0;
        }, BN.prototype.ltn = function(num) {
          return -1 === this.cmpn(num);
        }, BN.prototype.lt = function(num) {
          return -1 === this.cmp(num);
        }, BN.prototype.lten = function(num) {
          return this.cmpn(num) <= 0;
        }, BN.prototype.lte = function(num) {
          return this.cmp(num) <= 0;
        }, BN.prototype.eqn = function(num) {
          return 0 === this.cmpn(num);
        }, BN.prototype.eq = function(num) {
          return 0 === this.cmp(num);
        }, BN.red = function(num) {
          return new Red(num);
        }, BN.prototype.toRed = function(ctx) {
          return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), 
          ctx.convertTo(this)._forceRed(ctx);
        }, BN.prototype.fromRed = function() {
          return assert(this.red, "fromRed works only with numbers in reduction context"), 
          this.red.convertFrom(this);
        }, BN.prototype._forceRed = function(ctx) {
          return this.red = ctx, this;
        }, BN.prototype.forceRed = function(ctx) {
          return assert(!this.red, "Already a number in reduction context"), this._forceRed(ctx);
        }, BN.prototype.redAdd = function(num) {
          return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, num);
        }, BN.prototype.redIAdd = function(num) {
          return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, num);
        }, BN.prototype.redSub = function(num) {
          return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, num);
        }, BN.prototype.redISub = function(num) {
          return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, num);
        }, BN.prototype.redShl = function(num) {
          return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, num);
        }, BN.prototype.redMul = function(num) {
          return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), 
          this.red.mul(this, num);
        }, BN.prototype.redIMul = function(num) {
          return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, num), 
          this.red.imul(this, num);
        }, BN.prototype.redSqr = function() {
          return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), 
          this.red.sqr(this);
        }, BN.prototype.redISqr = function() {
          return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), 
          this.red.isqr(this);
        }, BN.prototype.redSqrt = function() {
          return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), 
          this.red.sqrt(this);
        }, BN.prototype.redInvm = function() {
          return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), 
          this.red.invm(this);
        }, BN.prototype.redNeg = function() {
          return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), 
          this.red.neg(this);
        }, BN.prototype.redPow = function(num) {
          return assert(this.red && !num.red, "redPow(normalNum)"), this.red._verify1(this), 
          this.red.pow(this, num);
        };
        var primes = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function MPrime(name, p) {
          this.name = name, this.p = new BN(p, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), 
          this.tmp = this._tmp();
        }
        function K256() {
          MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }
        function P224() {
          MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }
        function P192() {
          MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }
        function P25519() {
          MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }
        function Red(m) {
          if ("string" == typeof m) {
            var prime = BN._prime(m);
            this.m = prime.p, this.prime = prime;
          } else assert(m.gtn(1), "modulus must be greater than 1"), this.m = m, this.prime = null;
        }
        function Mont(m) {
          Red.call(this, m), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), 
          this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), 
          this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), 
          this.minv = this.r.sub(this.minv);
        }
        MPrime.prototype._tmp = function() {
          var tmp = new BN(null);
          return tmp.words = new Array(Math.ceil(this.n / 13)), tmp;
        }, MPrime.prototype.ireduce = function(num) {
          var rlen, r = num;
          do {
            this.split(r, this.tmp), rlen = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
          } while (rlen > this.n);
          var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
          return 0 === cmp ? (r.words[0] = 0, r.length = 1) : cmp > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), 
          r;
        }, MPrime.prototype.split = function(input, out) {
          input.iushrn(this.n, 0, out);
        }, MPrime.prototype.imulK = function(num) {
          return num.imul(this.k);
        }, inherits(K256, MPrime), K256.prototype.split = function(input, output) {
          for (var outLen = Math.min(input.length, 9), i = 0; i < outLen; i++) output.words[i] = input.words[i];
          if (output.length = outLen, input.length <= 9) return input.words[0] = 0, void (input.length = 1);
          var prev = input.words[9];
          for (output.words[output.length++] = 4194303 & prev, i = 10; i < input.length; i++) {
            var next = 0 | input.words[i];
            input.words[i - 10] = (4194303 & next) << 4 | prev >>> 22, prev = next;
          }
          prev >>>= 22, input.words[i - 10] = prev, 0 === prev && input.length > 10 ? input.length -= 10 : input.length -= 9;
        }, K256.prototype.imulK = function(num) {
          num.words[num.length] = 0, num.words[num.length + 1] = 0, num.length += 2;
          for (var lo = 0, i = 0; i < num.length; i++) {
            var w = 0 | num.words[i];
            lo += 977 * w, num.words[i] = 67108863 & lo, lo = 64 * w + (lo / 67108864 | 0);
          }
          return 0 === num.words[num.length - 1] && (num.length--, 0 === num.words[num.length - 1] && num.length--), 
          num;
        }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function(num) {
          for (var carry = 0, i = 0; i < num.length; i++) {
            var hi = 19 * (0 | num.words[i]) + carry, lo = 67108863 & hi;
            hi >>>= 26, num.words[i] = lo, carry = hi;
          }
          return 0 !== carry && (num.words[num.length++] = carry), num;
        }, BN._prime = function(name) {
          if (primes[name]) return primes[name];
          var prime;
          if ("k256" === name) prime = new K256; else if ("p224" === name) prime = new P224; else if ("p192" === name) prime = new P192; else {
            if ("p25519" !== name) throw new Error("Unknown prime " + name);
            prime = new P25519;
          }
          return primes[name] = prime, prime;
        }, Red.prototype._verify1 = function(a) {
          assert(0 === a.negative, "red works only with positives"), assert(a.red, "red works only with red numbers");
        }, Red.prototype._verify2 = function(a, b) {
          assert(0 == (a.negative | b.negative), "red works only with positives"), assert(a.red && a.red === b.red, "red works only with red numbers");
        }, Red.prototype.imod = function(a) {
          return this.prime ? this.prime.ireduce(a)._forceRed(this) : a.umod(this.m)._forceRed(this);
        }, Red.prototype.neg = function(a) {
          return a.isZero() ? a.clone() : this.m.sub(a)._forceRed(this);
        }, Red.prototype.add = function(a, b) {
          this._verify2(a, b);
          var res = a.add(b);
          return res.cmp(this.m) >= 0 && res.isub(this.m), res._forceRed(this);
        }, Red.prototype.iadd = function(a, b) {
          this._verify2(a, b);
          var res = a.iadd(b);
          return res.cmp(this.m) >= 0 && res.isub(this.m), res;
        }, Red.prototype.sub = function(a, b) {
          this._verify2(a, b);
          var res = a.sub(b);
          return res.cmpn(0) < 0 && res.iadd(this.m), res._forceRed(this);
        }, Red.prototype.isub = function(a, b) {
          this._verify2(a, b);
          var res = a.isub(b);
          return res.cmpn(0) < 0 && res.iadd(this.m), res;
        }, Red.prototype.shl = function(a, num) {
          return this._verify1(a), this.imod(a.ushln(num));
        }, Red.prototype.imul = function(a, b) {
          return this._verify2(a, b), this.imod(a.imul(b));
        }, Red.prototype.mul = function(a, b) {
          return this._verify2(a, b), this.imod(a.mul(b));
        }, Red.prototype.isqr = function(a) {
          return this.imul(a, a.clone());
        }, Red.prototype.sqr = function(a) {
          return this.mul(a, a);
        }, Red.prototype.sqrt = function(a) {
          if (a.isZero()) return a.clone();
          var mod3 = this.m.andln(3);
          if (assert(mod3 % 2 == 1), 3 === mod3) {
            var pow = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow);
          }
          for (var q = this.m.subn(1), s = 0; !q.isZero() && 0 === q.andln(1); ) s++, q.iushrn(1);
          assert(!q.isZero());
          var one = new BN(1).toRed(this), nOne = one.redNeg(), lpow = this.m.subn(1).iushrn(1), z = this.m.bitLength();
          for (z = new BN(2 * z * z).toRed(this); 0 !== this.pow(z, lpow).cmp(nOne); ) z.redIAdd(nOne);
          for (var c = this.pow(z, q), r = this.pow(a, q.addn(1).iushrn(1)), t = this.pow(a, q), m = s; 0 !== t.cmp(one); ) {
            for (var tmp = t, i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b), c = b.redSqr(), t = t.redMul(c), m = i;
          }
          return r;
        }, Red.prototype.invm = function(a) {
          var inv = a._invmp(this.m);
          return 0 !== inv.negative ? (inv.negative = 0, this.imod(inv).redNeg()) : this.imod(inv);
        }, Red.prototype.pow = function(a, num) {
          if (num.isZero()) return new BN(1).toRed(this);
          if (0 === num.cmpn(1)) return a.clone();
          var wnd = new Array(16);
          wnd[0] = new BN(1).toRed(this), wnd[1] = a;
          for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
          var res = wnd[0], current = 0, currentLen = 0, start = num.bitLength() % 26;
          for (0 === start && (start = 26), i = num.length - 1; i >= 0; i--) {
            for (var word = num.words[i], j = start - 1; j >= 0; j--) {
              var bit = word >> j & 1;
              res !== wnd[0] && (res = this.sqr(res)), 0 !== bit || 0 !== current ? (current <<= 1, 
              current |= bit, (4 === ++currentLen || 0 === i && 0 === j) && (res = this.mul(res, wnd[current]), 
              currentLen = 0, current = 0)) : currentLen = 0;
            }
            start = 26;
          }
          return res;
        }, Red.prototype.convertTo = function(num) {
          var r = num.umod(this.m);
          return r === num ? r.clone() : r;
        }, Red.prototype.convertFrom = function(num) {
          var res = num.clone();
          return res.red = null, res;
        }, BN.mont = function(num) {
          return new Mont(num);
        }, inherits(Mont, Red), Mont.prototype.convertTo = function(num) {
          return this.imod(num.ushln(this.shift));
        }, Mont.prototype.convertFrom = function(num) {
          var r = this.imod(num.mul(this.rinv));
          return r.red = null, r;
        }, Mont.prototype.imul = function(a, b) {
          if (a.isZero() || b.isZero()) return a.words[0] = 0, a.length = 1, a;
          var t = a.imul(b), c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = t.isub(c).iushrn(this.shift), res = u;
          return u.cmp(this.m) >= 0 ? res = u.isub(this.m) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), 
          res._forceRed(this);
        }, Mont.prototype.mul = function(a, b) {
          if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
          var t = a.mul(b), c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = t.isub(c).iushrn(this.shift), res = u;
          return u.cmp(this.m) >= 0 ? res = u.isub(this.m) : u.cmpn(0) < 0 && (res = u.iadd(this.m)), 
          res._forceRed(this);
        }, Mont.prototype.invm = function(a) {
          return this.imod(a._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(module, commonjsGlobal);
    })), _permanentCensorErrors = !1, _censorErrors = !1, LogLevels = {
      debug: 1,
      default: 2,
      info: 2,
      warning: 3,
      error: 4,
      off: 5
    }, _globalLogger = null;
    var LogLevel, ErrorCode, _normalizeError = function() {
      try {
        var missing = [];
        if ([ "NFD", "NFC", "NFKD", "NFKC" ].forEach((function(form) {
          try {
            if ("test" !== "test".normalize(form)) throw new Error("bad normalize");
          } catch (error) {
            missing.push(form);
          }
        })), missing.length) throw new Error("missing " + missing.join(", "));
        if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation");
      } catch (error) {
        return error.message;
      }
      return null;
    }();
    !function(LogLevel) {
      LogLevel.DEBUG = "DEBUG", LogLevel.INFO = "INFO", LogLevel.WARNING = "WARNING", 
      LogLevel.ERROR = "ERROR", LogLevel.OFF = "OFF";
    }(LogLevel || (LogLevel = {})), function(ErrorCode) {
      ErrorCode.UNKNOWN_ERROR = "UNKNOWN_ERROR", ErrorCode.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", 
      ErrorCode.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", ErrorCode.NETWORK_ERROR = "NETWORK_ERROR", 
      ErrorCode.SERVER_ERROR = "SERVER_ERROR", ErrorCode.TIMEOUT = "TIMEOUT", ErrorCode.BUFFER_OVERRUN = "BUFFER_OVERRUN", 
      ErrorCode.NUMERIC_FAULT = "NUMERIC_FAULT", ErrorCode.MISSING_NEW = "MISSING_NEW", 
      ErrorCode.INVALID_ARGUMENT = "INVALID_ARGUMENT", ErrorCode.MISSING_ARGUMENT = "MISSING_ARGUMENT", 
      ErrorCode.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", ErrorCode.CALL_EXCEPTION = "CALL_EXCEPTION", 
      ErrorCode.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", ErrorCode.NONCE_EXPIRED = "NONCE_EXPIRED", 
      ErrorCode.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", ErrorCode.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", 
      ErrorCode.TRANSACTION_REPLACED = "TRANSACTION_REPLACED";
    }(ErrorCode || (ErrorCode = {}));
    var Logger = function() {
      function Logger(version) {
        _classCallCheck(this, Logger), Object.defineProperty(this, "version", {
          enumerable: !0,
          value: version,
          writable: !1
        });
      }
      return _createClass(Logger, [ {
        key: "_log",
        value: function(logLevel, args) {
          var level = logLevel.toLowerCase();
          null == LogLevels[level] && this.throwArgumentError("invalid log level name", "logLevel", logLevel);
        }
      }, {
        key: "debug",
        value: function() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
          this._log(Logger.levels.DEBUG, args);
        }
      }, {
        key: "info",
        value: function() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
          this._log(Logger.levels.INFO, args);
        }
      }, {
        key: "warn",
        value: function() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) args[_key3] = arguments[_key3];
          this._log(Logger.levels.WARNING, args);
        }
      }, {
        key: "makeError",
        value: function(message, code, params) {
          if (_censorErrors) return this.makeError("censored error", code, {});
          code || (code = Logger.errors.UNKNOWN_ERROR), params || (params = {});
          var messageDetails = [];
          Object.keys(params).forEach((function(key) {
            try {
              messageDetails.push(key + "=" + JSON.stringify(params[key]));
            } catch (error) {
              messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
            }
          })), messageDetails.push("code=".concat(code)), messageDetails.push("version=".concat(this.version));
          var reason = message;
          messageDetails.length && (message += " (" + messageDetails.join(", ") + ")");
          var error = new Error(message);
          return error.reason = reason, error.code = code, Object.keys(params).forEach((function(key) {
            error[key] = params[key];
          })), error;
        }
      }, {
        key: "throwError",
        value: function(message, code, params) {
          throw this.makeError(message, code, params);
        }
      }, {
        key: "throwArgumentError",
        value: function(message, name, value) {
          return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
            argument: name,
            value
          });
        }
      }, {
        key: "assert",
        value: function(condition, message, code, params) {
          condition || this.throwError(message, code, params);
        }
      }, {
        key: "assertArgument",
        value: function(condition, message, name, value) {
          condition || this.throwArgumentError(message, name, value);
        }
      }, {
        key: "checkNormalize",
        value: function(message) {
          null == message && (message = "platform missing String.prototype.normalize"), _normalizeError && this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "String.prototype.normalize",
            form: _normalizeError
          });
        }
      }, {
        key: "checkSafeUint53",
        value: function(value, message) {
          "number" == typeof value && (null == message && (message = "value not safe"), (value < 0 || value >= 9007199254740991) && this.throwError(message, Logger.errors.NUMERIC_FAULT, {
            operation: "checkSafeInteger",
            fault: "out-of-safe-range",
            value
          }), value % 1 && this.throwError(message, Logger.errors.NUMERIC_FAULT, {
            operation: "checkSafeInteger",
            fault: "non-integer",
            value
          }));
        }
      }, {
        key: "checkArgumentCount",
        value: function(count, expectedCount, message) {
          message = message ? ": " + message : "", count < expectedCount && this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
            count,
            expectedCount
          }), count > expectedCount && this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
            count,
            expectedCount
          });
        }
      }, {
        key: "checkNew",
        value: function(target, kind) {
          target !== Object && null != target || this.throwError("missing new", Logger.errors.MISSING_NEW, {
            name: kind.name
          });
        }
      }, {
        key: "checkAbstract",
        value: function(target, kind) {
          target === kind ? this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, {
            name: target.name,
            operation: "new"
          }) : target !== Object && null != target || this.throwError("missing new", Logger.errors.MISSING_NEW, {
            name: kind.name
          });
        }
      } ], [ {
        key: "globalLogger",
        value: function() {
          return _globalLogger || (_globalLogger = new Logger("logger/5.2.0")), _globalLogger;
        }
      }, {
        key: "setCensorship",
        value: function(censorship, permanent) {
          if (!censorship && permanent && this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "setCensorship"
          }), _permanentCensorErrors) {
            if (!censorship) return;
            this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
              operation: "setCensorship"
            });
          }
          _censorErrors = !!censorship, _permanentCensorErrors = !!permanent;
        }
      }, {
        key: "setLogLevel",
        value: function(logLevel) {
          var level = LogLevels[logLevel.toLowerCase()];
          null != level ? level : Logger.globalLogger().warn("invalid log level - " + logLevel);
        }
      }, {
        key: "from",
        value: function(version) {
          return new Logger(version);
        }
      } ]), Logger;
    }();
    Logger.errors = ErrorCode, Logger.levels = LogLevel;
    var logger = new Logger("bytes/5.2.0");
    function isHexable(value) {
      return !!value.toHexString;
    }
    function addSlice(array) {
      return array.slice || (array.slice = function() {
        var args = Array.prototype.slice.call(arguments);
        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
      }), array;
    }
    function isBytesLike(value) {
      return isHexString(value) && !(value.length % 2) || isBytes(value);
    }
    function isBytes(value) {
      if (null == value) return !1;
      if (value.constructor === Uint8Array) return !0;
      if ("string" == typeof value) return !1;
      if (null == value.length) return !1;
      for (var i = 0; i < value.length; i++) {
        var v = value[i];
        if ("number" != typeof v || v < 0 || v >= 256 || v % 1) return !1;
      }
      return !0;
    }
    function arrayify(value, options) {
      if (options || (options = {}), "number" == typeof value) {
        logger.checkSafeUint53(value, "invalid arrayify value");
        for (var result = []; value; ) result.unshift(255 & value), value = parseInt(String(value / 256));
        return 0 === result.length && result.push(0), addSlice(new Uint8Array(result));
      }
      if (options.allowMissingPrefix && "string" == typeof value && "0x" !== value.substring(0, 2) && (value = "0x" + value), 
      isHexable(value) && (value = value.toHexString()), isHexString(value)) {
        var _hex = value.substring(2);
        _hex.length % 2 && ("left" === options.hexPad ? _hex = "0x0" + _hex.substring(2) : "right" === options.hexPad ? _hex += "0" : logger.throwArgumentError("hex data is odd-length", "value", value));
        for (var _result = [], i = 0; i < _hex.length; i += 2) _result.push(parseInt(_hex.substring(i, i + 2), 16));
        return addSlice(new Uint8Array(_result));
      }
      return isBytes(value) ? addSlice(new Uint8Array(value)) : logger.throwArgumentError("invalid arrayify value", "value", value);
    }
    function concat(items) {
      var objects = items.map((function(item) {
        return arrayify(item);
      })), length = objects.reduce((function(accum, item) {
        return accum + item.length;
      }), 0), result = new Uint8Array(length);
      return objects.reduce((function(offset, object) {
        return result.set(object, offset), offset + object.length;
      }), 0), addSlice(result);
    }
    function stripZeros(value) {
      var result = arrayify(value);
      if (0 === result.length) return result;
      for (var start = 0; start < result.length && 0 === result[start]; ) start++;
      return start && (result = result.slice(start)), result;
    }
    function zeroPad(value, length) {
      (value = arrayify(value)).length > length && logger.throwArgumentError("value out of range", "value", arguments[0]);
      var result = new Uint8Array(length);
      return result.set(value, length - value.length), addSlice(result);
    }
    function isHexString(value, length) {
      return !("string" != typeof value || !value.match(/^0x[0-9A-Fa-f]*$/)) && (!length || value.length === 2 + 2 * length);
    }
    var HexCharacters = "0123456789abcdef";
    function hexlify(value, options) {
      if (options || (options = {}), "number" == typeof value) {
        logger.checkSafeUint53(value, "invalid hexlify value");
        for (var _hex2 = ""; value; ) _hex2 = HexCharacters[15 & value] + _hex2, value = Math.floor(value / 16);
        return _hex2.length ? (_hex2.length % 2 && (_hex2 = "0" + _hex2), "0x" + _hex2) : "0x00";
      }
      if ("bigint" == typeof value) return (value = value.toString(16)).length % 2 ? "0x0" + value : "0x" + value;
      if (options.allowMissingPrefix && "string" == typeof value && "0x" !== value.substring(0, 2) && (value = "0x" + value), 
      isHexable(value)) return value.toHexString();
      if (isHexString(value)) return value.length % 2 && ("left" === options.hexPad ? value = "0x0" + value.substring(2) : "right" === options.hexPad ? value += "0" : logger.throwArgumentError("hex data is odd-length", "value", value)), 
      value.toLowerCase();
      if (isBytes(value)) {
        for (var result = "0x", i = 0; i < value.length; i++) {
          var v = value[i];
          result += HexCharacters[(240 & v) >> 4] + HexCharacters[15 & v];
        }
        return result;
      }
      return logger.throwArgumentError("invalid hexlify value", "value", value);
    }
    function hexDataLength(data) {
      if ("string" != typeof data) data = hexlify(data); else if (!isHexString(data) || data.length % 2) return null;
      return (data.length - 2) / 2;
    }
    function hexDataSlice(data, offset, endOffset) {
      return "string" != typeof data ? data = hexlify(data) : (!isHexString(data) || data.length % 2) && logger.throwArgumentError("invalid hexData", "value", data), 
      offset = 2 + 2 * offset, null != endOffset ? "0x" + data.substring(offset, 2 + 2 * endOffset) : "0x" + data.substring(offset);
    }
    function hexConcat(items) {
      var result = "0x";
      return items.forEach((function(item) {
        result += hexlify(item).substring(2);
      })), result;
    }
    function hexValue(value) {
      var trimmed = hexStripZeros(hexlify(value, {
        hexPad: "left"
      }));
      return "0x" === trimmed ? "0x0" : trimmed;
    }
    function hexStripZeros(value) {
      "string" != typeof value && (value = hexlify(value)), isHexString(value) || logger.throwArgumentError("invalid hex string", "value", value), 
      value = value.substring(2);
      for (var offset = 0; offset < value.length && "0" === value[offset]; ) offset++;
      return "0x" + value.substring(offset);
    }
    function hexZeroPad(value, length) {
      for ("string" != typeof value ? value = hexlify(value) : isHexString(value) || logger.throwArgumentError("invalid hex string", "value", value), 
      value.length > 2 * length + 2 && logger.throwArgumentError("value out of range", "value", arguments[1]); value.length < 2 * length + 2; ) value = "0x0" + value.substring(2);
      return value;
    }
    function splitSignature(signature) {
      var result = {
        r: "0x",
        s: "0x",
        _vs: "0x",
        recoveryParam: 0,
        v: 0
      };
      if (isBytesLike(signature)) {
        var bytes = arrayify(signature);
        65 !== bytes.length && logger.throwArgumentError("invalid signature string; must be 65 bytes", "signature", signature), 
        result.r = hexlify(bytes.slice(0, 32)), result.s = hexlify(bytes.slice(32, 64)), 
        result.v = bytes[64], result.v < 27 && (0 === result.v || 1 === result.v ? result.v += 27 : logger.throwArgumentError("signature invalid v byte", "signature", signature)), 
        result.recoveryParam = 1 - result.v % 2, result.recoveryParam && (bytes[32] |= 128), 
        result._vs = hexlify(bytes.slice(32, 64));
      } else {
        if (result.r = signature.r, result.s = signature.s, result.v = signature.v, result.recoveryParam = signature.recoveryParam, 
        result._vs = signature._vs, null != result._vs) {
          var _vs2 = zeroPad(arrayify(result._vs), 32);
          result._vs = hexlify(_vs2);
          var recoveryParam = _vs2[0] >= 128 ? 1 : 0;
          null == result.recoveryParam ? result.recoveryParam = recoveryParam : result.recoveryParam !== recoveryParam && logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature), 
          _vs2[0] &= 127;
          var _s = hexlify(_vs2);
          null == result.s ? result.s = _s : result.s !== _s && logger.throwArgumentError("signature v mismatch _vs", "signature", signature);
        }
        null == result.recoveryParam ? null == result.v ? logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature) : 0 === result.v || 1 === result.v ? result.recoveryParam = result.v : result.recoveryParam = 1 - result.v % 2 : null == result.v ? result.v = 27 + result.recoveryParam : result.recoveryParam !== 1 - result.v % 2 && logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature), 
        null != result.r && isHexString(result.r) ? result.r = hexZeroPad(result.r, 32) : logger.throwArgumentError("signature missing or invalid r", "signature", signature), 
        null != result.s && isHexString(result.s) ? result.s = hexZeroPad(result.s, 32) : logger.throwArgumentError("signature missing or invalid s", "signature", signature);
        var vs = arrayify(result.s);
        vs[0] >= 128 && logger.throwArgumentError("signature s out of range", "signature", signature), 
        result.recoveryParam && (vs[0] |= 128);
        var _vs = hexlify(vs);
        result._vs && (isHexString(result._vs) || logger.throwArgumentError("signature invalid _vs", "signature", signature), 
        result._vs = hexZeroPad(result._vs, 32)), null == result._vs ? result._vs = _vs : result._vs !== _vs && logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
      }
      return result;
    }
    function joinSignature(signature) {
      return hexlify(concat([ (signature = splitSignature(signature)).r, signature.s, signature.recoveryParam ? "0x1c" : "0x1b" ]));
    }
    var BN = bn.BN, logger$1 = new Logger("bignumber/5.2.0"), _constructorGuard = {};
    var _warnedToStringRadix = !1, BigNumber = function() {
      function BigNumber(constructorGuard, hex) {
        _classCallCheck(this, BigNumber), logger$1.checkNew(this instanceof BigNumber ? this.constructor : void 0, BigNumber), 
        constructorGuard !== _constructorGuard && logger$1.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "new (BigNumber)"
        }), this._hex = hex, this._isBigNumber = !0, Object.freeze(this);
      }
      return _createClass(BigNumber, [ {
        key: "fromTwos",
        value: function(value) {
          return toBigNumber(toBN(this).fromTwos(value));
        }
      }, {
        key: "toTwos",
        value: function(value) {
          return toBigNumber(toBN(this).toTwos(value));
        }
      }, {
        key: "abs",
        value: function() {
          return "-" === this._hex[0] ? BigNumber.from(this._hex.substring(1)) : this;
        }
      }, {
        key: "add",
        value: function(other) {
          return toBigNumber(toBN(this).add(toBN(other)));
        }
      }, {
        key: "sub",
        value: function(other) {
          return toBigNumber(toBN(this).sub(toBN(other)));
        }
      }, {
        key: "div",
        value: function(other) {
          return BigNumber.from(other).isZero() && throwFault("division by zero", "div"), 
          toBigNumber(toBN(this).div(toBN(other)));
        }
      }, {
        key: "mul",
        value: function(other) {
          return toBigNumber(toBN(this).mul(toBN(other)));
        }
      }, {
        key: "mod",
        value: function(other) {
          var value = toBN(other);
          return value.isNeg() && throwFault("cannot modulo negative values", "mod"), toBigNumber(toBN(this).umod(value));
        }
      }, {
        key: "pow",
        value: function(other) {
          var value = toBN(other);
          return value.isNeg() && throwFault("cannot raise to negative values", "pow"), toBigNumber(toBN(this).pow(value));
        }
      }, {
        key: "and",
        value: function(other) {
          var value = toBN(other);
          return (this.isNegative() || value.isNeg()) && throwFault("cannot 'and' negative values", "and"), 
          toBigNumber(toBN(this).and(value));
        }
      }, {
        key: "or",
        value: function(other) {
          var value = toBN(other);
          return (this.isNegative() || value.isNeg()) && throwFault("cannot 'or' negative values", "or"), 
          toBigNumber(toBN(this).or(value));
        }
      }, {
        key: "xor",
        value: function(other) {
          var value = toBN(other);
          return (this.isNegative() || value.isNeg()) && throwFault("cannot 'xor' negative values", "xor"), 
          toBigNumber(toBN(this).xor(value));
        }
      }, {
        key: "mask",
        value: function(value) {
          return (this.isNegative() || value < 0) && throwFault("cannot mask negative values", "mask"), 
          toBigNumber(toBN(this).maskn(value));
        }
      }, {
        key: "shl",
        value: function(value) {
          return (this.isNegative() || value < 0) && throwFault("cannot shift negative values", "shl"), 
          toBigNumber(toBN(this).shln(value));
        }
      }, {
        key: "shr",
        value: function(value) {
          return (this.isNegative() || value < 0) && throwFault("cannot shift negative values", "shr"), 
          toBigNumber(toBN(this).shrn(value));
        }
      }, {
        key: "eq",
        value: function(other) {
          return toBN(this).eq(toBN(other));
        }
      }, {
        key: "lt",
        value: function(other) {
          return toBN(this).lt(toBN(other));
        }
      }, {
        key: "lte",
        value: function(other) {
          return toBN(this).lte(toBN(other));
        }
      }, {
        key: "gt",
        value: function(other) {
          return toBN(this).gt(toBN(other));
        }
      }, {
        key: "gte",
        value: function(other) {
          return toBN(this).gte(toBN(other));
        }
      }, {
        key: "isNegative",
        value: function() {
          return "-" === this._hex[0];
        }
      }, {
        key: "isZero",
        value: function() {
          return toBN(this).isZero();
        }
      }, {
        key: "toNumber",
        value: function() {
          try {
            return toBN(this).toNumber();
          } catch (error) {
            throwFault("overflow", "toNumber", this.toString());
          }
          return null;
        }
      }, {
        key: "toBigInt",
        value: function() {
          try {
            return BigInt(this.toString());
          } catch (e) {}
          return logger$1.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
            value: this.toString()
          });
        }
      }, {
        key: "toString",
        value: function() {
          return arguments.length > 0 && (10 === arguments[0] ? _warnedToStringRadix || (_warnedToStringRadix = !0, 
          logger$1.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? logger$1.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {}) : logger$1.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {})), 
          toBN(this).toString(10);
        }
      }, {
        key: "toHexString",
        value: function() {
          return this._hex;
        }
      }, {
        key: "toJSON",
        value: function(key) {
          return {
            type: "BigNumber",
            hex: this.toHexString()
          };
        }
      } ], [ {
        key: "from",
        value: function(value) {
          if (value instanceof BigNumber) return value;
          if ("string" == typeof value) return value.match(/^-?0x[0-9a-f]+$/i) ? new BigNumber(_constructorGuard, toHex(value)) : value.match(/^-?[0-9]+$/) ? new BigNumber(_constructorGuard, toHex(new BN(value))) : logger$1.throwArgumentError("invalid BigNumber string", "value", value);
          if ("number" == typeof value) return value % 1 && throwFault("underflow", "BigNumber.from", value), 
          (value >= 9007199254740991 || value <= -9007199254740991) && throwFault("overflow", "BigNumber.from", value), 
          BigNumber.from(String(value));
          var anyValue = value;
          if ("bigint" == typeof anyValue) return BigNumber.from(anyValue.toString());
          if (isBytes(anyValue)) return BigNumber.from(hexlify(anyValue));
          if (anyValue) if (anyValue.toHexString) {
            var _hex3 = anyValue.toHexString();
            if ("string" == typeof _hex3) return BigNumber.from(_hex3);
          } else {
            var _hex4 = anyValue._hex;
            if (null == _hex4 && "BigNumber" === anyValue.type && (_hex4 = anyValue.hex), "string" == typeof _hex4 && (isHexString(_hex4) || "-" === _hex4[0] && isHexString(_hex4.substring(1)))) return BigNumber.from(_hex4);
          }
          return logger$1.throwArgumentError("invalid BigNumber value", "value", value);
        }
      }, {
        key: "isBigNumber",
        value: function(value) {
          return !(!value || !value._isBigNumber);
        }
      } ]), BigNumber;
    }();
    function toHex(value) {
      if ("string" != typeof value) return toHex(value.toString(16));
      if ("-" === value[0]) return "-" === (value = value.substring(1))[0] && logger$1.throwArgumentError("invalid hex", "value", value), 
      "0x00" === (value = toHex(value)) ? value : "-" + value;
      if ("0x" !== value.substring(0, 2) && (value = "0x" + value), "0x" === value) return "0x00";
      for (value.length % 2 && (value = "0x0" + value.substring(2)); value.length > 4 && "0x00" === value.substring(0, 4); ) value = "0x" + value.substring(4);
      return value;
    }
    function toBigNumber(value) {
      return BigNumber.from(toHex(value));
    }
    function toBN(value) {
      var hex = BigNumber.from(value).toHexString();
      return "-" === hex[0] ? new BN("-" + hex.substring(3), 16) : new BN(hex.substring(2), 16);
    }
    function throwFault(fault, operation, value) {
      var params = {
        fault,
        operation
      };
      return null != value && (params.value = value), logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
    }
    var logger$2 = new Logger("bignumber/5.2.0"), _constructorGuard$1 = {}, Zero = BigNumber.from(0), NegativeOne = BigNumber.from(-1);
    function throwFault$1(message, fault, operation, value) {
      var params = {
        fault,
        operation
      };
      return void 0 !== value && (params.value = value), logger$2.throwError(message, Logger.errors.NUMERIC_FAULT, params);
    }
    for (var zeros = "0"; zeros.length < 256; ) zeros += zeros;
    function getMultiplier(decimals) {
      if ("number" != typeof decimals) try {
        decimals = BigNumber.from(decimals).toNumber();
      } catch (e) {}
      return "number" == typeof decimals && decimals >= 0 && decimals <= 256 && !(decimals % 1) ? "1" + zeros.substring(0, decimals) : logger$2.throwArgumentError("invalid decimal size", "decimals", decimals);
    }
    function formatFixed(value, decimals) {
      null == decimals && (decimals = 0);
      var multiplier = getMultiplier(decimals), negative = (value = BigNumber.from(value)).lt(Zero);
      negative && (value = value.mul(NegativeOne));
      for (var fraction = value.mod(multiplier).toString(); fraction.length < multiplier.length - 1; ) fraction = "0" + fraction;
      fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
      var whole = value.div(multiplier).toString();
      return value = 1 === multiplier.length ? whole : whole + "." + fraction, negative && (value = "-" + value), 
      value;
    }
    function parseFixed(value, decimals) {
      null == decimals && (decimals = 0);
      var multiplier = getMultiplier(decimals);
      "string" == typeof value && value.match(/^-?[0-9.,]+$/) || logger$2.throwArgumentError("invalid decimal value", "value", value);
      var negative = "-" === value.substring(0, 1);
      negative && (value = value.substring(1)), "." === value && logger$2.throwArgumentError("missing value", "value", value);
      var comps = value.split(".");
      comps.length > 2 && logger$2.throwArgumentError("too many decimal points", "value", value);
      var whole = comps[0], fraction = comps[1];
      for (whole || (whole = "0"), fraction || (fraction = "0"), fraction.replace(/^([0-9]*?)(0*)$/, (function(all, sig, zeros) {
        return sig;
      })).length > multiplier.length - 1 && throwFault$1("fractional component exceeds decimals", "underflow", "parseFixed"); fraction.length < multiplier.length - 1; ) fraction += "0";
      var wholeValue = BigNumber.from(whole), fractionValue = BigNumber.from(fraction), wei = wholeValue.mul(multiplier).add(fractionValue);
      return negative && (wei = wei.mul(NegativeOne)), wei;
    }
    var FixedFormat = function() {
      function FixedFormat(constructorGuard, signed, width, decimals) {
        _classCallCheck(this, FixedFormat), constructorGuard !== _constructorGuard$1 && logger$2.throwError("cannot use FixedFormat constructor; use FixedFormat.from", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "new FixedFormat"
        }), this.signed = signed, this.width = width, this.decimals = decimals, this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals), 
        this._multiplier = getMultiplier(decimals), Object.freeze(this);
      }
      return _createClass(FixedFormat, null, [ {
        key: "from",
        value: function(value) {
          if (value instanceof FixedFormat) return value;
          "number" == typeof value && (value = "fixed128x".concat(value));
          var signed = !0, width = 128, decimals = 18;
          if ("string" == typeof value) if ("fixed" === value) ; else if ("ufixed" === value) signed = !1; else {
            var match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
            match || logger$2.throwArgumentError("invalid fixed format", "format", value), signed = "u" !== match[1], 
            width = parseInt(match[2]), decimals = parseInt(match[3]);
          } else if (value) {
            var check = function(key, type, defaultValue) {
              return null == value[key] ? defaultValue : (_typeof(value[key]) !== type && logger$2.throwArgumentError("invalid fixed format (" + key + " not " + type + ")", "format." + key, value[key]), 
              value[key]);
            };
            signed = check("signed", "boolean", signed), width = check("width", "number", width), 
            decimals = check("decimals", "number", decimals);
          }
          return width % 8 && logger$2.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width), 
          decimals > 80 && logger$2.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals), 
          new FixedFormat(_constructorGuard$1, signed, width, decimals);
        }
      } ]), FixedFormat;
    }(), FixedNumber = function() {
      function FixedNumber(constructorGuard, hex, value, format) {
        _classCallCheck(this, FixedNumber), logger$2.checkNew(this instanceof FixedNumber ? this.constructor : void 0, FixedNumber), 
        constructorGuard !== _constructorGuard$1 && logger$2.throwError("cannot use FixedNumber constructor; use FixedNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "new FixedFormat"
        }), this.format = format, this._hex = hex, this._value = value, this._isFixedNumber = !0, 
        Object.freeze(this);
      }
      return _createClass(FixedNumber, [ {
        key: "_checkFormat",
        value: function(other) {
          this.format.name !== other.format.name && logger$2.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
        }
      }, {
        key: "addUnsafe",
        value: function(other) {
          this._checkFormat(other);
          var a = parseFixed(this._value, this.format.decimals), b = parseFixed(other._value, other.format.decimals);
          return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
        }
      }, {
        key: "subUnsafe",
        value: function(other) {
          this._checkFormat(other);
          var a = parseFixed(this._value, this.format.decimals), b = parseFixed(other._value, other.format.decimals);
          return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
        }
      }, {
        key: "mulUnsafe",
        value: function(other) {
          this._checkFormat(other);
          var a = parseFixed(this._value, this.format.decimals), b = parseFixed(other._value, other.format.decimals);
          return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
        }
      }, {
        key: "divUnsafe",
        value: function(other) {
          this._checkFormat(other);
          var a = parseFixed(this._value, this.format.decimals), b = parseFixed(other._value, other.format.decimals);
          return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
        }
      }, {
        key: "floor",
        value: function() {
          var comps = this.toString().split(".");
          1 === comps.length && comps.push("0");
          var result = FixedNumber.from(comps[0], this.format), hasFraction = !comps[1].match(/^(0*)$/);
          return this.isNegative() && hasFraction && (result = result.subUnsafe(ONE)), result;
        }
      }, {
        key: "ceiling",
        value: function() {
          var comps = this.toString().split(".");
          1 === comps.length && comps.push("0");
          var result = FixedNumber.from(comps[0], this.format), hasFraction = !comps[1].match(/^(0*)$/);
          return !this.isNegative() && hasFraction && (result = result.addUnsafe(ONE)), result;
        }
      }, {
        key: "round",
        value: function(decimals) {
          null == decimals && (decimals = 0);
          var comps = this.toString().split(".");
          if (1 === comps.length && comps.push("0"), (decimals < 0 || decimals > 80 || decimals % 1) && logger$2.throwArgumentError("invalid decimal count", "decimals", decimals), 
          comps[1].length <= decimals) return this;
          var factor = FixedNumber.from("1" + zeros.substring(0, decimals));
          return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);
        }
      }, {
        key: "isZero",
        value: function() {
          return "0.0" === this._value || "0" === this._value;
        }
      }, {
        key: "isNegative",
        value: function() {
          return "-" === this._value[0];
        }
      }, {
        key: "toString",
        value: function() {
          return this._value;
        }
      }, {
        key: "toHexString",
        value: function(width) {
          return null == width ? this._hex : (width % 8 && logger$2.throwArgumentError("invalid byte width", "width", width), 
          hexZeroPad(BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString(), width / 8));
        }
      }, {
        key: "toUnsafeFloat",
        value: function() {
          return parseFloat(this.toString());
        }
      }, {
        key: "toFormat",
        value: function(format) {
          return FixedNumber.fromString(this._value, format);
        }
      } ], [ {
        key: "fromValue",
        value: function(value, decimals, format) {
          return null != format || null == decimals || function(value) {
            return null != value && (BigNumber.isBigNumber(value) || "number" == typeof value && value % 1 == 0 || "string" == typeof value && !!value.match(/^-?[0-9]+$/) || isHexString(value) || "bigint" == typeof value || isBytes(value));
          }(decimals) || (format = decimals, decimals = null), null == decimals && (decimals = 0), 
          null == format && (format = "fixed"), FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
        }
      }, {
        key: "fromString",
        value: function(value, format) {
          null == format && (format = "fixed");
          var fixedFormat = FixedFormat.from(format), numeric = parseFixed(value, fixedFormat.decimals);
          !fixedFormat.signed && numeric.lt(Zero) && throwFault$1("unsigned value cannot be negative", "overflow", "value", value);
          var hex = null;
          hex = fixedFormat.signed ? numeric.toTwos(fixedFormat.width).toHexString() : hexZeroPad(hex = numeric.toHexString(), fixedFormat.width / 8);
          var decimal = formatFixed(numeric, fixedFormat.decimals);
          return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);
        }
      }, {
        key: "fromBytes",
        value: function(value, format) {
          null == format && (format = "fixed");
          var fixedFormat = FixedFormat.from(format);
          if (arrayify(value).length > fixedFormat.width / 8) throw new Error("overflow");
          var numeric = BigNumber.from(value);
          fixedFormat.signed && (numeric = numeric.fromTwos(fixedFormat.width));
          var hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString(), decimal = formatFixed(numeric, fixedFormat.decimals);
          return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);
        }
      }, {
        key: "from",
        value: function(value, format) {
          if ("string" == typeof value) return FixedNumber.fromString(value, format);
          if (isBytes(value)) return FixedNumber.fromBytes(value, format);
          try {
            return FixedNumber.fromValue(value, 0, format);
          } catch (error) {
            if (error.code !== Logger.errors.INVALID_ARGUMENT) throw error;
          }
          return logger$2.throwArgumentError("invalid FixedNumber value", "value", value);
        }
      }, {
        key: "isFixedNumber",
        value: function(value) {
          return !(!value || !value._isFixedNumber);
        }
      } ]), FixedNumber;
    }(), ONE = FixedNumber.from(1), BUMP = FixedNumber.from("0.5"), __awaiter = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$3 = new Logger("properties/5.2.0");
    function defineReadOnly(object, name, value) {
      Object.defineProperty(object, name, {
        enumerable: !0,
        value,
        writable: !1
      });
    }
    function getStatic(ctor, key) {
      for (var i = 0; i < 32; i++) {
        if (ctor[key]) return ctor[key];
        if (!ctor.prototype || "object" !== _typeof(ctor.prototype)) break;
        ctor = Object.getPrototypeOf(ctor.prototype).constructor;
      }
      return null;
    }
    function resolveProperties(object) {
      return __awaiter(this, void 0, void 0, regeneratorRuntime.mark((function _callee() {
        var promises, results;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return promises = Object.keys(object).map((function(key) {
              var value = object[key];
              return Promise.resolve(value).then((function(v) {
                return {
                  key,
                  value: v
                };
              }));
            })), _context.next = 3, Promise.all(promises);

           case 3:
            return results = _context.sent, _context.abrupt("return", results.reduce((function(accum, result) {
              return accum[result.key] = result.value, accum;
            }), {}));

           case 5:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
    }
    function checkProperties(object, properties) {
      object && "object" === _typeof(object) || logger$3.throwArgumentError("invalid object", "object", object), 
      Object.keys(object).forEach((function(key) {
        properties[key] || logger$3.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
      }));
    }
    function shallowCopy(object) {
      var result = {};
      for (var _key4 in object) result[_key4] = object[_key4];
      return result;
    }
    var opaque = {
      bigint: !0,
      boolean: !0,
      function: !0,
      number: !0,
      string: !0
    };
    function _isFrozen(object) {
      if (null == object || opaque[_typeof(object)]) return !0;
      if (Array.isArray(object) || "object" === _typeof(object)) {
        if (!Object.isFrozen(object)) return !1;
        for (var keys = Object.keys(object), i = 0; i < keys.length; i++) if (!_isFrozen(object[keys[i]])) return !1;
        return !0;
      }
      return logger$3.throwArgumentError("Cannot deepCopy ".concat(_typeof(object)), "object", object);
    }
    function _deepCopy(object) {
      if (_isFrozen(object)) return object;
      if (Array.isArray(object)) return Object.freeze(object.map((function(item) {
        return deepCopy(item);
      })));
      if ("object" === _typeof(object)) {
        var result = {};
        for (var _key5 in object) {
          var value = object[_key5];
          void 0 !== value && defineReadOnly(result, _key5, deepCopy(value));
        }
        return result;
      }
      return logger$3.throwArgumentError("Cannot deepCopy ".concat(_typeof(object)), "object", object);
    }
    function deepCopy(object) {
      return _deepCopy(object);
    }
    var Description = function Description(info) {
      for (var _key6 in _classCallCheck(this, Description), info) this[_key6] = deepCopy(info[_key6]);
    }, logger$4 = new Logger("abi/5.2.0"), _constructorGuard$2 = {}, ModifiersBytes = {
      calldata: !0,
      memory: !0,
      storage: !0
    }, ModifiersNest = {
      calldata: !0,
      memory: !0
    };
    function checkModifier(type, name) {
      if ("bytes" === type || "string" === type) {
        if (ModifiersBytes[name]) return !0;
      } else if ("address" === type) {
        if ("payable" === name) return !0;
      } else if ((type.indexOf("[") >= 0 || "tuple" === type) && ModifiersNest[name]) return !0;
      return (ModifiersBytes[name] || "payable" === name) && logger$4.throwArgumentError("invalid modifier", "name", name), 
      !1;
    }
    function populate(object, params) {
      for (var _key7 in params) defineReadOnly(object, _key7, params[_key7]);
    }
    var FormatTypes = Object.freeze({
      sighash: "sighash",
      minimal: "minimal",
      full: "full",
      json: "json"
    }), paramTypeArray = new RegExp(/^(.*)\[([0-9]*)\]$/), ParamType = function() {
      function ParamType(constructorGuard, params) {
        _classCallCheck(this, ParamType), constructorGuard !== _constructorGuard$2 && logger$4.throwError("use fromString", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "new ParamType()"
        }), populate(this, params);
        var match = this.type.match(paramTypeArray);
        populate(this, match ? {
          arrayLength: parseInt(match[2] || "-1"),
          arrayChildren: ParamType.fromObject({
            type: match[1],
            components: this.components
          }),
          baseType: "array"
        } : {
          arrayLength: null,
          arrayChildren: null,
          baseType: null != this.components ? "tuple" : this.type
        }), this._isParamType = !0, Object.freeze(this);
      }
      return _createClass(ParamType, [ {
        key: "format",
        value: function(_format) {
          if (_format || (_format = FormatTypes.sighash), FormatTypes[_format] || logger$4.throwArgumentError("invalid format type", "format", _format), 
          _format === FormatTypes.json) {
            var _result2 = {
              type: "tuple" === this.baseType ? "tuple" : this.type,
              name: this.name || void 0
            };
            return "boolean" == typeof this.indexed && (_result2.indexed = this.indexed), this.components && (_result2.components = this.components.map((function(comp) {
              return JSON.parse(comp.format(_format));
            }))), JSON.stringify(_result2);
          }
          var result = "";
          return "array" === this.baseType ? (result += this.arrayChildren.format(_format), 
          result += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : "tuple" === this.baseType ? (_format !== FormatTypes.sighash && (result += this.type), 
          result += "(" + this.components.map((function(comp) {
            return comp.format(_format);
          })).join(_format === FormatTypes.full ? ", " : ",") + ")") : result += this.type, 
          _format !== FormatTypes.sighash && (!0 === this.indexed && (result += " indexed"), 
          _format === FormatTypes.full && this.name && (result += " " + this.name)), result;
        }
      } ], [ {
        key: "from",
        value: function(value, allowIndexed) {
          return "string" == typeof value ? ParamType.fromString(value, allowIndexed) : ParamType.fromObject(value);
        }
      }, {
        key: "fromObject",
        value: function(value) {
          return ParamType.isParamType(value) ? value : new ParamType(_constructorGuard$2, {
            name: value.name || null,
            type: verifyType(value.type),
            indexed: null == value.indexed ? null : !!value.indexed,
            components: value.components ? value.components.map(ParamType.fromObject) : null
          });
        }
      }, {
        key: "fromString",
        value: function(value, allowIndexed) {
          return node = function(param, allowIndexed) {
            var originalParam = param;
            function throwError(i) {
              logger$4.throwArgumentError("unexpected character at position ".concat(i), "param", param);
            }
            function newNode(parent) {
              var node = {
                type: "",
                name: "",
                parent,
                state: {
                  allowType: !0
                }
              };
              return allowIndexed && (node.indexed = !1), node;
            }
            param = param.replace(/\s/g, " ");
            for (var parent = {
              type: "",
              name: "",
              state: {
                allowType: !0
              }
            }, node = parent, i = 0; i < param.length; i++) {
              var c = param[i];
              switch (c) {
               case "(":
                node.state.allowType && "" === node.type ? node.type = "tuple" : node.state.allowParams || throwError(i), 
                node.state.allowType = !1, node.type = verifyType(node.type), node.components = [ newNode(node) ], 
                node = node.components[0];
                break;

               case ")":
                delete node.state, "indexed" === node.name && (allowIndexed || throwError(i), node.indexed = !0, 
                node.name = ""), checkModifier(node.type, node.name) && (node.name = ""), node.type = verifyType(node.type);
                var child = node;
                (node = node.parent) || throwError(i), delete child.parent, node.state.allowParams = !1, 
                node.state.allowName = !0, node.state.allowArray = !0;
                break;

               case ",":
                delete node.state, "indexed" === node.name && (allowIndexed || throwError(i), node.indexed = !0, 
                node.name = ""), checkModifier(node.type, node.name) && (node.name = ""), node.type = verifyType(node.type);
                var sibling = newNode(node.parent);
                node.parent.components.push(sibling), delete node.parent, node = sibling;
                break;

               case " ":
                node.state.allowType && "" !== node.type && (node.type = verifyType(node.type), 
                delete node.state.allowType, node.state.allowName = !0, node.state.allowParams = !0), 
                node.state.allowName && "" !== node.name && ("indexed" === node.name ? (allowIndexed || throwError(i), 
                node.indexed && throwError(i), node.indexed = !0, node.name = "") : checkModifier(node.type, node.name) ? node.name = "" : node.state.allowName = !1);
                break;

               case "[":
                node.state.allowArray || throwError(i), node.type += c, node.state.allowArray = !1, 
                node.state.allowName = !1, node.state.readArray = !0;
                break;

               case "]":
                node.state.readArray || throwError(i), node.type += c, node.state.readArray = !1, 
                node.state.allowArray = !0, node.state.allowName = !0;
                break;

               default:
                node.state.allowType ? (node.type += c, node.state.allowParams = !0, node.state.allowArray = !0) : node.state.allowName ? (node.name += c, 
                delete node.state.allowArray) : node.state.readArray ? node.type += c : throwError(i);
              }
            }
            return node.parent && logger$4.throwArgumentError("unexpected eof", "param", param), 
            delete parent.state, "indexed" === node.name ? (allowIndexed || throwError(originalParam.length - 7), 
            node.indexed && throwError(originalParam.length - 7), node.indexed = !0, node.name = "") : checkModifier(node.type, node.name) && (node.name = ""), 
            parent.type = verifyType(parent.type), parent;
          }(value, !!allowIndexed), ParamType.fromObject({
            name: node.name,
            type: node.type,
            indexed: node.indexed,
            components: node.components
          });
          var node;
        }
      }, {
        key: "isParamType",
        value: function(value) {
          return !(null == value || !value._isParamType);
        }
      } ]), ParamType;
    }();
    function parseParams(value, allowIndex) {
      return function(value) {
        value = value.trim();
        for (var result = [], accum = "", depth = 0, offset = 0; offset < value.length; offset++) {
          var c = value[offset];
          "," === c && 0 === depth ? (result.push(accum), accum = "") : (accum += c, "(" === c ? depth++ : ")" === c && -1 === --depth && logger$4.throwArgumentError("unbalanced parenthesis", "value", value));
        }
        accum && result.push(accum);
        return result;
      }(value).map((function(param) {
        return ParamType.fromString(param, allowIndex);
      }));
    }
    var Fragment = function() {
      function Fragment(constructorGuard, params) {
        _classCallCheck(this, Fragment), constructorGuard !== _constructorGuard$2 && logger$4.throwError("use a static from method", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "new Fragment()"
        }), populate(this, params), this._isFragment = !0, Object.freeze(this);
      }
      return _createClass(Fragment, null, [ {
        key: "from",
        value: function(value) {
          return Fragment.isFragment(value) ? value : "string" == typeof value ? Fragment.fromString(value) : Fragment.fromObject(value);
        }
      }, {
        key: "fromObject",
        value: function(value) {
          if (Fragment.isFragment(value)) return value;
          switch (value.type) {
           case "function":
            return FunctionFragment.fromObject(value);

           case "event":
            return EventFragment.fromObject(value);

           case "constructor":
            return ConstructorFragment.fromObject(value);

           case "error":
            return ErrorFragment.fromObject(value);

           case "fallback":
           case "receive":
            return null;
          }
          return logger$4.throwArgumentError("invalid fragment object", "value", value);
        }
      }, {
        key: "fromString",
        value: function(value) {
          return "event" === (value = (value = (value = value.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? EventFragment.fromString(value.substring(5).trim()) : "function" === value.split(" ")[0] ? FunctionFragment.fromString(value.substring(8).trim()) : "constructor" === value.split("(")[0].trim() ? ConstructorFragment.fromString(value.trim()) : "error" === value.split(" ")[0] ? ErrorFragment.fromString(value.substring(5).trim()) : logger$4.throwArgumentError("unsupported fragment", "value", value);
        }
      }, {
        key: "isFragment",
        value: function(value) {
          return !(!value || !value._isFragment);
        }
      } ]), Fragment;
    }(), EventFragment = function(_Fragment) {
      _inherits(EventFragment, _Fragment);
      var _super2 = _createSuper(EventFragment);
      function EventFragment() {
        return _classCallCheck(this, EventFragment), _super2.apply(this, arguments);
      }
      return _createClass(EventFragment, [ {
        key: "format",
        value: function(_format2) {
          if (_format2 || (_format2 = FormatTypes.sighash), FormatTypes[_format2] || logger$4.throwArgumentError("invalid format type", "format", _format2), 
          _format2 === FormatTypes.json) return JSON.stringify({
            type: "event",
            anonymous: this.anonymous,
            name: this.name,
            inputs: this.inputs.map((function(input) {
              return JSON.parse(input.format(_format2));
            }))
          });
          var result = "";
          return _format2 !== FormatTypes.sighash && (result += "event "), result += this.name + "(" + this.inputs.map((function(input) {
            return input.format(_format2);
          })).join(_format2 === FormatTypes.full ? ", " : ",") + ") ", _format2 !== FormatTypes.sighash && this.anonymous && (result += "anonymous "), 
          result.trim();
        }
      } ], [ {
        key: "from",
        value: function(value) {
          return "string" == typeof value ? EventFragment.fromString(value) : EventFragment.fromObject(value);
        }
      }, {
        key: "fromObject",
        value: function(value) {
          if (EventFragment.isEventFragment(value)) return value;
          "event" !== value.type && logger$4.throwArgumentError("invalid event object", "value", value);
          var params = {
            name: verifyIdentifier(value.name),
            anonymous: value.anonymous,
            inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
            type: "event"
          };
          return new EventFragment(_constructorGuard$2, params);
        }
      }, {
        key: "fromString",
        value: function(value) {
          var match = value.match(regexParen);
          match || logger$4.throwArgumentError("invalid event string", "value", value);
          var anonymous = !1;
          return match[3].split(" ").forEach((function(modifier) {
            switch (modifier.trim()) {
             case "anonymous":
              anonymous = !0;
              break;

             case "":
              break;

             default:
              logger$4.warn("unknown modifier: " + modifier);
            }
          })), EventFragment.fromObject({
            name: match[1].trim(),
            anonymous,
            inputs: parseParams(match[2], !0),
            type: "event"
          });
        }
      }, {
        key: "isEventFragment",
        value: function(value) {
          return value && value._isFragment && "event" === value.type;
        }
      } ]), EventFragment;
    }(Fragment);
    function parseGas(value, params) {
      params.gas = null;
      var comps = value.split("@");
      return 1 !== comps.length ? (comps.length > 2 && logger$4.throwArgumentError("invalid human-readable ABI signature", "value", value), 
      comps[1].match(/^[0-9]+$/) || logger$4.throwArgumentError("invalid human-readable ABI signature gas", "value", value), 
      params.gas = BigNumber.from(comps[1]), comps[0]) : value;
    }
    function parseModifiers(value, params) {
      params.constant = !1, params.payable = !1, params.stateMutability = "nonpayable", 
      value.split(" ").forEach((function(modifier) {
        switch (modifier.trim()) {
         case "constant":
          params.constant = !0;
          break;

         case "payable":
          params.payable = !0, params.stateMutability = "payable";
          break;

         case "nonpayable":
          params.payable = !1, params.stateMutability = "nonpayable";
          break;

         case "pure":
          params.constant = !0, params.stateMutability = "pure";
          break;

         case "view":
          params.constant = !0, params.stateMutability = "view";
        }
      }));
    }
    function verifyState(value) {
      var result = {
        constant: !1,
        payable: !0,
        stateMutability: "payable"
      };
      return null != value.stateMutability ? (result.stateMutability = value.stateMutability, 
      result.constant = "view" === result.stateMutability || "pure" === result.stateMutability, 
      null != value.constant && !!value.constant !== result.constant && logger$4.throwArgumentError("cannot have constant function with mutability " + result.stateMutability, "value", value), 
      result.payable = "payable" === result.stateMutability, null != value.payable && !!value.payable !== result.payable && logger$4.throwArgumentError("cannot have payable function with mutability " + result.stateMutability, "value", value)) : null != value.payable ? (result.payable = !!value.payable, 
      null != value.constant || result.payable || "constructor" === value.type || logger$4.throwArgumentError("unable to determine stateMutability", "value", value), 
      result.constant = !!value.constant, result.constant ? result.stateMutability = "view" : result.stateMutability = result.payable ? "payable" : "nonpayable", 
      result.payable && result.constant && logger$4.throwArgumentError("cannot have constant payable function", "value", value)) : null != value.constant ? (result.constant = !!value.constant, 
      result.payable = !result.constant, result.stateMutability = result.constant ? "view" : "payable") : "constructor" !== value.type && logger$4.throwArgumentError("unable to determine stateMutability", "value", value), 
      result;
    }
    var ConstructorFragment = function(_Fragment2) {
      _inherits(ConstructorFragment, _Fragment2);
      var _super3 = _createSuper(ConstructorFragment);
      function ConstructorFragment() {
        return _classCallCheck(this, ConstructorFragment), _super3.apply(this, arguments);
      }
      return _createClass(ConstructorFragment, [ {
        key: "format",
        value: function(_format3) {
          if (_format3 || (_format3 = FormatTypes.sighash), FormatTypes[_format3] || logger$4.throwArgumentError("invalid format type", "format", _format3), 
          _format3 === FormatTypes.json) return JSON.stringify({
            type: "constructor",
            stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
            payable: this.payable,
            gas: this.gas ? this.gas.toNumber() : void 0,
            inputs: this.inputs.map((function(input) {
              return JSON.parse(input.format(_format3));
            }))
          });
          _format3 === FormatTypes.sighash && logger$4.throwError("cannot format a constructor for sighash", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "format(sighash)"
          });
          var result = "constructor(" + this.inputs.map((function(input) {
            return input.format(_format3);
          })).join(_format3 === FormatTypes.full ? ", " : ",") + ") ";
          return this.stateMutability && "nonpayable" !== this.stateMutability && (result += this.stateMutability + " "), 
          result.trim();
        }
      } ], [ {
        key: "from",
        value: function(value) {
          return "string" == typeof value ? ConstructorFragment.fromString(value) : ConstructorFragment.fromObject(value);
        }
      }, {
        key: "fromObject",
        value: function(value) {
          if (ConstructorFragment.isConstructorFragment(value)) return value;
          "constructor" !== value.type && logger$4.throwArgumentError("invalid constructor object", "value", value);
          var state = verifyState(value);
          state.constant && logger$4.throwArgumentError("constructor cannot be constant", "value", value);
          var params = {
            name: null,
            type: value.type,
            inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: value.gas ? BigNumber.from(value.gas) : null
          };
          return new ConstructorFragment(_constructorGuard$2, params);
        }
      }, {
        key: "fromString",
        value: function(value) {
          var params = {
            type: "constructor"
          }, parens = (value = parseGas(value, params)).match(regexParen);
          return parens && "constructor" === parens[1].trim() || logger$4.throwArgumentError("invalid constructor string", "value", value), 
          params.inputs = parseParams(parens[2].trim(), !1), parseModifiers(parens[3].trim(), params), 
          ConstructorFragment.fromObject(params);
        }
      }, {
        key: "isConstructorFragment",
        value: function(value) {
          return value && value._isFragment && "constructor" === value.type;
        }
      } ]), ConstructorFragment;
    }(Fragment), FunctionFragment = function(_ConstructorFragment) {
      _inherits(FunctionFragment, _ConstructorFragment);
      var _super4 = _createSuper(FunctionFragment);
      function FunctionFragment() {
        return _classCallCheck(this, FunctionFragment), _super4.apply(this, arguments);
      }
      return _createClass(FunctionFragment, [ {
        key: "format",
        value: function(_format4) {
          if (_format4 || (_format4 = FormatTypes.sighash), FormatTypes[_format4] || logger$4.throwArgumentError("invalid format type", "format", _format4), 
          _format4 === FormatTypes.json) return JSON.stringify({
            type: "function",
            name: this.name,
            constant: this.constant,
            stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
            payable: this.payable,
            gas: this.gas ? this.gas.toNumber() : void 0,
            inputs: this.inputs.map((function(input) {
              return JSON.parse(input.format(_format4));
            })),
            outputs: this.outputs.map((function(output) {
              return JSON.parse(output.format(_format4));
            }))
          });
          var result = "";
          return _format4 !== FormatTypes.sighash && (result += "function "), result += this.name + "(" + this.inputs.map((function(input) {
            return input.format(_format4);
          })).join(_format4 === FormatTypes.full ? ", " : ",") + ") ", _format4 !== FormatTypes.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (result += this.stateMutability + " ") : this.constant && (result += "view "), 
          this.outputs && this.outputs.length && (result += "returns (" + this.outputs.map((function(output) {
            return output.format(_format4);
          })).join(", ") + ") "), null != this.gas && (result += "@" + this.gas.toString() + " ")), 
          result.trim();
        }
      } ], [ {
        key: "from",
        value: function(value) {
          return "string" == typeof value ? FunctionFragment.fromString(value) : FunctionFragment.fromObject(value);
        }
      }, {
        key: "fromObject",
        value: function(value) {
          if (FunctionFragment.isFunctionFragment(value)) return value;
          "function" !== value.type && logger$4.throwArgumentError("invalid function object", "value", value);
          var state = verifyState(value), params = {
            type: value.type,
            name: verifyIdentifier(value.name),
            constant: state.constant,
            inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
            outputs: value.outputs ? value.outputs.map(ParamType.fromObject) : [],
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: value.gas ? BigNumber.from(value.gas) : null
          };
          return new FunctionFragment(_constructorGuard$2, params);
        }
      }, {
        key: "fromString",
        value: function(value) {
          var params = {
            type: "function"
          }, comps = (value = parseGas(value, params)).split(" returns ");
          comps.length > 2 && logger$4.throwArgumentError("invalid function string", "value", value);
          var parens = comps[0].match(regexParen);
          if (parens || logger$4.throwArgumentError("invalid function signature", "value", value), 
          params.name = parens[1].trim(), params.name && verifyIdentifier(params.name), params.inputs = parseParams(parens[2], !1), 
          parseModifiers(parens[3].trim(), params), comps.length > 1) {
            var returns = comps[1].match(regexParen);
            "" == returns[1].trim() && "" == returns[3].trim() || logger$4.throwArgumentError("unexpected tokens", "value", value), 
            params.outputs = parseParams(returns[2], !1);
          } else params.outputs = [];
          return FunctionFragment.fromObject(params);
        }
      }, {
        key: "isFunctionFragment",
        value: function(value) {
          return value && value._isFragment && "function" === value.type;
        }
      } ]), FunctionFragment;
    }(ConstructorFragment);
    function checkForbidden(fragment) {
      var sig = fragment.format();
      return "Error(string)" !== sig && "Panic(uint256)" !== sig || logger$4.throwArgumentError("cannot specify user defined ".concat(sig, " error"), "fragment", fragment), 
      fragment;
    }
    var ErrorFragment = function(_Fragment3) {
      _inherits(ErrorFragment, _Fragment3);
      var _super5 = _createSuper(ErrorFragment);
      function ErrorFragment() {
        return _classCallCheck(this, ErrorFragment), _super5.apply(this, arguments);
      }
      return _createClass(ErrorFragment, [ {
        key: "format",
        value: function(_format5) {
          if (_format5 || (_format5 = FormatTypes.sighash), FormatTypes[_format5] || logger$4.throwArgumentError("invalid format type", "format", _format5), 
          _format5 === FormatTypes.json) return JSON.stringify({
            type: "error",
            name: this.name,
            inputs: this.inputs.map((function(input) {
              return JSON.parse(input.format(_format5));
            }))
          });
          var result = "";
          return _format5 !== FormatTypes.sighash && (result += "error "), (result += this.name + "(" + this.inputs.map((function(input) {
            return input.format(_format5);
          })).join(_format5 === FormatTypes.full ? ", " : ",") + ") ").trim();
        }
      } ], [ {
        key: "from",
        value: function(value) {
          return "string" == typeof value ? ErrorFragment.fromString(value) : ErrorFragment.fromObject(value);
        }
      }, {
        key: "fromObject",
        value: function(value) {
          if (ErrorFragment.isErrorFragment(value)) return value;
          "error" !== value.type && logger$4.throwArgumentError("invalid error object", "value", value);
          var params = {
            type: value.type,
            name: verifyIdentifier(value.name),
            inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : []
          };
          return checkForbidden(new ErrorFragment(_constructorGuard$2, params));
        }
      }, {
        key: "fromString",
        value: function(value) {
          var params = {
            type: "error"
          }, parens = value.match(regexParen);
          return parens || logger$4.throwArgumentError("invalid error signature", "value", value), 
          params.name = parens[1].trim(), params.name && verifyIdentifier(params.name), params.inputs = parseParams(parens[2], !1), 
          checkForbidden(ErrorFragment.fromObject(params));
        }
      }, {
        key: "isErrorFragment",
        value: function(value) {
          return value && value._isFragment && "error" === value.type;
        }
      } ]), ErrorFragment;
    }(Fragment);
    function verifyType(type) {
      return type.match(/^uint($|[^1-9])/) ? type = "uint256" + type.substring(4) : type.match(/^int($|[^1-9])/) && (type = "int256" + type.substring(3)), 
      type;
    }
    var regexIdentifier = new RegExp("^[A-Za-z_][A-Za-z0-9_]*$");
    function verifyIdentifier(value) {
      return value && value.match(regexIdentifier) || logger$4.throwArgumentError('invalid identifier "'.concat(value, '"'), "value", value), 
      value;
    }
    var regexParen = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
    var logger$5 = new Logger("abi/5.2.0");
    function checkResultErrors(result) {
      var errors = [];
      return function checkErrors(path, object) {
        if (Array.isArray(object)) for (var _key8 in object) {
          var childPath = path.slice();
          childPath.push(_key8);
          try {
            checkErrors(childPath, object[_key8]);
          } catch (error) {
            errors.push({
              path: childPath,
              error
            });
          }
        }
      }([], result), errors;
    }
    var Coder = function() {
      function Coder(name, type, localName, dynamic) {
        _classCallCheck(this, Coder), this.name = name, this.type = type, this.localName = localName, 
        this.dynamic = dynamic;
      }
      return _createClass(Coder, [ {
        key: "_throwError",
        value: function(message, value) {
          logger$5.throwArgumentError(message, this.localName, value);
        }
      } ]), Coder;
    }(), Writer = function() {
      function Writer(wordSize) {
        _classCallCheck(this, Writer), defineReadOnly(this, "wordSize", wordSize || 32), 
        this._data = [], this._dataLength = 0, this._padding = new Uint8Array(wordSize);
      }
      return _createClass(Writer, [ {
        key: "data",
        get: function() {
          return hexConcat(this._data);
        }
      }, {
        key: "length",
        get: function() {
          return this._dataLength;
        }
      }, {
        key: "_writeData",
        value: function(data) {
          return this._data.push(data), this._dataLength += data.length, data.length;
        }
      }, {
        key: "appendWriter",
        value: function(writer) {
          return this._writeData(concat(writer._data));
        }
      }, {
        key: "writeBytes",
        value: function(value) {
          var bytes = arrayify(value), paddingOffset = bytes.length % this.wordSize;
          return paddingOffset && (bytes = concat([ bytes, this._padding.slice(paddingOffset) ])), 
          this._writeData(bytes);
        }
      }, {
        key: "_getValue",
        value: function(value) {
          var bytes = arrayify(BigNumber.from(value));
          return bytes.length > this.wordSize && logger$5.throwError("value out-of-bounds", Logger.errors.BUFFER_OVERRUN, {
            length: this.wordSize,
            offset: bytes.length
          }), bytes.length % this.wordSize && (bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ])), 
          bytes;
        }
      }, {
        key: "writeValue",
        value: function(value) {
          return this._writeData(this._getValue(value));
        }
      }, {
        key: "writeUpdatableValue",
        value: function() {
          var _this = this, offset = this._data.length;
          return this._data.push(this._padding), this._dataLength += this.wordSize, function(value) {
            _this._data[offset] = _this._getValue(value);
          };
        }
      } ]), Writer;
    }(), Reader = function() {
      function Reader(data, wordSize, coerceFunc, allowLoose) {
        _classCallCheck(this, Reader), defineReadOnly(this, "_data", arrayify(data)), defineReadOnly(this, "wordSize", wordSize || 32), 
        defineReadOnly(this, "_coerceFunc", coerceFunc), defineReadOnly(this, "allowLoose", allowLoose), 
        this._offset = 0;
      }
      return _createClass(Reader, [ {
        key: "data",
        get: function() {
          return hexlify(this._data);
        }
      }, {
        key: "consumed",
        get: function() {
          return this._offset;
        }
      }, {
        key: "coerce",
        value: function(name, value) {
          return this._coerceFunc ? this._coerceFunc(name, value) : Reader.coerce(name, value);
        }
      }, {
        key: "_peekBytes",
        value: function(offset, length, loose) {
          var alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;
          return this._offset + alignedLength > this._data.length && (this.allowLoose && loose && this._offset + length <= this._data.length ? alignedLength = length : logger$5.throwError("data out-of-bounds", Logger.errors.BUFFER_OVERRUN, {
            length: this._data.length,
            offset: this._offset + alignedLength
          })), this._data.slice(this._offset, this._offset + alignedLength);
        }
      }, {
        key: "subReader",
        value: function(offset) {
          return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);
        }
      }, {
        key: "readBytes",
        value: function(length, loose) {
          var bytes = this._peekBytes(0, length, !!loose);
          return this._offset += bytes.length, bytes.slice(0, length);
        }
      }, {
        key: "readValue",
        value: function() {
          return BigNumber.from(this.readBytes(this.wordSize));
        }
      } ], [ {
        key: "coerce",
        value: function(name, value) {
          var match = name.match("^u?int([0-9]+)$");
          return match && parseInt(match[1]) <= 48 && (value = value.toNumber()), value;
        }
      } ]), Reader;
    }(), sha3 = createCommonjsModule((function(module) {
      !function() {
        var root = "object" === ("undefined" == typeof window ? "undefined" : _typeof(window)) ? window : {};
        !root.JS_SHA3_NO_NODE_JS && "object" === (void 0 === process ? "undefined" : _typeof(process)) && process.versions && process.versions.node && (root = commonjsGlobal);
        for (var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && module.exports, HEX_CHARS = "0123456789abcdef".split(""), SHIFT = [ 0, 8, 16, 24 ], RC = [ 1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648 ], BITS = [ 224, 256, 384, 512 ], OUTPUT_TYPES = [ "hex", "buffer", "arrayBuffer", "array" ], createOutputMethod = function(bits, padding, outputType) {
          return function(message) {
            return new Keccak(bits, padding, bits).update(message)[outputType]();
          };
        }, createShakeOutputMethod = function(bits, padding, outputType) {
          return function(message, outputBits) {
            return new Keccak(bits, padding, outputBits).update(message)[outputType]();
          };
        }, createMethod = function(bits, padding) {
          var method = createOutputMethod(bits, padding, "hex");
          method.create = function() {
            return new Keccak(bits, padding, bits);
          }, method.update = function(message) {
            return method.create().update(message);
          };
          for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
            var type = OUTPUT_TYPES[i];
            method[type] = createOutputMethod(bits, padding, type);
          }
          return method;
        }, algorithms = [ {
          name: "keccak",
          padding: [ 1, 256, 65536, 16777216 ],
          bits: BITS,
          createMethod
        }, {
          name: "sha3",
          padding: [ 6, 1536, 393216, 100663296 ],
          bits: BITS,
          createMethod
        }, {
          name: "shake",
          padding: [ 31, 7936, 2031616, 520093696 ],
          bits: [ 128, 256 ],
          createMethod: function(bits, padding) {
            var method = createShakeOutputMethod(bits, padding, "hex");
            method.create = function(outputBits) {
              return new Keccak(bits, padding, outputBits);
            }, method.update = function(message, outputBits) {
              return method.create(outputBits).update(message);
            };
            for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
              var type = OUTPUT_TYPES[i];
              method[type] = createShakeOutputMethod(bits, padding, type);
            }
            return method;
          }
        } ], methods = {}, methodNames = [], i = 0; i < algorithms.length; ++i) for (var algorithm = algorithms[i], bits = algorithm.bits, j = 0; j < bits.length; ++j) {
          var methodName = algorithm.name + "_" + bits[j];
          methodNames.push(methodName), methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
        }
        function Keccak(bits, padding, outputBits) {
          this.blocks = [], this.s = [], this.padding = padding, this.outputBits = outputBits, 
          this.reset = !0, this.block = 0, this.start = 0, this.blockCount = 1600 - (bits << 1) >> 5, 
          this.byteCount = this.blockCount << 2, this.outputBlocks = outputBits >> 5, this.extraBytes = (31 & outputBits) >> 3;
          for (var i = 0; i < 50; ++i) this.s[i] = 0;
        }
        Keccak.prototype.update = function(message) {
          var notString = "string" != typeof message;
          notString && message.constructor === ArrayBuffer && (message = new Uint8Array(message));
          for (var i, code, length = message.length, blocks = this.blocks, byteCount = this.byteCount, blockCount = this.blockCount, index = 0, s = this.s; index < length; ) {
            if (this.reset) for (this.reset = !1, blocks[0] = this.block, i = 1; i < blockCount + 1; ++i) blocks[i] = 0;
            if (notString) for (i = this.start; index < length && i < byteCount; ++index) blocks[i >> 2] |= message[index] << SHIFT[3 & i++]; else for (i = this.start; index < length && i < byteCount; ++index) (code = message.charCodeAt(index)) < 128 ? blocks[i >> 2] |= code << SHIFT[3 & i++] : code < 2048 ? (blocks[i >> 2] |= (192 | code >> 6) << SHIFT[3 & i++], 
            blocks[i >> 2] |= (128 | 63 & code) << SHIFT[3 & i++]) : code < 55296 || code >= 57344 ? (blocks[i >> 2] |= (224 | code >> 12) << SHIFT[3 & i++], 
            blocks[i >> 2] |= (128 | code >> 6 & 63) << SHIFT[3 & i++], blocks[i >> 2] |= (128 | 63 & code) << SHIFT[3 & i++]) : (code = 65536 + ((1023 & code) << 10 | 1023 & message.charCodeAt(++index)), 
            blocks[i >> 2] |= (240 | code >> 18) << SHIFT[3 & i++], blocks[i >> 2] |= (128 | code >> 12 & 63) << SHIFT[3 & i++], 
            blocks[i >> 2] |= (128 | code >> 6 & 63) << SHIFT[3 & i++], blocks[i >> 2] |= (128 | 63 & code) << SHIFT[3 & i++]);
            if (this.lastByteIndex = i, i >= byteCount) {
              for (this.start = i - byteCount, this.block = blocks[blockCount], i = 0; i < blockCount; ++i) s[i] ^= blocks[i];
              f(s), this.reset = !0;
            } else this.start = i;
          }
          return this;
        }, Keccak.prototype.finalize = function() {
          var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
          if (blocks[i >> 2] |= this.padding[3 & i], this.lastByteIndex === this.byteCount) for (blocks[0] = blocks[blockCount], 
          i = 1; i < blockCount + 1; ++i) blocks[i] = 0;
          for (blocks[blockCount - 1] |= 2147483648, i = 0; i < blockCount; ++i) s[i] ^= blocks[i];
          f(s);
        }, Keccak.prototype.toString = Keccak.prototype.hex = function() {
          this.finalize();
          for (var block, blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0, hex = ""; j < outputBlocks; ) {
            for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) block = s[i], hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[15 & block] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
            j % blockCount == 0 && (f(s), i = 0);
          }
          return extraBytes && (block = s[i], extraBytes > 0 && (hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[15 & block]), 
          extraBytes > 1 && (hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15]), 
          extraBytes > 2 && (hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15])), 
          hex;
        }, Keccak.prototype.arrayBuffer = function() {
          this.finalize();
          var buffer, blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0, bytes = this.outputBits >> 3;
          buffer = extraBytes ? new ArrayBuffer(outputBlocks + 1 << 2) : new ArrayBuffer(bytes);
          for (var array = new Uint32Array(buffer); j < outputBlocks; ) {
            for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) array[j] = s[i];
            j % blockCount == 0 && f(s);
          }
          return extraBytes && (array[i] = s[i], buffer = buffer.slice(0, bytes)), buffer;
        }, Keccak.prototype.buffer = Keccak.prototype.arrayBuffer, Keccak.prototype.digest = Keccak.prototype.array = function() {
          this.finalize();
          for (var offset, block, blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i = 0, j = 0, array = []; j < outputBlocks; ) {
            for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) offset = j << 2, block = s[i], 
            array[offset] = 255 & block, array[offset + 1] = block >> 8 & 255, array[offset + 2] = block >> 16 & 255, 
            array[offset + 3] = block >> 24 & 255;
            j % blockCount == 0 && f(s);
          }
          return extraBytes && (offset = j << 2, block = s[i], extraBytes > 0 && (array[offset] = 255 & block), 
          extraBytes > 1 && (array[offset + 1] = block >> 8 & 255), extraBytes > 2 && (array[offset + 2] = block >> 16 & 255)), 
          array;
        };
        var f = function(s) {
          var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
          for (n = 0; n < 48; n += 2) c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40], c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41], 
          c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42], c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43], 
          c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44], c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45], 
          c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46], c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47], 
          h = (c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]) ^ (c2 << 1 | c3 >>> 31), l = (c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]) ^ (c3 << 1 | c2 >>> 31), 
          s[0] ^= h, s[1] ^= l, s[10] ^= h, s[11] ^= l, s[20] ^= h, s[21] ^= l, s[30] ^= h, 
          s[31] ^= l, s[40] ^= h, s[41] ^= l, h = c0 ^ (c4 << 1 | c5 >>> 31), l = c1 ^ (c5 << 1 | c4 >>> 31), 
          s[2] ^= h, s[3] ^= l, s[12] ^= h, s[13] ^= l, s[22] ^= h, s[23] ^= l, s[32] ^= h, 
          s[33] ^= l, s[42] ^= h, s[43] ^= l, h = c2 ^ (c6 << 1 | c7 >>> 31), l = c3 ^ (c7 << 1 | c6 >>> 31), 
          s[4] ^= h, s[5] ^= l, s[14] ^= h, s[15] ^= l, s[24] ^= h, s[25] ^= l, s[34] ^= h, 
          s[35] ^= l, s[44] ^= h, s[45] ^= l, h = c4 ^ (c8 << 1 | c9 >>> 31), l = c5 ^ (c9 << 1 | c8 >>> 31), 
          s[6] ^= h, s[7] ^= l, s[16] ^= h, s[17] ^= l, s[26] ^= h, s[27] ^= l, s[36] ^= h, 
          s[37] ^= l, s[46] ^= h, s[47] ^= l, h = c6 ^ (c0 << 1 | c1 >>> 31), l = c7 ^ (c1 << 1 | c0 >>> 31), 
          s[8] ^= h, s[9] ^= l, s[18] ^= h, s[19] ^= l, s[28] ^= h, s[29] ^= l, s[38] ^= h, 
          s[39] ^= l, s[48] ^= h, s[49] ^= l, b0 = s[0], b1 = s[1], b32 = s[11] << 4 | s[10] >>> 28, 
          b33 = s[10] << 4 | s[11] >>> 28, b14 = s[20] << 3 | s[21] >>> 29, b15 = s[21] << 3 | s[20] >>> 29, 
          b46 = s[31] << 9 | s[30] >>> 23, b47 = s[30] << 9 | s[31] >>> 23, b28 = s[40] << 18 | s[41] >>> 14, 
          b29 = s[41] << 18 | s[40] >>> 14, b20 = s[2] << 1 | s[3] >>> 31, b21 = s[3] << 1 | s[2] >>> 31, 
          b2 = s[13] << 12 | s[12] >>> 20, b3 = s[12] << 12 | s[13] >>> 20, b34 = s[22] << 10 | s[23] >>> 22, 
          b35 = s[23] << 10 | s[22] >>> 22, b16 = s[33] << 13 | s[32] >>> 19, b17 = s[32] << 13 | s[33] >>> 19, 
          b48 = s[42] << 2 | s[43] >>> 30, b49 = s[43] << 2 | s[42] >>> 30, b40 = s[5] << 30 | s[4] >>> 2, 
          b41 = s[4] << 30 | s[5] >>> 2, b22 = s[14] << 6 | s[15] >>> 26, b23 = s[15] << 6 | s[14] >>> 26, 
          b4 = s[25] << 11 | s[24] >>> 21, b5 = s[24] << 11 | s[25] >>> 21, b36 = s[34] << 15 | s[35] >>> 17, 
          b37 = s[35] << 15 | s[34] >>> 17, b18 = s[45] << 29 | s[44] >>> 3, b19 = s[44] << 29 | s[45] >>> 3, 
          b10 = s[6] << 28 | s[7] >>> 4, b11 = s[7] << 28 | s[6] >>> 4, b42 = s[17] << 23 | s[16] >>> 9, 
          b43 = s[16] << 23 | s[17] >>> 9, b24 = s[26] << 25 | s[27] >>> 7, b25 = s[27] << 25 | s[26] >>> 7, 
          b6 = s[36] << 21 | s[37] >>> 11, b7 = s[37] << 21 | s[36] >>> 11, b38 = s[47] << 24 | s[46] >>> 8, 
          b39 = s[46] << 24 | s[47] >>> 8, b30 = s[8] << 27 | s[9] >>> 5, b31 = s[9] << 27 | s[8] >>> 5, 
          b12 = s[18] << 20 | s[19] >>> 12, b13 = s[19] << 20 | s[18] >>> 12, b44 = s[29] << 7 | s[28] >>> 25, 
          b45 = s[28] << 7 | s[29] >>> 25, b26 = s[38] << 8 | s[39] >>> 24, b27 = s[39] << 8 | s[38] >>> 24, 
          b8 = s[48] << 14 | s[49] >>> 18, b9 = s[49] << 14 | s[48] >>> 18, s[0] = b0 ^ ~b2 & b4, 
          s[1] = b1 ^ ~b3 & b5, s[10] = b10 ^ ~b12 & b14, s[11] = b11 ^ ~b13 & b15, s[20] = b20 ^ ~b22 & b24, 
          s[21] = b21 ^ ~b23 & b25, s[30] = b30 ^ ~b32 & b34, s[31] = b31 ^ ~b33 & b35, s[40] = b40 ^ ~b42 & b44, 
          s[41] = b41 ^ ~b43 & b45, s[2] = b2 ^ ~b4 & b6, s[3] = b3 ^ ~b5 & b7, s[12] = b12 ^ ~b14 & b16, 
          s[13] = b13 ^ ~b15 & b17, s[22] = b22 ^ ~b24 & b26, s[23] = b23 ^ ~b25 & b27, s[32] = b32 ^ ~b34 & b36, 
          s[33] = b33 ^ ~b35 & b37, s[42] = b42 ^ ~b44 & b46, s[43] = b43 ^ ~b45 & b47, s[4] = b4 ^ ~b6 & b8, 
          s[5] = b5 ^ ~b7 & b9, s[14] = b14 ^ ~b16 & b18, s[15] = b15 ^ ~b17 & b19, s[24] = b24 ^ ~b26 & b28, 
          s[25] = b25 ^ ~b27 & b29, s[34] = b34 ^ ~b36 & b38, s[35] = b35 ^ ~b37 & b39, s[44] = b44 ^ ~b46 & b48, 
          s[45] = b45 ^ ~b47 & b49, s[6] = b6 ^ ~b8 & b0, s[7] = b7 ^ ~b9 & b1, s[16] = b16 ^ ~b18 & b10, 
          s[17] = b17 ^ ~b19 & b11, s[26] = b26 ^ ~b28 & b20, s[27] = b27 ^ ~b29 & b21, s[36] = b36 ^ ~b38 & b30, 
          s[37] = b37 ^ ~b39 & b31, s[46] = b46 ^ ~b48 & b40, s[47] = b47 ^ ~b49 & b41, s[8] = b8 ^ ~b0 & b2, 
          s[9] = b9 ^ ~b1 & b3, s[18] = b18 ^ ~b10 & b12, s[19] = b19 ^ ~b11 & b13, s[28] = b28 ^ ~b20 & b22, 
          s[29] = b29 ^ ~b21 & b23, s[38] = b38 ^ ~b30 & b32, s[39] = b39 ^ ~b31 & b33, s[48] = b48 ^ ~b40 & b42, 
          s[49] = b49 ^ ~b41 & b43, s[0] ^= RC[n], s[1] ^= RC[n + 1];
        };
        if (COMMON_JS) module.exports = methods; else for (i = 0; i < methodNames.length; ++i) root[methodNames[i]] = methods[methodNames[i]];
      }();
    }));
    function keccak256(data) {
      return "0x" + sha3.keccak_256(arrayify(data));
    }
    var logger$6 = new Logger("rlp/5.2.0");
    function arrayifyInteger(value) {
      for (var result = []; value; ) result.unshift(255 & value), value >>= 8;
      return result;
    }
    function unarrayifyInteger(data, offset, length) {
      for (var result = 0, i = 0; i < length; i++) result = 256 * result + data[offset + i];
      return result;
    }
    function _encode(object) {
      if (Array.isArray(object)) {
        var payload = [];
        if (object.forEach((function(child) {
          payload = payload.concat(_encode(child));
        })), payload.length <= 55) return payload.unshift(192 + payload.length), payload;
        var _length = arrayifyInteger(payload.length);
        return _length.unshift(247 + _length.length), _length.concat(payload);
      }
      isBytesLike(object) || logger$6.throwArgumentError("RLP object must be BytesLike", "object", object);
      var data = Array.prototype.slice.call(arrayify(object));
      if (1 === data.length && data[0] <= 127) return data;
      if (data.length <= 55) return data.unshift(128 + data.length), data;
      var length = arrayifyInteger(data.length);
      return length.unshift(183 + length.length), length.concat(data);
    }
    function encode(object) {
      return hexlify(_encode(object));
    }
    function _decodeChildren(data, offset, childOffset, length) {
      for (var result = []; childOffset < offset + 1 + length; ) {
        var decoded = _decode(data, childOffset);
        result.push(decoded.result), (childOffset += decoded.consumed) > offset + 1 + length && logger$6.throwError("child data too short", Logger.errors.BUFFER_OVERRUN, {});
      }
      return {
        consumed: 1 + length,
        result
      };
    }
    function _decode(data, offset) {
      if (0 === data.length && logger$6.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {}), 
      data[offset] >= 248) {
        var lengthLength = data[offset] - 247;
        offset + 1 + lengthLength > data.length && logger$6.throwError("data short segment too short", Logger.errors.BUFFER_OVERRUN, {});
        var length = unarrayifyInteger(data, offset + 1, lengthLength);
        return offset + 1 + lengthLength + length > data.length && logger$6.throwError("data long segment too short", Logger.errors.BUFFER_OVERRUN, {}), 
        _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
      }
      if (data[offset] >= 192) {
        var _length2 = data[offset] - 192;
        return offset + 1 + _length2 > data.length && logger$6.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {}), 
        _decodeChildren(data, offset, offset + 1, _length2);
      }
      if (data[offset] >= 184) {
        var _lengthLength = data[offset] - 183;
        offset + 1 + _lengthLength > data.length && logger$6.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
        var _length3 = unarrayifyInteger(data, offset + 1, _lengthLength);
        return offset + 1 + _lengthLength + _length3 > data.length && logger$6.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {}), 
        {
          consumed: 1 + _lengthLength + _length3,
          result: hexlify(data.slice(offset + 1 + _lengthLength, offset + 1 + _lengthLength + _length3))
        };
      }
      if (data[offset] >= 128) {
        var _length4 = data[offset] - 128;
        return offset + 1 + _length4 > data.length && logger$6.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {}), 
        {
          consumed: 1 + _length4,
          result: hexlify(data.slice(offset + 1, offset + 1 + _length4))
        };
      }
      return {
        consumed: 1,
        result: hexlify(data[offset])
      };
    }
    function decode(data) {
      var bytes = arrayify(data), decoded = _decode(bytes, 0);
      return decoded.consumed !== bytes.length && logger$6.throwArgumentError("invalid rlp data", "data", data), 
      decoded.result;
    }
    var index = Object.freeze({
      __proto__: null,
      encode,
      decode
    }), logger$7 = new Logger("address/5.2.0");
    function getChecksumAddress(address) {
      isHexString(address, 20) || logger$7.throwArgumentError("invalid address", "address", address);
      for (var chars = (address = address.toLowerCase()).substring(2).split(""), expanded = new Uint8Array(40), i = 0; i < 40; i++) expanded[i] = chars[i].charCodeAt(0);
      for (var hashed = arrayify(keccak256(expanded)), _i = 0; _i < 40; _i += 2) hashed[_i >> 1] >> 4 >= 8 && (chars[_i] = chars[_i].toUpperCase()), 
      (15 & hashed[_i >> 1]) >= 8 && (chars[_i + 1] = chars[_i + 1].toUpperCase());
      return "0x" + chars.join("");
    }
    for (var ibanLookup = {}, i = 0; i < 10; i++) ibanLookup[String(i)] = String(i);
    for (var _i2 = 0; _i2 < 26; _i2++) ibanLookup[String.fromCharCode(65 + _i2)] = String(10 + _i2);
    var safeDigits = Math.floor(function(x) {
      return Math.log10 ? Math.log10(x) : Math.log(x) / Math.LN10;
    }(9007199254740991));
    function ibanChecksum(address) {
      for (var expanded = (address = (address = address.toUpperCase()).substring(4) + address.substring(0, 2) + "00").split("").map((function(c) {
        return ibanLookup[c];
      })).join(""); expanded.length >= safeDigits; ) {
        var block = expanded.substring(0, safeDigits);
        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
      }
      for (var checksum = String(98 - parseInt(expanded, 10) % 97); checksum.length < 2; ) checksum = "0" + checksum;
      return checksum;
    }
    function _getAddress(address) {
      var value, result = null;
      if ("string" != typeof address && logger$7.throwArgumentError("invalid address", "address", address), 
      address.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== address.substring(0, 2) && (address = "0x" + address), 
      result = getChecksumAddress(address), address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address && logger$7.throwArgumentError("bad address checksum", "address", address); else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
        for (address.substring(2, 4) !== ibanChecksum(address) && logger$7.throwArgumentError("bad icap checksum", "address", address), 
        value = address.substring(4), result = new BN(value, 36).toString(16); result.length < 40; ) result = "0" + result;
        result = getChecksumAddress("0x" + result);
      } else logger$7.throwArgumentError("invalid address", "address", address);
      return result;
    }
    function _getContractAddress(transaction) {
      var from = null;
      try {
        from = _getAddress(transaction.from);
      } catch (error) {
        logger$7.throwArgumentError("missing from address", "transaction", transaction);
      }
      return _getAddress(hexDataSlice(keccak256(encode([ from, stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString())) ])), 12));
    }
    var AddressCoder = function(_Coder) {
      _inherits(AddressCoder, _Coder);
      var _super6 = _createSuper(AddressCoder);
      function AddressCoder(localName) {
        return _classCallCheck(this, AddressCoder), _super6.call(this, "address", "address", localName, !1);
      }
      return _createClass(AddressCoder, [ {
        key: "defaultValue",
        value: function() {
          return "0x0000000000000000000000000000000000000000";
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          try {
            _getAddress(value);
          } catch (error) {
            this._throwError(error.message, value);
          }
          return writer.writeValue(value);
        }
      }, {
        key: "decode",
        value: function(reader) {
          return _getAddress(hexZeroPad(reader.readValue().toHexString(), 20));
        }
      } ]), AddressCoder;
    }(Coder), AnonymousCoder = function(_Coder2) {
      _inherits(AnonymousCoder, _Coder2);
      var _super7 = _createSuper(AnonymousCoder);
      function AnonymousCoder(coder) {
        var _this2;
        return _classCallCheck(this, AnonymousCoder), (_this2 = _super7.call(this, coder.name, coder.type, void 0, coder.dynamic)).coder = coder, 
        _this2;
      }
      return _createClass(AnonymousCoder, [ {
        key: "defaultValue",
        value: function() {
          return this.coder.defaultValue();
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          return this.coder.encode(writer, value);
        }
      }, {
        key: "decode",
        value: function(reader) {
          return this.coder.decode(reader);
        }
      } ]), AnonymousCoder;
    }(Coder), logger$8 = new Logger("abi/5.2.0");
    function pack(writer, coders, values) {
      var arrayValues = null;
      if (Array.isArray(values)) arrayValues = values; else if (values && "object" === _typeof(values)) {
        var unique = {};
        arrayValues = coders.map((function(coder) {
          var name = coder.localName;
          return name || logger$8.throwError("cannot encode object for signature with missing names", Logger.errors.INVALID_ARGUMENT, {
            argument: "values",
            coder,
            value: values
          }), unique[name] && logger$8.throwError("cannot encode object for signature with duplicate names", Logger.errors.INVALID_ARGUMENT, {
            argument: "values",
            coder,
            value: values
          }), unique[name] = !0, values[name];
        }));
      } else logger$8.throwArgumentError("invalid tuple value", "tuple", values);
      coders.length !== arrayValues.length && logger$8.throwArgumentError("types/value length mismatch", "tuple", values);
      var staticWriter = new Writer(writer.wordSize), dynamicWriter = new Writer(writer.wordSize), updateFuncs = [];
      coders.forEach((function(coder, index) {
        var value = arrayValues[index];
        if (coder.dynamic) {
          var dynamicOffset = dynamicWriter.length;
          coder.encode(dynamicWriter, value);
          var updateFunc = staticWriter.writeUpdatableValue();
          updateFuncs.push((function(baseOffset) {
            updateFunc(baseOffset + dynamicOffset);
          }));
        } else coder.encode(staticWriter, value);
      })), updateFuncs.forEach((function(func) {
        func(staticWriter.length);
      }));
      var length = writer.appendWriter(staticWriter);
      return length += writer.appendWriter(dynamicWriter);
    }
    function unpack(reader, coders) {
      var values = [], baseReader = reader.subReader(0);
      coders.forEach((function(coder) {
        var value = null;
        if (coder.dynamic) {
          var offset = reader.readValue(), offsetReader = baseReader.subReader(offset.toNumber());
          try {
            value = coder.decode(offsetReader);
          } catch (error) {
            if (error.code === Logger.errors.BUFFER_OVERRUN) throw error;
            (value = error).baseType = coder.name, value.name = coder.localName, value.type = coder.type;
          }
        } else try {
          value = coder.decode(reader);
        } catch (error) {
          if (error.code === Logger.errors.BUFFER_OVERRUN) throw error;
          (value = error).baseType = coder.name, value.name = coder.localName, value.type = coder.type;
        }
        null != value && values.push(value);
      }));
      var uniqueNames = coders.reduce((function(accum, coder) {
        var name = coder.localName;
        return name && (accum[name] || (accum[name] = 0), accum[name]++), accum;
      }), {});
      coders.forEach((function(coder, index) {
        var name = coder.localName;
        if (name && 1 === uniqueNames[name] && ("length" === name && (name = "_length"), 
        null == values[name])) {
          var value = values[index];
          value instanceof Error ? Object.defineProperty(values, name, {
            get: function() {
              throw value;
            }
          }) : values[name] = value;
        }
      }));
      for (var _loop = function(_i3) {
        var value = values[_i3];
        value instanceof Error && Object.defineProperty(values, _i3, {
          get: function() {
            throw value;
          }
        });
      }, _i3 = 0; _i3 < values.length; _i3++) _loop(_i3);
      return Object.freeze(values);
    }
    var UnicodeNormalizationForm, Utf8ErrorReason, ArrayCoder = function(_Coder3) {
      _inherits(ArrayCoder, _Coder3);
      var _super8 = _createSuper(ArrayCoder);
      function ArrayCoder(coder, length, localName) {
        var _this3;
        _classCallCheck(this, ArrayCoder);
        var type = coder.type + "[" + (length >= 0 ? length : "") + "]", dynamic = -1 === length || coder.dynamic;
        return (_this3 = _super8.call(this, "array", type, localName, dynamic)).coder = coder, 
        _this3.length = length, _this3;
      }
      return _createClass(ArrayCoder, [ {
        key: "defaultValue",
        value: function() {
          for (var defaultChild = this.coder.defaultValue(), result = [], _i4 = 0; _i4 < this.length; _i4++) result.push(defaultChild);
          return result;
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          Array.isArray(value) || this._throwError("expected array value", value);
          var count = this.length;
          -1 === count && (count = value.length, writer.writeValue(value.length)), logger$8.checkArgumentCount(value.length, count, "coder array" + (this.localName ? " " + this.localName : ""));
          for (var coders = [], _i5 = 0; _i5 < value.length; _i5++) coders.push(this.coder);
          return pack(writer, coders, value);
        }
      }, {
        key: "decode",
        value: function(reader) {
          var count = this.length;
          -1 === count && 32 * (count = reader.readValue().toNumber()) > reader._data.length && logger$8.throwError("insufficient data length", Logger.errors.BUFFER_OVERRUN, {
            length: reader._data.length,
            count
          });
          for (var coders = [], _i6 = 0; _i6 < count; _i6++) coders.push(new AnonymousCoder(this.coder));
          return reader.coerce(this.name, unpack(reader, coders));
        }
      } ]), ArrayCoder;
    }(Coder), BooleanCoder = function(_Coder4) {
      _inherits(BooleanCoder, _Coder4);
      var _super9 = _createSuper(BooleanCoder);
      function BooleanCoder(localName) {
        return _classCallCheck(this, BooleanCoder), _super9.call(this, "bool", "bool", localName, !1);
      }
      return _createClass(BooleanCoder, [ {
        key: "defaultValue",
        value: function() {
          return !1;
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          return writer.writeValue(value ? 1 : 0);
        }
      }, {
        key: "decode",
        value: function(reader) {
          return reader.coerce(this.type, !reader.readValue().isZero());
        }
      } ]), BooleanCoder;
    }(Coder), DynamicBytesCoder = function(_Coder5) {
      _inherits(DynamicBytesCoder, _Coder5);
      var _super10 = _createSuper(DynamicBytesCoder);
      function DynamicBytesCoder(type, localName) {
        return _classCallCheck(this, DynamicBytesCoder), _super10.call(this, type, type, localName, !0);
      }
      return _createClass(DynamicBytesCoder, [ {
        key: "defaultValue",
        value: function() {
          return "0x";
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          value = arrayify(value);
          var length = writer.writeValue(value.length);
          return length += writer.writeBytes(value);
        }
      }, {
        key: "decode",
        value: function(reader) {
          return reader.readBytes(reader.readValue().toNumber(), !0);
        }
      } ]), DynamicBytesCoder;
    }(Coder), BytesCoder = function(_DynamicBytesCoder) {
      _inherits(BytesCoder, _DynamicBytesCoder);
      var _super11 = _createSuper(BytesCoder);
      function BytesCoder(localName) {
        return _classCallCheck(this, BytesCoder), _super11.call(this, "bytes", localName);
      }
      return _createClass(BytesCoder, [ {
        key: "decode",
        value: function(reader) {
          return reader.coerce(this.name, hexlify(_get(_getPrototypeOf(BytesCoder.prototype), "decode", this).call(this, reader)));
        }
      } ]), BytesCoder;
    }(DynamicBytesCoder), FixedBytesCoder = function(_Coder6) {
      _inherits(FixedBytesCoder, _Coder6);
      var _super12 = _createSuper(FixedBytesCoder);
      function FixedBytesCoder(size, localName) {
        var _this4;
        _classCallCheck(this, FixedBytesCoder);
        var name = "bytes" + String(size);
        return (_this4 = _super12.call(this, name, name, localName, !1)).size = size, _this4;
      }
      return _createClass(FixedBytesCoder, [ {
        key: "defaultValue",
        value: function() {
          return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size);
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          var data = arrayify(value);
          return data.length !== this.size && this._throwError("incorrect data length", value), 
          writer.writeBytes(data);
        }
      }, {
        key: "decode",
        value: function(reader) {
          return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));
        }
      } ]), FixedBytesCoder;
    }(Coder), NullCoder = function(_Coder7) {
      _inherits(NullCoder, _Coder7);
      var _super13 = _createSuper(NullCoder);
      function NullCoder(localName) {
        return _classCallCheck(this, NullCoder), _super13.call(this, "null", "", localName, !1);
      }
      return _createClass(NullCoder, [ {
        key: "defaultValue",
        value: function() {
          return null;
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          return null != value && this._throwError("not null", value), writer.writeBytes([]);
        }
      }, {
        key: "decode",
        value: function(reader) {
          return reader.readBytes(0), reader.coerce(this.name, null);
        }
      } ]), NullCoder;
    }(Coder), AddressZero = "0x0000000000000000000000000000000000000000", NegativeOne$1 = BigNumber.from(-1), Zero$1 = BigNumber.from(0), One = BigNumber.from(1), Two = BigNumber.from(2), WeiPerEther = BigNumber.from("1000000000000000000"), MaxUint256 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000", index$1 = Object.freeze({
      __proto__: null,
      AddressZero,
      NegativeOne: NegativeOne$1,
      Zero: Zero$1,
      One,
      Two,
      WeiPerEther,
      MaxUint256,
      HashZero,
      EtherSymbol: "Ξ"
    }), NumberCoder = function(_Coder8) {
      _inherits(NumberCoder, _Coder8);
      var _super14 = _createSuper(NumberCoder);
      function NumberCoder(size, signed, localName) {
        var _this5;
        _classCallCheck(this, NumberCoder);
        var name = (signed ? "int" : "uint") + 8 * size;
        return (_this5 = _super14.call(this, name, name, localName, !1)).size = size, _this5.signed = signed, 
        _this5;
      }
      return _createClass(NumberCoder, [ {
        key: "defaultValue",
        value: function() {
          return 0;
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          var v = BigNumber.from(value), maxUintValue = MaxUint256.mask(8 * writer.wordSize);
          if (this.signed) {
            var bounds = maxUintValue.mask(8 * this.size - 1);
            (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne$1))) && this._throwError("value out-of-bounds", value);
          } else (v.lt(Zero$1) || v.gt(maxUintValue.mask(8 * this.size))) && this._throwError("value out-of-bounds", value);
          return v = v.toTwos(8 * this.size).mask(8 * this.size), this.signed && (v = v.fromTwos(8 * this.size).toTwos(8 * writer.wordSize)), 
          writer.writeValue(v);
        }
      }, {
        key: "decode",
        value: function(reader) {
          var value = reader.readValue().mask(8 * this.size);
          return this.signed && (value = value.fromTwos(8 * this.size)), reader.coerce(this.name, value);
        }
      } ]), NumberCoder;
    }(Coder), logger$9 = new Logger("strings/5.2.0");
    function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
      if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
        for (var _i7 = 0, o = offset + 1; o < bytes.length && bytes[o] >> 6 == 2; o++) _i7++;
        return _i7;
      }
      return reason === Utf8ErrorReason.OVERRUN ? bytes.length - offset - 1 : 0;
    }
    !function(UnicodeNormalizationForm) {
      UnicodeNormalizationForm.current = "", UnicodeNormalizationForm.NFC = "NFC", UnicodeNormalizationForm.NFD = "NFD", 
      UnicodeNormalizationForm.NFKC = "NFKC", UnicodeNormalizationForm.NFKD = "NFKD";
    }(UnicodeNormalizationForm || (UnicodeNormalizationForm = {})), function(Utf8ErrorReason) {
      Utf8ErrorReason.UNEXPECTED_CONTINUE = "unexpected continuation byte", Utf8ErrorReason.BAD_PREFIX = "bad codepoint prefix", 
      Utf8ErrorReason.OVERRUN = "string overrun", Utf8ErrorReason.MISSING_CONTINUE = "missing continuation byte", 
      Utf8ErrorReason.OUT_OF_RANGE = "out of UTF-8 range", Utf8ErrorReason.UTF16_SURROGATE = "UTF-16 surrogate", 
      Utf8ErrorReason.OVERLONG = "overlong representation";
    }(Utf8ErrorReason || (Utf8ErrorReason = {}));
    var Utf8ErrorFuncs = Object.freeze({
      error: function(reason, offset, bytes, output, badCodepoint) {
        return logger$9.throwArgumentError("invalid codepoint at offset ".concat(offset, "; ").concat(reason), "bytes", bytes);
      },
      ignore: ignoreFunc,
      replace: function(reason, offset, bytes, output, badCodepoint) {
        return reason === Utf8ErrorReason.OVERLONG ? (output.push(badCodepoint), 0) : (output.push(65533), 
        ignoreFunc(reason, offset, bytes));
      }
    });
    function getUtf8CodePoints(bytes, onError) {
      null == onError && (onError = Utf8ErrorFuncs.error), bytes = arrayify(bytes);
      for (var result = [], i = 0; i < bytes.length; ) {
        var c = bytes[i++];
        if (c >> 7 != 0) {
          var extraLength = null, overlongMask = null;
          if (192 == (224 & c)) extraLength = 1, overlongMask = 127; else if (224 == (240 & c)) extraLength = 2, 
          overlongMask = 2047; else {
            if (240 != (248 & c)) {
              i += onError(128 == (192 & c) ? Utf8ErrorReason.UNEXPECTED_CONTINUE : Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
              continue;
            }
            extraLength = 3, overlongMask = 65535;
          }
          if (i - 1 + extraLength >= bytes.length) i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result); else {
            for (var res = c & (1 << 8 - extraLength - 1) - 1, j = 0; j < extraLength; j++) {
              var nextChar = bytes[i];
              if (128 != (192 & nextChar)) {
                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result), res = null;
                break;
              }
              res = res << 6 | 63 & nextChar, i++;
            }
            null !== res && (res > 1114111 ? i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res) : res >= 55296 && res <= 57343 ? i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res) : res <= overlongMask ? i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res) : result.push(res));
          }
        } else result.push(c);
      }
      return result;
    }
    function toUtf8Bytes(str) {
      var form = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : UnicodeNormalizationForm.current;
      form != UnicodeNormalizationForm.current && (logger$9.checkNormalize(), str = str.normalize(form));
      for (var result = [], _i8 = 0; _i8 < str.length; _i8++) {
        var c = str.charCodeAt(_i8);
        if (c < 128) result.push(c); else if (c < 2048) result.push(c >> 6 | 192), result.push(63 & c | 128); else if (55296 == (64512 & c)) {
          _i8++;
          var c2 = str.charCodeAt(_i8);
          if (_i8 >= str.length || 56320 != (64512 & c2)) throw new Error("invalid utf-8 string");
          var pair = 65536 + ((1023 & c) << 10) + (1023 & c2);
          result.push(pair >> 18 | 240), result.push(pair >> 12 & 63 | 128), result.push(pair >> 6 & 63 | 128), 
          result.push(63 & pair | 128);
        } else result.push(c >> 12 | 224), result.push(c >> 6 & 63 | 128), result.push(63 & c | 128);
      }
      return arrayify(result);
    }
    function escapeChar(value) {
      var hex = "0000" + value.toString(16);
      return "\\u" + hex.substring(hex.length - 4);
    }
    function _toUtf8String(codePoints) {
      return codePoints.map((function(codePoint) {
        return codePoint <= 65535 ? String.fromCharCode(codePoint) : (codePoint -= 65536, 
        String.fromCharCode(55296 + (codePoint >> 10 & 1023), 56320 + (1023 & codePoint)));
      })).join("");
    }
    function toUtf8String(bytes, onError) {
      return _toUtf8String(getUtf8CodePoints(bytes, onError));
    }
    function toUtf8CodePoints(str) {
      return getUtf8CodePoints(toUtf8Bytes(str, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : UnicodeNormalizationForm.current));
    }
    function createTable(data, func) {
      func || (func = function(value) {
        return [ parseInt(value, 16) ];
      });
      var lo = 0, result = {};
      return data.split(",").forEach((function(pair) {
        var comps = pair.split(":");
        lo += parseInt(comps[0], 16), result[lo] = func(comps[1]);
      })), result;
    }
    function createRangeTable(data) {
      var hi = 0;
      return data.split(",").map((function(v) {
        var comps = v.split("-");
        return 1 === comps.length ? comps[1] = "0" : "" === comps[1] && (comps[1] = "1"), 
        {
          l: hi + parseInt(comps[0], 16),
          h: hi = parseInt(comps[1], 16)
        };
      }));
    }
    function matchMap(value, ranges) {
      for (var lo = 0, _i10 = 0; _i10 < ranges.length; _i10++) {
        var range = ranges[_i10];
        if (value >= (lo += range.l) && value <= lo + range.h && (value - lo) % (range.d || 1) == 0) {
          if (range.e && -1 !== range.e.indexOf(value - lo)) continue;
          return range;
        }
      }
      return null;
    }
    var Table_A_1_ranges = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((function(v) {
      return parseInt(v, 16);
    })), Table_B_2_ranges = [ {
      h: 25,
      s: 32,
      l: 65
    }, {
      h: 30,
      s: 32,
      e: [ 23 ],
      l: 127
    }, {
      h: 54,
      s: 1,
      e: [ 48 ],
      l: 64,
      d: 2
    }, {
      h: 14,
      s: 1,
      l: 57,
      d: 2
    }, {
      h: 44,
      s: 1,
      l: 17,
      d: 2
    }, {
      h: 10,
      s: 1,
      e: [ 2, 6, 8 ],
      l: 61,
      d: 2
    }, {
      h: 16,
      s: 1,
      l: 68,
      d: 2
    }, {
      h: 84,
      s: 1,
      e: [ 18, 24, 66 ],
      l: 19,
      d: 2
    }, {
      h: 26,
      s: 32,
      e: [ 17 ],
      l: 435
    }, {
      h: 22,
      s: 1,
      l: 71,
      d: 2
    }, {
      h: 15,
      s: 80,
      l: 40
    }, {
      h: 31,
      s: 32,
      l: 16
    }, {
      h: 32,
      s: 1,
      l: 80,
      d: 2
    }, {
      h: 52,
      s: 1,
      l: 42,
      d: 2
    }, {
      h: 12,
      s: 1,
      l: 55,
      d: 2
    }, {
      h: 40,
      s: 1,
      e: [ 38 ],
      l: 15,
      d: 2
    }, {
      h: 14,
      s: 1,
      l: 48,
      d: 2
    }, {
      h: 37,
      s: 48,
      l: 49
    }, {
      h: 148,
      s: 1,
      l: 6351,
      d: 2
    }, {
      h: 88,
      s: 1,
      l: 160,
      d: 2
    }, {
      h: 15,
      s: 16,
      l: 704
    }, {
      h: 25,
      s: 26,
      l: 854
    }, {
      h: 25,
      s: 32,
      l: 55915
    }, {
      h: 37,
      s: 40,
      l: 1247
    }, {
      h: 25,
      s: -119711,
      l: 53248
    }, {
      h: 25,
      s: -119763,
      l: 52
    }, {
      h: 25,
      s: -119815,
      l: 52
    }, {
      h: 25,
      s: -119867,
      e: [ 1, 4, 5, 7, 8, 11, 12, 17 ],
      l: 52
    }, {
      h: 25,
      s: -119919,
      l: 52
    }, {
      h: 24,
      s: -119971,
      e: [ 2, 7, 8, 17 ],
      l: 52
    }, {
      h: 24,
      s: -120023,
      e: [ 2, 7, 13, 15, 16, 17 ],
      l: 52
    }, {
      h: 25,
      s: -120075,
      l: 52
    }, {
      h: 25,
      s: -120127,
      l: 52
    }, {
      h: 25,
      s: -120179,
      l: 52
    }, {
      h: 25,
      s: -120231,
      l: 52
    }, {
      h: 25,
      s: -120283,
      l: 52
    }, {
      h: 25,
      s: -120335,
      l: 52
    }, {
      h: 24,
      s: -119543,
      e: [ 17 ],
      l: 56
    }, {
      h: 24,
      s: -119601,
      e: [ 17 ],
      l: 58
    }, {
      h: 24,
      s: -119659,
      e: [ 17 ],
      l: 58
    }, {
      h: 24,
      s: -119717,
      e: [ 17 ],
      l: 58
    }, {
      h: 24,
      s: -119775,
      e: [ 17 ],
      l: 58
    } ], Table_B_2_lut_abs = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), Table_B_2_lut_rel = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), Table_B_2_complex = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", (function(data) {
      if (data.length % 4 != 0) throw new Error("bad data");
      for (var result = [], _i9 = 0; _i9 < data.length; _i9 += 4) result.push(parseInt(data.substring(_i9, _i9 + 4), 16));
      return result;
    })), Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
    function nameprep(value) {
      if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) return value.toLowerCase();
      var values, codes = toUtf8CodePoints(value);
      values = codes.map((function(code) {
        if (Table_B_1_flags.indexOf(code) >= 0) return [];
        if (code >= 65024 && code <= 65039) return [];
        var codesTableB2 = function(codepoint) {
          var range = matchMap(codepoint, Table_B_2_ranges);
          if (range) return [ codepoint + range.s ];
          var codes = Table_B_2_lut_abs[codepoint];
          if (codes) return codes;
          var shift = Table_B_2_lut_rel[codepoint];
          return shift ? [ codepoint + shift[0] ] : Table_B_2_complex[codepoint] || null;
        }(code);
        return codesTableB2 || [ code ];
      })), codes = values.reduce((function(accum, value) {
        return value.forEach((function(value) {
          accum.push(value);
        })), accum;
      }), []), (codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC)).forEach((function(code) {
        if (matchMap(code, Table_C_ranges)) throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
      })), codes.forEach((function(code) {
        if (matchMap(code, Table_A_1_ranges)) throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
      }));
      var name = _toUtf8String(codes);
      if ("-" === name.substring(0, 1) || "--" === name.substring(2, 4) || "-" === name.substring(name.length - 1)) throw new Error("invalid hyphen");
      if (name.length > 63) throw new Error("too long");
      return name;
    }
    var StringCoder = function(_DynamicBytesCoder2) {
      _inherits(StringCoder, _DynamicBytesCoder2);
      var _super15 = _createSuper(StringCoder);
      function StringCoder(localName) {
        return _classCallCheck(this, StringCoder), _super15.call(this, "string", localName);
      }
      return _createClass(StringCoder, [ {
        key: "defaultValue",
        value: function() {
          return "";
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          return _get(_getPrototypeOf(StringCoder.prototype), "encode", this).call(this, writer, toUtf8Bytes(value));
        }
      }, {
        key: "decode",
        value: function(reader) {
          return toUtf8String(_get(_getPrototypeOf(StringCoder.prototype), "decode", this).call(this, reader));
        }
      } ]), StringCoder;
    }(DynamicBytesCoder), TupleCoder = function(_Coder9) {
      _inherits(TupleCoder, _Coder9);
      var _super16 = _createSuper(TupleCoder);
      function TupleCoder(coders, localName) {
        var _this6;
        _classCallCheck(this, TupleCoder);
        var dynamic = !1, types = [];
        coders.forEach((function(coder) {
          coder.dynamic && (dynamic = !0), types.push(coder.type);
        }));
        var type = "tuple(" + types.join(",") + ")";
        return (_this6 = _super16.call(this, "tuple", type, localName, dynamic)).coders = coders, 
        _this6;
      }
      return _createClass(TupleCoder, [ {
        key: "defaultValue",
        value: function() {
          var values = [];
          this.coders.forEach((function(coder) {
            values.push(coder.defaultValue());
          }));
          var uniqueNames = this.coders.reduce((function(accum, coder) {
            var name = coder.localName;
            return name && (accum[name] || (accum[name] = 0), accum[name]++), accum;
          }), {});
          return this.coders.forEach((function(coder, index) {
            var name = coder.localName;
            name && 1 === uniqueNames[name] && ("length" === name && (name = "_length"), null == values[name] && (values[name] = values[index]));
          })), Object.freeze(values);
        }
      }, {
        key: "encode",
        value: function(writer, value) {
          return pack(writer, this.coders, value);
        }
      }, {
        key: "decode",
        value: function(reader) {
          return reader.coerce(this.name, unpack(reader, this.coders));
        }
      } ]), TupleCoder;
    }(Coder), logger$a = new Logger("abi/5.2.0"), paramTypeBytes = new RegExp(/^bytes([0-9]*)$/), paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/), AbiCoder = function() {
      function AbiCoder(coerceFunc) {
        _classCallCheck(this, AbiCoder), logger$a.checkNew(this instanceof AbiCoder ? this.constructor : void 0, AbiCoder), 
        defineReadOnly(this, "coerceFunc", coerceFunc || null);
      }
      return _createClass(AbiCoder, [ {
        key: "_getCoder",
        value: function(param) {
          var _this7 = this;
          switch (param.baseType) {
           case "address":
            return new AddressCoder(param.name);

           case "bool":
            return new BooleanCoder(param.name);

           case "string":
            return new StringCoder(param.name);

           case "bytes":
            return new BytesCoder(param.name);

           case "array":
            return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);

           case "tuple":
            return new TupleCoder((param.components || []).map((function(component) {
              return _this7._getCoder(component);
            })), param.name);

           case "":
            return new NullCoder(param.name);
          }
          var match = param.type.match(paramTypeNumber);
          if (match) {
            var size = parseInt(match[2] || "256");
            return (0 === size || size > 256 || size % 8 != 0) && logger$a.throwArgumentError("invalid " + match[1] + " bit length", "param", param), 
            new NumberCoder(size / 8, "int" === match[1], param.name);
          }
          if (match = param.type.match(paramTypeBytes)) {
            var _size = parseInt(match[1]);
            return (0 === _size || _size > 32) && logger$a.throwArgumentError("invalid bytes length", "param", param), 
            new FixedBytesCoder(_size, param.name);
          }
          return logger$a.throwArgumentError("invalid type", "type", param.type);
        }
      }, {
        key: "_getWordSize",
        value: function() {
          return 32;
        }
      }, {
        key: "_getReader",
        value: function(data, allowLoose) {
          return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);
        }
      }, {
        key: "_getWriter",
        value: function() {
          return new Writer(this._getWordSize());
        }
      }, {
        key: "getDefaultValue",
        value: function(types) {
          var _this8 = this, coders = types.map((function(type) {
            return _this8._getCoder(ParamType.from(type));
          }));
          return new TupleCoder(coders, "_").defaultValue();
        }
      }, {
        key: "encode",
        value: function(types, values) {
          var _this9 = this;
          types.length !== values.length && logger$a.throwError("types/values length mismatch", Logger.errors.INVALID_ARGUMENT, {
            count: {
              types: types.length,
              values: values.length
            },
            value: {
              types,
              values
            }
          });
          var coders = types.map((function(type) {
            return _this9._getCoder(ParamType.from(type));
          })), coder = new TupleCoder(coders, "_"), writer = this._getWriter();
          return coder.encode(writer, values), writer.data;
        }
      }, {
        key: "decode",
        value: function(types, data, loose) {
          var _this10 = this, coders = types.map((function(type) {
            return _this10._getCoder(ParamType.from(type));
          }));
          return new TupleCoder(coders, "_").decode(this._getReader(arrayify(data), loose));
        }
      } ]), AbiCoder;
    }(), defaultAbiCoder = new AbiCoder;
    function id(text) {
      return keccak256(toUtf8Bytes(text));
    }
    var logger$b = new Logger("hash/5.2.0"), Zeros = new Uint8Array(32);
    Zeros.fill(0);
    var Partition = new RegExp("^((.*)\\.)?([^.]+)$");
    function namehash(name) {
      "string" != typeof name && logger$b.throwArgumentError("invalid address - " + String(name), "name", name);
      for (var result = Zeros; name.length; ) {
        var partition = name.match(Partition);
        result = keccak256(concat([ result, keccak256(toUtf8Bytes(nameprep(partition[3]))) ])), 
        name = partition[2] || "";
      }
      return hexlify(result);
    }
    var messagePrefix = "Ethereum Signed Message:\n";
    function hashMessage(message) {
      return "string" == typeof message && (message = toUtf8Bytes(message)), keccak256(concat([ toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message ]));
    }
    var __awaiter$1 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$c = new Logger("hash/5.2.0"), padding = new Uint8Array(32);
    padding.fill(0);
    var NegativeOne$2 = BigNumber.from(-1), Zero$2 = BigNumber.from(0), One$1 = BigNumber.from(1), MaxUint256$1 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
    var hexTrue = hexZeroPad(One$1.toHexString(), 32), hexFalse = hexZeroPad(Zero$2.toHexString(), 32), domainFieldTypes = {
      name: "string",
      version: "string",
      chainId: "uint256",
      verifyingContract: "address",
      salt: "bytes32"
    }, domainFieldNames = [ "name", "version", "chainId", "verifyingContract", "salt" ];
    function checkString(key) {
      return function(value) {
        return "string" != typeof value && logger$c.throwArgumentError("invalid domain value for ".concat(JSON.stringify(key)), "domain.".concat(key), value), 
        value;
      };
    }
    var domainChecks = {
      name: checkString("name"),
      version: checkString("version"),
      chainId: function(value) {
        try {
          return BigNumber.from(value).toString();
        } catch (error) {}
        return logger$c.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", value);
      },
      verifyingContract: function(value) {
        try {
          return _getAddress(value).toLowerCase();
        } catch (error) {}
        return logger$c.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", value);
      },
      salt: function(value) {
        try {
          var bytes = arrayify(value);
          if (32 !== bytes.length) throw new Error("bad length");
          return hexlify(bytes);
        } catch (error) {}
        return logger$c.throwArgumentError('invalid domain value "salt"', "domain.salt", value);
      }
    };
    function getBaseEncoder(type) {
      var match = type.match(/^(u?)int(\d*)$/);
      if (match) {
        var signed = "" === match[1], width = parseInt(match[2] || "256");
        (width % 8 != 0 || width > 256 || match[2] && match[2] !== String(width)) && logger$c.throwArgumentError("invalid numeric width", "type", type);
        var boundsUpper = MaxUint256$1.mask(signed ? width - 1 : width), boundsLower = signed ? boundsUpper.add(One$1).mul(NegativeOne$2) : Zero$2;
        return function(value) {
          var v = BigNumber.from(value);
          return (v.lt(boundsLower) || v.gt(boundsUpper)) && logger$c.throwArgumentError("value out-of-bounds for ".concat(type), "value", value), 
          hexZeroPad(v.toTwos(256).toHexString(), 32);
        };
      }
      var _match = type.match(/^bytes(\d+)$/);
      if (_match) {
        var _width = parseInt(_match[1]);
        return (0 === _width || _width > 32 || _match[1] !== String(_width)) && logger$c.throwArgumentError("invalid bytes width", "type", type), 
        function(value) {
          return arrayify(value).length !== _width && logger$c.throwArgumentError("invalid length for ".concat(type), "value", value), 
          function(value) {
            var bytes = arrayify(value), padOffset = bytes.length % 32;
            return padOffset ? hexConcat([ bytes, padding.slice(padOffset) ]) : hexlify(bytes);
          }(value);
        };
      }
      switch (type) {
       case "address":
        return function(value) {
          return hexZeroPad(_getAddress(value), 32);
        };

       case "bool":
        return function(value) {
          return value ? hexTrue : hexFalse;
        };

       case "bytes":
        return function(value) {
          return keccak256(value);
        };

       case "string":
        return function(value) {
          return id(value);
        };
      }
      return null;
    }
    function encodeType(name, fields) {
      return "".concat(name, "(").concat(fields.map((function(_ref) {
        var name = _ref.name;
        return _ref.type + " " + name;
      })).join(","), ")");
    }
    var TypedDataEncoder = function() {
      function TypedDataEncoder(types) {
        _classCallCheck(this, TypedDataEncoder), defineReadOnly(this, "types", Object.freeze(deepCopy(types))), 
        defineReadOnly(this, "_encoderCache", {}), defineReadOnly(this, "_types", {});
        var links = {}, parents = {}, subtypes = {};
        Object.keys(types).forEach((function(type) {
          links[type] = {}, parents[type] = [], subtypes[type] = {};
        }));
        var _loop2 = function(_name) {
          var uniqueNames = {};
          types[_name].forEach((function(field) {
            uniqueNames[field.name] && logger$c.throwArgumentError("duplicate variable name ".concat(JSON.stringify(field.name), " in ").concat(JSON.stringify(_name)), "types", types), 
            uniqueNames[field.name] = !0;
            var baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
            baseType === _name && logger$c.throwArgumentError("circular type reference to ".concat(JSON.stringify(baseType)), "types", types), 
            getBaseEncoder(baseType) || (parents[baseType] || logger$c.throwArgumentError("unknown type ".concat(JSON.stringify(baseType)), "types", types), 
            parents[baseType].push(_name), links[_name][baseType] = !0);
          }));
        };
        for (var _name in types) _loop2(_name);
        var primaryTypes = Object.keys(parents).filter((function(n) {
          return 0 === parents[n].length;
        }));
        for (var _name2 in 0 === primaryTypes.length ? logger$c.throwArgumentError("missing primary type", "types", types) : primaryTypes.length > 1 && logger$c.throwArgumentError("ambiguous primary types or unused types: ".concat(primaryTypes.map((function(t) {
          return JSON.stringify(t);
        })).join(", ")), "types", types), defineReadOnly(this, "primaryType", primaryTypes[0]), 
        function checkCircular(type, found) {
          found[type] && logger$c.throwArgumentError("circular type reference to ".concat(JSON.stringify(type)), "types", types), 
          found[type] = !0, Object.keys(links[type]).forEach((function(child) {
            parents[child] && (checkCircular(child, found), Object.keys(found).forEach((function(subtype) {
              subtypes[subtype][child] = !0;
            })));
          })), delete found[type];
        }(this.primaryType, {}), subtypes) {
          var st = Object.keys(subtypes[_name2]);
          st.sort(), this._types[_name2] = encodeType(_name2, types[_name2]) + st.map((function(t) {
            return encodeType(t, types[t]);
          })).join("");
        }
      }
      return _createClass(TypedDataEncoder, [ {
        key: "getEncoder",
        value: function(type) {
          var encoder = this._encoderCache[type];
          return encoder || (encoder = this._encoderCache[type] = this._getEncoder(type)), 
          encoder;
        }
      }, {
        key: "_getEncoder",
        value: function(type) {
          var _this11 = this, encoder = getBaseEncoder(type);
          if (encoder) return encoder;
          var match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (match) {
            var subtype = match[1], subEncoder = this.getEncoder(subtype), length = parseInt(match[3]);
            return function(value) {
              length >= 0 && value.length !== length && logger$c.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
              var result = value.map(subEncoder);
              return _this11._types[subtype] && (result = result.map(keccak256)), keccak256(hexConcat(result));
            };
          }
          var fields = this.types[type];
          if (fields) {
            var encodedType = id(this._types[type]);
            return function(value) {
              var values = fields.map((function(_ref2) {
                var name = _ref2.name, type = _ref2.type, result = _this11.getEncoder(type)(value[name]);
                return _this11._types[type] ? keccak256(result) : result;
              }));
              return values.unshift(encodedType), hexConcat(values);
            };
          }
          return logger$c.throwArgumentError("unknown type: ".concat(type), "type", type);
        }
      }, {
        key: "encodeType",
        value: function(name) {
          var result = this._types[name];
          return result || logger$c.throwArgumentError("unknown type: ".concat(JSON.stringify(name)), "name", name), 
          result;
        }
      }, {
        key: "encodeData",
        value: function(type, value) {
          return this.getEncoder(type)(value);
        }
      }, {
        key: "hashStruct",
        value: function(name, value) {
          return keccak256(this.encodeData(name, value));
        }
      }, {
        key: "encode",
        value: function(value) {
          return this.encodeData(this.primaryType, value);
        }
      }, {
        key: "hash",
        value: function(value) {
          return this.hashStruct(this.primaryType, value);
        }
      }, {
        key: "_visit",
        value: function(type, value, callback) {
          var _this12 = this;
          if (getBaseEncoder(type)) return callback(type, value);
          var match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (match) {
            var subtype = match[1], length = parseInt(match[3]);
            return length >= 0 && value.length !== length && logger$c.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value), 
            value.map((function(v) {
              return _this12._visit(subtype, v, callback);
            }));
          }
          var fields = this.types[type];
          return fields ? fields.reduce((function(accum, _ref3) {
            var name = _ref3.name, type = _ref3.type;
            return accum[name] = _this12._visit(type, value[name], callback), accum;
          }), {}) : logger$c.throwArgumentError("unknown type: ".concat(type), "type", type);
        }
      }, {
        key: "visit",
        value: function(value, callback) {
          return this._visit(this.primaryType, value, callback);
        }
      } ], [ {
        key: "from",
        value: function(types) {
          return new TypedDataEncoder(types);
        }
      }, {
        key: "getPrimaryType",
        value: function(types) {
          return TypedDataEncoder.from(types).primaryType;
        }
      }, {
        key: "hashStruct",
        value: function(name, types, value) {
          return TypedDataEncoder.from(types).hashStruct(name, value);
        }
      }, {
        key: "hashDomain",
        value: function(domain) {
          var domainFields = [];
          for (var _name3 in domain) {
            var type = domainFieldTypes[_name3];
            type || logger$c.throwArgumentError("invalid typed-data domain key: ".concat(JSON.stringify(_name3)), "domain", domain), 
            domainFields.push({
              name: _name3,
              type
            });
          }
          return domainFields.sort((function(a, b) {
            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
          })), TypedDataEncoder.hashStruct("EIP712Domain", {
            EIP712Domain: domainFields
          }, domain);
        }
      }, {
        key: "encode",
        value: function(domain, types, value) {
          return hexConcat([ "0x1901", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value) ]);
        }
      }, {
        key: "hash",
        value: function(domain, types, value) {
          return keccak256(TypedDataEncoder.encode(domain, types, value));
        }
      }, {
        key: "resolveNames",
        value: function(domain, types, value, resolveName) {
          return __awaiter$1(this, void 0, void 0, regeneratorRuntime.mark((function _callee2() {
            var ensCache, encoder, _name4;
            return regeneratorRuntime.wrap((function(_context2) {
              for (;;) switch (_context2.prev = _context2.next) {
               case 0:
                domain = shallowCopy(domain), ensCache = {}, domain.verifyingContract && !isHexString(domain.verifyingContract, 20) && (ensCache[domain.verifyingContract] = "0x"), 
                (encoder = TypedDataEncoder.from(types)).visit(value, (function(type, value) {
                  return "address" !== type || isHexString(value, 20) || (ensCache[value] = "0x"), 
                  value;
                })), _context2.t0 = regeneratorRuntime.keys(ensCache);

               case 6:
                if ((_context2.t1 = _context2.t0()).done) {
                  _context2.next = 13;
                  break;
                }
                return _name4 = _context2.t1.value, _context2.next = 10, resolveName(_name4);

               case 10:
                ensCache[_name4] = _context2.sent, _context2.next = 6;
                break;

               case 13:
                return domain.verifyingContract && ensCache[domain.verifyingContract] && (domain.verifyingContract = ensCache[domain.verifyingContract]), 
                value = encoder.visit(value, (function(type, value) {
                  return "address" === type && ensCache[value] ? ensCache[value] : value;
                })), _context2.abrupt("return", {
                  domain,
                  value
                });

               case 16:
               case "end":
                return _context2.stop();
              }
            }), _callee2);
          })));
        }
      }, {
        key: "getPayload",
        value: function(domain, types, value) {
          TypedDataEncoder.hashDomain(domain);
          var domainValues = {}, domainTypes = [];
          domainFieldNames.forEach((function(name) {
            var value = domain[name];
            null != value && (domainValues[name] = domainChecks[name](value), domainTypes.push({
              name,
              type: domainFieldTypes[name]
            }));
          }));
          var encoder = TypedDataEncoder.from(types), typesWithDomain = shallowCopy(types);
          return typesWithDomain.EIP712Domain ? logger$c.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types) : typesWithDomain.EIP712Domain = domainTypes, 
          encoder.encode(value), {
            types: typesWithDomain,
            domain: domainValues,
            primaryType: encoder.primaryType,
            message: encoder.visit(value, (function(type, value) {
              if (type.match(/^bytes(\d*)/)) return hexlify(arrayify(value));
              if (type.match(/^u?int/)) return BigNumber.from(value).toString();
              switch (type) {
               case "address":
                return value.toLowerCase();

               case "bool":
                return !!value;

               case "string":
                return "string" != typeof value && logger$c.throwArgumentError("invalid string", "value", value), 
                value;
              }
              return logger$c.throwArgumentError("unsupported type", "type", type);
            }))
          };
        }
      } ]), TypedDataEncoder;
    }(), logger$d = new Logger("abi/5.2.0"), LogDescription = function(_Description) {
      _inherits(LogDescription, _Description);
      var _super17 = _createSuper(LogDescription);
      function LogDescription() {
        return _classCallCheck(this, LogDescription), _super17.apply(this, arguments);
      }
      return LogDescription;
    }(Description), TransactionDescription = function(_Description2) {
      _inherits(TransactionDescription, _Description2);
      var _super18 = _createSuper(TransactionDescription);
      function TransactionDescription() {
        return _classCallCheck(this, TransactionDescription), _super18.apply(this, arguments);
      }
      return TransactionDescription;
    }(Description), Indexed = function(_Description3) {
      _inherits(Indexed, _Description3);
      var _super19 = _createSuper(Indexed);
      function Indexed() {
        return _classCallCheck(this, Indexed), _super19.apply(this, arguments);
      }
      return _createClass(Indexed, null, [ {
        key: "isIndexed",
        value: function(value) {
          return !(!value || !value._isIndexed);
        }
      } ]), Indexed;
    }(Description), BuiltinErrors = {
      "0x08c379a0": {
        signature: "Error(string)",
        name: "Error",
        inputs: [ "string" ],
        reason: !0
      },
      "0x4e487b71": {
        signature: "Panic(uint256)",
        name: "Panic",
        inputs: [ "uint256" ]
      }
    };
    function wrapAccessError(property, error) {
      var wrap = new Error("deferred error during ABI decoding triggered accessing ".concat(property));
      return wrap.error = error, wrap;
    }
    var Interface = function() {
      function Interface(fragments) {
        var _this13 = this;
        _classCallCheck(this, Interface), logger$d.checkNew(this instanceof Interface ? this.constructor : void 0, Interface);
        defineReadOnly(this, "fragments", ("string" == typeof fragments ? JSON.parse(fragments) : fragments).map((function(fragment) {
          return Fragment.from(fragment);
        })).filter((function(fragment) {
          return null != fragment;
        }))), defineReadOnly(this, "_abiCoder", getStatic(this instanceof Interface ? this.constructor : void 0, "getAbiCoder")()), 
        defineReadOnly(this, "functions", {}), defineReadOnly(this, "errors", {}), defineReadOnly(this, "events", {}), 
        defineReadOnly(this, "structs", {}), this.fragments.forEach((function(fragment) {
          var bucket = null;
          switch (fragment.type) {
           case "constructor":
            return _this13.deploy ? void logger$d.warn("duplicate definition - constructor") : void defineReadOnly(_this13, "deploy", fragment);

           case "function":
            bucket = _this13.functions;
            break;

           case "event":
            bucket = _this13.events;
            break;

           case "error":
            bucket = _this13.errors;
            break;

           default:
            return;
          }
          var signature = fragment.format();
          bucket[signature] ? logger$d.warn("duplicate definition - " + signature) : bucket[signature] = fragment;
        })), this.deploy || defineReadOnly(this, "deploy", ConstructorFragment.from({
          payable: !1,
          type: "constructor"
        })), defineReadOnly(this, "_isInterface", !0);
      }
      return _createClass(Interface, [ {
        key: "format",
        value: function(_format6) {
          _format6 || (_format6 = FormatTypes.full), _format6 === FormatTypes.sighash && logger$d.throwArgumentError("interface does not support formatting sighash", "format", _format6);
          var abi = this.fragments.map((function(fragment) {
            return fragment.format(_format6);
          }));
          return _format6 === FormatTypes.json ? JSON.stringify(abi.map((function(j) {
            return JSON.parse(j);
          }))) : abi;
        }
      }, {
        key: "getFunction",
        value: function(nameOrSignatureOrSighash) {
          if (isHexString(nameOrSignatureOrSighash)) {
            for (var _name5 in this.functions) if (nameOrSignatureOrSighash === this.getSighash(_name5)) return this.functions[_name5];
            logger$d.throwArgumentError("no matching function", "sighash", nameOrSignatureOrSighash);
          }
          if (-1 === nameOrSignatureOrSighash.indexOf("(")) {
            var _name6 = nameOrSignatureOrSighash.trim(), matching = Object.keys(this.functions).filter((function(f) {
              return f.split("(")[0] === _name6;
            }));
            return 0 === matching.length ? logger$d.throwArgumentError("no matching function", "name", _name6) : matching.length > 1 && logger$d.throwArgumentError("multiple matching functions", "name", _name6), 
            this.functions[matching[0]];
          }
          var result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
          return result || logger$d.throwArgumentError("no matching function", "signature", nameOrSignatureOrSighash), 
          result;
        }
      }, {
        key: "getEvent",
        value: function(nameOrSignatureOrTopic) {
          if (isHexString(nameOrSignatureOrTopic)) {
            var topichash = nameOrSignatureOrTopic.toLowerCase();
            for (var _name7 in this.events) if (topichash === this.getEventTopic(_name7)) return this.events[_name7];
            logger$d.throwArgumentError("no matching event", "topichash", topichash);
          }
          if (-1 === nameOrSignatureOrTopic.indexOf("(")) {
            var _name8 = nameOrSignatureOrTopic.trim(), matching = Object.keys(this.events).filter((function(f) {
              return f.split("(")[0] === _name8;
            }));
            return 0 === matching.length ? logger$d.throwArgumentError("no matching event", "name", _name8) : matching.length > 1 && logger$d.throwArgumentError("multiple matching events", "name", _name8), 
            this.events[matching[0]];
          }
          var result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];
          return result || logger$d.throwArgumentError("no matching event", "signature", nameOrSignatureOrTopic), 
          result;
        }
      }, {
        key: "getError",
        value: function(nameOrSignatureOrSighash) {
          if (isHexString(nameOrSignatureOrSighash)) {
            var getSighash = getStatic(this.constructor, "getSighash");
            for (var _name9 in this.errors) {
              if (nameOrSignatureOrSighash === getSighash(this.errors[_name9])) return this.errors[_name9];
            }
            logger$d.throwArgumentError("no matching error", "sighash", nameOrSignatureOrSighash);
          }
          if (-1 === nameOrSignatureOrSighash.indexOf("(")) {
            var _name10 = nameOrSignatureOrSighash.trim(), matching = Object.keys(this.errors).filter((function(f) {
              return f.split("(")[0] === _name10;
            }));
            return 0 === matching.length ? logger$d.throwArgumentError("no matching error", "name", _name10) : matching.length > 1 && logger$d.throwArgumentError("multiple matching errors", "name", _name10), 
            this.errors[matching[0]];
          }
          var result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
          return result || logger$d.throwArgumentError("no matching error", "signature", nameOrSignatureOrSighash), 
          result;
        }
      }, {
        key: "getSighash",
        value: function(functionFragment) {
          return "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment)), 
          getStatic(this.constructor, "getSighash")(functionFragment);
        }
      }, {
        key: "getEventTopic",
        value: function(eventFragment) {
          return "string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment)), 
          getStatic(this.constructor, "getEventTopic")(eventFragment);
        }
      }, {
        key: "_decodeParams",
        value: function(params, data) {
          return this._abiCoder.decode(params, data);
        }
      }, {
        key: "_encodeParams",
        value: function(params, values) {
          return this._abiCoder.encode(params, values);
        }
      }, {
        key: "encodeDeploy",
        value: function(values) {
          return this._encodeParams(this.deploy.inputs, values || []);
        }
      }, {
        key: "decodeFunctionData",
        value: function(functionFragment, data) {
          "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment));
          var bytes = arrayify(data);
          return hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment) && logger$d.throwArgumentError("data signature does not match function ".concat(functionFragment.name, "."), "data", hexlify(bytes)), 
          this._decodeParams(functionFragment.inputs, bytes.slice(4));
        }
      }, {
        key: "encodeFunctionData",
        value: function(functionFragment, values) {
          return "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment)), 
          hexlify(concat([ this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || []) ]));
        }
      }, {
        key: "decodeFunctionResult",
        value: function(functionFragment, data) {
          "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment));
          var bytes = arrayify(data), reason = null, errorArgs = null, errorName = null, errorSignature = null;
          switch (bytes.length % this._abiCoder._getWordSize()) {
           case 0:
            try {
              return this._abiCoder.decode(functionFragment.outputs, bytes);
            } catch (error) {}
            break;

           case 4:
            var selector = hexlify(bytes.slice(0, 4)), builtin = BuiltinErrors[selector];
            if (builtin) errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4)), 
            errorName = builtin.name, errorSignature = builtin.signature, builtin.reason && (reason = errorArgs[0]); else try {
              var error = this.getError(selector);
              errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4)), errorName = error.name, 
              errorSignature = error.format();
            } catch (error) {}
          }
          return logger$d.throwError("call revert exception", Logger.errors.CALL_EXCEPTION, {
            method: functionFragment.format(),
            errorArgs,
            errorName,
            errorSignature,
            reason
          });
        }
      }, {
        key: "encodeFunctionResult",
        value: function(functionFragment, values) {
          return "string" == typeof functionFragment && (functionFragment = this.getFunction(functionFragment)), 
          hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));
        }
      }, {
        key: "encodeFilterTopics",
        value: function(eventFragment, values) {
          var _this14 = this;
          "string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment)), 
          values.length > eventFragment.inputs.length && logger$d.throwError("too many arguments for " + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {
            argument: "values",
            value: values
          });
          var topics = [];
          eventFragment.anonymous || topics.push(this.getEventTopic(eventFragment));
          var encodeTopic = function(param, value) {
            return "string" === param.type ? id(value) : "bytes" === param.type ? keccak256(hexlify(value)) : ("address" === param.type && _this14._abiCoder.encode([ "address" ], [ value ]), 
            hexZeroPad(hexlify(value), 32));
          };
          for (values.forEach((function(value, index) {
            var param = eventFragment.inputs[index];
            param.indexed ? null == value ? topics.push(null) : "array" === param.baseType || "tuple" === param.baseType ? logger$d.throwArgumentError("filtering with tuples or arrays not supported", "contract." + param.name, value) : Array.isArray(value) ? topics.push(value.map((function(value) {
              return encodeTopic(param, value);
            }))) : topics.push(encodeTopic(param, value)) : null != value && logger$d.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + param.name, value);
          })); topics.length && null === topics[topics.length - 1]; ) topics.pop();
          return topics;
        }
      }, {
        key: "encodeEventLog",
        value: function(eventFragment, values) {
          var _this15 = this;
          "string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment));
          var topics = [], dataTypes = [], dataValues = [];
          return eventFragment.anonymous || topics.push(this.getEventTopic(eventFragment)), 
          values.length !== eventFragment.inputs.length && logger$d.throwArgumentError("event arguments/values mismatch", "values", values), 
          eventFragment.inputs.forEach((function(param, index) {
            var value = values[index];
            if (param.indexed) if ("string" === param.type) topics.push(id(value)); else if ("bytes" === param.type) topics.push(keccak256(value)); else {
              if ("tuple" === param.baseType || "array" === param.baseType) throw new Error("not implemented");
              topics.push(_this15._abiCoder.encode([ param.type ], [ value ]));
            } else dataTypes.push(param), dataValues.push(value);
          })), {
            data: this._abiCoder.encode(dataTypes, dataValues),
            topics
          };
        }
      }, {
        key: "decodeEventLog",
        value: function(eventFragment, data, topics) {
          if ("string" == typeof eventFragment && (eventFragment = this.getEvent(eventFragment)), 
          null != topics && !eventFragment.anonymous) {
            var topicHash = this.getEventTopic(eventFragment);
            isHexString(topics[0], 32) && topics[0].toLowerCase() === topicHash || logger$d.throwError("fragment/topic mismatch", Logger.errors.INVALID_ARGUMENT, {
              argument: "topics[0]",
              expected: topicHash,
              value: topics[0]
            }), topics = topics.slice(1);
          }
          var indexed = [], nonIndexed = [], dynamic = [];
          eventFragment.inputs.forEach((function(param, index) {
            param.indexed ? "string" === param.type || "bytes" === param.type || "tuple" === param.baseType || "array" === param.baseType ? (indexed.push(ParamType.fromObject({
              type: "bytes32",
              name: param.name
            })), dynamic.push(!0)) : (indexed.push(param), dynamic.push(!1)) : (nonIndexed.push(param), 
            dynamic.push(!1));
          }));
          var resultIndexed = null != topics ? this._abiCoder.decode(indexed, concat(topics)) : null, resultNonIndexed = this._abiCoder.decode(nonIndexed, data, !0), result = [], nonIndexedIndex = 0, indexedIndex = 0;
          eventFragment.inputs.forEach((function(param, index) {
            if (param.indexed) if (null == resultIndexed) result[index] = new Indexed({
              _isIndexed: !0,
              hash: null
            }); else if (dynamic[index]) result[index] = new Indexed({
              _isIndexed: !0,
              hash: resultIndexed[indexedIndex++]
            }); else try {
              result[index] = resultIndexed[indexedIndex++];
            } catch (error) {
              result[index] = error;
            } else try {
              result[index] = resultNonIndexed[nonIndexedIndex++];
            } catch (error) {
              result[index] = error;
            }
            if (param.name && null == result[param.name]) {
              var value = result[index];
              value instanceof Error ? Object.defineProperty(result, param.name, {
                get: function() {
                  throw wrapAccessError("property ".concat(JSON.stringify(param.name)), value);
                }
              }) : result[param.name] = value;
            }
          }));
          for (var _loop3 = function(_i12) {
            var value = result[_i12];
            value instanceof Error && Object.defineProperty(result, _i12, {
              get: function() {
                throw wrapAccessError("index ".concat(_i12), value);
              }
            });
          }, _i12 = 0; _i12 < result.length; _i12++) _loop3(_i12);
          return Object.freeze(result);
        }
      }, {
        key: "parseTransaction",
        value: function(tx) {
          var fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());
          return fragment ? new TransactionDescription({
            args: this._abiCoder.decode(fragment.inputs, "0x" + tx.data.substring(10)),
            functionFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            sighash: this.getSighash(fragment),
            value: BigNumber.from(tx.value || "0")
          }) : null;
        }
      }, {
        key: "parseLog",
        value: function(log) {
          var fragment = this.getEvent(log.topics[0]);
          return !fragment || fragment.anonymous ? null : new LogDescription({
            eventFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            topic: this.getEventTopic(fragment),
            args: this.decodeEventLog(fragment, log.data, log.topics)
          });
        }
      } ], [ {
        key: "getAbiCoder",
        value: function() {
          return defaultAbiCoder;
        }
      }, {
        key: "getAddress",
        value: function(address) {
          return _getAddress(address);
        }
      }, {
        key: "getSighash",
        value: function(fragment) {
          return hexDataSlice(id(fragment.format()), 0, 4);
        }
      }, {
        key: "getEventTopic",
        value: function(eventFragment) {
          return id(eventFragment.format());
        }
      }, {
        key: "isInterface",
        value: function(value) {
          return !(!value || !value._isInterface);
        }
      } ]), Interface;
    }(), logger$e = new Logger("abstract-provider/5.2.0"), ForkEvent = function(_Description4) {
      _inherits(ForkEvent, _Description4);
      var _super20 = _createSuper(ForkEvent);
      function ForkEvent() {
        return _classCallCheck(this, ForkEvent), _super20.apply(this, arguments);
      }
      return _createClass(ForkEvent, null, [ {
        key: "isForkEvent",
        value: function(value) {
          return !(!value || !value._isForkEvent);
        }
      } ]), ForkEvent;
    }(Description), Provider = function() {
      function Provider() {
        _classCallCheck(this, Provider), logger$e.checkAbstract(this instanceof Provider ? this.constructor : void 0, Provider), 
        defineReadOnly(this, "_isProvider", !0);
      }
      return _createClass(Provider, [ {
        key: "addListener",
        value: function(eventName, listener) {
          return this.on(eventName, listener);
        }
      }, {
        key: "removeListener",
        value: function(eventName, listener) {
          return this.off(eventName, listener);
        }
      } ], [ {
        key: "isProvider",
        value: function(value) {
          return !(!value || !value._isProvider);
        }
      } ]), Provider;
    }(), __awaiter$2 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$f = new Logger("abstract-signer/5.2.0"), allowedTransactionKeys = [ "accessList", "chainId", "data", "from", "gasLimit", "gasPrice", "nonce", "to", "type", "value" ], forwardErrors = [ Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED ], Signer = function() {
      function Signer() {
        _classCallCheck(this, Signer), logger$f.checkAbstract(this instanceof Signer ? this.constructor : void 0, Signer), 
        defineReadOnly(this, "_isSigner", !0);
      }
      return _createClass(Signer, [ {
        key: "getBalance",
        value: function(blockTag) {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee3() {
            return regeneratorRuntime.wrap((function(_context3) {
              for (;;) switch (_context3.prev = _context3.next) {
               case 0:
                return this._checkProvider("getBalance"), _context3.next = 3, this.provider.getBalance(this.getAddress(), blockTag);

               case 3:
                return _context3.abrupt("return", _context3.sent);

               case 4:
               case "end":
                return _context3.stop();
              }
            }), _callee3, this);
          })));
        }
      }, {
        key: "getTransactionCount",
        value: function(blockTag) {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee4() {
            return regeneratorRuntime.wrap((function(_context4) {
              for (;;) switch (_context4.prev = _context4.next) {
               case 0:
                return this._checkProvider("getTransactionCount"), _context4.next = 3, this.provider.getTransactionCount(this.getAddress(), blockTag);

               case 3:
                return _context4.abrupt("return", _context4.sent);

               case 4:
               case "end":
                return _context4.stop();
              }
            }), _callee4, this);
          })));
        }
      }, {
        key: "estimateGas",
        value: function(transaction) {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee5() {
            var tx;
            return regeneratorRuntime.wrap((function(_context5) {
              for (;;) switch (_context5.prev = _context5.next) {
               case 0:
                return this._checkProvider("estimateGas"), _context5.next = 3, resolveProperties(this.checkTransaction(transaction));

               case 3:
                return tx = _context5.sent, _context5.next = 6, this.provider.estimateGas(tx);

               case 6:
                return _context5.abrupt("return", _context5.sent);

               case 7:
               case "end":
                return _context5.stop();
              }
            }), _callee5, this);
          })));
        }
      }, {
        key: "call",
        value: function(transaction, blockTag) {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee6() {
            var tx;
            return regeneratorRuntime.wrap((function(_context6) {
              for (;;) switch (_context6.prev = _context6.next) {
               case 0:
                return this._checkProvider("call"), _context6.next = 3, resolveProperties(this.checkTransaction(transaction));

               case 3:
                return tx = _context6.sent, _context6.next = 6, this.provider.call(tx, blockTag);

               case 6:
                return _context6.abrupt("return", _context6.sent);

               case 7:
               case "end":
                return _context6.stop();
              }
            }), _callee6, this);
          })));
        }
      }, {
        key: "sendTransaction",
        value: function(transaction) {
          var _this16 = this;
          return this._checkProvider("sendTransaction"), this.populateTransaction(transaction).then((function(tx) {
            return _this16.signTransaction(tx).then((function(signedTx) {
              return _this16.provider.sendTransaction(signedTx);
            }));
          }));
        }
      }, {
        key: "getChainId",
        value: function() {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee7() {
            var network;
            return regeneratorRuntime.wrap((function(_context7) {
              for (;;) switch (_context7.prev = _context7.next) {
               case 0:
                return this._checkProvider("getChainId"), _context7.next = 3, this.provider.getNetwork();

               case 3:
                return network = _context7.sent, _context7.abrupt("return", network.chainId);

               case 5:
               case "end":
                return _context7.stop();
              }
            }), _callee7, this);
          })));
        }
      }, {
        key: "getGasPrice",
        value: function() {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee8() {
            return regeneratorRuntime.wrap((function(_context8) {
              for (;;) switch (_context8.prev = _context8.next) {
               case 0:
                return this._checkProvider("getGasPrice"), _context8.next = 3, this.provider.getGasPrice();

               case 3:
                return _context8.abrupt("return", _context8.sent);

               case 4:
               case "end":
                return _context8.stop();
              }
            }), _callee8, this);
          })));
        }
      }, {
        key: "resolveName",
        value: function(name) {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee9() {
            return regeneratorRuntime.wrap((function(_context9) {
              for (;;) switch (_context9.prev = _context9.next) {
               case 0:
                return this._checkProvider("resolveName"), _context9.next = 3, this.provider.resolveName(name);

               case 3:
                return _context9.abrupt("return", _context9.sent);

               case 4:
               case "end":
                return _context9.stop();
              }
            }), _callee9, this);
          })));
        }
      }, {
        key: "checkTransaction",
        value: function(transaction) {
          for (var _key9 in transaction) -1 === allowedTransactionKeys.indexOf(_key9) && logger$f.throwArgumentError("invalid transaction key: " + _key9, "transaction", transaction);
          var tx = shallowCopy(transaction);
          return null == tx.from ? tx.from = this.getAddress() : tx.from = Promise.all([ Promise.resolve(tx.from), this.getAddress() ]).then((function(result) {
            return result[0].toLowerCase() !== result[1].toLowerCase() && logger$f.throwArgumentError("from address mismatch", "transaction", transaction), 
            result[0];
          })), tx;
        }
      }, {
        key: "populateTransaction",
        value: function(transaction) {
          return __awaiter$2(this, void 0, void 0, regeneratorRuntime.mark((function _callee11() {
            var tx, _this17 = this;
            return regeneratorRuntime.wrap((function(_context11) {
              for (;;) switch (_context11.prev = _context11.next) {
               case 0:
                return _context11.next = 2, resolveProperties(this.checkTransaction(transaction));

               case 2:
                return null != (tx = _context11.sent).to && (tx.to = Promise.resolve(tx.to).then((function(to) {
                  return __awaiter$2(_this17, void 0, void 0, regeneratorRuntime.mark((function _callee10() {
                    var address;
                    return regeneratorRuntime.wrap((function(_context10) {
                      for (;;) switch (_context10.prev = _context10.next) {
                       case 0:
                        if (null != to) {
                          _context10.next = 2;
                          break;
                        }
                        return _context10.abrupt("return", null);

                       case 2:
                        return _context10.next = 4, this.resolveName(to);

                       case 4:
                        return null == (address = _context10.sent) && logger$f.throwArgumentError("provided ENS name resolves to null", "tx.to", to), 
                        _context10.abrupt("return", address);

                       case 7:
                       case "end":
                        return _context10.stop();
                      }
                    }), _callee10, this);
                  })));
                }))), null == tx.gasPrice && (tx.gasPrice = this.getGasPrice()), null == tx.nonce && (tx.nonce = this.getTransactionCount("pending")), 
                null == tx.gasLimit && (tx.gasLimit = this.estimateGas(tx).catch((function(error) {
                  if (forwardErrors.indexOf(error.code) >= 0) throw error;
                  return logger$f.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                    error,
                    tx
                  });
                }))), null == tx.chainId ? tx.chainId = this.getChainId() : tx.chainId = Promise.all([ Promise.resolve(tx.chainId), this.getChainId() ]).then((function(results) {
                  return 0 !== results[1] && results[0] !== results[1] && logger$f.throwArgumentError("chainId address mismatch", "transaction", transaction), 
                  results[0];
                })), _context11.next = 10, resolveProperties(tx);

               case 10:
                return _context11.abrupt("return", _context11.sent);

               case 11:
               case "end":
                return _context11.stop();
              }
            }), _callee11, this);
          })));
        }
      }, {
        key: "_checkProvider",
        value: function(operation) {
          this.provider || logger$f.throwError("missing provider", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: operation || "_checkProvider"
          });
        }
      } ], [ {
        key: "isSigner",
        value: function(value) {
          return !(!value || !value._isSigner);
        }
      } ]), Signer;
    }(), VoidSigner = function(_Signer) {
      _inherits(VoidSigner, _Signer);
      var _super24 = _createSuper(VoidSigner);
      function VoidSigner(address, provider) {
        var _this18;
        return _classCallCheck(this, VoidSigner), logger$f.checkNew(this instanceof VoidSigner ? this.constructor : void 0, VoidSigner), 
        defineReadOnly(_assertThisInitialized(_this18 = _super24.call(this)), "address", address), 
        defineReadOnly(_assertThisInitialized(_this18), "provider", provider || null), _this18;
      }
      return _createClass(VoidSigner, [ {
        key: "getAddress",
        value: function() {
          return Promise.resolve(this.address);
        }
      }, {
        key: "_fail",
        value: function(message, operation) {
          return Promise.resolve().then((function() {
            logger$f.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, {
              operation
            });
          }));
        }
      }, {
        key: "signMessage",
        value: function(message) {
          return this._fail("VoidSigner cannot sign messages", "signMessage");
        }
      }, {
        key: "signTransaction",
        value: function(transaction) {
          return this._fail("VoidSigner cannot sign transactions", "signTransaction");
        }
      }, {
        key: "_signTypedData",
        value: function(domain, types, value) {
          return this._fail("VoidSigner cannot sign typed data", "signTypedData");
        }
      }, {
        key: "connect",
        value: function(provider) {
          return new VoidSigner(this.address, provider);
        }
      } ]), VoidSigner;
    }(Signer), minimalisticAssert = assert;
    function assert(val, msg) {
      if (!val) throw new Error(msg || "Assertion failed");
    }
    assert.equal = function(l, r, msg) {
      if (l != r) throw new Error(msg || "Assertion failed: " + l + " != " + r);
    };
    var inherits_browser = createCommonjsModule((function(module) {
      "function" == typeof Object.create ? module.exports = function(ctor, superCtor) {
        superCtor && (ctor.super_ = superCtor, ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: !1,
            writable: !0,
            configurable: !0
          }
        }));
      } : module.exports = function(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {};
          TempCtor.prototype = superCtor.prototype, ctor.prototype = new TempCtor, ctor.prototype.constructor = ctor;
        }
      };
    }));
    var toArray_1 = function(msg, enc) {
      if (Array.isArray(msg)) return msg.slice();
      if (!msg) return [];
      var res = [];
      if ("string" == typeof msg) if (enc) {
        if ("hex" === enc) for ((msg = msg.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (msg = "0" + msg), 
        i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i), hi = c >> 8, lo = 255 & c;
        hi ? res.push(hi, lo) : res.push(lo);
      } else for (i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
      return res;
    };
    var toHex_1 = function(msg) {
      for (var res = "", i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
      return res;
    };
    function htonl(w) {
      return (w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (255 & w) << 24) >>> 0;
    }
    var toHex32_1 = function(msg, endian) {
      for (var res = "", i = 0; i < msg.length; i++) {
        var w = msg[i];
        "little" === endian && (w = htonl(w)), res += zero8(w.toString(16));
      }
      return res;
    };
    function zero2(word) {
      return 1 === word.length ? "0" + word : word;
    }
    function zero8(word) {
      return 7 === word.length ? "0" + word : 6 === word.length ? "00" + word : 5 === word.length ? "000" + word : 4 === word.length ? "0000" + word : 3 === word.length ? "00000" + word : 2 === word.length ? "000000" + word : 1 === word.length ? "0000000" + word : word;
    }
    var join32_1 = function(msg, start, end, endian) {
      var len = end - start;
      minimalisticAssert(len % 4 == 0);
      for (var res = new Array(len / 4), i = 0, k = start; i < res.length; i++, k += 4) {
        var w;
        w = "big" === endian ? msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3] : msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k], 
        res[i] = w >>> 0;
      }
      return res;
    };
    var split32_1 = function(msg, endian) {
      for (var res = new Array(4 * msg.length), i = 0, k = 0; i < msg.length; i++, k += 4) {
        var m = msg[i];
        "big" === endian ? (res[k] = m >>> 24, res[k + 1] = m >>> 16 & 255, res[k + 2] = m >>> 8 & 255, 
        res[k + 3] = 255 & m) : (res[k + 3] = m >>> 24, res[k + 2] = m >>> 16 & 255, res[k + 1] = m >>> 8 & 255, 
        res[k] = 255 & m);
      }
      return res;
    };
    var utils = {
      inherits: createCommonjsModule((function(module) {
        try {
          if ("function" != typeof null.inherits) throw "";
          module.exports = null.inherits;
        } catch (e) {
          module.exports = inherits_browser;
        }
      })),
      toArray: toArray_1,
      toHex: toHex_1,
      htonl,
      toHex32: toHex32_1,
      zero2,
      zero8,
      join32: join32_1,
      split32: split32_1,
      rotr32: function(w, b) {
        return w >>> b | w << 32 - b;
      },
      rotl32: function(w, b) {
        return w << b | w >>> 32 - b;
      },
      sum32: function(a, b) {
        return a + b >>> 0;
      },
      sum32_3: function(a, b, c) {
        return a + b + c >>> 0;
      },
      sum32_4: function(a, b, c, d) {
        return a + b + c + d >>> 0;
      },
      sum32_5: function(a, b, c, d, e) {
        return a + b + c + d + e >>> 0;
      },
      sum64: function(buf, pos, ah, al) {
        var bh = buf[pos], lo = al + buf[pos + 1] >>> 0, hi = (lo < al ? 1 : 0) + ah + bh;
        buf[pos] = hi >>> 0, buf[pos + 1] = lo;
      },
      sum64_hi: function(ah, al, bh, bl) {
        return (al + bl >>> 0 < al ? 1 : 0) + ah + bh >>> 0;
      },
      sum64_lo: function(ah, al, bh, bl) {
        return al + bl >>> 0;
      },
      sum64_4_hi: function(ah, al, bh, bl, ch, cl, dh, dl) {
        var carry = 0, lo = al;
        return carry += (lo = lo + bl >>> 0) < al ? 1 : 0, carry += (lo = lo + cl >>> 0) < cl ? 1 : 0, 
        ah + bh + ch + dh + (carry += (lo = lo + dl >>> 0) < dl ? 1 : 0) >>> 0;
      },
      sum64_4_lo: function(ah, al, bh, bl, ch, cl, dh, dl) {
        return al + bl + cl + dl >>> 0;
      },
      sum64_5_hi: function(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var carry = 0, lo = al;
        return carry += (lo = lo + bl >>> 0) < al ? 1 : 0, carry += (lo = lo + cl >>> 0) < cl ? 1 : 0, 
        carry += (lo = lo + dl >>> 0) < dl ? 1 : 0, ah + bh + ch + dh + eh + (carry += (lo = lo + el >>> 0) < el ? 1 : 0) >>> 0;
      },
      sum64_5_lo: function(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        return al + bl + cl + dl + el >>> 0;
      },
      rotr64_hi: function(ah, al, num) {
        return (al << 32 - num | ah >>> num) >>> 0;
      },
      rotr64_lo: function(ah, al, num) {
        return (ah << 32 - num | al >>> num) >>> 0;
      },
      shr64_hi: function(ah, al, num) {
        return ah >>> num;
      },
      shr64_lo: function(ah, al, num) {
        return (ah << 32 - num | al >>> num) >>> 0;
      }
    };
    function BlockHash() {
      this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, 
      this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, 
      this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, 
      this._delta32 = this.blockSize / 32;
    }
    var BlockHash_1 = BlockHash;
    BlockHash.prototype.update = function(msg, enc) {
      if (msg = utils.toArray(msg, enc), this.pending ? this.pending = this.pending.concat(msg) : this.pending = msg, 
      this.pendingTotal += msg.length, this.pending.length >= this._delta8) {
        var r = (msg = this.pending).length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length), 0 === this.pending.length && (this.pending = null), 
        msg = utils.join32(msg, 0, msg.length - r, this.endian);
        for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);
      }
      return this;
    }, BlockHash.prototype.digest = function(enc) {
      return this.update(this._pad()), minimalisticAssert(null === this.pending), this._digest(enc);
    }, BlockHash.prototype._pad = function() {
      var len = this.pendingTotal, bytes = this._delta8, k = bytes - (len + this.padLength) % bytes, res = new Array(k + this.padLength);
      res[0] = 128;
      for (var i = 1; i < k; i++) res[i] = 0;
      if (len <<= 3, "big" === this.endian) {
        for (var t = 8; t < this.padLength; t++) res[i++] = 0;
        res[i++] = 0, res[i++] = 0, res[i++] = 0, res[i++] = 0, res[i++] = len >>> 24 & 255, 
        res[i++] = len >>> 16 & 255, res[i++] = len >>> 8 & 255, res[i++] = 255 & len;
      } else for (res[i++] = 255 & len, res[i++] = len >>> 8 & 255, res[i++] = len >>> 16 & 255, 
      res[i++] = len >>> 24 & 255, res[i++] = 0, res[i++] = 0, res[i++] = 0, res[i++] = 0, 
      t = 8; t < this.padLength; t++) res[i++] = 0;
      return res;
    };
    var common = {
      BlockHash: BlockHash_1
    }, rotr32$1 = utils.rotr32;
    var ft_1_1 = function(s, x, y, z) {
      return 0 === s ? ch32(x, y, z) : 1 === s || 3 === s ? p32(x, y, z) : 2 === s ? maj32(x, y, z) : void 0;
    };
    function ch32(x, y, z) {
      return x & y ^ ~x & z;
    }
    function maj32(x, y, z) {
      return x & y ^ x & z ^ y & z;
    }
    function p32(x, y, z) {
      return x ^ y ^ z;
    }
    var s0_256_1 = function(x) {
      return rotr32$1(x, 2) ^ rotr32$1(x, 13) ^ rotr32$1(x, 22);
    };
    var s1_256_1 = function(x) {
      return rotr32$1(x, 6) ^ rotr32$1(x, 11) ^ rotr32$1(x, 25);
    };
    var g0_256_1 = function(x) {
      return rotr32$1(x, 7) ^ rotr32$1(x, 18) ^ x >>> 3;
    };
    var g1_256_1 = function(x) {
      return rotr32$1(x, 17) ^ rotr32$1(x, 19) ^ x >>> 10;
    }, common$1 = {
      ft_1: ft_1_1,
      ch32,
      maj32,
      p32,
      s0_256: s0_256_1,
      s1_256: s1_256_1,
      g0_256: g0_256_1,
      g1_256: g1_256_1
    }, rotl32$1 = utils.rotl32, sum32$1 = utils.sum32, sum32_5$1 = utils.sum32_5, ft_1$1 = common$1.ft_1, BlockHash$1 = common.BlockHash, sha1_K = [ 1518500249, 1859775393, 2400959708, 3395469782 ];
    function SHA1() {
      if (!(this instanceof SHA1)) return new SHA1;
      BlockHash$1.call(this), this.h = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ], 
      this.W = new Array(80);
    }
    utils.inherits(SHA1, BlockHash$1);
    var _1 = SHA1;
    SHA1.blockSize = 512, SHA1.outSize = 160, SHA1.hmacStrength = 80, SHA1.padLength = 64, 
    SHA1.prototype._update = function(msg, start) {
      for (var W = this.W, i = 0; i < 16; i++) W[i] = msg[start + i];
      for (;i < W.length; i++) W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
      var a = this.h[0], b = this.h[1], c = this.h[2], d = this.h[3], e = this.h[4];
      for (i = 0; i < W.length; i++) {
        var s = ~~(i / 20), t = sum32_5$1(rotl32$1(a, 5), ft_1$1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d, d = c, c = rotl32$1(b, 30), b = a, a = t;
      }
      this.h[0] = sum32$1(this.h[0], a), this.h[1] = sum32$1(this.h[1], b), this.h[2] = sum32$1(this.h[2], c), 
      this.h[3] = sum32$1(this.h[3], d), this.h[4] = sum32$1(this.h[4], e);
    }, SHA1.prototype._digest = function(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
    };
    var sum32$2 = utils.sum32, sum32_4$1 = utils.sum32_4, sum32_5$2 = utils.sum32_5, ch32$1 = common$1.ch32, maj32$1 = common$1.maj32, s0_256$1 = common$1.s0_256, s1_256$1 = common$1.s1_256, g0_256$1 = common$1.g0_256, g1_256$1 = common$1.g1_256, BlockHash$2 = common.BlockHash, sha256_K = [ 1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298 ];
    function SHA256() {
      if (!(this instanceof SHA256)) return new SHA256;
      BlockHash$2.call(this), this.h = [ 1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225 ], 
      this.k = sha256_K, this.W = new Array(64);
    }
    utils.inherits(SHA256, BlockHash$2);
    var _256 = SHA256;
    function SHA224() {
      if (!(this instanceof SHA224)) return new SHA224;
      _256.call(this), this.h = [ 3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428 ];
    }
    SHA256.blockSize = 512, SHA256.outSize = 256, SHA256.hmacStrength = 192, SHA256.padLength = 64, 
    SHA256.prototype._update = function(msg, start) {
      for (var W = this.W, i = 0; i < 16; i++) W[i] = msg[start + i];
      for (;i < W.length; i++) W[i] = sum32_4$1(g1_256$1(W[i - 2]), W[i - 7], g0_256$1(W[i - 15]), W[i - 16]);
      var a = this.h[0], b = this.h[1], c = this.h[2], d = this.h[3], e = this.h[4], f = this.h[5], g = this.h[6], h = this.h[7];
      for (minimalisticAssert(this.k.length === W.length), i = 0; i < W.length; i++) {
        var T1 = sum32_5$2(h, s1_256$1(e), ch32$1(e, f, g), this.k[i], W[i]), T2 = sum32$2(s0_256$1(a), maj32$1(a, b, c));
        h = g, g = f, f = e, e = sum32$2(d, T1), d = c, c = b, b = a, a = sum32$2(T1, T2);
      }
      this.h[0] = sum32$2(this.h[0], a), this.h[1] = sum32$2(this.h[1], b), this.h[2] = sum32$2(this.h[2], c), 
      this.h[3] = sum32$2(this.h[3], d), this.h[4] = sum32$2(this.h[4], e), this.h[5] = sum32$2(this.h[5], f), 
      this.h[6] = sum32$2(this.h[6], g), this.h[7] = sum32$2(this.h[7], h);
    }, SHA256.prototype._digest = function(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
    }, utils.inherits(SHA224, _256);
    var _224 = SHA224;
    SHA224.blockSize = 512, SHA224.outSize = 224, SHA224.hmacStrength = 192, SHA224.padLength = 64, 
    SHA224.prototype._digest = function(enc) {
      return "hex" === enc ? utils.toHex32(this.h.slice(0, 7), "big") : utils.split32(this.h.slice(0, 7), "big");
    };
    var rotr64_hi$1 = utils.rotr64_hi, rotr64_lo$1 = utils.rotr64_lo, shr64_hi$1 = utils.shr64_hi, shr64_lo$1 = utils.shr64_lo, sum64$1 = utils.sum64, sum64_hi$1 = utils.sum64_hi, sum64_lo$1 = utils.sum64_lo, sum64_4_hi$1 = utils.sum64_4_hi, sum64_4_lo$1 = utils.sum64_4_lo, sum64_5_hi$1 = utils.sum64_5_hi, sum64_5_lo$1 = utils.sum64_5_lo, BlockHash$3 = common.BlockHash, sha512_K = [ 1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591 ];
    function SHA512() {
      if (!(this instanceof SHA512)) return new SHA512;
      BlockHash$3.call(this), this.h = [ 1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209 ], 
      this.k = sha512_K, this.W = new Array(160);
    }
    utils.inherits(SHA512, BlockHash$3);
    var _512 = SHA512;
    function ch64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ ~xh & zh;
      return r < 0 && (r += 4294967296), r;
    }
    function ch64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ ~xl & zl;
      return r < 0 && (r += 4294967296), r;
    }
    function maj64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ xh & zh ^ yh & zh;
      return r < 0 && (r += 4294967296), r;
    }
    function maj64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ xl & zl ^ yl & zl;
      return r < 0 && (r += 4294967296), r;
    }
    function s0_512_hi(xh, xl) {
      var r = rotr64_hi$1(xh, xl, 28) ^ rotr64_hi$1(xl, xh, 2) ^ rotr64_hi$1(xl, xh, 7);
      return r < 0 && (r += 4294967296), r;
    }
    function s0_512_lo(xh, xl) {
      var r = rotr64_lo$1(xh, xl, 28) ^ rotr64_lo$1(xl, xh, 2) ^ rotr64_lo$1(xl, xh, 7);
      return r < 0 && (r += 4294967296), r;
    }
    function s1_512_hi(xh, xl) {
      var r = rotr64_hi$1(xh, xl, 14) ^ rotr64_hi$1(xh, xl, 18) ^ rotr64_hi$1(xl, xh, 9);
      return r < 0 && (r += 4294967296), r;
    }
    function s1_512_lo(xh, xl) {
      var r = rotr64_lo$1(xh, xl, 14) ^ rotr64_lo$1(xh, xl, 18) ^ rotr64_lo$1(xl, xh, 9);
      return r < 0 && (r += 4294967296), r;
    }
    function g0_512_hi(xh, xl) {
      var r = rotr64_hi$1(xh, xl, 1) ^ rotr64_hi$1(xh, xl, 8) ^ shr64_hi$1(xh, xl, 7);
      return r < 0 && (r += 4294967296), r;
    }
    function g0_512_lo(xh, xl) {
      var r = rotr64_lo$1(xh, xl, 1) ^ rotr64_lo$1(xh, xl, 8) ^ shr64_lo$1(xh, xl, 7);
      return r < 0 && (r += 4294967296), r;
    }
    function g1_512_hi(xh, xl) {
      var r = rotr64_hi$1(xh, xl, 19) ^ rotr64_hi$1(xl, xh, 29) ^ shr64_hi$1(xh, xl, 6);
      return r < 0 && (r += 4294967296), r;
    }
    function g1_512_lo(xh, xl) {
      var r = rotr64_lo$1(xh, xl, 19) ^ rotr64_lo$1(xl, xh, 29) ^ shr64_lo$1(xh, xl, 6);
      return r < 0 && (r += 4294967296), r;
    }
    function SHA384() {
      if (!(this instanceof SHA384)) return new SHA384;
      _512.call(this), this.h = [ 3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428 ];
    }
    SHA512.blockSize = 1024, SHA512.outSize = 512, SHA512.hmacStrength = 192, SHA512.padLength = 128, 
    SHA512.prototype._prepareBlock = function(msg, start) {
      for (var W = this.W, i = 0; i < 32; i++) W[i] = msg[start + i];
      for (;i < W.length; i += 2) {
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]), c0_lo = g1_512_lo(W[i - 4], W[i - 3]), c1_hi = W[i - 14], c1_lo = W[i - 13], c2_hi = g0_512_hi(W[i - 30], W[i - 29]), c2_lo = g0_512_lo(W[i - 30], W[i - 29]), c3_hi = W[i - 32], c3_lo = W[i - 31];
        W[i] = sum64_4_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo), W[i + 1] = sum64_4_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
      }
    }, SHA512.prototype._update = function(msg, start) {
      this._prepareBlock(msg, start);
      var W = this.W, ah = this.h[0], al = this.h[1], bh = this.h[2], bl = this.h[3], ch = this.h[4], cl = this.h[5], dh = this.h[6], dl = this.h[7], eh = this.h[8], el = this.h[9], fh = this.h[10], fl = this.h[11], gh = this.h[12], gl = this.h[13], hh = this.h[14], hl = this.h[15];
      minimalisticAssert(this.k.length === W.length);
      for (var i = 0; i < W.length; i += 2) {
        var c0_hi = hh, c0_lo = hl, c1_hi = s1_512_hi(eh, el), c1_lo = s1_512_lo(eh, el), c2_hi = ch64_hi(eh, el, fh, fl, gh), c2_lo = ch64_lo(eh, el, fh, fl, gh, gl), c3_hi = this.k[i], c3_lo = this.k[i + 1], c4_hi = W[i], c4_lo = W[i + 1], T1_hi = sum64_5_hi$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo), T1_lo = sum64_5_lo$1(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        c0_hi = s0_512_hi(ah, al), c0_lo = s0_512_lo(ah, al), c1_hi = maj64_hi(ah, al, bh, bl, ch), 
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = sum64_hi$1(c0_hi, c0_lo, c1_hi, c1_lo), T2_lo = sum64_lo$1(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh, hl = gl, gh = fh, gl = fl, fh = eh, fl = el, eh = sum64_hi$1(dh, dl, T1_hi, T1_lo), 
        el = sum64_lo$1(dl, dl, T1_hi, T1_lo), dh = ch, dl = cl, ch = bh, cl = bl, bh = ah, 
        bl = al, ah = sum64_hi$1(T1_hi, T1_lo, T2_hi, T2_lo), al = sum64_lo$1(T1_hi, T1_lo, T2_hi, T2_lo);
      }
      sum64$1(this.h, 0, ah, al), sum64$1(this.h, 2, bh, bl), sum64$1(this.h, 4, ch, cl), 
      sum64$1(this.h, 6, dh, dl), sum64$1(this.h, 8, eh, el), sum64$1(this.h, 10, fh, fl), 
      sum64$1(this.h, 12, gh, gl), sum64$1(this.h, 14, hh, hl);
    }, SHA512.prototype._digest = function(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
    }, utils.inherits(SHA384, _512);
    var _384 = SHA384;
    SHA384.blockSize = 1024, SHA384.outSize = 384, SHA384.hmacStrength = 192, SHA384.padLength = 128, 
    SHA384.prototype._digest = function(enc) {
      return "hex" === enc ? utils.toHex32(this.h.slice(0, 12), "big") : utils.split32(this.h.slice(0, 12), "big");
    };
    var sha = {
      sha1: _1,
      sha224: _224,
      sha256: _256,
      sha384: _384,
      sha512: _512
    }, rotl32$2 = utils.rotl32, sum32$3 = utils.sum32, sum32_3$1 = utils.sum32_3, sum32_4$2 = utils.sum32_4, BlockHash$4 = common.BlockHash;
    function RIPEMD160() {
      if (!(this instanceof RIPEMD160)) return new RIPEMD160;
      BlockHash$4.call(this), this.h = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ], 
      this.endian = "little";
    }
    utils.inherits(RIPEMD160, BlockHash$4);
    var ripemd160 = RIPEMD160;
    function f(j, x, y, z) {
      return j <= 15 ? x ^ y ^ z : j <= 31 ? x & y | ~x & z : j <= 47 ? (x | ~y) ^ z : j <= 63 ? x & z | y & ~z : x ^ (y | ~z);
    }
    function K(j) {
      return j <= 15 ? 0 : j <= 31 ? 1518500249 : j <= 47 ? 1859775393 : j <= 63 ? 2400959708 : 2840853838;
    }
    function Kh(j) {
      return j <= 15 ? 1352829926 : j <= 31 ? 1548603684 : j <= 47 ? 1836072691 : j <= 63 ? 2053994217 : 0;
    }
    RIPEMD160.blockSize = 512, RIPEMD160.outSize = 160, RIPEMD160.hmacStrength = 192, 
    RIPEMD160.padLength = 64, RIPEMD160.prototype._update = function(msg, start) {
      for (var A = this.h[0], B = this.h[1], C = this.h[2], D = this.h[3], E = this.h[4], Ah = A, Bh = B, Ch = C, Dh = D, Eh = E, j = 0; j < 80; j++) {
        var T = sum32$3(rotl32$2(sum32_4$2(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
        A = E, E = D, D = rotl32$2(C, 10), C = B, B = T, T = sum32$3(rotl32$2(sum32_4$2(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh), 
        Ah = Eh, Eh = Dh, Dh = rotl32$2(Ch, 10), Ch = Bh, Bh = T;
      }
      T = sum32_3$1(this.h[1], C, Dh), this.h[1] = sum32_3$1(this.h[2], D, Eh), this.h[2] = sum32_3$1(this.h[3], E, Ah), 
      this.h[3] = sum32_3$1(this.h[4], A, Bh), this.h[4] = sum32_3$1(this.h[0], B, Ch), 
      this.h[0] = T;
    }, RIPEMD160.prototype._digest = function(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "little") : utils.split32(this.h, "little");
    };
    var r = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13 ], rh = [ 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11 ], s = [ 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6 ], sh = [ 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11 ], ripemd = {
      ripemd160
    };
    function Hmac(hash, key, enc) {
      if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
      this.Hash = hash, this.blockSize = hash.blockSize / 8, this.outSize = hash.outSize / 8, 
      this.inner = null, this.outer = null, this._init(utils.toArray(key, enc));
    }
    var hmac = Hmac;
    Hmac.prototype._init = function(key) {
      key.length > this.blockSize && (key = (new this.Hash).update(key).digest()), minimalisticAssert(key.length <= this.blockSize);
      for (var i = key.length; i < this.blockSize; i++) key.push(0);
      for (i = 0; i < key.length; i++) key[i] ^= 54;
      for (this.inner = (new this.Hash).update(key), i = 0; i < key.length; i++) key[i] ^= 106;
      this.outer = (new this.Hash).update(key);
    }, Hmac.prototype.update = function(msg, enc) {
      return this.inner.update(msg, enc), this;
    }, Hmac.prototype.digest = function(enc) {
      return this.outer.update(this.inner.digest()), this.outer.digest(enc);
    };
    var hash_1 = createCommonjsModule((function(module, exports) {
      var hash = exports;
      hash.utils = utils, hash.common = common, hash.sha = sha, hash.ripemd = ripemd, 
      hash.hmac = hmac, hash.sha1 = hash.sha.sha1, hash.sha256 = hash.sha.sha256, hash.sha224 = hash.sha.sha224, 
      hash.sha384 = hash.sha.sha384, hash.sha512 = hash.sha.sha512, hash.ripemd160 = hash.ripemd.ripemd160;
    }));
    "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof self && self;
    function createCommonjsModule$1(fn, basedir, module) {
      return module = {
        path: basedir,
        exports: {},
        require: function(path, base) {
          return function() {
            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
          }(null == base && module.path);
        }
      }, fn(module, module.exports), module.exports;
    }
    var minimalisticAssert$1 = assert$1;
    function assert$1(val, msg) {
      if (!val) throw new Error(msg || "Assertion failed");
    }
    assert$1.equal = function(l, r, msg) {
      if (l != r) throw new Error(msg || "Assertion failed: " + l + " != " + r);
    };
    var utils_1 = createCommonjsModule$1((function(module, exports) {
      var utils = exports;
      function zero2(word) {
        return 1 === word.length ? "0" + word : word;
      }
      function toHex(msg) {
        for (var res = "", i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
        return res;
      }
      utils.toArray = function(msg, enc) {
        if (Array.isArray(msg)) return msg.slice();
        if (!msg) return [];
        var res = [];
        if ("string" != typeof msg) {
          for (var i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
          return res;
        }
        if ("hex" === enc) {
          (msg = msg.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (msg = "0" + msg);
          for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
        } else for (i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i), hi = c >> 8, lo = 255 & c;
          hi ? res.push(hi, lo) : res.push(lo);
        }
        return res;
      }, utils.zero2 = zero2, utils.toHex = toHex, utils.encode = function(arr, enc) {
        return "hex" === enc ? toHex(arr) : arr;
      };
    })), utils_1$1 = createCommonjsModule$1((function(module, exports) {
      var utils = exports;
      utils.assert = minimalisticAssert$1, utils.toArray = utils_1.toArray, utils.zero2 = utils_1.zero2, 
      utils.toHex = utils_1.toHex, utils.encode = utils_1.encode, utils.getNAF = function(num, w, bits) {
        var naf = new Array(Math.max(num.bitLength(), bits) + 1);
        naf.fill(0);
        for (var ws = 1 << w + 1, k = num.clone(), i = 0; i < naf.length; i++) {
          var z, mod = k.andln(ws - 1);
          k.isOdd() ? (z = mod > (ws >> 1) - 1 ? (ws >> 1) - mod : mod, k.isubn(z)) : z = 0, 
          naf[i] = z, k.iushrn(1);
        }
        return naf;
      }, utils.getJSF = function(k1, k2) {
        var jsf = [ [], [] ];
        k1 = k1.clone(), k2 = k2.clone();
        for (var m8, d1 = 0, d2 = 0; k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0; ) {
          var u1, u2, m14 = k1.andln(3) + d1 & 3, m24 = k2.andln(3) + d2 & 3;
          3 === m14 && (m14 = -1), 3 === m24 && (m24 = -1), u1 = 0 == (1 & m14) ? 0 : 3 !== (m8 = k1.andln(7) + d1 & 7) && 5 !== m8 || 2 !== m24 ? m14 : -m14, 
          jsf[0].push(u1), u2 = 0 == (1 & m24) ? 0 : 3 !== (m8 = k2.andln(7) + d2 & 7) && 5 !== m8 || 2 !== m14 ? m24 : -m24, 
          jsf[1].push(u2), 2 * d1 === u1 + 1 && (d1 = 1 - d1), 2 * d2 === u2 + 1 && (d2 = 1 - d2), 
          k1.iushrn(1), k2.iushrn(1);
        }
        return jsf;
      }, utils.cachedProperty = function(obj, name, computer) {
        var key = "_" + name;
        obj.prototype[name] = function() {
          return void 0 !== this[key] ? this[key] : this[key] = computer.call(this);
        };
      }, utils.parseBytes = function(bytes) {
        return "string" == typeof bytes ? utils.toArray(bytes, "hex") : bytes;
      }, utils.intFromLE = function(bytes) {
        return new bn(bytes, "hex", "le");
      };
    })), getNAF = utils_1$1.getNAF, getJSF = utils_1$1.getJSF, assert$1$1 = utils_1$1.assert;
    function BaseCurve(type, conf) {
      this.type = type, this.p = new bn(conf.p, 16), this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p), 
      this.zero = new bn(0).toRed(this.red), this.one = new bn(1).toRed(this.red), this.two = new bn(2).toRed(this.red), 
      this.n = conf.n && new bn(conf.n, 16), this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed), 
      this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), 
      this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
      var adjustCount = this.n && this.p.div(this.n);
      !adjustCount || adjustCount.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, 
      this.redN = this.n.toRed(this.red));
    }
    var base = BaseCurve;
    function BasePoint(curve, type) {
      this.curve = curve, this.type = type, this.precomputed = null;
    }
    BaseCurve.prototype.point = function() {
      throw new Error("Not implemented");
    }, BaseCurve.prototype.validate = function() {
      throw new Error("Not implemented");
    }, BaseCurve.prototype._fixedNafMul = function(p, k) {
      assert$1$1(p.precomputed);
      var doubles = p._getDoubles(), naf = getNAF(k, 1, this._bitLength), I = (1 << doubles.step + 1) - (doubles.step % 2 == 0 ? 2 : 1);
      I /= 3;
      var j, nafW, repr = [];
      for (j = 0; j < naf.length; j += doubles.step) {
        nafW = 0;
        for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];
        repr.push(nafW);
      }
      for (var a = this.jpoint(null, null, null), b = this.jpoint(null, null, null), i = I; i > 0; i--) {
        for (j = 0; j < repr.length; j++) (nafW = repr[j]) === i ? b = b.mixedAdd(doubles.points[j]) : nafW === -i && (b = b.mixedAdd(doubles.points[j].neg()));
        a = a.add(b);
      }
      return a.toP();
    }, BaseCurve.prototype._wnafMul = function(p, k) {
      var w = 4, nafPoints = p._getNAFPoints(w);
      w = nafPoints.wnd;
      for (var wnd = nafPoints.points, naf = getNAF(k, w, this._bitLength), acc = this.jpoint(null, null, null), i = naf.length - 1; i >= 0; i--) {
        for (var l = 0; i >= 0 && 0 === naf[i]; i--) l++;
        if (i >= 0 && l++, acc = acc.dblp(l), i < 0) break;
        var z = naf[i];
        assert$1$1(0 !== z), acc = "affine" === p.type ? z > 0 ? acc.mixedAdd(wnd[z - 1 >> 1]) : acc.mixedAdd(wnd[-z - 1 >> 1].neg()) : z > 0 ? acc.add(wnd[z - 1 >> 1]) : acc.add(wnd[-z - 1 >> 1].neg());
      }
      return "affine" === p.type ? acc.toP() : acc;
    }, BaseCurve.prototype._wnafMulAdd = function(defW, points, coeffs, len, jacobianResult) {
      var i, j, p, wndWidth = this._wnafT1, wnd = this._wnafT2, naf = this._wnafT3, max = 0;
      for (i = 0; i < len; i++) {
        var nafPoints = (p = points[i])._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd, wnd[i] = nafPoints.points;
      }
      for (i = len - 1; i >= 1; i -= 2) {
        var a = i - 1, b = i;
        if (1 === wndWidth[a] && 1 === wndWidth[b]) {
          var comb = [ points[a], null, null, points[b] ];
          0 === points[a].y.cmp(points[b].y) ? (comb[1] = points[a].add(points[b]), comb[2] = points[a].toJ().mixedAdd(points[b].neg())) : 0 === points[a].y.cmp(points[b].y.redNeg()) ? (comb[1] = points[a].toJ().mixedAdd(points[b]), 
          comb[2] = points[a].add(points[b].neg())) : (comb[1] = points[a].toJ().mixedAdd(points[b]), 
          comb[2] = points[a].toJ().mixedAdd(points[b].neg()));
          var index = [ -3, -1, -5, -7, 0, 7, 5, 1, 3 ], jsf = getJSF(coeffs[a], coeffs[b]);
          for (max = Math.max(jsf[0].length, max), naf[a] = new Array(max), naf[b] = new Array(max), 
          j = 0; j < max; j++) {
            var ja = 0 | jsf[0][j], jb = 0 | jsf[1][j];
            naf[a][j] = index[3 * (ja + 1) + (jb + 1)], naf[b][j] = 0, wnd[a] = comb;
          }
        } else naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength), naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength), 
        max = Math.max(naf[a].length, max), max = Math.max(naf[b].length, max);
      }
      var acc = this.jpoint(null, null, null), tmp = this._wnafT4;
      for (i = max; i >= 0; i--) {
        for (var k = 0; i >= 0; ) {
          var zero = !0;
          for (j = 0; j < len; j++) tmp[j] = 0 | naf[j][i], 0 !== tmp[j] && (zero = !1);
          if (!zero) break;
          k++, i--;
        }
        if (i >= 0 && k++, acc = acc.dblp(k), i < 0) break;
        for (j = 0; j < len; j++) {
          var z = tmp[j];
          0 !== z && (z > 0 ? p = wnd[j][z - 1 >> 1] : z < 0 && (p = wnd[j][-z - 1 >> 1].neg()), 
          acc = "affine" === p.type ? acc.mixedAdd(p) : acc.add(p));
        }
      }
      for (i = 0; i < len; i++) wnd[i] = null;
      return jacobianResult ? acc : acc.toP();
    }, BaseCurve.BasePoint = BasePoint, BasePoint.prototype.eq = function() {
      throw new Error("Not implemented");
    }, BasePoint.prototype.validate = function() {
      return this.curve.validate(this);
    }, BaseCurve.prototype.decodePoint = function(bytes, enc) {
      bytes = utils_1$1.toArray(bytes, enc);
      var len = this.p.byteLength();
      if ((4 === bytes[0] || 6 === bytes[0] || 7 === bytes[0]) && bytes.length - 1 == 2 * len) return 6 === bytes[0] ? assert$1$1(bytes[bytes.length - 1] % 2 == 0) : 7 === bytes[0] && assert$1$1(bytes[bytes.length - 1] % 2 == 1), 
      this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
      if ((2 === bytes[0] || 3 === bytes[0]) && bytes.length - 1 === len) return this.pointFromX(bytes.slice(1, 1 + len), 3 === bytes[0]);
      throw new Error("Unknown point format");
    }, BasePoint.prototype.encodeCompressed = function(enc) {
      return this.encode(enc, !0);
    }, BasePoint.prototype._encode = function(compact) {
      var len = this.curve.p.byteLength(), x = this.getX().toArray("be", len);
      return compact ? [ this.getY().isEven() ? 2 : 3 ].concat(x) : [ 4 ].concat(x, this.getY().toArray("be", len));
    }, BasePoint.prototype.encode = function(enc, compact) {
      return utils_1$1.encode(this._encode(compact), enc);
    }, BasePoint.prototype.precompute = function(power) {
      if (this.precomputed) return this;
      var precomputed = {
        doubles: null,
        naf: null,
        beta: null
      };
      return precomputed.naf = this._getNAFPoints(8), precomputed.doubles = this._getDoubles(4, power), 
      precomputed.beta = this._getBeta(), this.precomputed = precomputed, this;
    }, BasePoint.prototype._hasDoubles = function(k) {
      if (!this.precomputed) return !1;
      var doubles = this.precomputed.doubles;
      return !!doubles && doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
    }, BasePoint.prototype._getDoubles = function(step, power) {
      if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
      for (var doubles = [ this ], acc = this, i = 0; i < power; i += step) {
        for (var j = 0; j < step; j++) acc = acc.dbl();
        doubles.push(acc);
      }
      return {
        step,
        points: doubles
      };
    }, BasePoint.prototype._getNAFPoints = function(wnd) {
      if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
      for (var res = [ this ], max = (1 << wnd) - 1, dbl = 1 === max ? null : this.dbl(), i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
      return {
        wnd,
        points: res
      };
    }, BasePoint.prototype._getBeta = function() {
      return null;
    }, BasePoint.prototype.dblp = function(k) {
      for (var r = this, i = 0; i < k; i++) r = r.dbl();
      return r;
    };
    var inherits_browser$1 = createCommonjsModule$1((function(module) {
      "function" == typeof Object.create ? module.exports = function(ctor, superCtor) {
        superCtor && (ctor.super_ = superCtor, ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: !1,
            writable: !0,
            configurable: !0
          }
        }));
      } : module.exports = function(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {};
          TempCtor.prototype = superCtor.prototype, ctor.prototype = new TempCtor, ctor.prototype.constructor = ctor;
        }
      };
    })), assert$2 = utils_1$1.assert;
    function ShortCurve(conf) {
      base.call(this, "short", conf), this.a = new bn(conf.a, 16).toRed(this.red), this.b = new bn(conf.b, 16).toRed(this.red), 
      this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), 
      this.endo = this._getEndomorphism(conf), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
    }
    inherits_browser$1(ShortCurve, base);
    var short_1 = ShortCurve;
    function Point(curve, x, y, isRed) {
      base.BasePoint.call(this, curve, "affine"), null === x && null === y ? (this.x = null, 
      this.y = null, this.inf = !0) : (this.x = new bn(x, 16), this.y = new bn(y, 16), 
      isRed && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), 
      this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
    }
    function JPoint(curve, x, y, z) {
      base.BasePoint.call(this, curve, "jacobian"), null === x && null === y && null === z ? (this.x = this.curve.one, 
      this.y = this.curve.one, this.z = new bn(0)) : (this.x = new bn(x, 16), this.y = new bn(y, 16), 
      this.z = new bn(z, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), 
      this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), 
      this.zOne = this.z === this.curve.one;
    }
    ShortCurve.prototype._getEndomorphism = function(conf) {
      if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
        var beta, lambda;
        if (conf.beta) beta = new bn(conf.beta, 16).toRed(this.red); else {
          var betas = this._getEndoRoots(this.p);
          beta = (beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1]).toRed(this.red);
        }
        if (conf.lambda) lambda = new bn(conf.lambda, 16); else {
          var lambdas = this._getEndoRoots(this.n);
          0 === this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) ? lambda = lambdas[0] : (lambda = lambdas[1], 
          assert$2(0 === this.g.mul(lambda).x.cmp(this.g.x.redMul(beta))));
        }
        return {
          beta,
          lambda,
          basis: conf.basis ? conf.basis.map((function(vec) {
            return {
              a: new bn(vec.a, 16),
              b: new bn(vec.b, 16)
            };
          })) : this._getEndoBasis(lambda)
        };
      }
    }, ShortCurve.prototype._getEndoRoots = function(num) {
      var red = num === this.p ? this.red : bn.mont(num), tinv = new bn(2).toRed(red).redInvm(), ntinv = tinv.redNeg(), s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);
      return [ ntinv.redAdd(s).fromRed(), ntinv.redSub(s).fromRed() ];
    }, ShortCurve.prototype._getEndoBasis = function(lambda) {
      for (var a0, b0, a1, b1, a2, b2, prevR, r, x, aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), u = lambda, v = this.n.clone(), x1 = new bn(1), y1 = new bn(0), x2 = new bn(0), y2 = new bn(1), i = 0; 0 !== u.cmpn(0); ) {
        var q = v.div(u);
        r = v.sub(q.mul(u)), x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) a0 = prevR.neg(), b0 = x1, a1 = r.neg(), b1 = x; else if (a1 && 2 == ++i) break;
        prevR = r, v = u, u = r, x2 = x1, x1 = x, y2 = y1, y1 = y;
      }
      a2 = r.neg(), b2 = x;
      var len1 = a1.sqr().add(b1.sqr());
      return a2.sqr().add(b2.sqr()).cmp(len1) >= 0 && (a2 = a0, b2 = b0), a1.negative && (a1 = a1.neg(), 
      b1 = b1.neg()), a2.negative && (a2 = a2.neg(), b2 = b2.neg()), [ {
        a: a1,
        b: b1
      }, {
        a: a2,
        b: b2
      } ];
    }, ShortCurve.prototype._endoSplit = function(k) {
      var basis = this.endo.basis, v1 = basis[0], v2 = basis[1], c1 = v2.b.mul(k).divRound(this.n), c2 = v1.b.neg().mul(k).divRound(this.n), p1 = c1.mul(v1.a), p2 = c2.mul(v2.a), q1 = c1.mul(v1.b), q2 = c2.mul(v2.b);
      return {
        k1: k.sub(p1).sub(p2),
        k2: q1.add(q2).neg()
      };
    }, ShortCurve.prototype.pointFromX = function(x, odd) {
      (x = new bn(x, 16)).red || (x = x.toRed(this.red));
      var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b), y = y2.redSqrt();
      if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      return (odd && !isOdd || !odd && isOdd) && (y = y.redNeg()), this.point(x, y);
    }, ShortCurve.prototype.validate = function(point) {
      if (point.inf) return !0;
      var x = point.x, y = point.y, ax = this.a.redMul(x), rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
      return 0 === y.redSqr().redISub(rhs).cmpn(0);
    }, ShortCurve.prototype._endoWnafMulAdd = function(points, coeffs, jacobianResult) {
      for (var npoints = this._endoWnafT1, ncoeffs = this._endoWnafT2, i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]), p = points[i], beta = p._getBeta();
        split.k1.negative && (split.k1.ineg(), p = p.neg(!0)), split.k2.negative && (split.k2.ineg(), 
        beta = beta.neg(!0)), npoints[2 * i] = p, npoints[2 * i + 1] = beta, ncoeffs[2 * i] = split.k1, 
        ncoeffs[2 * i + 1] = split.k2;
      }
      for (var res = this._wnafMulAdd(1, npoints, ncoeffs, 2 * i, jacobianResult), j = 0; j < 2 * i; j++) npoints[j] = null, 
      ncoeffs[j] = null;
      return res;
    }, inherits_browser$1(Point, base.BasePoint), ShortCurve.prototype.point = function(x, y, isRed) {
      return new Point(this, x, y, isRed);
    }, ShortCurve.prototype.pointFromJSON = function(obj, red) {
      return Point.fromJSON(this, obj, red);
    }, Point.prototype._getBeta = function() {
      if (this.curve.endo) {
        var pre = this.precomputed;
        if (pre && pre.beta) return pre.beta;
        var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
        if (pre) {
          var curve = this.curve, endoMul = function(p) {
            return curve.point(p.x.redMul(curve.endo.beta), p.y);
          };
          pre.beta = beta, beta.precomputed = {
            beta: null,
            naf: pre.naf && {
              wnd: pre.naf.wnd,
              points: pre.naf.points.map(endoMul)
            },
            doubles: pre.doubles && {
              step: pre.doubles.step,
              points: pre.doubles.points.map(endoMul)
            }
          };
        }
        return beta;
      }
    }, Point.prototype.toJSON = function() {
      return this.precomputed ? [ this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
          step: this.precomputed.doubles.step,
          points: this.precomputed.doubles.points.slice(1)
        },
        naf: this.precomputed.naf && {
          wnd: this.precomputed.naf.wnd,
          points: this.precomputed.naf.points.slice(1)
        }
      } ] : [ this.x, this.y ];
    }, Point.fromJSON = function(curve, obj, red) {
      "string" == typeof obj && (obj = JSON.parse(obj));
      var res = curve.point(obj[0], obj[1], red);
      if (!obj[2]) return res;
      function obj2point(obj) {
        return curve.point(obj[0], obj[1], red);
      }
      var pre = obj[2];
      return res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: [ res ].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: [ res ].concat(pre.naf.points.map(obj2point))
        }
      }, res;
    }, Point.prototype.inspect = function() {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    }, Point.prototype.isInfinity = function() {
      return this.inf;
    }, Point.prototype.add = function(p) {
      if (this.inf) return p;
      if (p.inf) return this;
      if (this.eq(p)) return this.dbl();
      if (this.neg().eq(p)) return this.curve.point(null, null);
      if (0 === this.x.cmp(p.x)) return this.curve.point(null, null);
      var c = this.y.redSub(p.y);
      0 !== c.cmpn(0) && (c = c.redMul(this.x.redSub(p.x).redInvm()));
      var nx = c.redSqr().redISub(this.x).redISub(p.x), ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    }, Point.prototype.dbl = function() {
      if (this.inf) return this;
      var ys1 = this.y.redAdd(this.y);
      if (0 === ys1.cmpn(0)) return this.curve.point(null, null);
      var a = this.curve.a, x2 = this.x.redSqr(), dyinv = ys1.redInvm(), c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv), nx = c.redSqr().redISub(this.x.redAdd(this.x)), ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    }, Point.prototype.getX = function() {
      return this.x.fromRed();
    }, Point.prototype.getY = function() {
      return this.y.fromRed();
    }, Point.prototype.mul = function(k) {
      return k = new bn(k, 16), this.isInfinity() ? this : this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve.endo ? this.curve._endoWnafMulAdd([ this ], [ k ]) : this.curve._wnafMul(this, k);
    }, Point.prototype.mulAdd = function(k1, p2, k2) {
      var points = [ this, p2 ], coeffs = [ k1, k2 ];
      return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs) : this.curve._wnafMulAdd(1, points, coeffs, 2);
    }, Point.prototype.jmulAdd = function(k1, p2, k2) {
      var points = [ this, p2 ], coeffs = [ k1, k2 ];
      return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs, !0) : this.curve._wnafMulAdd(1, points, coeffs, 2, !0);
    }, Point.prototype.eq = function(p) {
      return this === p || this.inf === p.inf && (this.inf || 0 === this.x.cmp(p.x) && 0 === this.y.cmp(p.y));
    }, Point.prototype.neg = function(_precompute) {
      if (this.inf) return this;
      var res = this.curve.point(this.x, this.y.redNeg());
      if (_precompute && this.precomputed) {
        var pre = this.precomputed, negate = function(p) {
          return p.neg();
        };
        res.precomputed = {
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(negate)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(negate)
          }
        };
      }
      return res;
    }, Point.prototype.toJ = function() {
      return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
    }, inherits_browser$1(JPoint, base.BasePoint), ShortCurve.prototype.jpoint = function(x, y, z) {
      return new JPoint(this, x, y, z);
    }, JPoint.prototype.toP = function() {
      if (this.isInfinity()) return this.curve.point(null, null);
      var zinv = this.z.redInvm(), zinv2 = zinv.redSqr(), ax = this.x.redMul(zinv2), ay = this.y.redMul(zinv2).redMul(zinv);
      return this.curve.point(ax, ay);
    }, JPoint.prototype.neg = function() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    }, JPoint.prototype.add = function(p) {
      if (this.isInfinity()) return p;
      if (p.isInfinity()) return this;
      var pz2 = p.z.redSqr(), z2 = this.z.redSqr(), u1 = this.x.redMul(pz2), u2 = p.x.redMul(z2), s1 = this.y.redMul(pz2.redMul(p.z)), s2 = p.y.redMul(z2.redMul(this.z)), h = u1.redSub(u2), r = s1.redSub(s2);
      if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
      var h2 = h.redSqr(), h3 = h2.redMul(h), v = u1.redMul(h2), nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v), ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)), nz = this.z.redMul(p.z).redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    }, JPoint.prototype.mixedAdd = function(p) {
      if (this.isInfinity()) return p.toJ();
      if (p.isInfinity()) return this;
      var z2 = this.z.redSqr(), u1 = this.x, u2 = p.x.redMul(z2), s1 = this.y, s2 = p.y.redMul(z2).redMul(this.z), h = u1.redSub(u2), r = s1.redSub(s2);
      if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
      var h2 = h.redSqr(), h3 = h2.redMul(h), v = u1.redMul(h2), nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v), ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3)), nz = this.z.redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    }, JPoint.prototype.dblp = function(pow) {
      if (0 === pow) return this;
      if (this.isInfinity()) return this;
      if (!pow) return this.dbl();
      var i;
      if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for (i = 0; i < pow; i++) r = r.dbl();
        return r;
      }
      var a = this.curve.a, tinv = this.curve.tinv, jx = this.x, jy = this.y, jz = this.z, jz4 = jz.redSqr().redSqr(), jyd = jy.redAdd(jy);
      for (i = 0; i < pow; i++) {
        var jx2 = jx.redSqr(), jyd2 = jyd.redSqr(), jyd4 = jyd2.redSqr(), c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)), t1 = jx.redMul(jyd2), nx = c.redSqr().redISub(t1.redAdd(t1)), t2 = t1.redISub(nx), dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        i + 1 < pow && (jz4 = jz4.redMul(jyd4)), jx = nx, jz = nz, jyd = dny;
      }
      return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
    }, JPoint.prototype.dbl = function() {
      return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
    }, JPoint.prototype._zeroDbl = function() {
      var nx, ny, nz;
      if (this.zOne) {
        var xx = this.x.redSqr(), yy = this.y.redSqr(), yyyy = yy.redSqr(), s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx), t = m.redSqr().redISub(s).redISub(s), yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8), nx = t, ny = m.redMul(s.redISub(t)).redISub(yyyy8), 
        nz = this.y.redAdd(this.y);
      } else {
        var a = this.x.redSqr(), b = this.y.redSqr(), c = b.redSqr(), d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        var e = a.redAdd(a).redIAdd(a), f = e.redSqr(), c8 = c.redIAdd(c);
        c8 = (c8 = c8.redIAdd(c8)).redIAdd(c8), nx = f.redISub(d).redISub(d), ny = e.redMul(d.redISub(nx)).redISub(c8), 
        nz = (nz = this.y.redMul(this.z)).redIAdd(nz);
      }
      return this.curve.jpoint(nx, ny, nz);
    }, JPoint.prototype._threeDbl = function() {
      var nx, ny, nz;
      if (this.zOne) {
        var xx = this.x.redSqr(), yy = this.y.redSqr(), yyyy = yy.redSqr(), s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a), t = m.redSqr().redISub(s).redISub(s);
        nx = t;
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = (yyyy8 = yyyy8.redIAdd(yyyy8)).redIAdd(yyyy8), ny = m.redMul(s.redISub(t)).redISub(yyyy8), 
        nz = this.y.redAdd(this.y);
      } else {
        var delta = this.z.redSqr(), gamma = this.y.redSqr(), beta = this.x.redMul(gamma), alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        var beta4 = beta.redIAdd(beta), beta8 = (beta4 = beta4.redIAdd(beta4)).redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8), nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        var ggamma8 = gamma.redSqr();
        ggamma8 = (ggamma8 = (ggamma8 = ggamma8.redIAdd(ggamma8)).redIAdd(ggamma8)).redIAdd(ggamma8), 
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
      }
      return this.curve.jpoint(nx, ny, nz);
    }, JPoint.prototype._dbl = function() {
      var a = this.curve.a, jx = this.x, jy = this.y, jz = this.z, jz4 = jz.redSqr().redSqr(), jx2 = jx.redSqr(), jy2 = jy.redSqr(), c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4)), jxd4 = jx.redAdd(jx), t1 = (jxd4 = jxd4.redIAdd(jxd4)).redMul(jy2), nx = c.redSqr().redISub(t1.redAdd(t1)), t2 = t1.redISub(nx), jyd8 = jy2.redSqr();
      jyd8 = (jyd8 = (jyd8 = jyd8.redIAdd(jyd8)).redIAdd(jyd8)).redIAdd(jyd8);
      var ny = c.redMul(t2).redISub(jyd8), nz = jy.redAdd(jy).redMul(jz);
      return this.curve.jpoint(nx, ny, nz);
    }, JPoint.prototype.trpl = function() {
      if (!this.curve.zeroA) return this.dbl().add(this);
      var xx = this.x.redSqr(), yy = this.y.redSqr(), zz = this.z.redSqr(), yyyy = yy.redSqr(), m = xx.redAdd(xx).redIAdd(xx), mm = m.redSqr(), e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy), ee = (e = (e = (e = e.redIAdd(e)).redAdd(e).redIAdd(e)).redISub(mm)).redSqr(), t = yyyy.redIAdd(yyyy);
      t = (t = (t = t.redIAdd(t)).redIAdd(t)).redIAdd(t);
      var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t), yyu4 = yy.redMul(u);
      yyu4 = (yyu4 = yyu4.redIAdd(yyu4)).redIAdd(yyu4);
      var nx = this.x.redMul(ee).redISub(yyu4);
      nx = (nx = nx.redIAdd(nx)).redIAdd(nx);
      var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
      ny = (ny = (ny = ny.redIAdd(ny)).redIAdd(ny)).redIAdd(ny);
      var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
      return this.curve.jpoint(nx, ny, nz);
    }, JPoint.prototype.mul = function(k, kbase) {
      return k = new bn(k, kbase), this.curve._wnafMul(this, k);
    }, JPoint.prototype.eq = function(p) {
      if ("affine" === p.type) return this.eq(p.toJ());
      if (this === p) return !0;
      var z2 = this.z.redSqr(), pz2 = p.z.redSqr();
      if (0 !== this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)) return !1;
      var z3 = z2.redMul(this.z), pz3 = pz2.redMul(p.z);
      return 0 === this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0);
    }, JPoint.prototype.eqXToP = function(x) {
      var zs = this.z.redSqr(), rx = x.toRed(this.curve.red).redMul(zs);
      if (0 === this.x.cmp(rx)) return !0;
      for (var xc = x.clone(), t = this.curve.redN.redMul(zs); ;) {
        if (xc.iadd(this.curve.n), xc.cmp(this.curve.p) >= 0) return !1;
        if (rx.redIAdd(t), 0 === this.x.cmp(rx)) return !0;
      }
    }, JPoint.prototype.inspect = function() {
      return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    }, JPoint.prototype.isInfinity = function() {
      return 0 === this.z.cmpn(0);
    };
    var curve_1 = createCommonjsModule$1((function(module, exports) {
      var curve = exports;
      curve.base = base, curve.short = short_1, curve.mont = null, curve.edwards = null;
    })), curves_1 = createCommonjsModule$1((function(module, exports) {
      var pre, curves = exports, assert = utils_1$1.assert;
      function PresetCurve(options) {
        "short" === options.type ? this.curve = new curve_1.short(options) : "edwards" === options.type ? this.curve = new curve_1.edwards(options) : this.curve = new curve_1.mont(options), 
        this.g = this.curve.g, this.n = this.curve.n, this.hash = options.hash, assert(this.g.validate(), "Invalid curve"), 
        assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      function defineCurve(name, options) {
        Object.defineProperty(curves, name, {
          configurable: !0,
          enumerable: !0,
          get: function() {
            var curve = new PresetCurve(options);
            return Object.defineProperty(curves, name, {
              configurable: !0,
              enumerable: !0,
              value: curve
            }), curve;
          }
        });
      }
      curves.PresetCurve = PresetCurve, defineCurve("p192", {
        type: "short",
        prime: "p192",
        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
        hash: hash_1.sha256,
        gRed: !1,
        g: [ "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811" ]
      }), defineCurve("p224", {
        type: "short",
        prime: "p224",
        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
        hash: hash_1.sha256,
        gRed: !1,
        g: [ "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34" ]
      }), defineCurve("p256", {
        type: "short",
        prime: null,
        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
        hash: hash_1.sha256,
        gRed: !1,
        g: [ "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5" ]
      }), defineCurve("p384", {
        type: "short",
        prime: null,
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
        hash: hash_1.sha384,
        gRed: !1,
        g: [ "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f" ]
      }), defineCurve("p521", {
        type: "short",
        prime: null,
        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
        hash: hash_1.sha512,
        gRed: !1,
        g: [ "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650" ]
      }), defineCurve("curve25519", {
        type: "mont",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "76d06",
        b: "1",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: hash_1.sha256,
        gRed: !1,
        g: [ "9" ]
      }), defineCurve("ed25519", {
        type: "edwards",
        prime: "p25519",
        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
        a: "-1",
        c: "1",
        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
        hash: hash_1.sha256,
        gRed: !1,
        g: [ "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658" ]
      });
      try {
        pre = null.crash();
      } catch (e) {
        pre = void 0;
      }
      defineCurve("secp256k1", {
        type: "short",
        prime: "k256",
        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
        a: "0",
        b: "7",
        n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
        h: "1",
        hash: hash_1.sha256,
        beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
        lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
        basis: [ {
          a: "3086d221a7d46bcde86c90e49284eb15",
          b: "-e4437ed6010e88286f547fa90abfe4c3"
        }, {
          a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
          b: "3086d221a7d46bcde86c90e49284eb15"
        } ],
        gRed: !1,
        g: [ "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", pre ]
      });
    }));
    function HmacDRBG(options) {
      if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
      this.hash = options.hash, this.predResist = !!options.predResist, this.outLen = this.hash.outSize, 
      this.minEntropy = options.minEntropy || this.hash.hmacStrength, this._reseed = null, 
      this.reseedInterval = null, this.K = null, this.V = null;
      var entropy = utils_1.toArray(options.entropy, options.entropyEnc || "hex"), nonce = utils_1.toArray(options.nonce, options.nonceEnc || "hex"), pers = utils_1.toArray(options.pers, options.persEnc || "hex");
      minimalisticAssert$1(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), 
      this._init(entropy, nonce, pers);
    }
    var hmacDrbg = HmacDRBG;
    HmacDRBG.prototype._init = function(entropy, nonce, pers) {
      var seed = entropy.concat(nonce).concat(pers);
      this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
      for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
      this._update(seed), this._reseed = 1, this.reseedInterval = 281474976710656;
    }, HmacDRBG.prototype._hmac = function() {
      return new hash_1.hmac(this.hash, this.K);
    }, HmacDRBG.prototype._update = function(seed) {
      var kmac = this._hmac().update(this.V).update([ 0 ]);
      seed && (kmac = kmac.update(seed)), this.K = kmac.digest(), this.V = this._hmac().update(this.V).digest(), 
      seed && (this.K = this._hmac().update(this.V).update([ 1 ]).update(seed).digest(), 
      this.V = this._hmac().update(this.V).digest());
    }, HmacDRBG.prototype.reseed = function(entropy, entropyEnc, add, addEnc) {
      "string" != typeof entropyEnc && (addEnc = add, add = entropyEnc, entropyEnc = null), 
      entropy = utils_1.toArray(entropy, entropyEnc), add = utils_1.toArray(add, addEnc), 
      minimalisticAssert$1(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), 
      this._update(entropy.concat(add || [])), this._reseed = 1;
    }, HmacDRBG.prototype.generate = function(len, enc, add, addEnc) {
      if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
      "string" != typeof enc && (addEnc = add, add = enc, enc = null), add && (add = utils_1.toArray(add, addEnc || "hex"), 
      this._update(add));
      for (var temp = []; temp.length < len; ) this.V = this._hmac().update(this.V).digest(), 
      temp = temp.concat(this.V);
      var res = temp.slice(0, len);
      return this._update(add), this._reseed++, utils_1.encode(res, enc);
    };
    var assert$3 = utils_1$1.assert;
    function KeyPair(ec, options) {
      this.ec = ec, this.priv = null, this.pub = null, options.priv && this._importPrivate(options.priv, options.privEnc), 
      options.pub && this._importPublic(options.pub, options.pubEnc);
    }
    var key = KeyPair;
    KeyPair.fromPublic = function(ec, pub, enc) {
      return pub instanceof KeyPair ? pub : new KeyPair(ec, {
        pub,
        pubEnc: enc
      });
    }, KeyPair.fromPrivate = function(ec, priv, enc) {
      return priv instanceof KeyPair ? priv : new KeyPair(ec, {
        priv,
        privEnc: enc
      });
    }, KeyPair.prototype.validate = function() {
      var pub = this.getPublic();
      return pub.isInfinity() ? {
        result: !1,
        reason: "Invalid public key"
      } : pub.validate() ? pub.mul(this.ec.curve.n).isInfinity() ? {
        result: !0,
        reason: null
      } : {
        result: !1,
        reason: "Public key * N != O"
      } : {
        result: !1,
        reason: "Public key is not a point"
      };
    }, KeyPair.prototype.getPublic = function(compact, enc) {
      return "string" == typeof compact && (enc = compact, compact = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), 
      enc ? this.pub.encode(enc, compact) : this.pub;
    }, KeyPair.prototype.getPrivate = function(enc) {
      return "hex" === enc ? this.priv.toString(16, 2) : this.priv;
    }, KeyPair.prototype._importPrivate = function(key, enc) {
      this.priv = new bn(key, enc || 16), this.priv = this.priv.umod(this.ec.curve.n);
    }, KeyPair.prototype._importPublic = function(key, enc) {
      if (key.x || key.y) return "mont" === this.ec.curve.type ? assert$3(key.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || assert$3(key.x && key.y, "Need both x and y coordinate"), 
      void (this.pub = this.ec.curve.point(key.x, key.y));
      this.pub = this.ec.curve.decodePoint(key, enc);
    }, KeyPair.prototype.derive = function(pub) {
      return pub.validate() || assert$3(pub.validate(), "public point not validated"), 
      pub.mul(this.priv).getX();
    }, KeyPair.prototype.sign = function(msg, enc, options) {
      return this.ec.sign(msg, this, enc, options);
    }, KeyPair.prototype.verify = function(msg, signature) {
      return this.ec.verify(msg, signature, this);
    }, KeyPair.prototype.inspect = function() {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
    var assert$4 = utils_1$1.assert;
    function Signature(options, enc) {
      if (options instanceof Signature) return options;
      this._importDER(options, enc) || (assert$4(options.r && options.s, "Signature without r or s"), 
      this.r = new bn(options.r, 16), this.s = new bn(options.s, 16), void 0 === options.recoveryParam ? this.recoveryParam = null : this.recoveryParam = options.recoveryParam);
    }
    var signature = Signature;
    function Position() {
      this.place = 0;
    }
    function getLength(buf, p) {
      var initial = buf[p.place++];
      if (!(128 & initial)) return initial;
      var octetLen = 15 & initial;
      if (0 === octetLen || octetLen > 4) return !1;
      for (var val = 0, i = 0, off = p.place; i < octetLen; i++, off++) val <<= 8, val |= buf[off], 
      val >>>= 0;
      return !(val <= 127) && (p.place = off, val);
    }
    function rmPadding(buf) {
      for (var i = 0, len = buf.length - 1; !buf[i] && !(128 & buf[i + 1]) && i < len; ) i++;
      return 0 === i ? buf : buf.slice(i);
    }
    function constructLength(arr, len) {
      if (len < 128) arr.push(len); else {
        var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
        for (arr.push(128 | octets); --octets; ) arr.push(len >>> (octets << 3) & 255);
        arr.push(len);
      }
    }
    Signature.prototype._importDER = function(data, enc) {
      data = utils_1$1.toArray(data, enc);
      var p = new Position;
      if (48 !== data[p.place++]) return !1;
      var len = getLength(data, p);
      if (!1 === len) return !1;
      if (len + p.place !== data.length) return !1;
      if (2 !== data[p.place++]) return !1;
      var rlen = getLength(data, p);
      if (!1 === rlen) return !1;
      var r = data.slice(p.place, rlen + p.place);
      if (p.place += rlen, 2 !== data[p.place++]) return !1;
      var slen = getLength(data, p);
      if (!1 === slen) return !1;
      if (data.length !== slen + p.place) return !1;
      var s = data.slice(p.place, slen + p.place);
      if (0 === r[0]) {
        if (!(128 & r[1])) return !1;
        r = r.slice(1);
      }
      if (0 === s[0]) {
        if (!(128 & s[1])) return !1;
        s = s.slice(1);
      }
      return this.r = new bn(r), this.s = new bn(s), this.recoveryParam = null, !0;
    }, Signature.prototype.toDER = function(enc) {
      var r = this.r.toArray(), s = this.s.toArray();
      for (128 & r[0] && (r = [ 0 ].concat(r)), 128 & s[0] && (s = [ 0 ].concat(s)), r = rmPadding(r), 
      s = rmPadding(s); !(s[0] || 128 & s[1]); ) s = s.slice(1);
      var arr = [ 2 ];
      constructLength(arr, r.length), (arr = arr.concat(r)).push(2), constructLength(arr, s.length);
      var backHalf = arr.concat(s), res = [ 48 ];
      return constructLength(res, backHalf.length), res = res.concat(backHalf), utils_1$1.encode(res, enc);
    };
    var rand = function() {
      throw new Error("unsupported");
    }, assert$5 = utils_1$1.assert;
    function EC(options) {
      if (!(this instanceof EC)) return new EC(options);
      "string" == typeof options && (assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), "Unknown curve " + options), 
      options = curves_1[options]), options instanceof curves_1.PresetCurve && (options = {
        curve: options
      }), this.curve = options.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), 
      this.g = this.curve.g, this.g = options.curve.g, this.g.precompute(options.curve.n.bitLength() + 1), 
      this.hash = options.hash || options.curve.hash;
    }
    var ec = EC;
    EC.prototype.keyPair = function(options) {
      return new key(this, options);
    }, EC.prototype.keyFromPrivate = function(priv, enc) {
      return key.fromPrivate(this, priv, enc);
    }, EC.prototype.keyFromPublic = function(pub, enc) {
      return key.fromPublic(this, pub, enc);
    }, EC.prototype.genKeyPair = function(options) {
      options || (options = {});
      for (var drbg = new hmacDrbg({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || "utf8",
        entropy: options.entropy || rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || "utf8",
        nonce: this.n.toArray()
      }), bytes = this.n.byteLength(), ns2 = this.n.sub(new bn(2)); ;) {
        var priv = new bn(drbg.generate(bytes));
        if (!(priv.cmp(ns2) > 0)) return priv.iaddn(1), this.keyFromPrivate(priv);
      }
    }, EC.prototype._truncateToN = function(msg, truncOnly) {
      var delta = 8 * msg.byteLength() - this.n.bitLength();
      return delta > 0 && (msg = msg.ushrn(delta)), !truncOnly && msg.cmp(this.n) >= 0 ? msg.sub(this.n) : msg;
    }, EC.prototype.sign = function(msg, key, enc, options) {
      "object" === _typeof(enc) && (options = enc, enc = null), options || (options = {}), 
      key = this.keyFromPrivate(key, enc), msg = this._truncateToN(new bn(msg, 16));
      for (var bytes = this.n.byteLength(), bkey = key.getPrivate().toArray("be", bytes), nonce = msg.toArray("be", bytes), drbg = new hmacDrbg({
        hash: this.hash,
        entropy: bkey,
        nonce,
        pers: options.pers,
        persEnc: options.persEnc || "utf8"
      }), ns1 = this.n.sub(new bn(1)), iter = 0; ;iter++) {
        var k = options.k ? options.k(iter) : new bn(drbg.generate(this.n.byteLength()));
        if (!((k = this._truncateToN(k, !0)).cmpn(1) <= 0 || k.cmp(ns1) >= 0)) {
          var kp = this.g.mul(k);
          if (!kp.isInfinity()) {
            var kpX = kp.getX(), r = kpX.umod(this.n);
            if (0 !== r.cmpn(0)) {
              var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
              if (0 !== (s = s.umod(this.n)).cmpn(0)) {
                var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (0 !== kpX.cmp(r) ? 2 : 0);
                return options.canonical && s.cmp(this.nh) > 0 && (s = this.n.sub(s), recoveryParam ^= 1), 
                new signature({
                  r,
                  s,
                  recoveryParam
                });
              }
            }
          }
        }
      }
    }, EC.prototype.verify = function(msg, signature$1, key, enc) {
      msg = this._truncateToN(new bn(msg, 16)), key = this.keyFromPublic(key, enc);
      var r = (signature$1 = new signature(signature$1, "hex")).r, s = signature$1.s;
      if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return !1;
      if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return !1;
      var p, sinv = s.invm(this.n), u1 = sinv.mul(msg).umod(this.n), u2 = sinv.mul(r).umod(this.n);
      return this.curve._maxwellTrick ? !(p = this.g.jmulAdd(u1, key.getPublic(), u2)).isInfinity() && p.eqXToP(r) : !(p = this.g.mulAdd(u1, key.getPublic(), u2)).isInfinity() && 0 === p.getX().umod(this.n).cmp(r);
    }, EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
      assert$5((3 & j) === j, "The recovery param is more than two bits"), signature$1 = new signature(signature$1, enc);
      var n = this.n, e = new bn(msg), r = signature$1.r, s = signature$1.s, isYOdd = 1 & j, isSecondKey = j >> 1;
      if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error("Unable to find sencond key candinate");
      r = isSecondKey ? this.curve.pointFromX(r.add(this.curve.n), isYOdd) : this.curve.pointFromX(r, isYOdd);
      var rInv = signature$1.r.invm(n), s1 = n.sub(e).mul(rInv).umod(n), s2 = s.mul(rInv).umod(n);
      return this.g.mulAdd(s1, r, s2);
    }, EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
      if (null !== (signature$1 = new signature(signature$1, enc)).recoveryParam) return signature$1.recoveryParam;
      for (var i = 0; i < 4; i++) {
        var Qprime;
        try {
          Qprime = this.recoverPubKey(e, signature$1, i);
        } catch (e) {
          continue;
        }
        if (Qprime.eq(Q)) return i;
      }
      throw new Error("Unable to find valid recovery factor");
    };
    var EC$1 = createCommonjsModule$1((function(module, exports) {
      var elliptic = exports;
      elliptic.version = "6.5.4", elliptic.utils = utils_1$1, elliptic.rand = function() {
        throw new Error("unsupported");
      }, elliptic.curve = curve_1, elliptic.curves = curves_1, elliptic.ec = ec, elliptic.eddsa = null;
    })).ec, logger$g = new Logger("signing-key/5.2.0"), _curve = null;
    function getCurve() {
      return _curve || (_curve = new EC$1("secp256k1")), _curve;
    }
    var SigningKey = function() {
      function SigningKey(privateKey) {
        _classCallCheck(this, SigningKey), defineReadOnly(this, "curve", "secp256k1"), defineReadOnly(this, "privateKey", hexlify(privateKey));
        var keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
        defineReadOnly(this, "publicKey", "0x" + keyPair.getPublic(!1, "hex")), defineReadOnly(this, "compressedPublicKey", "0x" + keyPair.getPublic(!0, "hex")), 
        defineReadOnly(this, "_isSigningKey", !0);
      }
      return _createClass(SigningKey, [ {
        key: "_addPoint",
        value: function(other) {
          var p0 = getCurve().keyFromPublic(arrayify(this.publicKey)), p1 = getCurve().keyFromPublic(arrayify(other));
          return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
        }
      }, {
        key: "signDigest",
        value: function(digest) {
          var keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey)), digestBytes = arrayify(digest);
          32 !== digestBytes.length && logger$g.throwArgumentError("bad digest length", "digest", digest);
          var signature = keyPair.sign(digestBytes, {
            canonical: !0
          });
          return splitSignature({
            recoveryParam: signature.recoveryParam,
            r: hexZeroPad("0x" + signature.r.toString(16), 32),
            s: hexZeroPad("0x" + signature.s.toString(16), 32)
          });
        }
      }, {
        key: "computeSharedSecret",
        value: function(otherKey) {
          var keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey)), otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
          return hexZeroPad("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
        }
      } ], [ {
        key: "isSigningKey",
        value: function(value) {
          return !(!value || !value._isSigningKey);
        }
      } ]), SigningKey;
    }();
    function recoverPublicKey(digest, signature) {
      var sig = splitSignature(signature), rs = {
        r: arrayify(sig.r),
        s: arrayify(sig.s)
      };
      return "0x" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode("hex", !1);
    }
    function computePublicKey(key, compressed) {
      var bytes = arrayify(key);
      if (32 === bytes.length) {
        var signingKey = new SigningKey(bytes);
        return compressed ? "0x" + getCurve().keyFromPrivate(bytes).getPublic(!0, "hex") : signingKey.publicKey;
      }
      return 33 === bytes.length ? compressed ? hexlify(bytes) : "0x" + getCurve().keyFromPublic(bytes).getPublic(!1, "hex") : 65 === bytes.length ? compressed ? "0x" + getCurve().keyFromPublic(bytes).getPublic(!0, "hex") : hexlify(bytes) : logger$g.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
    }
    var logger$h = new Logger("transactions/5.2.0");
    function handleAddress(value) {
      return "0x" === value ? null : _getAddress(value);
    }
    function handleNumber(value) {
      return "0x" === value ? Zero$1 : BigNumber.from(value);
    }
    var transactionFields = [ {
      name: "nonce",
      maxLength: 32,
      numeric: !0
    }, {
      name: "gasPrice",
      maxLength: 32,
      numeric: !0
    }, {
      name: "gasLimit",
      maxLength: 32,
      numeric: !0
    }, {
      name: "to",
      length: 20
    }, {
      name: "value",
      maxLength: 32,
      numeric: !0
    }, {
      name: "data"
    } ], allowedTransactionKeys$1 = {
      chainId: !0,
      data: !0,
      gasLimit: !0,
      gasPrice: !0,
      nonce: !0,
      to: !0,
      value: !0
    };
    function computeAddress(key) {
      return _getAddress(hexDataSlice(keccak256(hexDataSlice(computePublicKey(key), 1)), 12));
    }
    function recoverAddress(digest, signature) {
      return computeAddress(recoverPublicKey(arrayify(digest), signature));
    }
    function formatNumber(value, name) {
      var result = stripZeros(BigNumber.from(value).toHexString());
      return result.length > 32 && logger$h.throwArgumentError("invalid length for " + name, "transaction:" + name, value), 
      result;
    }
    function accessSetify(addr, storageKeys) {
      return {
        address: _getAddress(addr),
        storageKeys: (storageKeys || []).map((function(storageKey, index) {
          return 32 !== hexDataLength(storageKey) && logger$h.throwArgumentError("invalid access list storageKey", "accessList[".concat(addr, ":").concat(index, "]"), storageKey), 
          storageKey.toLowerCase();
        }))
      };
    }
    function accessListify(value) {
      if (Array.isArray(value)) return value.map((function(set, index) {
        return Array.isArray(set) ? (set.length > 2 && logger$h.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[".concat(index, "]"), set), 
        accessSetify(set[0], set[1])) : accessSetify(set.address, set.storageKeys);
      }));
      var result = Object.keys(value).map((function(addr) {
        var storageKeys = value[addr].reduce((function(accum, storageKey) {
          return accum[storageKey] = !0, accum;
        }), {});
        return accessSetify(addr, Object.keys(storageKeys).sort());
      }));
      return result.sort((function(a, b) {
        return a.address.localeCompare(b.address);
      })), result;
    }
    function _serializeEip2930(transaction, signature) {
      var value, fields = [ formatNumber(transaction.chainId || 0, "chainId"), formatNumber(transaction.nonce || 0, "nonce"), formatNumber(transaction.gasPrice || 0, "gasPrice"), formatNumber(transaction.gasLimit || 0, "gasLimit"), null != transaction.to ? _getAddress(transaction.to) : "0x", formatNumber(transaction.value || 0, "value"), transaction.data || "0x", (value = transaction.accessList || [], 
      accessListify(value).map((function(set) {
        return [ set.address, set.storageKeys ];
      }))) ];
      if (signature) {
        var sig = splitSignature(signature);
        fields.push(formatNumber(sig.recoveryParam, "recoveryParam")), fields.push(stripZeros(sig.r)), 
        fields.push(stripZeros(sig.s));
      }
      return hexConcat([ "0x01", encode(fields) ]);
    }
    function serialize(transaction, signature) {
      return null == transaction.type ? (null != transaction.accessList && logger$h.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction), 
      function(transaction, signature) {
        checkProperties(transaction, allowedTransactionKeys$1);
        var raw = [];
        transactionFields.forEach((function(fieldInfo) {
          var value = transaction[fieldInfo.name] || [], options = {};
          fieldInfo.numeric && (options.hexPad = "left"), value = arrayify(hexlify(value, options)), 
          fieldInfo.length && value.length !== fieldInfo.length && value.length > 0 && logger$h.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value), 
          fieldInfo.maxLength && (value = stripZeros(value)).length > fieldInfo.maxLength && logger$h.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value), 
          raw.push(hexlify(value));
        }));
        var chainId = 0;
        if (null != transaction.chainId ? "number" != typeof (chainId = transaction.chainId) && logger$h.throwArgumentError("invalid transaction.chainId", "transaction", transaction) : signature && !isBytesLike(signature) && signature.v > 28 && (chainId = Math.floor((signature.v - 35) / 2)), 
        0 !== chainId && (raw.push(hexlify(chainId)), raw.push("0x"), raw.push("0x")), !signature) return encode(raw);
        var sig = splitSignature(signature), v = 27 + sig.recoveryParam;
        return 0 !== chainId ? (raw.pop(), raw.pop(), raw.pop(), v += 2 * chainId + 8, sig.v > 28 && sig.v !== v && logger$h.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature)) : sig.v !== v && logger$h.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature), 
        raw.push(hexlify(v)), raw.push(stripZeros(arrayify(sig.r))), raw.push(stripZeros(arrayify(sig.s))), 
        encode(raw);
      }(transaction, signature)) : 1 === transaction.type ? _serializeEip2930(transaction, signature) : logger$h.throwError("unsupported transaction type: ".concat(transaction.type), Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "serializeTransaction",
        transactionType: transaction.type
      });
    }
    function parse(rawTransaction) {
      var payload = arrayify(rawTransaction);
      return payload[0] > 127 ? function(rawTransaction) {
        var transaction = decode(rawTransaction);
        9 !== transaction.length && 6 !== transaction.length && logger$h.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
        var tx = {
          nonce: handleNumber(transaction[0]).toNumber(),
          gasPrice: handleNumber(transaction[1]),
          gasLimit: handleNumber(transaction[2]),
          to: handleAddress(transaction[3]),
          value: handleNumber(transaction[4]),
          data: transaction[5],
          chainId: 0
        };
        if (6 === transaction.length) return tx;
        try {
          tx.v = BigNumber.from(transaction[6]).toNumber();
        } catch (error) {
          return tx;
        }
        if (tx.r = hexZeroPad(transaction[7], 32), tx.s = hexZeroPad(transaction[8], 32), 
        BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) tx.chainId = tx.v, 
        tx.v = 0; else {
          tx.chainId = Math.floor((tx.v - 35) / 2), tx.chainId < 0 && (tx.chainId = 0);
          var recoveryParam = tx.v - 27, raw = transaction.slice(0, 6);
          0 !== tx.chainId && (raw.push(hexlify(tx.chainId)), raw.push("0x"), raw.push("0x"), 
          recoveryParam -= 2 * tx.chainId + 8);
          var digest = keccak256(encode(raw));
          try {
            tx.from = recoverAddress(digest, {
              r: hexlify(tx.r),
              s: hexlify(tx.s),
              recoveryParam
            });
          } catch (error) {}
          tx.hash = keccak256(rawTransaction);
        }
        return tx.type = null, tx;
      }(payload) : 1 === payload[0] ? function(payload) {
        var transaction = decode(payload.slice(1));
        8 !== transaction.length && 11 !== transaction.length && logger$h.throwArgumentError("invalid component count for transaction type: 1", "payload", hexlify(payload));
        var tx = {
          type: 1,
          chainId: handleNumber(transaction[0]).toNumber(),
          nonce: handleNumber(transaction[1]).toNumber(),
          gasPrice: handleNumber(transaction[2]),
          gasLimit: handleNumber(transaction[3]),
          to: handleAddress(transaction[4]),
          value: handleNumber(transaction[5]),
          data: transaction[6],
          accessList: accessListify(transaction[7])
        };
        if (8 === transaction.length) return tx;
        try {
          var recid = handleNumber(transaction[8]).toNumber();
          if (0 !== recid && 1 !== recid) throw new Error("bad recid");
          tx.v = recid;
        } catch (error) {
          logger$h.throwArgumentError("invalid v for transaction type: 1", "v", transaction[8]);
        }
        tx.r = hexZeroPad(transaction[9], 32), tx.s = hexZeroPad(transaction[10], 32);
        try {
          var digest = keccak256(_serializeEip2930(tx));
          tx.from = recoverAddress(digest, {
            r: tx.r,
            s: tx.s,
            recoveryParam: tx.v
          });
        } catch (error) {}
        return tx.hash = keccak256(payload), tx;
      }(payload) : logger$h.throwError("unsupported transaction type: ".concat(payload[0]), Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "parseTransaction",
        transactionType: payload[0]
      });
    }
    var __awaiter$3 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$i = new Logger("contracts/5.2.0"), allowedTransactionKeys$2 = {
      chainId: !0,
      data: !0,
      from: !0,
      gasLimit: !0,
      gasPrice: !0,
      nonce: !0,
      to: !0,
      value: !0,
      type: !0,
      accessList: !0
    };
    function resolveName(resolver, nameOrPromise) {
      return __awaiter$3(this, void 0, void 0, regeneratorRuntime.mark((function _callee12() {
        var name, address;
        return regeneratorRuntime.wrap((function(_context12) {
          for (;;) switch (_context12.prev = _context12.next) {
           case 0:
            return _context12.next = 2, nameOrPromise;

           case 2:
            return name = _context12.sent, _context12.prev = 3, _context12.abrupt("return", _getAddress(name));

           case 7:
            _context12.prev = 7, _context12.t0 = _context12.catch(3);

           case 9:
            return resolver || logger$i.throwError("a provider or signer is needed to resolve ENS names", Logger.errors.UNSUPPORTED_OPERATION, {
              operation: "resolveName"
            }), _context12.next = 12, resolver.resolveName(name);

           case 12:
            return null == (address = _context12.sent) && logger$i.throwArgumentError("resolver or addr is not configured for ENS name", "name", name), 
            _context12.abrupt("return", address);

           case 15:
           case "end":
            return _context12.stop();
          }
        }), _callee12, null, [ [ 3, 7 ] ]);
      })));
    }
    function resolveAddresses(resolver, value, paramType) {
      return __awaiter$3(this, void 0, void 0, regeneratorRuntime.mark((function _callee13() {
        return regeneratorRuntime.wrap((function(_context13) {
          for (;;) switch (_context13.prev = _context13.next) {
           case 0:
            if (!Array.isArray(paramType)) {
              _context13.next = 4;
              break;
            }
            return _context13.next = 3, Promise.all(paramType.map((function(paramType, index) {
              return resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType);
            })));

           case 3:
           case 7:
           case 11:
           case 17:
            return _context13.abrupt("return", _context13.sent);

           case 4:
            if ("address" !== paramType.type) {
              _context13.next = 8;
              break;
            }
            return _context13.next = 7, resolveName(resolver, value);

           case 8:
            if ("tuple" !== paramType.type) {
              _context13.next = 12;
              break;
            }
            return _context13.next = 11, resolveAddresses(resolver, value, paramType.components);

           case 12:
            if ("array" !== paramType.baseType) {
              _context13.next = 18;
              break;
            }
            if (Array.isArray(value)) {
              _context13.next = 15;
              break;
            }
            return _context13.abrupt("return", Promise.reject(new Error("invalid value for array")));

           case 15:
            return _context13.next = 17, Promise.all(value.map((function(v) {
              return resolveAddresses(resolver, v, paramType.arrayChildren);
            })));

           case 18:
            return _context13.abrupt("return", value);

           case 19:
           case "end":
            return _context13.stop();
          }
        }), _callee13);
      })));
    }
    function populateTransaction(contract, fragment, args) {
      return __awaiter$3(this, void 0, void 0, regeneratorRuntime.mark((function _callee15() {
        var overrides, resolved, data, tx, ro, intrinsic, bytes, _i13, roValue, leftovers, _this19 = this;
        return regeneratorRuntime.wrap((function(_context15) {
          for (;;) switch (_context15.prev = _context15.next) {
           case 0:
            return overrides = {}, args.length === fragment.inputs.length + 1 && "object" === _typeof(args[args.length - 1]) && (overrides = shallowCopy(args.pop())), 
            logger$i.checkArgumentCount(args.length, fragment.inputs.length, "passed to contract"), 
            contract.signer ? overrides.from ? overrides.from = resolveProperties({
              override: resolveName(contract.signer, overrides.from),
              signer: contract.signer.getAddress()
            }).then((function(check) {
              return __awaiter$3(_this19, void 0, void 0, regeneratorRuntime.mark((function _callee14() {
                return regeneratorRuntime.wrap((function(_context14) {
                  for (;;) switch (_context14.prev = _context14.next) {
                   case 0:
                    return _getAddress(check.signer) !== check.override && logger$i.throwError("Contract with a Signer cannot override from", Logger.errors.UNSUPPORTED_OPERATION, {
                      operation: "overrides.from"
                    }), _context14.abrupt("return", check.override);

                   case 2:
                   case "end":
                    return _context14.stop();
                  }
                }), _callee14);
              })));
            })) : overrides.from = contract.signer.getAddress() : overrides.from && (overrides.from = resolveName(contract.provider, overrides.from)), 
            _context15.next = 6, resolveProperties({
              args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),
              address: contract.resolvedAddress,
              overrides: resolveProperties(overrides) || {}
            });

           case 6:
            if (resolved = _context15.sent, data = contract.interface.encodeFunctionData(fragment, resolved.args), 
            tx = {
              data,
              to: resolved.address
            }, null != (ro = resolved.overrides).nonce && (tx.nonce = BigNumber.from(ro.nonce).toNumber()), 
            null != ro.gasLimit && (tx.gasLimit = BigNumber.from(ro.gasLimit)), null != ro.gasPrice && (tx.gasPrice = BigNumber.from(ro.gasPrice)), 
            null != ro.from && (tx.from = ro.from), null != ro.type && (tx.type = ro.type), 
            null != ro.accessList && (tx.accessList = accessListify(ro.accessList)), null == tx.gasLimit && null != fragment.gas) {
              for (intrinsic = 21e3, bytes = arrayify(data), _i13 = 0; _i13 < bytes.length; _i13++) intrinsic += 4, 
              bytes[_i13] && (intrinsic += 64);
              tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);
            }
            return ro.value && ((roValue = BigNumber.from(ro.value)).isZero() || fragment.payable || logger$i.throwError("non-payable method cannot override value", Logger.errors.UNSUPPORTED_OPERATION, {
              operation: "overrides.value",
              value: overrides.value
            }), tx.value = roValue), delete overrides.nonce, delete overrides.gasLimit, delete overrides.gasPrice, 
            delete overrides.from, delete overrides.value, delete overrides.type, delete overrides.accessList, 
            leftovers = Object.keys(overrides).filter((function(key) {
              return null != overrides[key];
            })), leftovers.length && logger$i.throwError("cannot override ".concat(leftovers.map((function(l) {
              return JSON.stringify(l);
            })).join(",")), Logger.errors.UNSUPPORTED_OPERATION, {
              operation: "overrides",
              overrides: leftovers
            }), _context15.abrupt("return", tx);

           case 28:
           case "end":
            return _context15.stop();
          }
        }), _callee15);
      })));
    }
    function buildCall(contract, fragment, collapseSimple) {
      var signerOrProvider = contract.signer || contract.provider;
      return function() {
        for (var _len6 = arguments.length, args = new Array(_len6), _key12 = 0; _key12 < _len6; _key12++) args[_key12] = arguments[_key12];
        return __awaiter$3(this, void 0, void 0, regeneratorRuntime.mark((function _callee17() {
          var blockTag, overrides, tx, result, value;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              if (blockTag = void 0, args.length !== fragment.inputs.length + 1 || "object" !== _typeof(args[args.length - 1])) {
                _context17.next = 9;
                break;
              }
              if (null == (overrides = shallowCopy(args.pop())).blockTag) {
                _context17.next = 7;
                break;
              }
              return _context17.next = 6, overrides.blockTag;

             case 6:
              blockTag = _context17.sent;

             case 7:
              delete overrides.blockTag, args.push(overrides);

             case 9:
              if (null == contract.deployTransaction) {
                _context17.next = 12;
                break;
              }
              return _context17.next = 12, contract._deployed(blockTag);

             case 12:
              return _context17.next = 14, populateTransaction(contract, fragment, args);

             case 14:
              return tx = _context17.sent, _context17.next = 17, signerOrProvider.call(tx, blockTag);

             case 17:
              return result = _context17.sent, _context17.prev = 18, value = contract.interface.decodeFunctionResult(fragment, result), 
              collapseSimple && 1 === fragment.outputs.length && (value = value[0]), _context17.abrupt("return", value);

             case 24:
              throw _context17.prev = 24, _context17.t0 = _context17.catch(18), _context17.t0.code === Logger.errors.CALL_EXCEPTION && (_context17.t0.address = contract.address, 
              _context17.t0.args = args, _context17.t0.transaction = tx), _context17.t0;

             case 28:
             case "end":
              return _context17.stop();
            }
          }), _callee17, null, [ [ 18, 24 ] ]);
        })));
      };
    }
    function buildDefault(contract, fragment, collapseSimple) {
      return fragment.constant ? buildCall(contract, fragment, collapseSimple) : function(contract, fragment) {
        return function() {
          for (var _len7 = arguments.length, args = new Array(_len7), _key13 = 0; _key13 < _len7; _key13++) args[_key13] = arguments[_key13];
          return __awaiter$3(this, void 0, void 0, regeneratorRuntime.mark((function _callee18() {
            var txRequest, tx, wait;
            return regeneratorRuntime.wrap((function(_context18) {
              for (;;) switch (_context18.prev = _context18.next) {
               case 0:
                if (contract.signer || logger$i.throwError("sending a transaction requires a signer", Logger.errors.UNSUPPORTED_OPERATION, {
                  operation: "sendTransaction"
                }), null == contract.deployTransaction) {
                  _context18.next = 4;
                  break;
                }
                return _context18.next = 4, contract._deployed();

               case 4:
                return _context18.next = 6, populateTransaction(contract, fragment, args);

               case 6:
                return txRequest = _context18.sent, _context18.next = 9, contract.signer.sendTransaction(txRequest);

               case 9:
                return tx = _context18.sent, wait = tx.wait.bind(tx), tx.wait = function(confirmations) {
                  return wait(confirmations).then((function(receipt) {
                    return receipt.events = receipt.logs.map((function(log) {
                      var event = deepCopy(log), parsed = null;
                      try {
                        parsed = contract.interface.parseLog(log);
                      } catch (e) {}
                      return parsed && (event.args = parsed.args, event.decode = function(data, topics) {
                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);
                      }, event.event = parsed.name, event.eventSignature = parsed.signature), event.removeListener = function() {
                        return contract.provider;
                      }, event.getBlock = function() {
                        return contract.provider.getBlock(receipt.blockHash);
                      }, event.getTransaction = function() {
                        return contract.provider.getTransaction(receipt.transactionHash);
                      }, event.getTransactionReceipt = function() {
                        return Promise.resolve(receipt);
                      }, event;
                    })), receipt;
                  }));
                }, _context18.abrupt("return", tx);

               case 13:
               case "end":
                return _context18.stop();
              }
            }), _callee18);
          })));
        };
      }(contract, fragment);
    }
    function getEventTag(filter) {
      return !filter.address || null != filter.topics && 0 !== filter.topics.length ? (filter.address || "*") + "@" + (filter.topics ? filter.topics.map((function(topic) {
        return Array.isArray(topic) ? topic.join("|") : topic;
      })).join(":") : "") : "*";
    }
    var SupportedAlgorithm, RunningEvent = function() {
      function RunningEvent(tag, filter) {
        _classCallCheck(this, RunningEvent), defineReadOnly(this, "tag", tag), defineReadOnly(this, "filter", filter), 
        this._listeners = [];
      }
      return _createClass(RunningEvent, [ {
        key: "addListener",
        value: function(listener, once) {
          this._listeners.push({
            listener,
            once
          });
        }
      }, {
        key: "removeListener",
        value: function(listener) {
          var done = !1;
          this._listeners = this._listeners.filter((function(item) {
            return !(!done && item.listener === listener) || (done = !0, !1);
          }));
        }
      }, {
        key: "removeAllListeners",
        value: function() {
          this._listeners = [];
        }
      }, {
        key: "listeners",
        value: function() {
          return this._listeners.map((function(i) {
            return i.listener;
          }));
        }
      }, {
        key: "listenerCount",
        value: function() {
          return this._listeners.length;
        }
      }, {
        key: "run",
        value: function(args) {
          var _this20 = this, listenerCount = this.listenerCount();
          return this._listeners = this._listeners.filter((function(item) {
            var argsCopy = args.slice();
            return setTimeout((function() {
              item.listener.apply(_this20, argsCopy);
            }), 0), !item.once;
          })), listenerCount;
        }
      }, {
        key: "prepareEvent",
        value: function(event) {}
      }, {
        key: "getEmit",
        value: function(event) {
          return [ event ];
        }
      } ]), RunningEvent;
    }(), ErrorRunningEvent = function(_RunningEvent) {
      _inherits(ErrorRunningEvent, _RunningEvent);
      var _super25 = _createSuper(ErrorRunningEvent);
      function ErrorRunningEvent() {
        return _classCallCheck(this, ErrorRunningEvent), _super25.call(this, "error", null);
      }
      return ErrorRunningEvent;
    }(RunningEvent), FragmentRunningEvent = function(_RunningEvent2) {
      _inherits(FragmentRunningEvent, _RunningEvent2);
      var _super26 = _createSuper(FragmentRunningEvent);
      function FragmentRunningEvent(address, contractInterface, fragment, topics) {
        var _this21;
        _classCallCheck(this, FragmentRunningEvent);
        var filter = {
          address
        }, topic = contractInterface.getEventTopic(fragment);
        return topics ? (topic !== topics[0] && logger$i.throwArgumentError("topic mismatch", "topics", topics), 
        filter.topics = topics.slice()) : filter.topics = [ topic ], defineReadOnly(_assertThisInitialized(_this21 = _super26.call(this, getEventTag(filter), filter)), "address", address), 
        defineReadOnly(_assertThisInitialized(_this21), "interface", contractInterface), 
        defineReadOnly(_assertThisInitialized(_this21), "fragment", fragment), _this21;
      }
      return _createClass(FragmentRunningEvent, [ {
        key: "prepareEvent",
        value: function(event) {
          var _this22 = this;
          _get(_getPrototypeOf(FragmentRunningEvent.prototype), "prepareEvent", this).call(this, event), 
          event.event = this.fragment.name, event.eventSignature = this.fragment.format(), 
          event.decode = function(data, topics) {
            return _this22.interface.decodeEventLog(_this22.fragment, data, topics);
          };
          try {
            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);
          } catch (error) {
            event.args = null, event.decodeError = error;
          }
        }
      }, {
        key: "getEmit",
        value: function(event) {
          var errors = checkResultErrors(event.args);
          if (errors.length) throw errors[0].error;
          var args = (event.args || []).slice();
          return args.push(event), args;
        }
      } ]), FragmentRunningEvent;
    }(RunningEvent), WildcardRunningEvent = function(_RunningEvent3) {
      _inherits(WildcardRunningEvent, _RunningEvent3);
      var _super27 = _createSuper(WildcardRunningEvent);
      function WildcardRunningEvent(address, contractInterface) {
        var _this23;
        return _classCallCheck(this, WildcardRunningEvent), defineReadOnly(_assertThisInitialized(_this23 = _super27.call(this, "*", {
          address
        })), "address", address), defineReadOnly(_assertThisInitialized(_this23), "interface", contractInterface), 
        _this23;
      }
      return _createClass(WildcardRunningEvent, [ {
        key: "prepareEvent",
        value: function(event) {
          var _this24 = this;
          _get(_getPrototypeOf(WildcardRunningEvent.prototype), "prepareEvent", this).call(this, event);
          try {
            var parsed = this.interface.parseLog(event);
            event.event = parsed.name, event.eventSignature = parsed.signature, event.decode = function(data, topics) {
              return _this24.interface.decodeEventLog(parsed.eventFragment, data, topics);
            }, event.args = parsed.args;
          } catch (error) {}
        }
      } ]), WildcardRunningEvent;
    }(RunningEvent), BaseContract = function() {
      function BaseContract(addressOrName, contractInterface, signerOrProvider) {
        var _this25 = this;
        _classCallCheck(this, BaseContract), logger$i.checkNew(this instanceof BaseContract ? this.constructor : void 0, Contract), 
        defineReadOnly(this, "interface", getStatic(this instanceof BaseContract ? this.constructor : void 0, "getInterface")(contractInterface)), 
        null == signerOrProvider ? (defineReadOnly(this, "provider", null), defineReadOnly(this, "signer", null)) : Signer.isSigner(signerOrProvider) ? (defineReadOnly(this, "provider", signerOrProvider.provider || null), 
        defineReadOnly(this, "signer", signerOrProvider)) : Provider.isProvider(signerOrProvider) ? (defineReadOnly(this, "provider", signerOrProvider), 
        defineReadOnly(this, "signer", null)) : logger$i.throwArgumentError("invalid signer or provider", "signerOrProvider", signerOrProvider), 
        defineReadOnly(this, "callStatic", {}), defineReadOnly(this, "estimateGas", {}), 
        defineReadOnly(this, "functions", {}), defineReadOnly(this, "populateTransaction", {}), 
        defineReadOnly(this, "filters", {});
        var uniqueFilters = {};
        if (Object.keys(this.interface.events).forEach((function(eventSignature) {
          var event = _this25.interface.events[eventSignature];
          defineReadOnly(_this25.filters, eventSignature, (function() {
            for (var _len8 = arguments.length, args = new Array(_len8), _key14 = 0; _key14 < _len8; _key14++) args[_key14] = arguments[_key14];
            return {
              address: _this25.address,
              topics: _this25.interface.encodeFilterTopics(event, args)
            };
          })), uniqueFilters[event.name] || (uniqueFilters[event.name] = []), uniqueFilters[event.name].push(eventSignature);
        })), Object.keys(uniqueFilters).forEach((function(name) {
          var filters = uniqueFilters[name];
          1 === filters.length ? defineReadOnly(_this25.filters, name, _this25.filters[filters[0]]) : logger$i.warn("Duplicate definition of ".concat(name, " (").concat(filters.join(", "), ")"));
        })), defineReadOnly(this, "_runningEvents", {}), defineReadOnly(this, "_wrappedEmits", {}), 
        null == addressOrName && logger$i.throwArgumentError("invalid contract address or ENS name", "addressOrName", addressOrName), 
        defineReadOnly(this, "address", addressOrName), this.provider) defineReadOnly(this, "resolvedAddress", resolveName(this.provider, addressOrName)); else try {
          defineReadOnly(this, "resolvedAddress", Promise.resolve(_getAddress(addressOrName)));
        } catch (error) {
          logger$i.throwError("provider is required to use ENS name as contract address", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "new Contract"
          });
        }
        var uniqueNames = {}, uniqueSignatures = {};
        Object.keys(this.interface.functions).forEach((function(signature) {
          var fragment = _this25.interface.functions[signature];
          if (uniqueSignatures[signature]) logger$i.warn("Duplicate ABI entry for ".concat(JSON.stringify(name))); else {
            uniqueSignatures[signature] = !0;
            var _name11 = fragment.name;
            uniqueNames[_name11] || (uniqueNames[_name11] = []), uniqueNames[_name11].push(signature), 
            null == _this25[signature] && defineReadOnly(_this25, signature, buildDefault(_this25, fragment, !0)), 
            null == _this25.functions[signature] && defineReadOnly(_this25.functions, signature, buildDefault(_this25, fragment, !1)), 
            null == _this25.callStatic[signature] && defineReadOnly(_this25.callStatic, signature, buildCall(_this25, fragment, !0)), 
            null == _this25.populateTransaction[signature] && defineReadOnly(_this25.populateTransaction, signature, function(contract, fragment) {
              return function() {
                for (var _len4 = arguments.length, args = new Array(_len4), _key10 = 0; _key10 < _len4; _key10++) args[_key10] = arguments[_key10];
                return populateTransaction(contract, fragment, args);
              };
            }(_this25, fragment)), null == _this25.estimateGas[signature] && defineReadOnly(_this25.estimateGas, signature, function(contract, fragment) {
              var signerOrProvider = contract.signer || contract.provider;
              return function() {
                for (var _len5 = arguments.length, args = new Array(_len5), _key11 = 0; _key11 < _len5; _key11++) args[_key11] = arguments[_key11];
                return __awaiter$3(this, void 0, void 0, regeneratorRuntime.mark((function _callee16() {
                  var tx;
                  return regeneratorRuntime.wrap((function(_context16) {
                    for (;;) switch (_context16.prev = _context16.next) {
                     case 0:
                      return signerOrProvider || logger$i.throwError("estimate require a provider or signer", Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "estimateGas"
                      }), _context16.next = 3, populateTransaction(contract, fragment, args);

                     case 3:
                      return tx = _context16.sent, _context16.next = 6, signerOrProvider.estimateGas(tx);

                     case 6:
                      return _context16.abrupt("return", _context16.sent);

                     case 7:
                     case "end":
                      return _context16.stop();
                    }
                  }), _callee16);
                })));
              };
            }(_this25, fragment));
          }
        })), Object.keys(uniqueNames).forEach((function(name) {
          var signatures = uniqueNames[name];
          if (!(signatures.length > 1)) {
            var signature = signatures[0];
            try {
              null == _this25[name] && defineReadOnly(_this25, name, _this25[signature]);
            } catch (e) {}
            null == _this25.functions[name] && defineReadOnly(_this25.functions, name, _this25.functions[signature]), 
            null == _this25.callStatic[name] && defineReadOnly(_this25.callStatic, name, _this25.callStatic[signature]), 
            null == _this25.populateTransaction[name] && defineReadOnly(_this25.populateTransaction, name, _this25.populateTransaction[signature]), 
            null == _this25.estimateGas[name] && defineReadOnly(_this25.estimateGas, name, _this25.estimateGas[signature]);
          }
        }));
      }
      return _createClass(BaseContract, [ {
        key: "deployed",
        value: function() {
          return this._deployed();
        }
      }, {
        key: "_deployed",
        value: function(blockTag) {
          var _this26 = this;
          return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then((function() {
            return _this26;
          })) : this._deployedPromise = this.provider.getCode(this.address, blockTag).then((function(code) {
            return "0x" === code && logger$i.throwError("contract not deployed", Logger.errors.UNSUPPORTED_OPERATION, {
              contractAddress: _this26.address,
              operation: "getDeployed"
            }), _this26;
          }))), this._deployedPromise;
        }
      }, {
        key: "fallback",
        value: function(overrides) {
          var _this27 = this;
          this.signer || logger$i.throwError("sending a transactions require a signer", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "sendTransaction(fallback)"
          });
          var tx = shallowCopy(overrides || {});
          return [ "from", "to" ].forEach((function(key) {
            null != tx[key] && logger$i.throwError("cannot override " + key, Logger.errors.UNSUPPORTED_OPERATION, {
              operation: key
            });
          })), tx.to = this.resolvedAddress, this.deployed().then((function() {
            return _this27.signer.sendTransaction(tx);
          }));
        }
      }, {
        key: "connect",
        value: function(signerOrProvider) {
          "string" == typeof signerOrProvider && (signerOrProvider = new VoidSigner(signerOrProvider, this.provider));
          var contract = new this.constructor(this.address, this.interface, signerOrProvider);
          return this.deployTransaction && defineReadOnly(contract, "deployTransaction", this.deployTransaction), 
          contract;
        }
      }, {
        key: "attach",
        value: function(addressOrName) {
          return new this.constructor(addressOrName, this.interface, this.signer || this.provider);
        }
      }, {
        key: "_normalizeRunningEvent",
        value: function(runningEvent) {
          return this._runningEvents[runningEvent.tag] ? this._runningEvents[runningEvent.tag] : runningEvent;
        }
      }, {
        key: "_getRunningEvent",
        value: function(eventName) {
          if ("string" == typeof eventName) {
            if ("error" === eventName) return this._normalizeRunningEvent(new ErrorRunningEvent);
            if ("event" === eventName) return this._normalizeRunningEvent(new RunningEvent("event", null));
            if ("*" === eventName) return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
            var fragment = this.interface.getEvent(eventName);
            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));
          }
          if (eventName.topics && eventName.topics.length > 0) {
            try {
              var topic = eventName.topics[0];
              if ("string" != typeof topic) throw new Error("invalid topic");
              var _fragment = this.interface.getEvent(topic);
              return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, _fragment, eventName.topics));
            } catch (error) {}
            var filter = {
              address: this.address,
              topics: eventName.topics
            };
            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));
          }
          return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
        }
      }, {
        key: "_checkRunningEvents",
        value: function(runningEvent) {
          if (0 === runningEvent.listenerCount()) {
            delete this._runningEvents[runningEvent.tag];
            var emit = this._wrappedEmits[runningEvent.tag];
            emit && runningEvent.filter && (this.provider.off(runningEvent.filter, emit), delete this._wrappedEmits[runningEvent.tag]);
          }
        }
      }, {
        key: "_wrapEvent",
        value: function(runningEvent, log, listener) {
          var _this28 = this, event = deepCopy(log);
          return event.removeListener = function() {
            listener && (runningEvent.removeListener(listener), _this28._checkRunningEvents(runningEvent));
          }, event.getBlock = function() {
            return _this28.provider.getBlock(log.blockHash);
          }, event.getTransaction = function() {
            return _this28.provider.getTransaction(log.transactionHash);
          }, event.getTransactionReceipt = function() {
            return _this28.provider.getTransactionReceipt(log.transactionHash);
          }, runningEvent.prepareEvent(event), event;
        }
      }, {
        key: "_addEventListener",
        value: function(runningEvent, listener, once) {
          var _this29 = this;
          if (this.provider || logger$i.throwError("events require a provider or a signer with a provider", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "once"
          }), runningEvent.addListener(listener, once), this._runningEvents[runningEvent.tag] = runningEvent, 
          !this._wrappedEmits[runningEvent.tag]) {
            var wrappedEmit = function(log) {
              var event = _this29._wrapEvent(runningEvent, log, listener);
              if (null == event.decodeError) try {
                var args = runningEvent.getEmit(event);
                _this29.emit.apply(_this29, [ runningEvent.filter ].concat(_toConsumableArray(args)));
              } catch (error) {
                event.decodeError = error.error;
              }
              null != runningEvent.filter && _this29.emit("event", event), null != event.decodeError && _this29.emit("error", event.decodeError, event);
            };
            this._wrappedEmits[runningEvent.tag] = wrappedEmit, null != runningEvent.filter && this.provider.on(runningEvent.filter, wrappedEmit);
          }
        }
      }, {
        key: "queryFilter",
        value: function(event, fromBlockOrBlockhash, toBlock) {
          var _this30 = this, runningEvent = this._getRunningEvent(event), filter = shallowCopy(runningEvent.filter);
          return "string" == typeof fromBlockOrBlockhash && isHexString(fromBlockOrBlockhash, 32) ? (null != toBlock && logger$i.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", toBlock), 
          filter.blockHash = fromBlockOrBlockhash) : (filter.fromBlock = null != fromBlockOrBlockhash ? fromBlockOrBlockhash : 0, 
          filter.toBlock = null != toBlock ? toBlock : "latest"), this.provider.getLogs(filter).then((function(logs) {
            return logs.map((function(log) {
              return _this30._wrapEvent(runningEvent, log, null);
            }));
          }));
        }
      }, {
        key: "on",
        value: function(event, listener) {
          return this._addEventListener(this._getRunningEvent(event), listener, !1), this;
        }
      }, {
        key: "once",
        value: function(event, listener) {
          return this._addEventListener(this._getRunningEvent(event), listener, !0), this;
        }
      }, {
        key: "emit",
        value: function(eventName) {
          if (!this.provider) return !1;
          for (var runningEvent = this._getRunningEvent(eventName), _len9 = arguments.length, args = new Array(_len9 > 1 ? _len9 - 1 : 0), _key15 = 1; _key15 < _len9; _key15++) args[_key15 - 1] = arguments[_key15];
          var result = runningEvent.run(args) > 0;
          return this._checkRunningEvents(runningEvent), result;
        }
      }, {
        key: "listenerCount",
        value: function(eventName) {
          var _this31 = this;
          return this.provider ? null == eventName ? Object.keys(this._runningEvents).reduce((function(accum, key) {
            return accum + _this31._runningEvents[key].listenerCount();
          }), 0) : this._getRunningEvent(eventName).listenerCount() : 0;
        }
      }, {
        key: "listeners",
        value: function(eventName) {
          var _this32 = this;
          if (!this.provider) return [];
          if (null == eventName) {
            var _ret = function() {
              var result = [];
              for (var tag in _this32._runningEvents) _this32._runningEvents[tag].listeners().forEach((function(listener) {
                result.push(listener);
              }));
              return {
                v: result
              };
            }();
            if ("object" === _typeof(_ret)) return _ret.v;
          }
          return this._getRunningEvent(eventName).listeners();
        }
      }, {
        key: "removeAllListeners",
        value: function(eventName) {
          if (!this.provider) return this;
          if (null == eventName) {
            for (var tag in this._runningEvents) {
              var _runningEvent = this._runningEvents[tag];
              _runningEvent.removeAllListeners(), this._checkRunningEvents(_runningEvent);
            }
            return this;
          }
          var runningEvent = this._getRunningEvent(eventName);
          return runningEvent.removeAllListeners(), this._checkRunningEvents(runningEvent), 
          this;
        }
      }, {
        key: "off",
        value: function(eventName, listener) {
          if (!this.provider) return this;
          var runningEvent = this._getRunningEvent(eventName);
          return runningEvent.removeListener(listener), this._checkRunningEvents(runningEvent), 
          this;
        }
      }, {
        key: "removeListener",
        value: function(eventName, listener) {
          return this.off(eventName, listener);
        }
      } ], [ {
        key: "getContractAddress",
        value: function(transaction) {
          return _getContractAddress(transaction);
        }
      }, {
        key: "getInterface",
        value: function(contractInterface) {
          return Interface.isInterface(contractInterface) ? contractInterface : new Interface(contractInterface);
        }
      }, {
        key: "isIndexed",
        value: function(value) {
          return Indexed.isIndexed(value);
        }
      } ]), BaseContract;
    }(), Contract = function(_BaseContract) {
      _inherits(Contract, _BaseContract);
      var _super28 = _createSuper(Contract);
      function Contract() {
        return _classCallCheck(this, Contract), _super28.apply(this, arguments);
      }
      return Contract;
    }(BaseContract), ContractFactory = function() {
      function ContractFactory(contractInterface, bytecode, signer) {
        _classCallCheck(this, ContractFactory);
        var bytecodeHex = null;
        "0x" !== (bytecodeHex = "string" == typeof bytecode ? bytecode : isBytes(bytecode) ? hexlify(bytecode) : bytecode && "string" == typeof bytecode.object ? bytecode.object : "!").substring(0, 2) && (bytecodeHex = "0x" + bytecodeHex), 
        (!isHexString(bytecodeHex) || bytecodeHex.length % 2) && logger$i.throwArgumentError("invalid bytecode", "bytecode", bytecode), 
        signer && !Signer.isSigner(signer) && logger$i.throwArgumentError("invalid signer", "signer", signer), 
        defineReadOnly(this, "bytecode", bytecodeHex), defineReadOnly(this, "interface", getStatic(this instanceof ContractFactory ? this.constructor : void 0, "getInterface")(contractInterface)), 
        defineReadOnly(this, "signer", signer || null);
      }
      return _createClass(ContractFactory, [ {
        key: "getDeployTransaction",
        value: function() {
          for (var tx = {}, _len10 = arguments.length, args = new Array(_len10), _key16 = 0; _key16 < _len10; _key16++) args[_key16] = arguments[_key16];
          if (args.length === this.interface.deploy.inputs.length + 1 && "object" === _typeof(args[args.length - 1])) for (var _key17 in tx = shallowCopy(args.pop())) if (!allowedTransactionKeys$2[_key17]) throw new Error("unknown transaction override " + _key17);
          return [ "data", "from", "to" ].forEach((function(key) {
            null != tx[key] && logger$i.throwError("cannot override " + key, Logger.errors.UNSUPPORTED_OPERATION, {
              operation: key
            });
          })), logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor"), 
          tx.data = hexlify(concat([ this.bytecode, this.interface.encodeDeploy(args) ])), 
          tx;
        }
      }, {
        key: "deploy",
        value: function() {
          for (var _len11 = arguments.length, args = new Array(_len11), _key18 = 0; _key18 < _len11; _key18++) args[_key18] = arguments[_key18];
          return __awaiter$3(this, void 0, void 0, regeneratorRuntime.mark((function _callee19() {
            var overrides, params, unsignedTx, tx, address, contract;
            return regeneratorRuntime.wrap((function(_context19) {
              for (;;) switch (_context19.prev = _context19.next) {
               case 0:
                return overrides = {}, args.length === this.interface.deploy.inputs.length + 1 && (overrides = args.pop()), 
                logger$i.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor"), 
                _context19.next = 5, resolveAddresses(this.signer, args, this.interface.deploy.inputs);

               case 5:
                return (params = _context19.sent).push(overrides), unsignedTx = this.getDeployTransaction.apply(this, _toConsumableArray(params)), 
                _context19.next = 10, this.signer.sendTransaction(unsignedTx);

               case 10:
                return tx = _context19.sent, address = getStatic(this.constructor, "getContractAddress")(tx), 
                defineReadOnly(contract = getStatic(this.constructor, "getContract")(address, this.interface, this.signer), "deployTransaction", tx), 
                _context19.abrupt("return", contract);

               case 15:
               case "end":
                return _context19.stop();
              }
            }), _callee19, this);
          })));
        }
      }, {
        key: "attach",
        value: function(address) {
          return this.constructor.getContract(address, this.interface, this.signer);
        }
      }, {
        key: "connect",
        value: function(signer) {
          return new this.constructor(this.interface, this.bytecode, signer);
        }
      } ], [ {
        key: "fromSolidity",
        value: function(compilerOutput, signer) {
          null == compilerOutput && logger$i.throwError("missing compiler output", Logger.errors.MISSING_ARGUMENT, {
            argument: "compilerOutput"
          }), "string" == typeof compilerOutput && (compilerOutput = JSON.parse(compilerOutput));
          var abi = compilerOutput.abi, bytecode = null;
          return compilerOutput.bytecode ? bytecode = compilerOutput.bytecode : compilerOutput.evm && compilerOutput.evm.bytecode && (bytecode = compilerOutput.evm.bytecode), 
          new this(abi, bytecode, signer);
        }
      }, {
        key: "getInterface",
        value: function(contractInterface) {
          return Contract.getInterface(contractInterface);
        }
      }, {
        key: "getContractAddress",
        value: function(tx) {
          return _getContractAddress(tx);
        }
      }, {
        key: "getContract",
        value: function(address, contractInterface, signer) {
          return new Contract(address, contractInterface, signer);
        }
      } ]), ContractFactory;
    }(), BaseX = function() {
      function BaseX(alphabet) {
        _classCallCheck(this, BaseX), defineReadOnly(this, "alphabet", alphabet), defineReadOnly(this, "base", alphabet.length), 
        defineReadOnly(this, "_alphabetMap", {}), defineReadOnly(this, "_leader", alphabet.charAt(0));
        for (var _i14 = 0; _i14 < alphabet.length; _i14++) this._alphabetMap[alphabet.charAt(_i14)] = _i14;
      }
      return _createClass(BaseX, [ {
        key: "encode",
        value: function(value) {
          var source = arrayify(value);
          if (0 === source.length) return "";
          for (var digits = [ 0 ], _i15 = 0; _i15 < source.length; ++_i15) {
            for (var carry = source[_i15], j = 0; j < digits.length; ++j) carry += digits[j] << 8, 
            digits[j] = carry % this.base, carry = carry / this.base | 0;
            for (;carry > 0; ) digits.push(carry % this.base), carry = carry / this.base | 0;
          }
          for (var string = "", k = 0; 0 === source[k] && k < source.length - 1; ++k) string += this._leader;
          for (var q = digits.length - 1; q >= 0; --q) string += this.alphabet[digits[q]];
          return string;
        }
      }, {
        key: "decode",
        value: function(value) {
          if ("string" != typeof value) throw new TypeError("Expected String");
          var bytes = [];
          if (0 === value.length) return new Uint8Array(bytes);
          bytes.push(0);
          for (var _i16 = 0; _i16 < value.length; _i16++) {
            var _byte = this._alphabetMap[value[_i16]];
            if (void 0 === _byte) throw new Error("Non-base" + this.base + " character");
            for (var carry = _byte, j = 0; j < bytes.length; ++j) carry += bytes[j] * this.base, 
            bytes[j] = 255 & carry, carry >>= 8;
            for (;carry > 0; ) bytes.push(255 & carry), carry >>= 8;
          }
          for (var k = 0; value[k] === this._leader && k < value.length - 1; ++k) bytes.push(0);
          return arrayify(new Uint8Array(bytes.reverse()));
        }
      } ]), BaseX;
    }(), Base58 = (new BaseX("abcdefghijklmnopqrstuvwxyz234567"), new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"));
    !function(SupportedAlgorithm) {
      SupportedAlgorithm.sha256 = "sha256", SupportedAlgorithm.sha512 = "sha512";
    }(SupportedAlgorithm || (SupportedAlgorithm = {}));
    var logger$j = new Logger("sha2/5.2.0");
    function ripemd160$1(data) {
      return "0x" + hash_1.ripemd160().update(arrayify(data)).digest("hex");
    }
    function sha256$1(data) {
      return "0x" + hash_1.sha256().update(arrayify(data)).digest("hex");
    }
    function computeHmac(algorithm, key, data) {
      return SupportedAlgorithm[algorithm] || logger$j.throwError("unsupported algorithm " + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "hmac",
        algorithm
      }), "0x" + hash_1.hmac(hash_1[algorithm], arrayify(key)).update(arrayify(data)).digest("hex");
    }
    function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {
      var hLen;
      password = arrayify(password), salt = arrayify(salt);
      var r, T, l = 1, DK = new Uint8Array(keylen), block1 = new Uint8Array(salt.length + 4);
      block1.set(salt);
      for (var _i17 = 1; _i17 <= l; _i17++) {
        block1[salt.length] = _i17 >> 24 & 255, block1[salt.length + 1] = _i17 >> 16 & 255, 
        block1[salt.length + 2] = _i17 >> 8 & 255, block1[salt.length + 3] = 255 & _i17;
        var U = arrayify(computeHmac(hashAlgorithm, password, block1));
        hLen || (hLen = U.length, T = new Uint8Array(hLen), r = keylen - ((l = Math.ceil(keylen / hLen)) - 1) * hLen), 
        T.set(U);
        for (var j = 1; j < iterations; j++) {
          U = arrayify(computeHmac(hashAlgorithm, password, U));
          for (var k = 0; k < hLen; k++) T[k] ^= U[k];
        }
        var destPos = (_i17 - 1) * hLen, len = _i17 === l ? r : hLen;
        DK.set(arrayify(T).slice(0, len), destPos);
      }
      return hexlify(DK);
    }
    var logger$k = new Logger("wordlists/5.2.0"), Wordlist = function() {
      function Wordlist(locale) {
        _classCallCheck(this, Wordlist), logger$k.checkAbstract(this instanceof Wordlist ? this.constructor : void 0, Wordlist), 
        defineReadOnly(this, "locale", locale);
      }
      return _createClass(Wordlist, [ {
        key: "split",
        value: function(mnemonic) {
          return mnemonic.toLowerCase().split(/ +/g);
        }
      }, {
        key: "join",
        value: function(words) {
          return words.join(" ");
        }
      } ], [ {
        key: "check",
        value: function(wordlist) {
          for (var words = [], _i18 = 0; _i18 < 2048; _i18++) {
            var word = wordlist.getWord(_i18);
            if (_i18 !== wordlist.getWordIndex(word)) return "0x";
            words.push(word);
          }
          return id(words.join("\n") + "\n");
        }
      }, {
        key: "register",
        value: function(lang, name) {
          name || (name = lang.locale);
        }
      } ]), Wordlist;
    }(), wordlist = null;
    function loadWords(lang) {
      if (null == wordlist && (wordlist = "AbdikaceAbecedaAdresaAgreseAkceAktovkaAlejAlkoholAmputaceAnanasAndulkaAnekdotaAnketaAntikaAnulovatArchaAroganceAsfaltAsistentAspiraceAstmaAstronomAtlasAtletikaAtolAutobusAzylBabkaBachorBacilBaculkaBadatelBagetaBagrBahnoBakterieBaladaBaletkaBalkonBalonekBalvanBalzaBambusBankomatBarbarBaretBarmanBarokoBarvaBaterkaBatohBavlnaBazalkaBazilikaBazukaBednaBeranBesedaBestieBetonBezinkaBezmocBeztakBicyklBidloBiftekBikinyBilanceBiografBiologBitvaBizonBlahobytBlatouchBlechaBleduleBleskBlikatBliznaBlokovatBlouditBludBobekBobrBodlinaBodnoutBohatostBojkotBojovatBokorysBolestBorecBoroviceBotaBoubelBouchatBoudaBouleBouratBoxerBradavkaBramboraBrankaBratrBreptaBriketaBrkoBrlohBronzBroskevBrunetkaBrusinkaBrzdaBrzyBublinaBubnovatBuchtaBuditelBudkaBudovaBufetBujarostBukviceBuldokBulvaBundaBunkrBurzaButikBuvolBuzolaBydletBylinaBytovkaBzukotCapartCarevnaCedrCeduleCejchCejnCelaCelerCelkemCelniceCeninaCennostCenovkaCentrumCenzorCestopisCetkaChalupaChapadloCharitaChataChechtatChemieChichotChirurgChladChlebaChlubitChmelChmuraChobotChocholChodbaCholeraChomoutChopitChorobaChovChrapotChrlitChrtChrupChtivostChudinaChutnatChvatChvilkaChvostChybaChystatChytitCibuleCigaretaCihelnaCihlaCinkotCirkusCisternaCitaceCitrusCizinecCizostClonaCokolivCouvatCtitelCtnostCudnostCuketaCukrCupotCvaknoutCvalCvikCvrkotCyklistaDalekoDarebaDatelDatumDceraDebataDechovkaDecibelDeficitDeflaceDeklDekretDemokratDepreseDerbyDeskaDetektivDikobrazDiktovatDiodaDiplomDiskDisplejDivadloDivochDlahaDlouhoDluhopisDnesDobroDobytekDocentDochutitDodnesDohledDohodaDohraDojemDojniceDokladDokolaDoktorDokumentDolarDolevaDolinaDomaDominantDomluvitDomovDonutitDopadDopisDoplnitDoposudDoprovodDopustitDorazitDorostDortDosahDoslovDostatekDosudDosytaDotazDotekDotknoutDoufatDoutnatDovozceDozaduDoznatDozorceDrahotaDrakDramatikDravecDrazeDrdolDrobnostDrogerieDrozdDrsnostDrtitDrzostDubenDuchovnoDudekDuhaDuhovkaDusitDusnoDutostDvojiceDvorecDynamitEkologEkonomieElektronElipsaEmailEmiseEmoceEmpatieEpizodaEpochaEpopejEposEsejEsenceEskortaEskymoEtiketaEuforieEvoluceExekuceExkurzeExpediceExplozeExportExtraktFackaFajfkaFakultaFanatikFantazieFarmacieFavoritFazoleFederaceFejetonFenkaFialkaFigurantFilozofFiltrFinanceFintaFixaceFjordFlanelFlirtFlotilaFondFosforFotbalFotkaFotonFrakceFreskaFrontaFukarFunkceFyzikaGalejeGarantGenetikaGeologGilotinaGlazuraGlejtGolemGolfistaGotikaGrafGramofonGranuleGrepGrilGrogGroteskaGumaHadiceHadrHalaHalenkaHanbaHanopisHarfaHarpunaHavranHebkostHejkalHejnoHejtmanHektarHelmaHematomHerecHernaHesloHezkyHistorikHladovkaHlasivkyHlavaHledatHlenHlodavecHlohHloupostHltatHlubinaHluchotaHmatHmotaHmyzHnisHnojivoHnoutHoblinaHobojHochHodinyHodlatHodnotaHodovatHojnostHokejHolinkaHolkaHolubHomoleHonitbaHonoraceHoralHordaHorizontHorkoHorlivecHormonHorninaHoroskopHorstvoHospodaHostinaHotovostHoubaHoufHoupatHouskaHovorHradbaHraniceHravostHrazdaHrbolekHrdinaHrdloHrdostHrnekHrobkaHromadaHrotHroudaHrozenHrstkaHrubostHryzatHubenostHubnoutHudbaHukotHumrHusitaHustotaHvozdHybnostHydrantHygienaHymnaHysterikIdylkaIhnedIkonaIluzeImunitaInfekceInflaceInkasoInovaceInspekceInternetInvalidaInvestorInzerceIronieJablkoJachtaJahodaJakmileJakostJalovecJantarJarmarkJaroJasanJasnoJatkaJavorJazykJedinecJedleJednatelJehlanJekotJelenJelitoJemnostJenomJepiceJeseterJevitJezdecJezeroJinakJindyJinochJiskraJistotaJitrniceJizvaJmenovatJogurtJurtaKabaretKabelKabinetKachnaKadetKadidloKahanKajakKajutaKakaoKaktusKalamitaKalhotyKalibrKalnostKameraKamkolivKamnaKanibalKanoeKantorKapalinaKapelaKapitolaKapkaKapleKapotaKaprKapustaKapybaraKaramelKarotkaKartonKasaKatalogKatedraKauceKauzaKavalecKazajkaKazetaKazivostKdekolivKdesiKedlubenKempKeramikaKinoKlacekKladivoKlamKlapotKlasikaKlaunKlecKlenbaKlepatKlesnoutKlidKlimaKlisnaKloboukKlokanKlopaKloubKlubovnaKlusatKluzkostKmenKmitatKmotrKnihaKnotKoaliceKoberecKobkaKoblihaKobylaKocourKohoutKojenecKokosKoktejlKolapsKoledaKolizeKoloKomandoKometaKomikKomnataKomoraKompasKomunitaKonatKonceptKondiceKonecKonfeseKongresKoninaKonkursKontaktKonzervaKopanecKopieKopnoutKoprovkaKorbelKorektorKormidloKoroptevKorpusKorunaKorytoKorzetKosatecKostkaKotelKotletaKotoulKoukatKoupelnaKousekKouzloKovbojKozaKozorohKrabiceKrachKrajinaKralovatKrasopisKravataKreditKrejcarKresbaKrevetaKriketKritikKrizeKrkavecKrmelecKrmivoKrocanKrokKronikaKropitKroupaKrovkaKrtekKruhadloKrupiceKrutostKrvinkaKrychleKryptaKrystalKrytKudlankaKufrKujnostKuklaKulajdaKulichKulkaKulometKulturaKunaKupodivuKurtKurzorKutilKvalitaKvasinkaKvestorKynologKyselinaKytaraKyticeKytkaKytovecKyvadloLabradorLachtanLadnostLaikLakomecLamelaLampaLanovkaLasiceLasoLasturaLatinkaLavinaLebkaLeckdyLedenLedniceLedovkaLedvinaLegendaLegieLegraceLehceLehkostLehnoutLektvarLenochodLentilkaLepenkaLepidloLetadloLetecLetmoLetokruhLevhartLevitaceLevobokLibraLichotkaLidojedLidskostLihovinaLijavecLilekLimetkaLinieLinkaLinoleumListopadLitinaLitovatLobistaLodivodLogikaLogopedLokalitaLoketLomcovatLopataLopuchLordLososLotrLoudalLouhLoukaLouskatLovecLstivostLucernaLuciferLumpLuskLustraceLviceLyraLyrikaLysinaMadamMadloMagistrMahagonMajetekMajitelMajoritaMakakMakoviceMakrelaMalbaMalinaMalovatMalviceMaminkaMandleMankoMarnostMasakrMaskotMasopustMaticeMatrikaMaturitaMazanecMazivoMazlitMazurkaMdlobaMechanikMeditaceMedovinaMelasaMelounMentolkaMetlaMetodaMetrMezeraMigraceMihnoutMihuleMikinaMikrofonMilenecMilimetrMilostMimikaMincovnaMinibarMinometMinulostMiskaMistrMixovatMladostMlhaMlhovinaMlokMlsatMluvitMnichMnohemMobilMocnostModelkaModlitbaMohylaMokroMolekulaMomentkaMonarchaMonoklMonstrumMontovatMonzunMosazMoskytMostMotivaceMotorkaMotykaMouchaMoudrostMozaikaMozekMozolMramorMravenecMrkevMrtvolaMrzetMrzutostMstitelMudrcMuflonMulatMumieMuniceMusetMutaceMuzeumMuzikantMyslivecMzdaNabouratNachytatNadaceNadbytekNadhozNadobroNadpisNahlasNahnatNahodileNahraditNaivitaNajednouNajistoNajmoutNaklonitNakonecNakrmitNalevoNamazatNamluvitNanometrNaokoNaopakNaostroNapadatNapevnoNaplnitNapnoutNaposledNaprostoNaroditNarubyNarychloNasaditNasekatNaslepoNastatNatolikNavenekNavrchNavzdoryNazvatNebeNechatNeckyNedalekoNedbatNeduhNegaceNehetNehodaNejenNejprveNeklidNelibostNemilostNemocNeochotaNeonkaNepokojNerostNervNesmyslNesouladNetvorNeuronNevinaNezvykleNicotaNijakNikamNikdyNiklNikterakNitroNoclehNohaviceNominaceNoraNorekNositelNosnostNouzeNovinyNovotaNozdraNudaNudleNugetNutitNutnostNutrieNymfaObalObarvitObavaObdivObecObehnatObejmoutObezitaObhajobaObilniceObjasnitObjektObklopitOblastOblekOblibaOblohaObludaObnosObohatitObojekOboutObrazecObrnaObrubaObrysObsahObsluhaObstaratObuvObvazObvinitObvodObvykleObyvatelObzorOcasOcelOcenitOchladitOchotaOchranaOcitnoutOdbojOdbytOdchodOdcizitOdebratOdeslatOdevzdatOdezvaOdhadceOdhoditOdjetOdjinudOdkazOdkoupitOdlivOdlukaOdmlkaOdolnostOdpadOdpisOdploutOdporOdpustitOdpykatOdrazkaOdsouditOdstupOdsunOdtokOdtudOdvahaOdvetaOdvolatOdvracetOdznakOfinaOfsajdOhlasOhniskoOhradaOhrozitOhryzekOkapOkeniceOklikaOknoOkouzlitOkovyOkrasaOkresOkrsekOkruhOkupantOkurkaOkusitOlejninaOlizovatOmakOmeletaOmezitOmladinaOmlouvatOmluvaOmylOnehdyOpakovatOpasekOperaceOpiceOpilostOpisovatOporaOpoziceOpravduOprotiOrbitalOrchestrOrgieOrliceOrlojOrtelOsadaOschnoutOsikaOsivoOslavaOslepitOslnitOslovitOsnovaOsobaOsolitOspalecOstenOstrahaOstudaOstychOsvojitOteplitOtiskOtopOtrhatOtrlostOtrokOtrubyOtvorOvanoutOvarOvesOvlivnitOvoceOxidOzdobaPachatelPacientPadouchPahorekPaktPalandaPalecPalivoPalubaPamfletPamlsekPanenkaPanikaPannaPanovatPanstvoPantoflePaprikaParketaParodiePartaParukaParybaPasekaPasivitaPastelkaPatentPatronaPavoukPaznehtPazourekPeckaPedagogPejsekPekloPelotonPenaltaPendrekPenzePeriskopPeroPestrostPetardaPeticePetrolejPevninaPexesoPianistaPihaPijavicePiklePiknikPilinaPilnostPilulkaPinzetaPipetaPisatelPistolePitevnaPivnicePivovarPlacentaPlakatPlamenPlanetaPlastikaPlatitPlavidloPlazPlechPlemenoPlentaPlesPletivoPlevelPlivatPlnitPlnoPlochaPlodinaPlombaPloutPlukPlynPobavitPobytPochodPocitPoctivecPodatPodcenitPodepsatPodhledPodivitPodkladPodmanitPodnikPodobaPodporaPodrazPodstataPodvodPodzimPoeziePohankaPohnutkaPohovorPohromaPohybPointaPojistkaPojmoutPokazitPoklesPokojPokrokPokutaPokynPolednePolibekPolknoutPolohaPolynomPomaluPominoutPomlkaPomocPomstaPomysletPonechatPonorkaPonurostPopadatPopelPopisekPoplachPoprositPopsatPopudPoradcePorcePorodPoruchaPoryvPosaditPosedPosilaPoskokPoslanecPosouditPospoluPostavaPosudekPosypPotahPotkanPotleskPotomekPotravaPotupaPotvoraPoukazPoutoPouzdroPovahaPovidlaPovlakPovozPovrchPovstatPovykPovzdechPozdravPozemekPoznatekPozorPozvatPracovatPrahoryPraktikaPralesPraotecPraporekPrasePravdaPrincipPrknoProbuditProcentoProdejProfeseProhraProjektProlomitPromilePronikatPropadProrokProsbaProtonProutekProvazPrskavkaPrstenPrudkostPrutPrvekPrvohoryPsanecPsovodPstruhPtactvoPubertaPuchPudlPukavecPuklinaPukrlePultPumpaPuncPupenPusaPusinkaPustinaPutovatPutykaPyramidaPyskPytelRacekRachotRadiaceRadniceRadonRaftRagbyRaketaRakovinaRamenoRampouchRandeRarachRaritaRasovnaRastrRatolestRazanceRazidloReagovatReakceReceptRedaktorReferentReflexRejnokReklamaRekordRekrutRektorReputaceRevizeRevmaRevolverRezervaRiskovatRizikoRobotikaRodokmenRohovkaRokleRokokoRomanetoRopovodRopuchaRorejsRosolRostlinaRotmistrRotopedRotundaRoubenkaRouchoRoupRouraRovinaRovniceRozborRozchodRozdatRozeznatRozhodceRozinkaRozjezdRozkazRozlohaRozmarRozpadRozruchRozsahRoztokRozumRozvodRubrikaRuchadloRukaviceRukopisRybaRybolovRychlostRydloRypadloRytinaRyzostSadistaSahatSakoSamecSamizdatSamotaSanitkaSardinkaSasankaSatelitSazbaSazeniceSborSchovatSebrankaSeceseSedadloSedimentSedloSehnatSejmoutSekeraSektaSekundaSekvojeSemenoSenoServisSesaditSeshoraSeskokSeslatSestraSesuvSesypatSetbaSetinaSetkatSetnoutSetrvatSeverSeznamShodaShrnoutSifonSilniceSirkaSirotekSirupSituaceSkafandrSkaliskoSkanzenSkautSkeptikSkicaSkladbaSkleniceSkloSkluzSkobaSkokanSkoroSkriptaSkrzSkupinaSkvostSkvrnaSlabikaSladidloSlaninaSlastSlavnostSledovatSlepecSlevaSlezinaSlibSlinaSlizniceSlonSloupekSlovoSluchSluhaSlunceSlupkaSlzaSmaragdSmetanaSmilstvoSmlouvaSmogSmradSmrkSmrtkaSmutekSmyslSnadSnahaSnobSobotaSochaSodovkaSokolSopkaSotvaSoubojSoucitSoudceSouhlasSouladSoumrakSoupravaSousedSoutokSouvisetSpalovnaSpasitelSpisSplavSpodekSpojenecSpoluSponzorSpornostSpoustaSprchaSpustitSrandaSrazSrdceSrnaSrnecSrovnatSrpenSrstSrubStaniceStarostaStatikaStavbaStehnoStezkaStodolaStolekStopaStornoStoupatStrachStresStrhnoutStromStrunaStudnaStupniceStvolStykSubjektSubtropySucharSudostSuknoSundatSunoutSurikataSurovinaSvahSvalstvoSvetrSvatbaSvazekSvisleSvitekSvobodaSvodidloSvorkaSvrabSykavkaSykotSynekSynovecSypatSypkostSyrovostSyselSytostTabletkaTabuleTahounTajemnoTajfunTajgaTajitTajnostTaktikaTamhleTamponTancovatTanecTankerTapetaTaveninaTazatelTechnikaTehdyTekutinaTelefonTemnotaTendenceTenistaTenorTeplotaTepnaTeprveTerapieTermoskaTextilTichoTiskopisTitulekTkadlecTkaninaTlapkaTleskatTlukotTlupaTmelToaletaTopinkaTopolTorzoTouhaToulecTradiceTraktorTrampTrasaTraverzaTrefitTrestTrezorTrhavinaTrhlinaTrochuTrojiceTroskaTroubaTrpceTrpitelTrpkostTrubecTruchlitTruhliceTrusTrvatTudyTuhnoutTuhostTundraTuristaTurnajTuzemskoTvarohTvorbaTvrdostTvrzTygrTykevUbohostUbozeUbratUbrousekUbrusUbytovnaUchoUctivostUdivitUhraditUjednatUjistitUjmoutUkazatelUklidnitUklonitUkotvitUkrojitUliceUlitaUlovitUmyvadloUnavitUniformaUniknoutUpadnoutUplatnitUplynoutUpoutatUpravitUranUrazitUsednoutUsilovatUsmrtitUsnadnitUsnoutUsouditUstlatUstrnoutUtahovatUtkatUtlumitUtonoutUtopenecUtrousitUvalitUvolnitUvozovkaUzdravitUzelUzeninaUzlinaUznatVagonValchaValounVanaVandalVanilkaVaranVarhanyVarovatVcelkuVchodVdovaVedroVegetaceVejceVelbloudVeletrhVelitelVelmocVelrybaVenkovVerandaVerzeVeselkaVeskrzeVesniceVespoduVestaVeterinaVeverkaVibraceVichrVideohraVidinaVidleVilaViniceVisetVitalitaVizeVizitkaVjezdVkladVkusVlajkaVlakVlasecVlevoVlhkostVlivVlnovkaVloupatVnucovatVnukVodaVodivostVodoznakVodstvoVojenskyVojnaVojskoVolantVolbaVolitVolnoVoskovkaVozidloVozovnaVpravoVrabecVracetVrahVrataVrbaVrcholekVrhatVrstvaVrtuleVsaditVstoupitVstupVtipVybavitVybratVychovatVydatVydraVyfotitVyhledatVyhnoutVyhoditVyhraditVyhubitVyjasnitVyjetVyjmoutVyklopitVykonatVylekatVymazatVymezitVymizetVymysletVynechatVynikatVynutitVypadatVyplatitVypravitVypustitVyrazitVyrovnatVyrvatVyslovitVysokoVystavitVysunoutVysypatVytasitVytesatVytratitVyvinoutVyvolatVyvrhelVyzdobitVyznatVzaduVzbuditVzchopitVzdorVzduchVzdychatVzestupVzhledemVzkazVzlykatVznikVzorekVzpouraVztahVztekXylofonZabratZabydletZachovatZadarmoZadusitZafoukatZahltitZahoditZahradaZahynoutZajatecZajetZajistitZaklepatZakoupitZalepitZamezitZamotatZamysletZanechatZanikatZaplatitZapojitZapsatZarazitZastavitZasunoutZatajitZatemnitZatknoutZaujmoutZavalitZaveletZavinitZavolatZavrtatZazvonitZbavitZbrusuZbudovatZbytekZdalekaZdarmaZdatnostZdivoZdobitZdrojZdvihZdymadloZeleninaZemanZeminaZeptatZezaduZezdolaZhatitZhltnoutZhlubokaZhotovitZhrubaZimaZimniceZjemnitZklamatZkoumatZkratkaZkumavkaZlatoZlehkaZlobaZlomZlostZlozvykZmapovatZmarZmatekZmijeZmizetZmocnitZmodratZmrzlinaZmutovatZnakZnalostZnamenatZnovuZobrazitZotavitZoubekZoufaleZploditZpomalitZpravaZprostitZprudkaZprvuZradaZranitZrcadloZrnitostZrnoZrovnaZrychlitZrzavostZtichaZtratitZubovinaZubrZvednoutZvenkuZveselaZvonZvratZvukovodZvyk".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), 
      "0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a" !== Wordlist.check(lang))) throw wordlist = null, 
      new Error("BIP39 Wordlist for en (English) FAILED");
    }
    var LangCz = function(_Wordlist) {
      _inherits(LangCz, _Wordlist);
      var _super29 = _createSuper(LangCz);
      function LangCz() {
        return _classCallCheck(this, LangCz), _super29.call(this, "cz");
      }
      return _createClass(LangCz, [ {
        key: "getWord",
        value: function(index) {
          return loadWords(this), wordlist[index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords(this), wordlist.indexOf(word);
        }
      } ]), LangCz;
    }(Wordlist), langCz = new LangCz;
    Wordlist.register(langCz);
    var wordlist$1 = null;
    function loadWords$1(lang) {
      if (null == wordlist$1 && (wordlist$1 = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), 
      "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60" !== Wordlist.check(lang))) throw wordlist$1 = null, 
      new Error("BIP39 Wordlist for en (English) FAILED");
    }
    var LangEn = function(_Wordlist2) {
      _inherits(LangEn, _Wordlist2);
      var _super30 = _createSuper(LangEn);
      function LangEn() {
        return _classCallCheck(this, LangEn), _super30.call(this, "en");
      }
      return _createClass(LangEn, [ {
        key: "getWord",
        value: function(index) {
          return loadWords$1(this), wordlist$1[index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords$1(this), wordlist$1.indexOf(word);
        }
      } ]), LangEn;
    }(Wordlist), langEn = new LangEn;
    Wordlist.register(langEn);
    var lookup = {}, wordlist$2 = null;
    function dropDiacritic(word) {
      return logger$k.checkNormalize(), toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize("NFD").toLowerCase()), (function(c) {
        return c >= 65 && c <= 90 || c >= 97 && c <= 123;
      })));
    }
    function loadWords$2(lang) {
      if (null == wordlist$2 && ((wordlist$2 = "A/bacoAbdomenAbejaAbiertoAbogadoAbonoAbortoAbrazoAbrirAbueloAbusoAcabarAcademiaAccesoAccio/nAceiteAcelgaAcentoAceptarA/cidoAclararAcne/AcogerAcosoActivoActoActrizActuarAcudirAcuerdoAcusarAdictoAdmitirAdoptarAdornoAduanaAdultoAe/reoAfectarAficio/nAfinarAfirmarA/gilAgitarAgoni/aAgostoAgotarAgregarAgrioAguaAgudoA/guilaAgujaAhogoAhorroAireAislarAjedrezAjenoAjusteAlacra/nAlambreAlarmaAlbaA/lbumAlcaldeAldeaAlegreAlejarAlertaAletaAlfilerAlgaAlgodo/nAliadoAlientoAlivioAlmaAlmejaAlmi/barAltarAltezaAltivoAltoAlturaAlumnoAlzarAmableAmanteAmapolaAmargoAmasarA/mbarA/mbitoAmenoAmigoAmistadAmorAmparoAmplioAnchoAncianoAnclaAndarAnde/nAnemiaA/nguloAnilloA/nimoAni/sAnotarAntenaAntiguoAntojoAnualAnularAnuncioA~adirA~ejoA~oApagarAparatoApetitoApioAplicarApodoAporteApoyoAprenderAprobarApuestaApuroAradoAra~aArarA/rbitroA/rbolArbustoArchivoArcoArderArdillaArduoA/reaA/ridoAriesArmoni/aArne/sAromaArpaArpo/nArregloArrozArrugaArteArtistaAsaAsadoAsaltoAscensoAsegurarAseoAsesorAsientoAsiloAsistirAsnoAsombroA/speroAstillaAstroAstutoAsumirAsuntoAtajoAtaqueAtarAtentoAteoA/ticoAtletaA/tomoAtraerAtrozAtu/nAudazAudioAugeAulaAumentoAusenteAutorAvalAvanceAvaroAveAvellanaAvenaAvestruzAvio/nAvisoAyerAyudaAyunoAzafra/nAzarAzoteAzu/carAzufreAzulBabaBaborBacheBahi/aBaileBajarBalanzaBalco/nBaldeBambu/BancoBandaBa~oBarbaBarcoBarnizBarroBa/sculaBasto/nBasuraBatallaBateri/aBatirBatutaBau/lBazarBebe/BebidaBelloBesarBesoBestiaBichoBienBingoBlancoBloqueBlusaBoaBobinaBoboBocaBocinaBodaBodegaBoinaBolaBoleroBolsaBombaBondadBonitoBonoBonsa/iBordeBorrarBosqueBoteBoti/nBo/vedaBozalBravoBrazoBrechaBreveBrilloBrincoBrisaBrocaBromaBronceBroteBrujaBruscoBrutoBuceoBucleBuenoBueyBufandaBufo/nBu/hoBuitreBultoBurbujaBurlaBurroBuscarButacaBuzo/nCaballoCabezaCabinaCabraCacaoCada/verCadenaCaerCafe/Cai/daCaima/nCajaCajo/nCalCalamarCalcioCaldoCalidadCalleCalmaCalorCalvoCamaCambioCamelloCaminoCampoCa/ncerCandilCanelaCanguroCanicaCantoCa~aCa~o/nCaobaCaosCapazCapita/nCapoteCaptarCapuchaCaraCarbo/nCa/rcelCaretaCargaCari~oCarneCarpetaCarroCartaCasaCascoCaseroCaspaCastorCatorceCatreCaudalCausaCazoCebollaCederCedroCeldaCe/lebreCelosoCe/lulaCementoCenizaCentroCercaCerdoCerezaCeroCerrarCertezaCe/spedCetroChacalChalecoChampu/ChanclaChapaCharlaChicoChisteChivoChoqueChozaChuletaChuparCiclo/nCiegoCieloCienCiertoCifraCigarroCimaCincoCineCintaCipre/sCircoCiruelaCisneCitaCiudadClamorClanClaroClaseClaveClienteClimaCli/nicaCobreCoccio/nCochinoCocinaCocoCo/digoCodoCofreCogerCoheteCoji/nCojoColaColchaColegioColgarColinaCollarColmoColumnaCombateComerComidaCo/modoCompraCondeConejoCongaConocerConsejoContarCopaCopiaCorazo/nCorbataCorchoCordo/nCoronaCorrerCoserCosmosCostaCra/neoCra/terCrearCrecerCrei/doCremaCri/aCrimenCriptaCrisisCromoCro/nicaCroquetaCrudoCruzCuadroCuartoCuatroCuboCubrirCucharaCuelloCuentoCuerdaCuestaCuevaCuidarCulebraCulpaCultoCumbreCumplirCunaCunetaCuotaCupo/nCu/pulaCurarCuriosoCursoCurvaCutisDamaDanzaDarDardoDa/tilDeberDe/bilDe/cadaDecirDedoDefensaDefinirDejarDelfi/nDelgadoDelitoDemoraDensoDentalDeporteDerechoDerrotaDesayunoDeseoDesfileDesnudoDestinoDesvi/oDetalleDetenerDeudaDi/aDiabloDiademaDiamanteDianaDiarioDibujoDictarDienteDietaDiezDifi/cilDignoDilemaDiluirDineroDirectoDirigirDiscoDise~oDisfrazDivaDivinoDobleDoceDolorDomingoDonDonarDoradoDormirDorsoDosDosisDrago/nDrogaDuchaDudaDueloDue~oDulceDu/oDuqueDurarDurezaDuroE/banoEbrioEcharEcoEcuadorEdadEdicio/nEdificioEditorEducarEfectoEficazEjeEjemploElefanteElegirElementoElevarElipseE/liteElixirElogioEludirEmbudoEmitirEmocio/nEmpateEmpe~oEmpleoEmpresaEnanoEncargoEnchufeEnci/aEnemigoEneroEnfadoEnfermoEnga~oEnigmaEnlaceEnormeEnredoEnsayoEnse~arEnteroEntrarEnvaseEnvi/oE/pocaEquipoErizoEscalaEscenaEscolarEscribirEscudoEsenciaEsferaEsfuerzoEspadaEspejoEspi/aEsposaEspumaEsqui/EstarEsteEstiloEstufaEtapaEternoE/ticaEtniaEvadirEvaluarEventoEvitarExactoExamenExcesoExcusaExentoExigirExilioExistirE/xitoExpertoExplicarExponerExtremoFa/bricaFa/bulaFachadaFa/cilFactorFaenaFajaFaldaFalloFalsoFaltarFamaFamiliaFamosoFarao/nFarmaciaFarolFarsaFaseFatigaFaunaFavorFaxFebreroFechaFelizFeoFeriaFerozFe/rtilFervorFesti/nFiableFianzaFiarFibraFiccio/nFichaFideoFiebreFielFieraFiestaFiguraFijarFijoFilaFileteFilialFiltroFinFincaFingirFinitoFirmaFlacoFlautaFlechaFlorFlotaFluirFlujoFlu/orFobiaFocaFogataFogo/nFolioFolletoFondoFormaForroFortunaForzarFosaFotoFracasoFra/gilFranjaFraseFraudeFrei/rFrenoFresaFri/oFritoFrutaFuegoFuenteFuerzaFugaFumarFuncio/nFundaFurgo/nFuriaFusilFu/tbolFuturoGacelaGafasGaitaGajoGalaGaleri/aGalloGambaGanarGanchoGangaGansoGarajeGarzaGasolinaGastarGatoGavila/nGemeloGemirGenGe/neroGenioGenteGeranioGerenteGermenGestoGiganteGimnasioGirarGiroGlaciarGloboGloriaGolGolfoGolosoGolpeGomaGordoGorilaGorraGotaGoteoGozarGradaGra/ficoGranoGrasaGratisGraveGrietaGrilloGripeGrisGritoGrosorGru/aGruesoGrumoGrupoGuanteGuapoGuardiaGuerraGui/aGui~oGuionGuisoGuitarraGusanoGustarHaberHa/bilHablarHacerHachaHadaHallarHamacaHarinaHazHaza~aHebillaHebraHechoHeladoHelioHembraHerirHermanoHe/roeHervirHieloHierroHi/gadoHigieneHijoHimnoHistoriaHocicoHogarHogueraHojaHombreHongoHonorHonraHoraHormigaHornoHostilHoyoHuecoHuelgaHuertaHuesoHuevoHuidaHuirHumanoHu/medoHumildeHumoHundirHuraca/nHurtoIconoIdealIdiomaI/doloIglesiaIglu/IgualIlegalIlusio/nImagenIma/nImitarImparImperioImponerImpulsoIncapazI/ndiceInerteInfielInformeIngenioInicioInmensoInmuneInnatoInsectoInstanteIntere/sI/ntimoIntuirInu/tilInviernoIraIrisIroni/aIslaIsloteJabali/Jabo/nJamo/nJarabeJardi/nJarraJaulaJazmi/nJefeJeringaJineteJornadaJorobaJovenJoyaJuergaJuevesJuezJugadorJugoJugueteJuicioJuncoJunglaJunioJuntarJu/piterJurarJustoJuvenilJuzgarKiloKoalaLabioLacioLacraLadoLadro/nLagartoLa/grimaLagunaLaicoLamerLa/minaLa/mparaLanaLanchaLangostaLanzaLa/pizLargoLarvaLa/stimaLataLa/texLatirLaurelLavarLazoLealLeccio/nLecheLectorLeerLegio/nLegumbreLejanoLenguaLentoLe~aLeo/nLeopardoLesio/nLetalLetraLeveLeyendaLibertadLibroLicorLi/derLidiarLienzoLigaLigeroLimaLi/miteLimo/nLimpioLinceLindoLi/neaLingoteLinoLinternaLi/quidoLisoListaLiteraLitioLitroLlagaLlamaLlantoLlaveLlegarLlenarLlevarLlorarLloverLluviaLoboLocio/nLocoLocuraLo/gicaLogroLombrizLomoLonjaLoteLuchaLucirLugarLujoLunaLunesLupaLustroLutoLuzMacetaMachoMaderaMadreMaduroMaestroMafiaMagiaMagoMai/zMaldadMaletaMallaMaloMama/MamboMamutMancoMandoManejarMangaManiqui/ManjarManoMansoMantaMa~anaMapaMa/quinaMarMarcoMareaMarfilMargenMaridoMa/rmolMarro/nMartesMarzoMasaMa/scaraMasivoMatarMateriaMatizMatrizMa/ximoMayorMazorcaMechaMedallaMedioMe/dulaMejillaMejorMelenaMelo/nMemoriaMenorMensajeMenteMenu/MercadoMerengueMe/ritoMesMeso/nMetaMeterMe/todoMetroMezclaMiedoMielMiembroMigaMilMilagroMilitarMillo/nMimoMinaMineroMi/nimoMinutoMiopeMirarMisaMiseriaMisilMismoMitadMitoMochilaMocio/nModaModeloMohoMojarMoldeMolerMolinoMomentoMomiaMonarcaMonedaMonjaMontoMo~oMoradaMorderMorenoMorirMorroMorsaMortalMoscaMostrarMotivoMoverMo/vilMozoMuchoMudarMuebleMuelaMuerteMuestraMugreMujerMulaMuletaMultaMundoMu~ecaMuralMuroMu/sculoMuseoMusgoMu/sicaMusloNa/carNacio/nNadarNaipeNaranjaNarizNarrarNasalNatalNativoNaturalNa/useaNavalNaveNavidadNecioNe/ctarNegarNegocioNegroNeo/nNervioNetoNeutroNevarNeveraNichoNidoNieblaNietoNi~ezNi~oNi/tidoNivelNoblezaNocheNo/minaNoriaNormaNorteNotaNoticiaNovatoNovelaNovioNubeNucaNu/cleoNudilloNudoNueraNueveNuezNuloNu/meroNutriaOasisObesoObispoObjetoObraObreroObservarObtenerObvioOcaOcasoOce/anoOchentaOchoOcioOcreOctavoOctubreOcultoOcuparOcurrirOdiarOdioOdiseaOesteOfensaOfertaOficioOfrecerOgroOi/doOi/rOjoOlaOleadaOlfatoOlivoOllaOlmoOlorOlvidoOmbligoOndaOnzaOpacoOpcio/nO/peraOpinarOponerOptarO/pticaOpuestoOracio/nOradorOralO/rbitaOrcaOrdenOrejaO/rganoOrgi/aOrgulloOrienteOrigenOrillaOroOrquestaOrugaOsadi/aOscuroOseznoOsoOstraOto~oOtroOvejaO/vuloO/xidoOxi/genoOyenteOzonoPactoPadrePaellaPa/ginaPagoPai/sPa/jaroPalabraPalcoPaletaPa/lidoPalmaPalomaPalparPanPanalPa/nicoPanteraPa~ueloPapa/PapelPapillaPaquetePararParcelaParedParirParoPa/rpadoParquePa/rrafoPartePasarPaseoPasio/nPasoPastaPataPatioPatriaPausaPautaPavoPayasoPeato/nPecadoPeceraPechoPedalPedirPegarPeinePelarPelda~oPeleaPeligroPellejoPeloPelucaPenaPensarPe~o/nPeo/nPeorPepinoPeque~oPeraPerchaPerderPerezaPerfilPericoPerlaPermisoPerroPersonaPesaPescaPe/simoPesta~aPe/taloPetro/leoPezPezu~aPicarPicho/nPiePiedraPiernaPiezaPijamaPilarPilotoPimientaPinoPintorPinzaPi~aPiojoPipaPirataPisarPiscinaPisoPistaPito/nPizcaPlacaPlanPlataPlayaPlazaPleitoPlenoPlomoPlumaPluralPobrePocoPoderPodioPoemaPoesi/aPoetaPolenPolici/aPolloPolvoPomadaPomeloPomoPompaPonerPorcio/nPortalPosadaPoseerPosiblePostePotenciaPotroPozoPradoPrecozPreguntaPremioPrensaPresoPrevioPrimoPri/ncipePrisio/nPrivarProaProbarProcesoProductoProezaProfesorProgramaProlePromesaProntoPropioPro/ximoPruebaPu/blicoPucheroPudorPuebloPuertaPuestoPulgaPulirPulmo/nPulpoPulsoPumaPuntoPu~alPu~oPupaPupilaPure/QuedarQuejaQuemarQuererQuesoQuietoQui/micaQuinceQuitarRa/banoRabiaRaboRacio/nRadicalRai/zRamaRampaRanchoRangoRapazRa/pidoRaptoRasgoRaspaRatoRayoRazaRazo/nReaccio/nRealidadReba~oReboteRecaerRecetaRechazoRecogerRecreoRectoRecursoRedRedondoReducirReflejoReformaRefra/nRefugioRegaloRegirReglaRegresoRehe/nReinoRei/rRejaRelatoRelevoRelieveRellenoRelojRemarRemedioRemoRencorRendirRentaRepartoRepetirReposoReptilResRescateResinaRespetoRestoResumenRetiroRetornoRetratoReunirReve/sRevistaReyRezarRicoRiegoRiendaRiesgoRifaRi/gidoRigorRinco/nRi~o/nRi/oRiquezaRisaRitmoRitoRizoRobleRoceRociarRodarRodeoRodillaRoerRojizoRojoRomeroRomperRonRoncoRondaRopaRoperoRosaRoscaRostroRotarRubi/RuborRudoRuedaRugirRuidoRuinaRuletaRuloRumboRumorRupturaRutaRutinaSa/badoSaberSabioSableSacarSagazSagradoSalaSaldoSaleroSalirSalmo/nSalo/nSalsaSaltoSaludSalvarSambaSancio/nSandi/aSanearSangreSanidadSanoSantoSapoSaqueSardinaSarte/nSastreSata/nSaunaSaxofo/nSeccio/nSecoSecretoSectaSedSeguirSeisSelloSelvaSemanaSemillaSendaSensorSe~alSe~orSepararSepiaSequi/aSerSerieSermo/nServirSesentaSesio/nSetaSetentaSeveroSexoSextoSidraSiestaSieteSigloSignoSi/labaSilbarSilencioSillaSi/mboloSimioSirenaSistemaSitioSituarSobreSocioSodioSolSolapaSoldadoSoledadSo/lidoSoltarSolucio/nSombraSondeoSonidoSonoroSonrisaSopaSoplarSoporteSordoSorpresaSorteoSoste/nSo/tanoSuaveSubirSucesoSudorSuegraSueloSue~oSuerteSufrirSujetoSulta/nSumarSuperarSuplirSuponerSupremoSurSurcoSure~oSurgirSustoSutilTabacoTabiqueTablaTabu/TacoTactoTajoTalarTalcoTalentoTallaTalo/nTama~oTamborTangoTanqueTapaTapeteTapiaTapo/nTaquillaTardeTareaTarifaTarjetaTarotTarroTartaTatuajeTauroTazaTazo/nTeatroTechoTeclaTe/cnicaTejadoTejerTejidoTelaTele/fonoTemaTemorTemploTenazTenderTenerTenisTensoTeori/aTerapiaTercoTe/rminoTernuraTerrorTesisTesoroTestigoTeteraTextoTezTibioTiburo/nTiempoTiendaTierraTiesoTigreTijeraTildeTimbreTi/midoTimoTintaTi/oTi/picoTipoTiraTiro/nTita/nTi/tereTi/tuloTizaToallaTobilloTocarTocinoTodoTogaToldoTomarTonoTontoToparTopeToqueTo/raxToreroTormentaTorneoToroTorpedoTorreTorsoTortugaTosToscoToserTo/xicoTrabajoTractorTraerTra/ficoTragoTrajeTramoTranceTratoTraumaTrazarTre/bolTreguaTreintaTrenTreparTresTribuTrigoTripaTristeTriunfoTrofeoTrompaTroncoTropaTroteTrozoTrucoTruenoTrufaTuberi/aTuboTuertoTumbaTumorTu/nelTu/nicaTurbinaTurismoTurnoTutorUbicarU/lceraUmbralUnidadUnirUniversoUnoUntarU~aUrbanoUrbeUrgenteUrnaUsarUsuarioU/tilUtopi/aUvaVacaVaci/oVacunaVagarVagoVainaVajillaValeVa/lidoValleValorVa/lvulaVampiroVaraVariarVaro/nVasoVecinoVectorVehi/culoVeinteVejezVelaVeleroVelozVenaVencerVendaVenenoVengarVenirVentaVenusVerVeranoVerboVerdeVeredaVerjaVersoVerterVi/aViajeVibrarVicioVi/ctimaVidaVi/deoVidrioViejoViernesVigorVilVillaVinagreVinoVi~edoVioli/nViralVirgoVirtudVisorVi/speraVistaVitaminaViudoVivazViveroVivirVivoVolca/nVolumenVolverVorazVotarVotoVozVueloVulgarYacerYateYeguaYemaYernoYesoYodoYogaYogurZafiroZanjaZapatoZarzaZonaZorroZumoZurdo".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ").map((function(w) {
        return word = w, output = [], Array.prototype.forEach.call(toUtf8Bytes(word), (function(c) {
          47 === c ? (output.push(204), output.push(129)) : 126 === c ? (output.push(110), 
          output.push(204), output.push(131)) : output.push(c);
        })), toUtf8String(output);
        var word, output;
      }))).forEach((function(word, index) {
        lookup[dropDiacritic(word)] = index;
      })), "0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300" !== Wordlist.check(lang))) throw wordlist$2 = null, 
      new Error("BIP39 Wordlist for es (Spanish) FAILED");
    }
    var LangEs = function(_Wordlist3) {
      _inherits(LangEs, _Wordlist3);
      var _super31 = _createSuper(LangEs);
      function LangEs() {
        return _classCallCheck(this, LangEs), _super31.call(this, "es");
      }
      return _createClass(LangEs, [ {
        key: "getWord",
        value: function(index) {
          return loadWords$2(this), wordlist$2[index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords$2(this), lookup[dropDiacritic(word)];
        }
      } ]), LangEs;
    }(Wordlist), langEs = new LangEs;
    Wordlist.register(langEs);
    var wordlist$3 = null, lookup$1 = {};
    function dropDiacritic$1(word) {
      return logger$k.checkNormalize(), toUtf8String(Array.prototype.filter.call(toUtf8Bytes(word.normalize("NFD").toLowerCase()), (function(c) {
        return c >= 65 && c <= 90 || c >= 97 && c <= 123;
      })));
    }
    function loadWords$3(lang) {
      if (null == wordlist$3 && ((wordlist$3 = "".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ").map((function(w) {
        return word = w, output = [], Array.prototype.forEach.call(toUtf8Bytes(word), (function(c) {
          47 === c ? (output.push(204), output.push(129)) : 45 === c ? (output.push(204), 
          output.push(128)) : output.push(c);
        })), toUtf8String(output);
        var word, output;
      }))).forEach((function(word, index) {
        lookup$1[dropDiacritic$1(word)] = index;
      })), "0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045" !== Wordlist.check(lang))) throw wordlist$3 = null, 
      new Error("BIP39 Wordlist for fr (French) FAILED");
    }
    var LangFr = function(_Wordlist4) {
      _inherits(LangFr, _Wordlist4);
      var _super32 = _createSuper(LangFr);
      function LangFr() {
        return _classCallCheck(this, LangFr), _super32.call(this, "fr");
      }
      return _createClass(LangFr, [ {
        key: "getWord",
        value: function(index) {
          return loadWords$3(this), wordlist$3[index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords$3(this), lookup$1[dropDiacritic$1(word)];
        }
      } ]), LangFr;
    }(Wordlist), langFr = new LangFr;
    Wordlist.register(langFr);
    var data = [ "AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR", "ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR", "AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm", "ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC", "BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD", "QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD", "IJBEJqXZJ" ], wordlist$4 = null;
    function hex(word) {
      return hexlify(toUtf8Bytes(word));
    }
    function loadWords$4(lang) {
      if (null === wordlist$4) {
        wordlist$4 = [];
        var transform = {};
        transform[toUtf8String([ 227, 130, 154 ])] = !1, transform[toUtf8String([ 227, 130, 153 ])] = !1, 
        transform[toUtf8String([ 227, 130, 133 ])] = toUtf8String([ 227, 130, 134 ]), transform[toUtf8String([ 227, 129, 163 ])] = toUtf8String([ 227, 129, 164 ]), 
        transform[toUtf8String([ 227, 130, 131 ])] = toUtf8String([ 227, 130, 132 ]), transform[toUtf8String([ 227, 130, 135 ])] = toUtf8String([ 227, 130, 136 ]);
        for (var length = 3; length <= 9; length++) for (var d = data[length - 3], offset = 0; offset < d.length; offset += length) {
          for (var word = [], _i20 = 0; _i20 < length; _i20++) {
            var k = "~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt".indexOf(d[offset + _i20]);
            word.push(227), word.push(64 & k ? 130 : 129), word.push(128 + (63 & k));
          }
          wordlist$4.push(toUtf8String(word));
        }
        if (wordlist$4.sort((function(a, b) {
          return (a = normalize(a)) < (b = normalize(b)) ? -1 : a > b ? 1 : 0;
        })), "0xe3818de38284e3818f" === hex(wordlist$4[442]) && "0xe3818de38283e3818f" === hex(wordlist$4[443])) {
          var tmp = wordlist$4[442];
          wordlist$4[442] = wordlist$4[443], wordlist$4[443] = tmp;
        }
        if ("0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600" !== Wordlist.check(lang)) throw wordlist$4 = null, 
        new Error("BIP39 Wordlist for ja (Japanese) FAILED");
      }
      function normalize(word) {
        for (var result = "", _i19 = 0; _i19 < word.length; _i19++) {
          var kana = word[_i19], target = transform[kana];
          !1 !== target && (target && (kana = target), result += kana);
        }
        return result;
      }
    }
    var LangJa = function(_Wordlist5) {
      _inherits(LangJa, _Wordlist5);
      var _super33 = _createSuper(LangJa);
      function LangJa() {
        return _classCallCheck(this, LangJa), _super33.call(this, "ja");
      }
      return _createClass(LangJa, [ {
        key: "getWord",
        value: function(index) {
          return loadWords$4(this), wordlist$4[index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords$4(this), wordlist$4.indexOf(word);
        }
      }, {
        key: "split",
        value: function(mnemonic) {
          return logger$k.checkNormalize(), mnemonic.split(/(?:\u3000| )+/g);
        }
      }, {
        key: "join",
        value: function(words) {
          return words.join("　");
        }
      } ]), LangJa;
    }(Wordlist), langJa = new LangJa;
    Wordlist.register(langJa);
    var data$1 = [ "OYAa", "ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@HgLnrHgMT8HgMX8HgMboHgOnrHgQToHgRg3HgoHgHgrCbHgrFnHgrLVHgvAcHgvAfHnAloHnCTrHnCnvHnGTrHnGZ8HnGnvHnJT8HnLf8HnLkvHnMg8HnRTrITvFUITvFnJTAXrJTCV8JTFT3JTFT8JTFn4JTGgvJTHT8JTJT8JTJXvJTJl3JTJnvJTLX4JTLf8JTLhvJTMT8JTMXrJTMnrJTObrJTQT8JTSlvJT8DUJT8FkJT8MTJT8OXJT8OgJT8QUJT8RfJUHZoJXFT4JXFlrJXGZ8JXGnrJXLV8JXLgvJXMXoJXMX3JXNboJXPlvJXoJTJXoLkJXrAXJXrHUJXrJgJXvJTJXvOnJX4KnJYAl3JYJT8JYLhvJYQToJYrQXJY6NUJbAl3JbCZrJbDloJbGT8JbGgrJbJXvJbJboJbLf8JbLhrJbLl3JbMnvJbRg8JbSZ8JboDbJbrCZJbrSUJb3KnJb8LnJfRn8JgAXrJgCZrJgDTrJgGZrJgGZ8JgHToJgJT8JgJXoJgJgvJgLX4JgLZ3JgLZ8JgLn4JgMgrJgMn4JgOgvJgPX6JgRnvJgSToJgoCZJgoJbJgoMYJgrJXJgrJgJgrLjJg6MTJlCn3JlGgvJlJl8Jl4AnJl8FnJl8HgJnAToJnATrJnAbvJnDUoJnGnrJnJXrJnJXvJnLhvJnLnrJnLnvJnMToJnMT8JnMXvJnMX3JnMg8JnMlrJnMn4JnOX8JnST4JnSX3JnoAgJnoAnJnoJTJnoObJnrAbJnrAkJnrHnJnrJTJnrJYJnrOYJnrScJnvCUJnvFaJnvJgJnvJnJnvOYJnvQUJnvRUJn3FnJn3JTKnFl3KnLT6LTDlvLTMnoLTOn3LTRl3LTSb4LTSlrLToAnLToJgLTrAULTrAcLTrCULTrHgLTrMgLT3JnLULnrLUMX8LUoJgLVATrLVDTrLVLb8LVoJgLV8MgLV8RTLXDg3LXFlrLXrCnLXrLXLX3GTLX4GgLX4OYLZAXrLZAcrLZAgrLZAhrLZDXyLZDlrLZFbrLZFl3LZJX6LZJX8LZLc8LZLnrLZSU8LZoJTLZoJnLZrAgLZrAnLZrJYLZrLULZrMgLZrSkLZvAnLZvGULZvJeLZvOTLZ3FZLZ4JXLZ8STLZ8ScLaAT3LaAl3LaHT8LaJTrLaJT8LaJXrLaJgvLaJl4LaLVoLaMXrLaMXvLaMX8LbClvLbFToLbHlrLbJn4LbLZ3LbLhvLbMXrLbMnoLbvSULcLnrLc8HnLc8MTLdrMnLeAgoLeOgvLeOn3LfAl3LfLnvLfMl3LfOX8Lf8AnLf8JXLf8LXLgJTrLgJXrLgJl8LgMX8LgRZrLhCToLhrAbLhrFULhrJXLhvJYLjHTrLjHX4LjJX8LjLhrLjSX3LjSZ4LkFX4LkGZ8LkGgvLkJTrLkMXoLkSToLkSU8LkSZ8LkoOYLl3FfLl3MgLmAZrLmCbrLmGgrLmHboLmJnoLmJn3LmLfoLmLhrLmSToLnAX6LnAb6LnCZ3LnCb3LnDTvLnDb8LnFl3LnGnrLnHZvLnHgvLnITvLnJT8LnJX8LnJlvLnLf8LnLg6LnLhvLnLnoLnMXrLnMg8LnQlvLnSbrLnrAgLnrAnLnrDbLnrFkLnrJdLnrMULnrOYLnrSTLnvAnLnvDULnvHgLnvOYLnvOnLn3GgLn4DULn4JTLn4JnMTAZoMTAloMTDb8MTFT8MTJnoMTJnrMTLZrMTLhrMTLkvMTMX8MTRTrMToATMTrDnMTrOnMT3JnMT4MnMT8FUMT8FaMT8FlMT8GTMT8GbMT8GnMT8HnMT8JTMT8JbMT8OTMUCl8MUJTrMUJU8MUMX8MURTrMUSToMXAX6MXAb6MXCZoMXFXrMXHXrMXLgvMXOgoMXrAUMXrAnMXrHgMXrJYMXrJnMXrMTMXrMgMXrOYMXrSZMXrSgMXvDUMXvOTMX3JgMX3OTMX4JnMX8DbMX8FnMX8HbMX8HgMX8HnMX8LbMX8MnMX8OnMYAb8MYGboMYHTvMYHX4MYLTrMYLnvMYMToMYOgvMYRg3MYSTrMbAToMbAXrMbAl3MbAn8MbGZ8MbJT8MbJXrMbMXvMbMX8MbMnoMbrMUMb8AfMb8FbMb8FkMcJXoMeLnrMgFl3MgGTvMgGXoMgGgrMgGnrMgHT8MgHZrMgJnoMgLnrMgLnvMgMT8MgQUoMgrHnMgvAnMg8HgMg8JYMg8LfMloJnMl8ATMl8AXMl8JYMnAToMnAT4MnAZ8MnAl3MnAl4MnCl8MnHT8MnHg8MnJnoMnLZoMnLhrMnMXoMnMX3MnMnrMnOgvMnrFbMnrFfMnrFnMnrNTMnvJXNTMl8OTCT3OTFV8OTFn3OTHZvOTJXrOTOl3OT3ATOT3JUOT3LZOT3LeOT3MbOT8ATOT8AbOT8AgOT8MbOUCXvOUMX3OXHXvOXLl3OXrMUOXvDbOX6NUOX8JbOYFZoOYLbrOYLkoOYMg8OYSX3ObHTrObHT4ObJgrObLhrObMX3ObOX8Ob8FnOeAlrOeJT8OeJXrOeJnrOeLToOeMb8OgJXoOgLXoOgMnrOgOXrOgOloOgoAgOgoJbOgoMYOgoSTOg8AbOjLX4OjMnoOjSV8OnLVoOnrAgOn3DUPXQlrPXvFXPbvFTPdAT3PlFn3PnvFbQTLn4QToAgQToMTQULV8QURg8QUoJnQXCXvQbFbrQb8AaQb8AcQb8FbQb8MYQb8ScQeAlrQeLhrQjAn3QlFXoQloJgQloSnRTLnvRTrGURTrJTRUJZrRUoJlRUrQnRZrLmRZrMnRZrSnRZ8ATRZ8JbRZ8ScRbMT8RbST3RfGZrRfMX8RfMgrRfSZrRnAbrRnGT8RnvJgRnvLfRnvMTRn8AaSTClvSTJgrSTOXrSTRg3STRnvSToAcSToAfSToAnSToHnSToLjSToMTSTrAaSTrEUST3BYST8AgST8LmSUAZvSUAgrSUDT4SUDT8SUGgvSUJXoSUJXvSULTrSU8JTSU8LjSV8AnSV8JgSXFToSXLf8SYvAnSZrDUSZrMUSZrMnSZ8HgSZ8JTSZ8JgSZ8MYSZ8QUSaQUoSbCT3SbHToSbQYvSbSl4SboJnSbvFbSb8HbSb8JgSb8OTScGZrScHgrScJTvScMT8ScSToScoHbScrMTScvAnSeAZrSeAcrSeHboSeJUoSeLhrSeMT8SeMXrSe6JgSgHTrSkJnoSkLnvSk8CUSlFl3SlrSnSl8GnSmAboSmGT8SmJU8", "ATLnDlATrAZoATrJX4ATrMT8ATrMX4ATrRTrATvDl8ATvJUoATvMl8AT3AToAT3MX8AT8CT3AT8DT8AT8HZrAT8HgoAUAgFnAUCTFnAXoMX8AXrAT8AXrGgvAXrJXvAXrOgoAXvLl3AZvAgoAZvFbrAZvJXoAZvJl8AZvJn3AZvMX8AZvSbrAZ8FZoAZ8LZ8AZ8MU8AZ8OTvAZ8SV8AZ8SX3AbAgFZAboJnoAbvGboAb8ATrAb8AZoAb8AgrAb8Al4Ab8Db8Ab8JnoAb8LX4Ab8LZrAb8LhrAb8MT8Ab8OUoAb8Qb8Ab8ST8AcrAUoAcrAc8AcrCZ3AcrFT3AcrFZrAcrJl4AcrJn3AcrMX3AcrOTvAc8AZ8Ac8MT8AfAcJXAgoFn4AgoGgvAgoGnrAgoLc8AgoMXoAgrLnrAkrSZ8AlFXCTAloHboAlrHbrAlrLhrAlrLkoAl3CZrAl3LUoAl3LZrAnrAl4AnrMT8An3HT4BT3IToBX4MnvBb!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6", "ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv", "AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo", "AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg", "HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb", "AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl" ];
    var wordlist$5 = null;
    function loadWords$5(lang) {
      if (null == wordlist$5 && (wordlist$5 = [], data$1.forEach((function(data, length) {
        length += 4;
        for (var _i21 = 0; _i21 < data.length; _i21 += length) {
          for (var word = "", j = 0; j < length; j++) word += ((code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*".indexOf(data[_i21 + j])) >= 40 ? code = code + 168 - 40 : code >= 19 && (code = code + 97 - 19), 
          toUtf8String([ 225, 132 + (code >> 6), 128 + (63 & code) ]));
          wordlist$5.push(word);
        }
        var code;
      })), wordlist$5.sort(), "0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a" !== Wordlist.check(lang))) throw wordlist$5 = null, 
      new Error("BIP39 Wordlist for ko (Korean) FAILED");
    }
    var LangKo = function(_Wordlist6) {
      _inherits(LangKo, _Wordlist6);
      var _super34 = _createSuper(LangKo);
      function LangKo() {
        return _classCallCheck(this, LangKo), _super34.call(this, "ko");
      }
      return _createClass(LangKo, [ {
        key: "getWord",
        value: function(index) {
          return loadWords$5(this), wordlist$5[index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords$5(this), wordlist$5.indexOf(word);
        }
      } ]), LangKo;
    }(Wordlist), langKo = new LangKo;
    Wordlist.register(langKo);
    var wordlist$6 = null;
    function loadWords$6(lang) {
      if (null == wordlist$6 && (wordlist$6 = "AbacoAbbaglioAbbinatoAbeteAbissoAbolireAbrasivoAbrogatoAccadereAccennoAccusatoAcetoneAchilleAcidoAcquaAcreAcrilicoAcrobataAcutoAdagioAddebitoAddomeAdeguatoAderireAdipeAdottareAdulareAffabileAffettoAffissoAffrantoAforismaAfosoAfricanoAgaveAgenteAgevoleAggancioAgireAgitareAgonismoAgricoloAgrumetoAguzzoAlabardaAlatoAlbatroAlberatoAlboAlbumeAlceAlcolicoAlettoneAlfaAlgebraAlianteAlibiAlimentoAllagatoAllegroAllievoAllodolaAllusivoAlmenoAlogenoAlpacaAlpestreAltalenaAlternoAlticcioAltroveAlunnoAlveoloAlzareAmalgamaAmanitaAmarenaAmbitoAmbratoAmebaAmericaAmetistaAmicoAmmassoAmmendaAmmirareAmmonitoAmoreAmpioAmpliareAmuletoAnacardoAnagrafeAnalistaAnarchiaAnatraAncaAncellaAncoraAndareAndreaAnelloAngeloAngolareAngustoAnimaAnnegareAnnidatoAnnoAnnuncioAnonimoAnticipoAnziApaticoAperturaApodeApparireAppetitoAppoggioApprodoAppuntoAprileArabicaArachideAragostaAraldicaArancioAraturaArazzoArbitroArchivioArditoArenileArgentoArgineArgutoAriaArmoniaArneseArredatoArringaArrostoArsenicoArsoArteficeArzilloAsciuttoAscoltoAsepsiAsetticoAsfaltoAsinoAsolaAspiratoAsproAssaggioAsseAssolutoAssurdoAstaAstenutoAsticeAstrattoAtavicoAteismoAtomicoAtonoAttesaAttivareAttornoAttritoAttualeAusilioAustriaAutistaAutonomoAutunnoAvanzatoAvereAvvenireAvvisoAvvolgereAzioneAzotoAzzimoAzzurroBabeleBaccanoBacinoBacoBadessaBadilataBagnatoBaitaBalconeBaldoBalenaBallataBalzanoBambinoBandireBaraondaBarbaroBarcaBaritonoBarlumeBaroccoBasilicoBassoBatostaBattutoBauleBavaBavosaBeccoBeffaBelgioBelvaBendaBenevoleBenignoBenzinaBereBerlinaBetaBibitaBiciBidoneBifidoBigaBilanciaBimboBinocoloBiologoBipedeBipolareBirbanteBirraBiscottoBisestoBisnonnoBisonteBisturiBizzarroBlandoBlattaBollitoBonificoBordoBoscoBotanicoBottinoBozzoloBraccioBradipoBramaBrancaBravuraBretellaBrevettoBrezzaBrigliaBrillanteBrindareBroccoloBrodoBronzinaBrulloBrunoBubboneBucaBudinoBuffoneBuioBulboBuonoBurloneBurrascaBussolaBustaCadettoCaducoCalamaroCalcoloCalesseCalibroCalmoCaloriaCambusaCamerataCamiciaCamminoCamolaCampaleCanapaCandelaCaneCaninoCanottoCantinaCapaceCapelloCapitoloCapogiroCapperoCapraCapsulaCarapaceCarcassaCardoCarismaCarovanaCarrettoCartolinaCasaccioCascataCasermaCasoCassoneCastelloCasualeCatastaCatenaCatrameCautoCavilloCedibileCedrataCefaloCelebreCellulareCenaCenoneCentesimoCeramicaCercareCertoCerumeCervelloCesoiaCespoCetoChelaChiaroChiccaChiedereChimeraChinaChirurgoChitarraCiaoCiclismoCifrareCignoCilindroCiottoloCircaCirrosiCitricoCittadinoCiuffoCivettaCivileClassicoClinicaCloroCoccoCodardoCodiceCoerenteCognomeCollareColmatoColoreColposoColtivatoColzaComaCometaCommandoComodoComputerComuneConcisoCondurreConfermaCongelareConiugeConnessoConoscereConsumoContinuoConvegnoCopertoCopioneCoppiaCopricapoCorazzaCordataCoricatoCorniceCorollaCorpoCorredoCorsiaCorteseCosmicoCostanteCotturaCovatoCratereCravattaCreatoCredereCremosoCrescitaCretaCricetoCrinaleCrisiCriticoCroceCronacaCrostataCrucialeCruscaCucireCuculoCuginoCullatoCupolaCuratoreCursoreCurvoCuscinoCustodeDadoDainoDalmataDamerinoDanielaDannosoDanzareDatatoDavantiDavveroDebuttoDecennioDecisoDeclinoDecolloDecretoDedicatoDefinitoDeformeDegnoDelegareDelfinoDelirioDeltaDemenzaDenotatoDentroDepositoDerapataDerivareDerogaDescrittoDesertoDesiderioDesumereDetersivoDevotoDiametroDicembreDiedroDifesoDiffusoDigerireDigitaleDiluvioDinamicoDinnanziDipintoDiplomaDipoloDiradareDireDirottoDirupoDisagioDiscretoDisfareDisgeloDispostoDistanzaDisumanoDitoDivanoDiveltoDividereDivoratoDobloneDocenteDoganaleDogmaDolceDomatoDomenicaDominareDondoloDonoDormireDoteDottoreDovutoDozzinaDragoDruidoDubbioDubitareDucaleDunaDuomoDupliceDuraturoEbanoEccessoEccoEclissiEconomiaEderaEdicolaEdileEditoriaEducareEgemoniaEgliEgoismoEgregioElaboratoElargireEleganteElencatoElettoElevareElficoElicaElmoElsaElusoEmanatoEmblemaEmessoEmiroEmotivoEmozioneEmpiricoEmuloEndemicoEnduroEnergiaEnfasiEnotecaEntrareEnzimaEpatiteEpilogoEpisodioEpocaleEppureEquatoreErarioErbaErbosoEredeEremitaErigereErmeticoEroeErosivoErranteEsagonoEsameEsanimeEsaudireEscaEsempioEsercitoEsibitoEsigenteEsistereEsitoEsofagoEsortatoEsosoEspansoEspressoEssenzaEssoEstesoEstimareEstoniaEstrosoEsultareEtilicoEtnicoEtruscoEttoEuclideoEuropaEvasoEvidenzaEvitatoEvolutoEvvivaFabbricaFaccendaFachiroFalcoFamigliaFanaleFanfaraFangoFantasmaFareFarfallaFarinosoFarmacoFasciaFastosoFasulloFaticareFatoFavolosoFebbreFecolaFedeFegatoFelpaFeltroFemminaFendereFenomenoFermentoFerroFertileFessuraFestivoFettaFeudoFiabaFiduciaFifaFiguratoFiloFinanzaFinestraFinireFioreFiscaleFisicoFiumeFlaconeFlamencoFleboFlemmaFloridoFluenteFluoroFobicoFocacciaFocosoFoderatoFoglioFolataFolcloreFolgoreFondenteFoneticoFoniaFontanaForbitoForchettaForestaFormicaFornaioForoFortezzaForzareFosfatoFossoFracassoFranaFrassinoFratelloFreccettaFrenataFrescoFrigoFrollinoFrondeFrugaleFruttaFucilataFucsiaFuggenteFulmineFulvoFumanteFumettoFumosoFuneFunzioneFuocoFurboFurgoneFuroreFusoFutileGabbianoGaffeGalateoGallinaGaloppoGamberoGammaGaranziaGarboGarofanoGarzoneGasdottoGasolioGastricoGattoGaudioGazeboGazzellaGecoGelatinaGelsoGemelloGemmatoGeneGenitoreGennaioGenotipoGergoGhepardoGhiaccioGhisaGialloGildaGineproGiocareGioielloGiornoGioveGiratoGironeGittataGiudizioGiuratoGiustoGlobuloGlutineGnomoGobbaGolfGomitoGommoneGonfioGonnaGovernoGracileGradoGraficoGrammoGrandeGrattareGravosoGraziaGrecaGreggeGrifoneGrigioGrinzaGrottaGruppoGuadagnoGuaioGuantoGuardareGufoGuidareIbernatoIconaIdenticoIdillioIdoloIdraIdricoIdrogenoIgieneIgnaroIgnoratoIlareIllesoIllogicoIlludereImballoImbevutoImboccoImbutoImmaneImmersoImmolatoImpaccoImpetoImpiegoImportoImprontaInalareInarcareInattivoIncantoIncendioInchinoIncisivoInclusoIncontroIncrocioIncuboIndagineIndiaIndoleIneditoInfattiInfilareInflittoIngaggioIngegnoIngleseIngordoIngrossoInnescoInodoreInoltrareInondatoInsanoInsettoInsiemeInsonniaInsulinaIntasatoInteroIntonacoIntuitoInumidireInvalidoInveceInvitoIperboleIpnoticoIpotesiIppicaIrideIrlandaIronicoIrrigatoIrrorareIsolatoIsotopoIstericoIstitutoIstriceItaliaIterareLabbroLabirintoLaccaLaceratoLacrimaLacunaLaddoveLagoLampoLancettaLanternaLardosoLargaLaringeLastraLatenzaLatinoLattugaLavagnaLavoroLegaleLeggeroLemboLentezzaLenzaLeoneLepreLesivoLessatoLestoLetteraleLevaLevigatoLiberoLidoLievitoLillaLimaturaLimitareLimpidoLineareLinguaLiquidoLiraLiricaLiscaLiteLitigioLivreaLocandaLodeLogicaLombareLondraLongevoLoquaceLorenzoLotoLotteriaLuceLucidatoLumacaLuminosoLungoLupoLuppoloLusingaLussoLuttoMacabroMacchinaMaceroMacinatoMadamaMagicoMagliaMagneteMagroMaiolicaMalafedeMalgradoMalintesoMalsanoMaltoMalumoreManaManciaMandorlaMangiareManifestoMannaroManovraMansardaMantideManubrioMappaMaratonaMarcireMarettaMarmoMarsupioMascheraMassaiaMastinoMaterassoMatricolaMattoneMaturoMazurcaMeandroMeccanicoMecenateMedesimoMeditareMegaMelassaMelisMelodiaMeningeMenoMensolaMercurioMerendaMerloMeschinoMeseMessereMestoloMetalloMetodoMettereMiagolareMicaMicelioMicheleMicroboMidolloMieleMiglioreMilanoMiliteMimosaMineraleMiniMinoreMirinoMirtilloMiscelaMissivaMistoMisurareMitezzaMitigareMitraMittenteMnemonicoModelloModificaModuloMoganoMogioMoleMolossoMonasteroMoncoMondinaMonetarioMonileMonotonoMonsoneMontatoMonvisoMoraMordereMorsicatoMostroMotivatoMotosegaMottoMovenzaMovimentoMozzoMuccaMucosaMuffaMughettoMugnaioMulattoMulinelloMultiploMummiaMuntoMuovereMuraleMusaMuscoloMusicaMutevoleMutoNababboNaftaNanometroNarcisoNariceNarratoNascereNastrareNaturaleNauticaNaviglioNebulosaNecrosiNegativoNegozioNemmenoNeofitaNerettoNervoNessunoNettunoNeutraleNeveNevroticoNicchiaNinfaNitidoNobileNocivoNodoNomeNominaNordicoNormaleNorvegeseNostranoNotareNotiziaNotturnoNovellaNucleoNullaNumeroNuovoNutrireNuvolaNuzialeOasiObbedireObbligoObeliscoOblioOboloObsoletoOccasioneOcchioOccidenteOccorrereOccultareOcraOculatoOdiernoOdorareOffertaOffrireOffuscatoOggettoOggiOgnunoOlandeseOlfattoOliatoOlivaOlogrammaOltreOmaggioOmbelicoOmbraOmegaOmissioneOndosoOnereOniceOnnivoroOnorevoleOntaOperatoOpinioneOppostoOracoloOrafoOrdineOrecchinoOreficeOrfanoOrganicoOrigineOrizzonteOrmaOrmeggioOrnativoOrologioOrrendoOrribileOrtensiaOrticaOrzataOrzoOsareOscurareOsmosiOspedaleOspiteOssaOssidareOstacoloOsteOtiteOtreOttagonoOttimoOttobreOvaleOvestOvinoOviparoOvocitoOvunqueOvviareOzioPacchettoPacePacificoPadellaPadronePaesePagaPaginaPalazzinaPalesarePallidoPaloPaludePandoroPannelloPaoloPaonazzoPapricaParabolaParcellaParerePargoloPariParlatoParolaPartireParvenzaParzialePassivoPasticcaPataccaPatologiaPattumePavonePeccatoPedalarePedonalePeggioPelosoPenarePendicePenisolaPennutoPenombraPensarePentolaPepePepitaPerbenePercorsoPerdonatoPerforarePergamenaPeriodoPermessoPernoPerplessoPersuasoPertugioPervasoPesatorePesistaPesoPestiferoPetaloPettinePetulantePezzoPiacerePiantaPiattinoPiccinoPicozzaPiegaPietraPifferoPigiamaPigolioPigroPilaPiliferoPillolaPilotaPimpantePinetaPinnaPinoloPioggiaPiomboPiramidePireticoPiritePirolisiPitonePizzicoPlaceboPlanarePlasmaPlatanoPlenarioPochezzaPoderosoPodismoPoesiaPoggiarePolentaPoligonoPollicePolmonitePolpettaPolsoPoltronaPolverePomicePomodoroPontePopolosoPorfidoPorosoPorporaPorrePortataPosaPositivoPossessoPostulatoPotassioPoterePranzoPrassiPraticaPreclusoPredicaPrefissoPregiatoPrelievoPremerePrenotarePreparatoPresenzaPretestoPrevalsoPrimaPrincipePrivatoProblemaProcuraProdurreProfumoProgettoProlungaPromessaPronomePropostaProrogaProtesoProvaPrudentePrugnaPruritoPsichePubblicoPudicaPugilatoPugnoPulcePulitoPulsantePuntarePupazzoPupillaPuroQuadroQualcosaQuasiQuerelaQuotaRaccoltoRaddoppioRadicaleRadunatoRafficaRagazzoRagioneRagnoRamarroRamingoRamoRandagioRantolareRapatoRapinaRappresoRasaturaRaschiatoRasenteRassegnaRastrelloRataRavvedutoRealeRecepireRecintoReclutaReconditoRecuperoRedditoRedimereRegalatoRegistroRegolaRegressoRelazioneRemareRemotoRennaReplicaReprimereReputareResaResidenteResponsoRestauroReteRetinaRetoricaRettificaRevocatoRiassuntoRibadireRibelleRibrezzoRicaricaRiccoRicevereRiciclatoRicordoRicredutoRidicoloRidurreRifasareRiflessoRiformaRifugioRigareRigettatoRighelloRilassatoRilevatoRimanereRimbalzoRimedioRimorchioRinascitaRincaroRinforzoRinnovoRinomatoRinsavitoRintoccoRinunciaRinvenireRiparatoRipetutoRipienoRiportareRipresaRipulireRisataRischioRiservaRisibileRisoRispettoRistoroRisultatoRisvoltoRitardoRitegnoRitmicoRitrovoRiunioneRivaRiversoRivincitaRivoltoRizomaRobaRoboticoRobustoRocciaRocoRodaggioRodereRoditoreRogitoRollioRomanticoRompereRonzioRosolareRospoRotanteRotondoRotulaRovescioRubizzoRubricaRugaRullinoRumineRumorosoRuoloRupeRussareRusticoSabatoSabbiareSabotatoSagomaSalassoSaldaturaSalgemmaSalivareSalmoneSaloneSaltareSalutoSalvoSapereSapidoSaporitoSaracenoSarcasmoSartoSassosoSatelliteSatiraSatolloSaturnoSavanaSavioSaziatoSbadiglioSbalzoSbancatoSbarraSbattereSbavareSbendareSbirciareSbloccatoSbocciatoSbrinareSbruffoneSbuffareScabrosoScadenzaScalaScambiareScandaloScapolaScarsoScatenareScavatoSceltoScenicoScettroSchedaSchienaSciarpaScienzaScindereScippoSciroppoScivoloSclerareScodellaScolpitoScompartoSconfortoScoprireScortaScossoneScozzeseScribaScrollareScrutinioScuderiaScultoreScuolaScuroScusareSdebitareSdoganareSeccaturaSecondoSedanoSeggiolaSegnalatoSegregatoSeguitoSelciatoSelettivoSellaSelvaggioSemaforoSembrareSemeSeminatoSempreSensoSentireSepoltoSequenzaSerataSerbatoSerenoSerioSerpenteSerraglioServireSestinaSetolaSettimanaSfaceloSfaldareSfamatoSfarzosoSfaticatoSferaSfidaSfilatoSfingeSfocatoSfoderareSfogoSfoltireSforzatoSfrattoSfruttatoSfuggitoSfumareSfusoSgabelloSgarbatoSgonfiareSgorbioSgrassatoSguardoSibiloSiccomeSierraSiglaSignoreSilenzioSillabaSimboloSimpaticoSimulatoSinfoniaSingoloSinistroSinoSintesiSinusoideSiparioSismaSistoleSituatoSlittaSlogaturaSlovenoSmarritoSmemoratoSmentitoSmeraldoSmilzoSmontareSmottatoSmussatoSnellireSnervatoSnodoSobbalzoSobrioSoccorsoSocialeSodaleSoffittoSognoSoldatoSolenneSolidoSollazzoSoloSolubileSolventeSomaticoSommaSondaSonettoSonniferoSopireSoppesoSopraSorgereSorpassoSorrisoSorsoSorteggioSorvolatoSospiroSostaSottileSpadaSpallaSpargereSpatolaSpaventoSpazzolaSpecieSpedireSpegnereSpelaturaSperanzaSpessoreSpettraleSpezzatoSpiaSpigolosoSpillatoSpinosoSpiraleSplendidoSportivoSposoSprangaSprecareSpronatoSpruzzoSpuntinoSquilloSradicareSrotolatoStabileStaccoStaffaStagnareStampatoStantioStarnutoStaseraStatutoSteloSteppaSterzoStilettoStimaStirpeStivaleStizzosoStonatoStoricoStrappoStregatoStriduloStrozzareStruttoStuccareStufoStupendoSubentroSuccosoSudoreSuggeritoSugoSultanoSuonareSuperboSupportoSurgelatoSurrogatoSussurroSuturaSvagareSvedeseSveglioSvelareSvenutoSveziaSviluppoSvistaSvizzeraSvoltaSvuotareTabaccoTabulatoTacciareTaciturnoTaleTalismanoTamponeTanninoTaraTardivoTargatoTariffaTarpareTartarugaTastoTatticoTavernaTavolataTazzaTecaTecnicoTelefonoTemerarioTempoTemutoTendoneTeneroTensioneTentacoloTeoremaTermeTerrazzoTerzettoTesiTesseratoTestatoTetroTettoiaTifareTigellaTimbroTintoTipicoTipografoTiraggioTiroTitanioTitoloTitubanteTizioTizzoneToccareTollerareToltoTombolaTomoTonfoTonsillaTopazioTopologiaToppaTorbaTornareTorroneTortoraToscanoTossireTostaturaTotanoTraboccoTracheaTrafilaTragediaTralcioTramontoTransitoTrapanoTrarreTraslocoTrattatoTraveTrecciaTremolioTrespoloTributoTrichecoTrifoglioTrilloTrinceaTrioTristezzaTrituratoTrivellaTrombaTronoTroppoTrottolaTrovareTruccatoTubaturaTuffatoTulipanoTumultoTunisiaTurbareTurchinoTutaTutelaUbicatoUccelloUccisoreUdireUditivoUffaUfficioUgualeUlisseUltimatoUmanoUmileUmorismoUncinettoUngereUnghereseUnicornoUnificatoUnisonoUnitarioUnteUovoUpupaUraganoUrgenzaUrloUsanzaUsatoUscitoUsignoloUsuraioUtensileUtilizzoUtopiaVacanteVaccinatoVagabondoVagliatoValangaValgoValicoVallettaValorosoValutareValvolaVampataVangareVanitosoVanoVantaggioVanveraVaporeVaranoVarcatoVarianteVascaVedettaVedovaVedutoVegetaleVeicoloVelcroVelinaVellutoVeloceVenatoVendemmiaVentoVeraceVerbaleVergognaVerificaVeroVerrucaVerticaleVescicaVessilloVestaleVeteranoVetrinaVetustoViandanteVibranteVicendaVichingoVicinanzaVidimareVigiliaVignetoVigoreVileVillanoViminiVincitoreViolaViperaVirgolaVirologoVirulentoViscosoVisioneVispoVissutoVisuraVitaVitelloVittimaVivandaVividoViziareVoceVogaVolatileVolereVolpeVoragineVulcanoZampognaZannaZappatoZatteraZavorraZefiroZelanteZeloZenzeroZerbinoZibettoZincoZirconeZittoZollaZoticoZuccheroZufoloZuluZuppa".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), 
      "0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620" !== Wordlist.check(lang))) throw wordlist$6 = null, 
      new Error("BIP39 Wordlist for it (Italian) FAILED");
    }
    var LangIt = function(_Wordlist7) {
      _inherits(LangIt, _Wordlist7);
      var _super35 = _createSuper(LangIt);
      function LangIt() {
        return _classCallCheck(this, LangIt), _super35.call(this, "it");
      }
      return _createClass(LangIt, [ {
        key: "getWord",
        value: function(index) {
          return loadWords$6(this), wordlist$6[index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords$6(this), wordlist$6.indexOf(word);
        }
      } ]), LangIt;
    }(Wordlist), langIt = new LangIt;
    Wordlist.register(langIt);
    var data$2 = "}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH", wordlist$7 = {
      zh_cn: null,
      zh_tw: null
    }, Checks = {
      zh_cn: "0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1",
      zh_tw: "0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d"
    }, codes$1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    function loadWords$7(lang) {
      if (null === wordlist$7[lang.locale]) {
        wordlist$7[lang.locale] = [];
        for (var deltaOffset = 0, _i22 = 0; _i22 < 2048; _i22++) {
          var _s2 = "~!@#$%^&*_-=[]{}|;:,.()<>?".indexOf(data$2[3 * _i22]), bytes = [ 228 + (_s2 >> 2), 128 + codes$1.indexOf(data$2[3 * _i22 + 1]), 128 + codes$1.indexOf(data$2[3 * _i22 + 2]) ];
          if ("zh_tw" === lang.locale) for (var _i23 = _s2 % 4; _i23 < 3; _i23++) bytes[_i23] = codes$1.indexOf("FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL"[deltaOffset++]) + (0 == _i23 ? 228 : 128);
          wordlist$7[lang.locale].push(toUtf8String(bytes));
        }
        if (Wordlist.check(lang) !== Checks[lang.locale]) throw wordlist$7[lang.locale] = null, 
        new Error("BIP39 Wordlist for " + lang.locale + " (Chinese) FAILED");
      }
    }
    var LangZh = function(_Wordlist8) {
      _inherits(LangZh, _Wordlist8);
      var _super36 = _createSuper(LangZh);
      function LangZh(country) {
        return _classCallCheck(this, LangZh), _super36.call(this, "zh_" + country);
      }
      return _createClass(LangZh, [ {
        key: "getWord",
        value: function(index) {
          return loadWords$7(this), wordlist$7[this.locale][index];
        }
      }, {
        key: "getWordIndex",
        value: function(word) {
          return loadWords$7(this), wordlist$7[this.locale].indexOf(word);
        }
      }, {
        key: "split",
        value: function(mnemonic) {
          return (mnemonic = mnemonic.replace(/(?:\u3000| )+/g, "")).split("");
        }
      } ]), LangZh;
    }(Wordlist), langZhCn = new LangZh("cn");
    Wordlist.register(langZhCn), Wordlist.register(langZhCn, "zh");
    var langZhTw = new LangZh("tw");
    Wordlist.register(langZhTw);
    var wordlists = {
      cz: langCz,
      en: langEn,
      es: langEs,
      fr: langFr,
      it: langIt,
      ja: langJa,
      ko: langKo,
      zh: langZhCn,
      zh_cn: langZhCn,
      zh_tw: langZhTw
    }, logger$l = new Logger("hdnode/5.2.0"), N = BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), MasterSecret = toUtf8Bytes("Bitcoin seed");
    function getUpperMask(bits) {
      return (1 << bits) - 1 << 8 - bits;
    }
    function bytes32(value) {
      return hexZeroPad(hexlify(value), 32);
    }
    function base58check(data) {
      return Base58.encode(concat([ data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4) ]));
    }
    function getWordlist(wordlist) {
      if (null == wordlist) return wordlists.en;
      if ("string" == typeof wordlist) {
        var _words = wordlists[wordlist];
        return null == _words && logger$l.throwArgumentError("unknown locale", "wordlist", wordlist), 
        _words;
      }
      return wordlist;
    }
    var _constructorGuard$3 = {}, defaultPath = "m/44'/60'/0'/0/0", HDNode = function() {
      function HDNode(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {
        if (_classCallCheck(this, HDNode), logger$l.checkNew(this instanceof HDNode ? this.constructor : void 0, HDNode), 
        constructorGuard !== _constructorGuard$3) throw new Error("HDNode constructor cannot be called directly");
        if (privateKey) {
          var signingKey = new SigningKey(privateKey);
          defineReadOnly(this, "privateKey", signingKey.privateKey), defineReadOnly(this, "publicKey", signingKey.compressedPublicKey);
        } else defineReadOnly(this, "privateKey", null), defineReadOnly(this, "publicKey", hexlify(publicKey));
        defineReadOnly(this, "parentFingerprint", parentFingerprint), defineReadOnly(this, "fingerprint", hexDataSlice(ripemd160$1(sha256$1(this.publicKey)), 0, 4)), 
        defineReadOnly(this, "address", computeAddress(this.publicKey)), defineReadOnly(this, "chainCode", chainCode), 
        defineReadOnly(this, "index", index), defineReadOnly(this, "depth", depth), null == mnemonicOrPath ? (defineReadOnly(this, "mnemonic", null), 
        defineReadOnly(this, "path", null)) : "string" == typeof mnemonicOrPath ? (defineReadOnly(this, "mnemonic", null), 
        defineReadOnly(this, "path", mnemonicOrPath)) : (defineReadOnly(this, "mnemonic", mnemonicOrPath), 
        defineReadOnly(this, "path", mnemonicOrPath.path));
      }
      return _createClass(HDNode, [ {
        key: "extendedKey",
        get: function() {
          if (this.depth >= 256) throw new Error("Depth too large!");
          return base58check(concat([ null != this.privateKey ? "0x0488ADE4" : "0x0488B21E", hexlify(this.depth), this.parentFingerprint, hexZeroPad(hexlify(this.index), 4), this.chainCode, null != this.privateKey ? concat([ "0x00", this.privateKey ]) : this.publicKey ]));
        }
      }, {
        key: "neuter",
        value: function() {
          return new HDNode(_constructorGuard$3, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
        }
      }, {
        key: "_derive",
        value: function(index) {
          if (index > 4294967295) throw new Error("invalid index - " + String(index));
          var path = this.path;
          path && (path += "/" + (2147483647 & index));
          var data = new Uint8Array(37);
          if (2147483648 & index) {
            if (!this.privateKey) throw new Error("cannot derive child of neutered node");
            data.set(arrayify(this.privateKey), 1), path && (path += "'");
          } else data.set(arrayify(this.publicKey));
          for (var _i24 = 24; _i24 >= 0; _i24 -= 8) data[33 + (_i24 >> 3)] = index >> 24 - _i24 & 255;
          var I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data)), IL = I.slice(0, 32), IR = I.slice(32), ki = null, Ki = null;
          this.privateKey ? ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N)) : Ki = new SigningKey(hexlify(IL))._addPoint(this.publicKey);
          var mnemonicOrPath = path, srcMnemonic = this.mnemonic;
          return srcMnemonic && (mnemonicOrPath = Object.freeze({
            phrase: srcMnemonic.phrase,
            path,
            locale: srcMnemonic.locale || "en"
          })), new HDNode(_constructorGuard$3, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);
        }
      }, {
        key: "derivePath",
        value: function(path) {
          var components = path.split("/");
          if (0 === components.length || "m" === components[0] && 0 !== this.depth) throw new Error("invalid path - " + path);
          "m" === components[0] && components.shift();
          for (var result = this, _i25 = 0; _i25 < components.length; _i25++) {
            var component = components[_i25];
            if (component.match(/^[0-9]+'$/)) {
              var _index = parseInt(component.substring(0, component.length - 1));
              if (_index >= 2147483648) throw new Error("invalid path index - " + component);
              result = result._derive(2147483648 + _index);
            } else {
              if (!component.match(/^[0-9]+$/)) throw new Error("invalid path component - " + component);
              var _index2 = parseInt(component);
              if (_index2 >= 2147483648) throw new Error("invalid path index - " + component);
              result = result._derive(_index2);
            }
          }
          return result;
        }
      } ], [ {
        key: "_fromSeed",
        value: function(seed, mnemonic) {
          var seedArray = arrayify(seed);
          if (seedArray.length < 16 || seedArray.length > 64) throw new Error("invalid seed");
          var I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));
          return new HDNode(_constructorGuard$3, bytes32(I.slice(0, 32)), null, "0x00000000", bytes32(I.slice(32)), 0, 0, mnemonic);
        }
      }, {
        key: "fromMnemonic",
        value: function(mnemonic, password, wordlist) {
          return mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist = getWordlist(wordlist)), wordlist), 
          HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {
            phrase: mnemonic,
            path: "m",
            locale: wordlist.locale
          });
        }
      }, {
        key: "fromSeed",
        value: function(seed) {
          return HDNode._fromSeed(seed, null);
        }
      }, {
        key: "fromExtendedKey",
        value: function(extendedKey) {
          var bytes = Base58.decode(extendedKey);
          82 === bytes.length && base58check(bytes.slice(0, 78)) === extendedKey || logger$l.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
          var depth = bytes[4], parentFingerprint = hexlify(bytes.slice(5, 9)), index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16), chainCode = hexlify(bytes.slice(13, 45)), key = bytes.slice(45, 78);
          switch (hexlify(bytes.slice(0, 4))) {
           case "0x0488b21e":
           case "0x043587cf":
            return new HDNode(_constructorGuard$3, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);

           case "0x0488ade4":
           case "0x04358394 ":
            if (0 !== key[0]) break;
            return new HDNode(_constructorGuard$3, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);
          }
          return logger$l.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
        }
      } ]), HDNode;
    }();
    function mnemonicToSeed(mnemonic, password) {
      password || (password = "");
      var salt = toUtf8Bytes("mnemonic" + password, UnicodeNormalizationForm.NFKD);
      return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, "sha512");
    }
    function mnemonicToEntropy(mnemonic, wordlist) {
      wordlist = getWordlist(wordlist), logger$l.checkNormalize();
      var words = wordlist.split(mnemonic);
      if (words.length % 3 != 0) throw new Error("invalid mnemonic");
      for (var entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8))), offset = 0, _i26 = 0; _i26 < words.length; _i26++) {
        var _index3 = wordlist.getWordIndex(words[_i26].normalize("NFKD"));
        if (-1 === _index3) throw new Error("invalid mnemonic");
        for (var bit = 0; bit < 11; bit++) _index3 & 1 << 10 - bit && (entropy[offset >> 3] |= 1 << 7 - offset % 8), 
        offset++;
      }
      var entropyBits = 32 * words.length / 3, checksumMask = getUpperMask(words.length / 3);
      if ((arrayify(sha256$1(entropy.slice(0, entropyBits / 8)))[0] & checksumMask) !== (entropy[entropy.length - 1] & checksumMask)) throw new Error("invalid checksum");
      return hexlify(entropy.slice(0, entropyBits / 8));
    }
    function entropyToMnemonic(entropy, wordlist) {
      if (wordlist = getWordlist(wordlist), (entropy = arrayify(entropy)).length % 4 != 0 || entropy.length < 16 || entropy.length > 32) throw new Error("invalid entropy");
      for (var indices = [ 0 ], remainingBits = 11, _i27 = 0; _i27 < entropy.length; _i27++) remainingBits > 8 ? (indices[indices.length - 1] <<= 8, 
      indices[indices.length - 1] |= entropy[_i27], remainingBits -= 8) : (indices[indices.length - 1] <<= remainingBits, 
      indices[indices.length - 1] |= entropy[_i27] >> 8 - remainingBits, indices.push(entropy[_i27] & (1 << 8 - remainingBits) - 1), 
      remainingBits += 3);
      var checksumBits = entropy.length / 4, checksum = arrayify(sha256$1(entropy))[0] & getUpperMask(checksumBits);
      return indices[indices.length - 1] <<= checksumBits, indices[indices.length - 1] |= checksum >> 8 - checksumBits, 
      wordlist.join(indices.map((function(index) {
        return wordlist.getWord(index);
      })));
    }
    var logger$m = new Logger("random/5.2.0"), anyGlobal = null;
    try {
      if (null == (anyGlobal = window)) throw new Error("try next");
    } catch (error) {
      try {
        if (null == (anyGlobal = __webpack_require__.g)) throw new Error("try next");
      } catch (error) {
        anyGlobal = {};
      }
    }
    var crypto = anyGlobal.crypto || anyGlobal.msCrypto;
    function randomBytes(length) {
      (length <= 0 || length > 1024 || length % 1) && logger$m.throwArgumentError("invalid length", "length", length);
      var result = new Uint8Array(length);
      return crypto.getRandomValues(result), arrayify(result);
    }
    function shuffled(array) {
      for (var _i28 = (array = array.slice()).length - 1; _i28 > 0; _i28--) {
        var j = Math.floor(Math.random() * (_i28 + 1)), tmp = array[_i28];
        array[_i28] = array[j], array[j] = tmp;
      }
      return array;
    }
    crypto && crypto.getRandomValues || (logger$m.warn("WARNING: Missing strong random number source"), 
    crypto = {
      getRandomValues: function(buffer) {
        return logger$m.throwError("no secure random source avaialble", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "crypto.getRandomValues"
        });
      }
    });
    var aesJs = createCommonjsModule((function(module, exports) {
      !function(root) {
        function checkInt(value) {
          return parseInt(value) === value;
        }
        function checkInts(arrayish) {
          if (!checkInt(arrayish.length)) return !1;
          for (var i = 0; i < arrayish.length; i++) if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) return !1;
          return !0;
        }
        function coerceArray(arg, copy) {
          if (arg.buffer && ArrayBuffer.isView(arg) && "Uint8Array" === arg.name) return copy && (arg = arg.slice ? arg.slice() : Array.prototype.slice.call(arg)), 
          arg;
          if (Array.isArray(arg)) {
            if (!checkInts(arg)) throw new Error("Array contains invalid value: " + arg);
            return new Uint8Array(arg);
          }
          if (checkInt(arg.length) && checkInts(arg)) return new Uint8Array(arg);
          throw new Error("unsupported array-like object");
        }
        function createArray(length) {
          return new Uint8Array(length);
        }
        function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
          null == sourceStart && null == sourceEnd || (sourceArray = sourceArray.slice ? sourceArray.slice(sourceStart, sourceEnd) : Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd)), 
          targetArray.set(sourceArray, targetStart);
        }
        var Hex, convertUtf8 = {
          toBytes: function(text) {
            var result = [], i = 0;
            for (text = encodeURI(text); i < text.length; ) {
              var c = text.charCodeAt(i++);
              37 === c ? (result.push(parseInt(text.substr(i, 2), 16)), i += 2) : result.push(c);
            }
            return coerceArray(result);
          },
          fromBytes: function(bytes) {
            for (var result = [], i = 0; i < bytes.length; ) {
              var c = bytes[i];
              c < 128 ? (result.push(String.fromCharCode(c)), i++) : c > 191 && c < 224 ? (result.push(String.fromCharCode((31 & c) << 6 | 63 & bytes[i + 1])), 
              i += 2) : (result.push(String.fromCharCode((15 & c) << 12 | (63 & bytes[i + 1]) << 6 | 63 & bytes[i + 2])), 
              i += 3);
            }
            return result.join("");
          }
        }, convertHex = (Hex = "0123456789abcdef", {
          toBytes: function(text) {
            for (var result = [], i = 0; i < text.length; i += 2) result.push(parseInt(text.substr(i, 2), 16));
            return result;
          },
          fromBytes: function(bytes) {
            for (var result = [], i = 0; i < bytes.length; i++) {
              var v = bytes[i];
              result.push(Hex[(240 & v) >> 4] + Hex[15 & v]);
            }
            return result.join("");
          }
        }), numberOfRounds = {
          16: 10,
          24: 12,
          32: 14
        }, rcon = [ 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145 ], S = [ 99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22 ], Si = [ 82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125 ], T1 = [ 3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986 ], T2 = [ 2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766 ], T3 = [ 1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126 ], T4 = [ 1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436 ], T5 = [ 1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890 ], T6 = [ 1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935 ], T7 = [ 2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600 ], T8 = [ 4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480 ], U1 = [ 0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795 ], U2 = [ 0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855 ], U3 = [ 0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150 ], U4 = [ 0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925 ];
        function convertToInt32(bytes) {
          for (var result = [], i = 0; i < bytes.length; i += 4) result.push(bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]);
          return result;
        }
        var AES = function AES(key) {
          if (!(this instanceof AES)) throw Error("AES must be instanitated with `new`");
          Object.defineProperty(this, "key", {
            value: coerceArray(key, !0)
          }), this._prepare();
        };
        AES.prototype._prepare = function() {
          var rounds = numberOfRounds[this.key.length];
          if (null == rounds) throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
          this._Ke = [], this._Kd = [];
          for (var i = 0; i <= rounds; i++) this._Ke.push([ 0, 0, 0, 0 ]), this._Kd.push([ 0, 0, 0, 0 ]);
          var index, roundKeyCount = 4 * (rounds + 1), KC = this.key.length / 4, tk = convertToInt32(this.key);
          for (i = 0; i < KC; i++) index = i >> 2, this._Ke[index][i % 4] = tk[i], this._Kd[rounds - index][i % 4] = tk[i];
          for (var tt, rconpointer = 0, t = KC; t < roundKeyCount; ) {
            if (tt = tk[KC - 1], tk[0] ^= S[tt >> 16 & 255] << 24 ^ S[tt >> 8 & 255] << 16 ^ S[255 & tt] << 8 ^ S[tt >> 24 & 255] ^ rcon[rconpointer] << 24, 
            rconpointer += 1, 8 != KC) for (i = 1; i < KC; i++) tk[i] ^= tk[i - 1]; else {
              for (i = 1; i < KC / 2; i++) tk[i] ^= tk[i - 1];
              tt = tk[KC / 2 - 1], tk[KC / 2] ^= S[255 & tt] ^ S[tt >> 8 & 255] << 8 ^ S[tt >> 16 & 255] << 16 ^ S[tt >> 24 & 255] << 24;
              for (i = KC / 2 + 1; i < KC; i++) tk[i] ^= tk[i - 1];
            }
            for (i = 0; i < KC && t < roundKeyCount; ) r = t >> 2, c = t % 4, this._Ke[r][c] = tk[i], 
            this._Kd[rounds - r][c] = tk[i++], t++;
          }
          for (var r = 1; r < rounds; r++) for (var c = 0; c < 4; c++) tt = this._Kd[r][c], 
          this._Kd[r][c] = U1[tt >> 24 & 255] ^ U2[tt >> 16 & 255] ^ U3[tt >> 8 & 255] ^ U4[255 & tt];
        }, AES.prototype.encrypt = function(plaintext) {
          if (16 != plaintext.length) throw new Error("invalid plaintext size (must be 16 bytes)");
          for (var rounds = this._Ke.length - 1, a = [ 0, 0, 0, 0 ], t = convertToInt32(plaintext), i = 0; i < 4; i++) t[i] ^= this._Ke[0][i];
          for (var r = 1; r < rounds; r++) {
            for (i = 0; i < 4; i++) a[i] = T1[t[i] >> 24 & 255] ^ T2[t[(i + 1) % 4] >> 16 & 255] ^ T3[t[(i + 2) % 4] >> 8 & 255] ^ T4[255 & t[(i + 3) % 4]] ^ this._Ke[r][i];
            t = a.slice();
          }
          var tt, result = createArray(16);
          for (i = 0; i < 4; i++) tt = this._Ke[rounds][i], result[4 * i] = 255 & (S[t[i] >> 24 & 255] ^ tt >> 24), 
          result[4 * i + 1] = 255 & (S[t[(i + 1) % 4] >> 16 & 255] ^ tt >> 16), result[4 * i + 2] = 255 & (S[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8), 
          result[4 * i + 3] = 255 & (S[255 & t[(i + 3) % 4]] ^ tt);
          return result;
        }, AES.prototype.decrypt = function(ciphertext) {
          if (16 != ciphertext.length) throw new Error("invalid ciphertext size (must be 16 bytes)");
          for (var rounds = this._Kd.length - 1, a = [ 0, 0, 0, 0 ], t = convertToInt32(ciphertext), i = 0; i < 4; i++) t[i] ^= this._Kd[0][i];
          for (var r = 1; r < rounds; r++) {
            for (i = 0; i < 4; i++) a[i] = T5[t[i] >> 24 & 255] ^ T6[t[(i + 3) % 4] >> 16 & 255] ^ T7[t[(i + 2) % 4] >> 8 & 255] ^ T8[255 & t[(i + 1) % 4]] ^ this._Kd[r][i];
            t = a.slice();
          }
          var tt, result = createArray(16);
          for (i = 0; i < 4; i++) tt = this._Kd[rounds][i], result[4 * i] = 255 & (Si[t[i] >> 24 & 255] ^ tt >> 24), 
          result[4 * i + 1] = 255 & (Si[t[(i + 3) % 4] >> 16 & 255] ^ tt >> 16), result[4 * i + 2] = 255 & (Si[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8), 
          result[4 * i + 3] = 255 & (Si[255 & t[(i + 1) % 4]] ^ tt);
          return result;
        };
        var ModeOfOperationECB = function ModeOfOperationECB(key) {
          if (!(this instanceof ModeOfOperationECB)) throw Error("AES must be instanitated with `new`");
          this.description = "Electronic Code Block", this.name = "ecb", this._aes = new AES(key);
        };
        ModeOfOperationECB.prototype.encrypt = function(plaintext) {
          if ((plaintext = coerceArray(plaintext)).length % 16 != 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
          for (var ciphertext = createArray(plaintext.length), block = createArray(16), i = 0; i < plaintext.length; i += 16) copyArray(plaintext, block, 0, i, i + 16), 
          copyArray(block = this._aes.encrypt(block), ciphertext, i);
          return ciphertext;
        }, ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
          if ((ciphertext = coerceArray(ciphertext)).length % 16 != 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
          for (var plaintext = createArray(ciphertext.length), block = createArray(16), i = 0; i < ciphertext.length; i += 16) copyArray(ciphertext, block, 0, i, i + 16), 
          copyArray(block = this._aes.decrypt(block), plaintext, i);
          return plaintext;
        };
        var ModeOfOperationCBC = function ModeOfOperationCBC(key, iv) {
          if (!(this instanceof ModeOfOperationCBC)) throw Error("AES must be instanitated with `new`");
          if (this.description = "Cipher Block Chaining", this.name = "cbc", iv) {
            if (16 != iv.length) throw new Error("invalid initialation vector size (must be 16 bytes)");
          } else iv = createArray(16);
          this._lastCipherblock = coerceArray(iv, !0), this._aes = new AES(key);
        };
        ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
          if ((plaintext = coerceArray(plaintext)).length % 16 != 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
          for (var ciphertext = createArray(plaintext.length), block = createArray(16), i = 0; i < plaintext.length; i += 16) {
            copyArray(plaintext, block, 0, i, i + 16);
            for (var j = 0; j < 16; j++) block[j] ^= this._lastCipherblock[j];
            this._lastCipherblock = this._aes.encrypt(block), copyArray(this._lastCipherblock, ciphertext, i);
          }
          return ciphertext;
        }, ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
          if ((ciphertext = coerceArray(ciphertext)).length % 16 != 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
          for (var plaintext = createArray(ciphertext.length), block = createArray(16), i = 0; i < ciphertext.length; i += 16) {
            copyArray(ciphertext, block, 0, i, i + 16), block = this._aes.decrypt(block);
            for (var j = 0; j < 16; j++) plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
          }
          return plaintext;
        };
        var ModeOfOperationCFB = function ModeOfOperationCFB(key, iv, segmentSize) {
          if (!(this instanceof ModeOfOperationCFB)) throw Error("AES must be instanitated with `new`");
          if (this.description = "Cipher Feedback", this.name = "cfb", iv) {
            if (16 != iv.length) throw new Error("invalid initialation vector size (must be 16 size)");
          } else iv = createArray(16);
          segmentSize || (segmentSize = 1), this.segmentSize = segmentSize, this._shiftRegister = coerceArray(iv, !0), 
          this._aes = new AES(key);
        };
        ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
          if (plaintext.length % this.segmentSize != 0) throw new Error("invalid plaintext size (must be segmentSize bytes)");
          for (var xorSegment, encrypted = coerceArray(plaintext, !0), i = 0; i < encrypted.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for (var j = 0; j < this.segmentSize; j++) encrypted[i + j] ^= xorSegment[j];
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
          }
          return encrypted;
        }, ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
          if (ciphertext.length % this.segmentSize != 0) throw new Error("invalid ciphertext size (must be segmentSize bytes)");
          for (var xorSegment, plaintext = coerceArray(ciphertext, !0), i = 0; i < plaintext.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for (var j = 0; j < this.segmentSize; j++) plaintext[i + j] ^= xorSegment[j];
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
          }
          return plaintext;
        };
        var ModeOfOperationOFB = function ModeOfOperationOFB(key, iv) {
          if (!(this instanceof ModeOfOperationOFB)) throw Error("AES must be instanitated with `new`");
          if (this.description = "Output Feedback", this.name = "ofb", iv) {
            if (16 != iv.length) throw new Error("invalid initialation vector size (must be 16 bytes)");
          } else iv = createArray(16);
          this._lastPrecipher = coerceArray(iv, !0), this._lastPrecipherIndex = 16, this._aes = new AES(key);
        };
        ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
          for (var encrypted = coerceArray(plaintext, !0), i = 0; i < encrypted.length; i++) 16 === this._lastPrecipherIndex && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), 
          this._lastPrecipherIndex = 0), encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
          return encrypted;
        }, ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;
        var Counter = function Counter(initialValue) {
          if (!(this instanceof Counter)) throw Error("Counter must be instanitated with `new`");
          0 === initialValue || initialValue || (initialValue = 1), "number" == typeof initialValue ? (this._counter = createArray(16), 
          this.setValue(initialValue)) : this.setBytes(initialValue);
        };
        Counter.prototype.setValue = function(value) {
          if ("number" != typeof value || parseInt(value) != value) throw new Error("invalid counter value (must be an integer)");
          for (var index = 15; index >= 0; --index) this._counter[index] = value % 256, value >>= 8;
        }, Counter.prototype.setBytes = function(bytes) {
          if (16 != (bytes = coerceArray(bytes, !0)).length) throw new Error("invalid counter bytes size (must be 16 bytes)");
          this._counter = bytes;
        }, Counter.prototype.increment = function() {
          for (var i = 15; i >= 0; i--) {
            if (255 !== this._counter[i]) {
              this._counter[i]++;
              break;
            }
            this._counter[i] = 0;
          }
        };
        var ModeOfOperationCTR = function ModeOfOperationCTR(key, counter) {
          if (!(this instanceof ModeOfOperationCTR)) throw Error("AES must be instanitated with `new`");
          this.description = "Counter", this.name = "ctr", counter instanceof Counter || (counter = new Counter(counter)), 
          this._counter = counter, this._remainingCounter = null, this._remainingCounterIndex = 16, 
          this._aes = new AES(key);
        };
        ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
          for (var encrypted = coerceArray(plaintext, !0), i = 0; i < encrypted.length; i++) 16 === this._remainingCounterIndex && (this._remainingCounter = this._aes.encrypt(this._counter._counter), 
          this._remainingCounterIndex = 0, this._counter.increment()), encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
          return encrypted;
        }, ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;
        var aesjs = {
          AES,
          Counter,
          ModeOfOperation: {
            ecb: ModeOfOperationECB,
            cbc: ModeOfOperationCBC,
            cfb: ModeOfOperationCFB,
            ofb: ModeOfOperationOFB,
            ctr: ModeOfOperationCTR
          },
          utils: {
            hex: convertHex,
            utf8: convertUtf8
          },
          padding: {
            pkcs7: {
              pad: function(data) {
                var padder = 16 - (data = coerceArray(data, !0)).length % 16, result = createArray(data.length + padder);
                copyArray(data, result);
                for (var i = data.length; i < result.length; i++) result[i] = padder;
                return result;
              },
              strip: function(data) {
                if ((data = coerceArray(data, !0)).length < 16) throw new Error("PKCS#7 invalid length");
                var padder = data[data.length - 1];
                if (padder > 16) throw new Error("PKCS#7 padding byte out of range");
                for (var length = data.length - padder, i = 0; i < padder; i++) if (data[length + i] !== padder) throw new Error("PKCS#7 invalid padding byte");
                var result = createArray(length);
                return copyArray(data, result, 0, 0, length), result;
              }
            }
          },
          _arrayTest: {
            coerceArray,
            createArray,
            copyArray
          }
        };
        module.exports = aesjs;
      }();
    }));
    function looseArrayify(hexString) {
      return "string" == typeof hexString && "0x" !== hexString.substring(0, 2) && (hexString = "0x" + hexString), 
      arrayify(hexString);
    }
    function zpad(value, length) {
      for (value = String(value); value.length < length; ) value = "0" + value;
      return value;
    }
    function getPassword(password) {
      return "string" == typeof password ? toUtf8Bytes(password, UnicodeNormalizationForm.NFKC) : arrayify(password);
    }
    function searchPath(object, path) {
      for (var currentChild = object, comps = path.toLowerCase().split("/"), _i29 = 0; _i29 < comps.length; _i29++) {
        var matchingChild = null;
        for (var _key19 in currentChild) if (_key19.toLowerCase() === comps[_i29]) {
          matchingChild = currentChild[_key19];
          break;
        }
        if (null === matchingChild) return null;
        currentChild = matchingChild;
      }
      return currentChild;
    }
    function uuidV4(randomBytes) {
      var bytes = arrayify(randomBytes);
      bytes[6] = 15 & bytes[6] | 64, bytes[8] = 63 & bytes[8] | 128;
      var value = hexlify(bytes);
      return [ value.substring(2, 10), value.substring(10, 14), value.substring(14, 18), value.substring(18, 22), value.substring(22, 34) ].join("-");
    }
    var logger$n = new Logger("json-wallets/5.2.0"), CrowdsaleAccount = function(_Description5) {
      _inherits(CrowdsaleAccount, _Description5);
      var _super37 = _createSuper(CrowdsaleAccount);
      function CrowdsaleAccount() {
        return _classCallCheck(this, CrowdsaleAccount), _super37.apply(this, arguments);
      }
      return _createClass(CrowdsaleAccount, [ {
        key: "isCrowdsaleAccount",
        value: function(value) {
          return !(!value || !value._isCrowdsaleAccount);
        }
      } ]), CrowdsaleAccount;
    }(Description);
    function decrypt(json, password) {
      var data = JSON.parse(json);
      password = getPassword(password);
      var ethaddr = _getAddress(searchPath(data, "ethaddr")), encseed = looseArrayify(searchPath(data, "encseed"));
      encseed && encseed.length % 16 == 0 || logger$n.throwArgumentError("invalid encseed", "json", json);
      for (var key = arrayify(pbkdf2(password, password, 2e3, 32, "sha256")).slice(0, 16), iv = encseed.slice(0, 16), encryptedSeed = encseed.slice(16), aesCbc = new aesJs.ModeOfOperation.cbc(key, iv), seed = aesJs.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed))), seedHex = "", _i30 = 0; _i30 < seed.length; _i30++) seedHex += String.fromCharCode(seed[_i30]);
      var privateKey = keccak256(toUtf8Bytes(seedHex));
      return new CrowdsaleAccount({
        _isCrowdsaleAccount: !0,
        address: ethaddr,
        privateKey
      });
    }
    function isCrowdsaleWallet(json) {
      var data = null;
      try {
        data = JSON.parse(json);
      } catch (error) {
        return !1;
      }
      return data.encseed && data.ethaddr;
    }
    function isKeystoreWallet(json) {
      var data = null;
      try {
        data = JSON.parse(json);
      } catch (error) {
        return !1;
      }
      return !(!data.version || parseInt(data.version) !== data.version || 3 !== parseInt(data.version));
    }
    var scrypt = createCommonjsModule((function(module, exports) {
      !function(root) {
        function SHA256(m) {
          var K = new Uint32Array([ 1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298 ]), h0 = 1779033703, h1 = 3144134277, h2 = 1013904242, h3 = 2773480762, h4 = 1359893119, h5 = 2600822924, h6 = 528734635, h7 = 1541459225, w = new Uint32Array(64);
          function blocks(p) {
            for (var off = 0, len = p.length; len >= 64; ) {
              var a = h0, b = h1, c = h2, d = h3, e = h4, _f = h5, g = h6, h = h7, u = void 0, _i31 = void 0, j = void 0, t1 = void 0, t2 = void 0;
              for (_i31 = 0; _i31 < 16; _i31++) j = off + 4 * _i31, w[_i31] = (255 & p[j]) << 24 | (255 & p[j + 1]) << 16 | (255 & p[j + 2]) << 8 | 255 & p[j + 3];
              for (_i31 = 16; _i31 < 64; _i31++) t1 = ((u = w[_i31 - 2]) >>> 17 | u << 15) ^ (u >>> 19 | u << 13) ^ u >>> 10, 
              t2 = ((u = w[_i31 - 15]) >>> 7 | u << 25) ^ (u >>> 18 | u << 14) ^ u >>> 3, w[_i31] = (t1 + w[_i31 - 7] | 0) + (t2 + w[_i31 - 16] | 0) | 0;
              for (_i31 = 0; _i31 < 64; _i31++) t1 = (((e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7)) + (e & _f ^ ~e & g) | 0) + (h + (K[_i31] + w[_i31] | 0) | 0) | 0, 
              t2 = ((a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10)) + (a & b ^ a & c ^ b & c) | 0, 
              h = g, g = _f, _f = e, e = d + t1 | 0, d = c, c = b, b = a, a = t1 + t2 | 0;
              h0 = h0 + a | 0, h1 = h1 + b | 0, h2 = h2 + c | 0, h3 = h3 + d | 0, h4 = h4 + e | 0, 
              h5 = h5 + _f | 0, h6 = h6 + g | 0, h7 = h7 + h | 0, off += 64, len -= 64;
            }
          }
          blocks(m);
          var i, bytesLeft = m.length % 64, bitLenHi = m.length / 536870912 | 0, bitLenLo = m.length << 3, numZeros = bytesLeft < 56 ? 56 : 120, p = m.slice(m.length - bytesLeft, m.length);
          for (p.push(128), i = bytesLeft + 1; i < numZeros; i++) p.push(0);
          return p.push(bitLenHi >>> 24 & 255), p.push(bitLenHi >>> 16 & 255), p.push(bitLenHi >>> 8 & 255), 
          p.push(bitLenHi >>> 0 & 255), p.push(bitLenLo >>> 24 & 255), p.push(bitLenLo >>> 16 & 255), 
          p.push(bitLenLo >>> 8 & 255), p.push(bitLenLo >>> 0 & 255), blocks(p), [ h0 >>> 24 & 255, h0 >>> 16 & 255, h0 >>> 8 & 255, h0 >>> 0 & 255, h1 >>> 24 & 255, h1 >>> 16 & 255, h1 >>> 8 & 255, h1 >>> 0 & 255, h2 >>> 24 & 255, h2 >>> 16 & 255, h2 >>> 8 & 255, h2 >>> 0 & 255, h3 >>> 24 & 255, h3 >>> 16 & 255, h3 >>> 8 & 255, h3 >>> 0 & 255, h4 >>> 24 & 255, h4 >>> 16 & 255, h4 >>> 8 & 255, h4 >>> 0 & 255, h5 >>> 24 & 255, h5 >>> 16 & 255, h5 >>> 8 & 255, h5 >>> 0 & 255, h6 >>> 24 & 255, h6 >>> 16 & 255, h6 >>> 8 & 255, h6 >>> 0 & 255, h7 >>> 24 & 255, h7 >>> 16 & 255, h7 >>> 8 & 255, h7 >>> 0 & 255 ];
        }
        function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
          password = password.length <= 64 ? password : SHA256(password);
          var i, innerLen = 64 + salt.length + 4, inner = new Array(innerLen), outerKey = new Array(64), dk = [];
          for (i = 0; i < 64; i++) inner[i] = 54;
          for (i = 0; i < password.length; i++) inner[i] ^= password[i];
          for (i = 0; i < salt.length; i++) inner[64 + i] = salt[i];
          for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;
          for (i = 0; i < 64; i++) outerKey[i] = 92;
          for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];
          function incrementCounter() {
            for (var _i32 = innerLen - 1; _i32 >= innerLen - 4; _i32--) {
              if (inner[_i32]++, inner[_i32] <= 255) return;
              inner[_i32] = 0;
            }
          }
          for (;dkLen >= 32; ) incrementCounter(), dk = dk.concat(SHA256(outerKey.concat(SHA256(inner)))), 
          dkLen -= 32;
          return dkLen > 0 && (incrementCounter(), dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen))), 
          dk;
        }
        function blockmix_salsa8(BY, Yi, r, x, _X) {
          var i;
          for (arraycopy(BY, 16 * (2 * r - 1), _X, 0, 16), i = 0; i < 2 * r; i++) blockxor(BY, 16 * i, _X, 16), 
          salsa20_8(_X, x), arraycopy(_X, 0, BY, Yi + 16 * i, 16);
          for (i = 0; i < r; i++) arraycopy(BY, Yi + 2 * i * 16, BY, 16 * i, 16);
          for (i = 0; i < r; i++) arraycopy(BY, Yi + 16 * (2 * i + 1), BY, 16 * (i + r), 16);
        }
        function R(a, b) {
          return a << b | a >>> 32 - b;
        }
        function salsa20_8(B, x) {
          arraycopy(B, 0, x, 0, 16);
          for (var _i33 = 8; _i33 > 0; _i33 -= 2) x[4] ^= R(x[0] + x[12], 7), x[8] ^= R(x[4] + x[0], 9), 
          x[12] ^= R(x[8] + x[4], 13), x[0] ^= R(x[12] + x[8], 18), x[9] ^= R(x[5] + x[1], 7), 
          x[13] ^= R(x[9] + x[5], 9), x[1] ^= R(x[13] + x[9], 13), x[5] ^= R(x[1] + x[13], 18), 
          x[14] ^= R(x[10] + x[6], 7), x[2] ^= R(x[14] + x[10], 9), x[6] ^= R(x[2] + x[14], 13), 
          x[10] ^= R(x[6] + x[2], 18), x[3] ^= R(x[15] + x[11], 7), x[7] ^= R(x[3] + x[15], 9), 
          x[11] ^= R(x[7] + x[3], 13), x[15] ^= R(x[11] + x[7], 18), x[1] ^= R(x[0] + x[3], 7), 
          x[2] ^= R(x[1] + x[0], 9), x[3] ^= R(x[2] + x[1], 13), x[0] ^= R(x[3] + x[2], 18), 
          x[6] ^= R(x[5] + x[4], 7), x[7] ^= R(x[6] + x[5], 9), x[4] ^= R(x[7] + x[6], 13), 
          x[5] ^= R(x[4] + x[7], 18), x[11] ^= R(x[10] + x[9], 7), x[8] ^= R(x[11] + x[10], 9), 
          x[9] ^= R(x[8] + x[11], 13), x[10] ^= R(x[9] + x[8], 18), x[12] ^= R(x[15] + x[14], 7), 
          x[13] ^= R(x[12] + x[15], 9), x[14] ^= R(x[13] + x[12], 13), x[15] ^= R(x[14] + x[13], 18);
          for (var _i34 = 0; _i34 < 16; ++_i34) B[_i34] += x[_i34];
        }
        function blockxor(S, Si, D, len) {
          for (var _i35 = 0; _i35 < len; _i35++) D[_i35] ^= S[Si + _i35];
        }
        function arraycopy(src, srcPos, dest, destPos, length) {
          for (;length--; ) dest[destPos++] = src[srcPos++];
        }
        function checkBufferish(o) {
          if (!o || "number" != typeof o.length) return !1;
          for (var _i36 = 0; _i36 < o.length; _i36++) {
            var v = o[_i36];
            if ("number" != typeof v || v % 1 || v < 0 || v >= 256) return !1;
          }
          return !0;
        }
        function ensureInteger(value, name) {
          if ("number" != typeof value || value % 1) throw new Error("invalid " + name);
          return value;
        }
        function _scrypt(password, salt, N, r, p, dkLen, callback) {
          if (N = ensureInteger(N, "N"), r = ensureInteger(r, "r"), p = ensureInteger(p, "p"), 
          dkLen = ensureInteger(dkLen, "dkLen"), 0 === N || 0 != (N & N - 1)) throw new Error("N must be power of 2");
          if (N > 2147483647 / 128 / r) throw new Error("N too large");
          if (r > 2147483647 / 128 / p) throw new Error("r too large");
          if (!checkBufferish(password)) throw new Error("password must be an array or buffer");
          if (password = Array.prototype.slice.call(password), !checkBufferish(salt)) throw new Error("salt must be an array or buffer");
          salt = Array.prototype.slice.call(salt);
          for (var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, 128 * p * r), B = new Uint32Array(32 * p * r), _i37 = 0; _i37 < B.length; _i37++) {
            var j = 4 * _i37;
            B[_i37] = (255 & b[j + 3]) << 24 | (255 & b[j + 2]) << 16 | (255 & b[j + 1]) << 8 | (255 & b[j + 0]) << 0;
          }
          var i1, Bi, XY = new Uint32Array(64 * r), V = new Uint32Array(32 * r * N), Yi = 32 * r, x = new Uint32Array(16), _X = new Uint32Array(16), totalOps = p * N * 2, currentOp = 0, lastPercent10 = null, stop = !1, state = 0, i0 = 0, limit = callback ? parseInt(1e3 / r) : 4294967295, nextTick = "undefined" != typeof setImmediate ? setImmediate : setTimeout, incrementalSMix = function incrementalSMix() {
            if (stop) return callback(new Error("cancelled"), currentOp / totalOps);
            var steps;
            switch (state) {
             case 0:
              arraycopy(B, Bi = 32 * i0 * r, XY, 0, Yi), state = 1, i1 = 0;

             case 1:
              (steps = N - i1) > limit && (steps = limit);
              for (var _i38 = 0; _i38 < steps; _i38++) arraycopy(XY, 0, V, (i1 + _i38) * Yi, Yi), 
              blockmix_salsa8(XY, Yi, r, x, _X);
              if (i1 += steps, currentOp += steps, callback) {
                var percent10 = parseInt(1e3 * currentOp / totalOps);
                if (percent10 !== lastPercent10) {
                  if (stop = callback(null, currentOp / totalOps)) break;
                  lastPercent10 = percent10;
                }
              }
              if (i1 < N) break;
              i1 = 0, state = 2;

             case 2:
              (steps = N - i1) > limit && (steps = limit);
              for (var _i39 = 0; _i39 < steps; _i39++) {
                var _j = XY[16 * (2 * r - 1)] & N - 1;
                blockxor(V, _j * Yi, XY, Yi), blockmix_salsa8(XY, Yi, r, x, _X);
              }
              if (i1 += steps, currentOp += steps, callback) {
                var _percent = parseInt(1e3 * currentOp / totalOps);
                if (_percent !== lastPercent10) {
                  if (stop = callback(null, currentOp / totalOps)) break;
                  lastPercent10 = _percent;
                }
              }
              if (i1 < N) break;
              if (arraycopy(XY, 0, B, Bi, Yi), ++i0 < p) {
                state = 0;
                break;
              }
              b = [];
              for (var _i40 = 0; _i40 < B.length; _i40++) b.push(B[_i40] >> 0 & 255), b.push(B[_i40] >> 8 & 255), 
              b.push(B[_i40] >> 16 & 255), b.push(B[_i40] >> 24 & 255);
              var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);
              return callback && callback(null, 1, derivedKey), derivedKey;
            }
            callback && nextTick(incrementalSMix);
          };
          if (!callback) for (;;) {
            var derivedKey = incrementalSMix();
            if (null != derivedKey) return derivedKey;
          }
          incrementalSMix();
        }
        var lib = {
          scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {
            return new Promise((function(resolve, reject) {
              var lastProgress = 0;
              progressCallback && progressCallback(0), _scrypt(password, salt, N, r, p, dkLen, (function(error, progress, key) {
                if (error) reject(error); else if (key) progressCallback && 1 !== lastProgress && progressCallback(1), 
                resolve(new Uint8Array(key)); else if (progressCallback && progress !== lastProgress) return lastProgress = progress, 
                progressCallback(progress);
              }));
            }));
          },
          syncScrypt: function(password, salt, N, r, p, dkLen) {
            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));
          }
        };
        module.exports = lib;
      }();
    })), __awaiter$4 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$o = new Logger("json-wallets/5.2.0");
    function hasMnemonic(value) {
      return null != value && value.mnemonic && value.mnemonic.phrase;
    }
    var KeystoreAccount = function(_Description6) {
      _inherits(KeystoreAccount, _Description6);
      var _super38 = _createSuper(KeystoreAccount);
      function KeystoreAccount() {
        return _classCallCheck(this, KeystoreAccount), _super38.apply(this, arguments);
      }
      return _createClass(KeystoreAccount, [ {
        key: "isKeystoreAccount",
        value: function(value) {
          return !(!value || !value._isKeystoreAccount);
        }
      } ]), KeystoreAccount;
    }(Description);
    function _getAccount(data, key) {
      var ciphertext = looseArrayify(searchPath(data, "crypto/ciphertext"));
      if (hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2) !== searchPath(data, "crypto/mac").toLowerCase()) throw new Error("invalid password");
      var privateKey = function(data, key, ciphertext) {
        if ("aes-128-ctr" === searchPath(data, "crypto/cipher")) {
          var iv = looseArrayify(searchPath(data, "crypto/cipherparams/iv")), counter = new aesJs.Counter(iv);
          return arrayify(new aesJs.ModeOfOperation.ctr(key, counter).decrypt(ciphertext));
        }
        return null;
      }(data, key.slice(0, 16), ciphertext);
      privateKey || logger$o.throwError("unsupported cipher", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "decrypt"
      });
      var mnemonicKey = key.slice(32, 64), address = computeAddress(privateKey);
      if (data.address) {
        var check = data.address.toLowerCase();
        if ("0x" !== check.substring(0, 2) && (check = "0x" + check), _getAddress(check) !== address) throw new Error("address mismatch");
      }
      var account = {
        _isKeystoreAccount: !0,
        address,
        privateKey: hexlify(privateKey)
      };
      if ("0.1" === searchPath(data, "x-ethers/version")) {
        var mnemonicCiphertext = looseArrayify(searchPath(data, "x-ethers/mnemonicCiphertext")), mnemonicIv = looseArrayify(searchPath(data, "x-ethers/mnemonicCounter")), mnemonicCounter = new aesJs.Counter(mnemonicIv), mnemonicAesCtr = new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter), path = searchPath(data, "x-ethers/path") || defaultPath, locale = searchPath(data, "x-ethers/locale") || "en", entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));
        try {
          var mnemonic = entropyToMnemonic(entropy, locale), node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);
          if (node.privateKey != account.privateKey) throw new Error("mnemonic mismatch");
          account.mnemonic = node.mnemonic;
        } catch (error) {
          if (error.code !== Logger.errors.INVALID_ARGUMENT || "wordlist" !== error.argument) throw error;
        }
      }
      return new KeystoreAccount(account);
    }
    function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
      return arrayify(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));
    }
    function pbkdf2$1(passwordBytes, salt, count, dkLen, prfFunc) {
      return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
    }
    function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
      var passwordBytes = getPassword(password), kdf = searchPath(data, "crypto/kdf");
      if (kdf && "string" == typeof kdf) {
        var throwError = function(name, value) {
          return logger$o.throwArgumentError("invalid key-derivation function parameters", name, value);
        };
        if ("scrypt" === kdf.toLowerCase()) {
          var salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt")), _N = parseInt(searchPath(data, "crypto/kdfparams/n")), _r = parseInt(searchPath(data, "crypto/kdfparams/r")), p = parseInt(searchPath(data, "crypto/kdfparams/p"));
          _N && _r && p || throwError("kdf", kdf), 0 != (_N & _N - 1) && throwError("N", _N);
          var dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
          return 32 !== dkLen && throwError("dklen", dkLen), scryptFunc(passwordBytes, salt, _N, _r, p, 64, progressCallback);
        }
        if ("pbkdf2" === kdf.toLowerCase()) {
          var _salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt")), prfFunc = null, prf = searchPath(data, "crypto/kdfparams/prf");
          "hmac-sha256" === prf ? prfFunc = "sha256" : "hmac-sha512" === prf ? prfFunc = "sha512" : throwError("prf", prf);
          var count = parseInt(searchPath(data, "crypto/kdfparams/c")), _dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
          return 32 !== _dkLen && throwError("dklen", _dkLen), pbkdf2Func(passwordBytes, _salt, count, _dkLen, prfFunc);
        }
      }
      return logger$o.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
    }
    function decryptJsonWallet(json, password, progressCallback) {
      if (isCrowdsaleWallet(json)) {
        progressCallback && progressCallback(0);
        var account = decrypt(json, password);
        return progressCallback && progressCallback(1), Promise.resolve(account);
      }
      return isKeystoreWallet(json) ? function(json, password, progressCallback) {
        return __awaiter$4(this, void 0, void 0, regeneratorRuntime.mark((function _callee20() {
          var data, key;
          return regeneratorRuntime.wrap((function(_context20) {
            for (;;) switch (_context20.prev = _context20.next) {
             case 0:
              return data = JSON.parse(json), _context20.next = 3, _computeKdfKey(data, password, pbkdf2$1, scrypt.scrypt, progressCallback);

             case 3:
              return key = _context20.sent, _context20.abrupt("return", _getAccount(data, key));

             case 5:
             case "end":
              return _context20.stop();
            }
          }), _callee20);
        })));
      }(json, password, progressCallback) : Promise.reject(new Error("invalid JSON wallet"));
    }
    function decryptJsonWalletSync(json, password) {
      if (isCrowdsaleWallet(json)) return decrypt(json, password);
      if (isKeystoreWallet(json)) return function(json, password) {
        var data = JSON.parse(json);
        return _getAccount(data, _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt));
      }(json, password);
      throw new Error("invalid JSON wallet");
    }
    var __awaiter$5 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$p = new Logger("wallet/5.2.0");
    var Wallet = function(_Signer2) {
      _inherits(Wallet, _Signer2);
      var _super39 = _createSuper(Wallet);
      function Wallet(privateKey, provider) {
        var _this33, value;
        if (_classCallCheck(this, Wallet), logger$p.checkNew(this instanceof Wallet ? this.constructor : void 0, Wallet), 
        _this33 = _super39.call(this), null != (value = privateKey) && isHexString(value.privateKey, 32) && null != value.address) {
          var signingKey = new SigningKey(privateKey.privateKey);
          if (defineReadOnly(_assertThisInitialized(_this33), "_signingKey", (function() {
            return signingKey;
          })), defineReadOnly(_assertThisInitialized(_this33), "address", computeAddress(_this33.publicKey)), 
          _this33.address !== _getAddress(privateKey.address) && logger$p.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"), 
          function(value) {
            var mnemonic = value.mnemonic;
            return mnemonic && mnemonic.phrase;
          }(privateKey)) {
            var srcMnemonic = privateKey.mnemonic;
            defineReadOnly(_assertThisInitialized(_this33), "_mnemonic", (function() {
              return {
                phrase: srcMnemonic.phrase,
                path: srcMnemonic.path || defaultPath,
                locale: srcMnemonic.locale || "en"
              };
            }));
            var mnemonic = _this33.mnemonic;
            computeAddress(HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path).privateKey) !== _this33.address && logger$p.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
          } else defineReadOnly(_assertThisInitialized(_this33), "_mnemonic", (function() {
            return null;
          }));
        } else {
          if (SigningKey.isSigningKey(privateKey)) "secp256k1" !== privateKey.curve && logger$p.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"), 
          defineReadOnly(_assertThisInitialized(_this33), "_signingKey", (function() {
            return privateKey;
          })); else {
            "string" == typeof privateKey && privateKey.match(/^[0-9a-f]*$/i) && 64 === privateKey.length && (privateKey = "0x" + privateKey);
            var _signingKey = new SigningKey(privateKey);
            defineReadOnly(_assertThisInitialized(_this33), "_signingKey", (function() {
              return _signingKey;
            }));
          }
          defineReadOnly(_assertThisInitialized(_this33), "_mnemonic", (function() {
            return null;
          })), defineReadOnly(_assertThisInitialized(_this33), "address", computeAddress(_this33.publicKey));
        }
        return provider && !Provider.isProvider(provider) && logger$p.throwArgumentError("invalid provider", "provider", provider), 
        defineReadOnly(_assertThisInitialized(_this33), "provider", provider || null), _this33;
      }
      return _createClass(Wallet, [ {
        key: "mnemonic",
        get: function() {
          return this._mnemonic();
        }
      }, {
        key: "privateKey",
        get: function() {
          return this._signingKey().privateKey;
        }
      }, {
        key: "publicKey",
        get: function() {
          return this._signingKey().publicKey;
        }
      }, {
        key: "getAddress",
        value: function() {
          return Promise.resolve(this.address);
        }
      }, {
        key: "connect",
        value: function(provider) {
          return new Wallet(this, provider);
        }
      }, {
        key: "signTransaction",
        value: function(transaction) {
          var _this34 = this;
          return resolveProperties(transaction).then((function(tx) {
            null != tx.from && (_getAddress(tx.from) !== _this34.address && logger$p.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from), 
            delete tx.from);
            var signature = _this34._signingKey().signDigest(keccak256(serialize(tx)));
            return serialize(tx, signature);
          }));
        }
      }, {
        key: "signMessage",
        value: function(message) {
          return __awaiter$5(this, void 0, void 0, regeneratorRuntime.mark((function _callee21() {
            return regeneratorRuntime.wrap((function(_context21) {
              for (;;) switch (_context21.prev = _context21.next) {
               case 0:
                return _context21.abrupt("return", joinSignature(this._signingKey().signDigest(hashMessage(message))));

               case 1:
               case "end":
                return _context21.stop();
              }
            }), _callee21, this);
          })));
        }
      }, {
        key: "_signTypedData",
        value: function(domain, types, value) {
          return __awaiter$5(this, void 0, void 0, regeneratorRuntime.mark((function _callee22() {
            var populated, _this35 = this;
            return regeneratorRuntime.wrap((function(_context22) {
              for (;;) switch (_context22.prev = _context22.next) {
               case 0:
                return _context22.next = 2, TypedDataEncoder.resolveNames(domain, types, value, (function(name) {
                  return null == _this35.provider && logger$p.throwError("cannot resolve ENS names without a provider", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "resolveName",
                    value: name
                  }), _this35.provider.resolveName(name);
                }));

               case 2:
                return populated = _context22.sent, _context22.abrupt("return", joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(populated.domain, types, populated.value))));

               case 4:
               case "end":
                return _context22.stop();
              }
            }), _callee22, this);
          })));
        }
      }, {
        key: "encrypt",
        value: function(password, options, progressCallback) {
          if ("function" != typeof options || progressCallback || (progressCallback = options, 
          options = {}), progressCallback && "function" != typeof progressCallback) throw new Error("invalid callback");
          return options || (options = {}), function(account, password, options, progressCallback) {
            try {
              if (_getAddress(account.address) !== computeAddress(account.privateKey)) throw new Error("address/privateKey mismatch");
              if (hasMnemonic(account)) {
                var mnemonic = account.mnemonic;
                if (HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath).privateKey != account.privateKey) throw new Error("mnemonic mismatch");
              }
            } catch (e) {
              return Promise.reject(e);
            }
            "function" != typeof options || progressCallback || (progressCallback = options, 
            options = {}), options || (options = {});
            var privateKey = arrayify(account.privateKey), passwordBytes = getPassword(password), entropy = null, path = null, locale = null;
            if (hasMnemonic(account)) {
              var srcMnemonic = account.mnemonic;
              entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || "en")), 
              path = srcMnemonic.path || defaultPath, locale = srcMnemonic.locale || "en";
            }
            var client = options.client;
            client || (client = "ethers.js");
            var salt = null;
            salt = options.salt ? arrayify(options.salt) : randomBytes(32);
            var iv = null;
            if (options.iv) {
              if (16 !== (iv = arrayify(options.iv)).length) throw new Error("invalid iv");
            } else iv = randomBytes(16);
            var uuidRandom = null;
            if (options.uuid) {
              if (16 !== (uuidRandom = arrayify(options.uuid)).length) throw new Error("invalid uuid");
            } else uuidRandom = randomBytes(16);
            var N = 1 << 17, r = 8, p = 1;
            return options.scrypt && (options.scrypt.N && (N = options.scrypt.N), options.scrypt.r && (r = options.scrypt.r), 
            options.scrypt.p && (p = options.scrypt.p)), scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((function(key) {
              var derivedKey = (key = arrayify(key)).slice(0, 16), macPrefix = key.slice(16, 32), mnemonicKey = key.slice(32, 64), counter = new aesJs.Counter(iv), ciphertext = arrayify(new aesJs.ModeOfOperation.ctr(derivedKey, counter).encrypt(privateKey)), mac = keccak256(concat([ macPrefix, ciphertext ])), data = {
                address: account.address.substring(2).toLowerCase(),
                id: uuidV4(uuidRandom),
                version: 3,
                Crypto: {
                  cipher: "aes-128-ctr",
                  cipherparams: {
                    iv: hexlify(iv).substring(2)
                  },
                  ciphertext: hexlify(ciphertext).substring(2),
                  kdf: "scrypt",
                  kdfparams: {
                    salt: hexlify(salt).substring(2),
                    n: N,
                    dklen: 32,
                    p,
                    r
                  },
                  mac: mac.substring(2)
                }
              };
              if (entropy) {
                var mnemonicIv = randomBytes(16), mnemonicCounter = new aesJs.Counter(mnemonicIv), mnemonicCiphertext = arrayify(new aesJs.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter).encrypt(entropy)), _now = new Date, timestamp = _now.getUTCFullYear() + "-" + zpad(_now.getUTCMonth() + 1, 2) + "-" + zpad(_now.getUTCDate(), 2) + "T" + zpad(_now.getUTCHours(), 2) + "-" + zpad(_now.getUTCMinutes(), 2) + "-" + zpad(_now.getUTCSeconds(), 2) + ".0Z";
                data["x-ethers"] = {
                  client,
                  gethFilename: "UTC--" + timestamp + "--" + data.address,
                  mnemonicCounter: hexlify(mnemonicIv).substring(2),
                  mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),
                  path,
                  locale,
                  version: "0.1"
                };
              }
              return JSON.stringify(data);
            }));
          }(this, password, options, progressCallback);
        }
      } ], [ {
        key: "createRandom",
        value: function(options) {
          var entropy = randomBytes(16);
          options || (options = {}), options.extraEntropy && (entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16)));
          var mnemonic = entropyToMnemonic(entropy, options.locale);
          return Wallet.fromMnemonic(mnemonic, options.path, options.locale);
        }
      }, {
        key: "fromEncryptedJson",
        value: function(json, password, progressCallback) {
          return decryptJsonWallet(json, password, progressCallback).then((function(account) {
            return new Wallet(account);
          }));
        }
      }, {
        key: "fromEncryptedJsonSync",
        value: function(json, password) {
          return new Wallet(decryptJsonWalletSync(json, password));
        }
      }, {
        key: "fromMnemonic",
        value: function(mnemonic, path, wordlist) {
          return path || (path = defaultPath), new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));
        }
      } ]), Wallet;
    }(Signer);
    var logger$q = new Logger("networks/5.2.0");
    function ethDefaultProvider(network) {
      var func = function(providers, options) {
        null == options && (options = {});
        var providerList = [];
        if (providers.InfuraProvider) try {
          providerList.push(new providers.InfuraProvider(network, options.infura));
        } catch (error) {}
        if (providers.EtherscanProvider) try {
          providerList.push(new providers.EtherscanProvider(network, options.etherscan));
        } catch (error) {}
        if (providers.AlchemyProvider) try {
          providerList.push(new providers.AlchemyProvider(network, options.alchemy));
        } catch (error) {}
        if (providers.CloudflareProvider) try {
          providerList.push(new providers.CloudflareProvider(network));
        } catch (error) {}
        if (0 === providerList.length) return null;
        if (providers.FallbackProvider) {
          var quorum = 1;
          return null != options.quorum ? quorum = options.quorum : "homestead" === network && (quorum = 2), 
          new providers.FallbackProvider(providerList, quorum);
        }
        return providerList[0];
      };
      return func.renetwork = function(network) {
        return ethDefaultProvider(network);
      }, func;
    }
    function etcDefaultProvider(url, network) {
      var func = function(providers, options) {
        return providers.JsonRpcProvider ? new providers.JsonRpcProvider(url, network) : null;
      };
      return func.renetwork = function(network) {
        return etcDefaultProvider(url, network);
      }, func;
    }
    var homestead = {
      chainId: 1,
      ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      name: "homestead",
      _defaultProvider: ethDefaultProvider("homestead")
    }, ropsten = {
      chainId: 3,
      ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      name: "ropsten",
      _defaultProvider: ethDefaultProvider("ropsten")
    }, classicMordor = {
      chainId: 63,
      name: "classicMordor",
      _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
    }, networks = {
      unspecified: {
        chainId: 0,
        name: "unspecified"
      },
      homestead,
      mainnet: homestead,
      morden: {
        chainId: 2,
        name: "morden"
      },
      ropsten,
      testnet: ropsten,
      rinkeby: {
        chainId: 4,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "rinkeby",
        _defaultProvider: ethDefaultProvider("rinkeby")
      },
      kovan: {
        chainId: 42,
        name: "kovan",
        _defaultProvider: ethDefaultProvider("kovan")
      },
      goerli: {
        chainId: 5,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "goerli",
        _defaultProvider: ethDefaultProvider("goerli")
      },
      classic: {
        chainId: 61,
        name: "classic",
        _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/etc", "classic")
      },
      classicMorden: {
        chainId: 62,
        name: "classicMorden"
      },
      classicMordor,
      classicTestnet: classicMordor,
      classicKotti: {
        chainId: 6,
        name: "classicKotti",
        _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/kotti", "classicKotti")
      },
      xdai: {
        chainId: 100,
        name: "xdai"
      },
      matic: {
        chainId: 137,
        name: "matic"
      },
      bnb: {
        chainId: 56,
        name: "bnb"
      },
      bnbt: {
        chainId: 97,
        name: "bnbt"
      }
    };
    function _getNetwork(network) {
      if (null == network) return null;
      if ("number" == typeof network) {
        for (var _name12 in networks) {
          var _standard = networks[_name12];
          if (_standard.chainId === network) return {
            name: _standard.name,
            chainId: _standard.chainId,
            ensAddress: _standard.ensAddress || null,
            _defaultProvider: _standard._defaultProvider || null
          };
        }
        return {
          chainId: network,
          name: "unknown"
        };
      }
      if ("string" == typeof network) {
        var _standard2 = networks[network];
        return null == _standard2 ? null : {
          name: _standard2.name,
          chainId: _standard2.chainId,
          ensAddress: _standard2.ensAddress,
          _defaultProvider: _standard2._defaultProvider || null
        };
      }
      var standard = networks[network.name];
      if (!standard) return "number" != typeof network.chainId && logger$q.throwArgumentError("invalid network chainId", "network", network), 
      network;
      0 !== network.chainId && network.chainId !== standard.chainId && logger$q.throwArgumentError("network chainId mismatch", "network", network);
      var value, defaultProvider = network._defaultProvider || null;
      return null == defaultProvider && standard._defaultProvider && (defaultProvider = (value = standard._defaultProvider) && "function" == typeof value.renetwork ? standard._defaultProvider.renetwork(network) : standard._defaultProvider), 
      {
        name: network.name,
        chainId: standard.chainId,
        ensAddress: network.ensAddress || standard.ensAddress || null,
        _defaultProvider: defaultProvider
      };
    }
    function encode$1(data) {
      data = arrayify(data);
      for (var textData = "", _i42 = 0; _i42 < data.length; _i42++) textData += String.fromCharCode(data[_i42]);
      return btoa(textData);
    }
    var index$2 = Object.freeze({
      __proto__: null,
      decode: function(textData) {
        textData = atob(textData);
        for (var data = [], _i41 = 0; _i41 < textData.length; _i41++) data.push(textData.charCodeAt(_i41));
        return arrayify(data);
      },
      encode: encode$1
    }), __awaiter$6 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    };
    function getUrl(href, options) {
      return __awaiter$6(this, void 0, void 0, regeneratorRuntime.mark((function _callee23() {
        var request, response, body, headers;
        return regeneratorRuntime.wrap((function(_context23) {
          for (;;) switch (_context23.prev = _context23.next) {
           case 0:
            return null == options && (options = {}), request = {
              method: options.method || "GET",
              headers: options.headers || {},
              body: options.body || void 0,
              mode: "cors",
              cache: "no-cache",
              credentials: "same-origin",
              redirect: "follow",
              referrer: "client"
            }, _context23.next = 4, fetch(href, request);

           case 4:
            return response = _context23.sent, _context23.next = 7, response.arrayBuffer();

           case 7:
            return body = _context23.sent, headers = {}, response.headers.forEach ? response.headers.forEach((function(value, key) {
              headers[key.toLowerCase()] = value;
            })) : response.headers.keys().forEach((function(key) {
              headers[key.toLowerCase()] = response.headers.get(key);
            })), _context23.abrupt("return", {
              headers,
              statusCode: response.status,
              statusMessage: response.statusText,
              body: arrayify(new Uint8Array(body))
            });

           case 11:
           case "end":
            return _context23.stop();
          }
        }), _callee23);
      })));
    }
    var __awaiter$7 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$r = new Logger("web/5.2.0");
    function staller(duration) {
      return new Promise((function(resolve) {
        setTimeout(resolve, duration);
      }));
    }
    function bodyify(value, type) {
      if (null == value) return null;
      if ("string" == typeof value) return value;
      if (isBytesLike(value)) {
        if (type && ("text" === type.split("/")[0] || "application/json" === type.split(";")[0].trim())) try {
          return toUtf8String(value);
        } catch (error) {}
        return hexlify(value);
      }
      return value;
    }
    function _fetchData(connection, body, processFunc) {
      var attemptLimit = "object" === _typeof(connection) && null != connection.throttleLimit ? connection.throttleLimit : 12;
      logger$r.assertArgument(attemptLimit > 0 && attemptLimit % 1 == 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
      var throttleCallback = "object" === _typeof(connection) ? connection.throttleCallback : null, throttleSlotInterval = "object" === _typeof(connection) && "number" == typeof connection.throttleSlotInterval ? connection.throttleSlotInterval : 100;
      logger$r.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 == 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
      var headers = {}, url = null, options = {
        method: "GET"
      }, allow304 = !1, timeout = 12e4;
      if ("string" == typeof connection) url = connection; else if ("object" === _typeof(connection)) {
        if (null != connection && null != connection.url || logger$r.throwArgumentError("missing URL", "connection.url", connection), 
        url = connection.url, "number" == typeof connection.timeout && connection.timeout > 0 && (timeout = connection.timeout), 
        connection.headers) for (var _key20 in connection.headers) headers[_key20.toLowerCase()] = {
          key: _key20,
          value: String(connection.headers[_key20])
        }, [ "if-none-match", "if-modified-since" ].indexOf(_key20.toLowerCase()) >= 0 && (allow304 = !0);
        if (options.allowGzip = !!connection.allowGzip, null != connection.user && null != connection.password) {
          "https:" !== url.substring(0, 6) && !0 !== connection.allowInsecureAuthentication && logger$r.throwError("basic authentication requires a secure https url", Logger.errors.INVALID_ARGUMENT, {
            argument: "url",
            url,
            user: connection.user,
            password: "[REDACTED]"
          });
          var authorization = connection.user + ":" + connection.password;
          headers.authorization = {
            key: "Authorization",
            value: "Basic " + encode$1(toUtf8Bytes(authorization))
          };
        }
      }
      body && (options.method = "POST", options.body = body, null == headers["content-type"] && (headers["content-type"] = {
        key: "Content-Type",
        value: "application/octet-stream"
      }), null == headers["content-length"] && (headers["content-length"] = {
        key: "Content-Length",
        value: String(body.length)
      }));
      var flatHeaders = {};
      Object.keys(headers).forEach((function(key) {
        var header = headers[key];
        flatHeaders[header.key] = header.value;
      })), options.headers = flatHeaders;
      var runningTimeout = function() {
        var timer = null;
        return {
          promise: new Promise((function(resolve, reject) {
            timeout && (timer = setTimeout((function() {
              null != timer && (timer = null, reject(logger$r.makeError("timeout", Logger.errors.TIMEOUT, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                timeout,
                url
              })));
            }), timeout));
          })),
          cancel: function() {
            null != timer && (clearTimeout(timer), timer = null);
          }
        };
      }(), runningFetch = function() {
        return __awaiter$7(this, void 0, void 0, regeneratorRuntime.mark((function _callee24() {
          var attempt, response, tryAgain, _stall, retryAfter, _body, result, _tryAgain, _timeout;
          return regeneratorRuntime.wrap((function(_context24) {
            for (;;) switch (_context24.prev = _context24.next) {
             case 0:
              attempt = 0;

             case 1:
              if (!(attempt < attemptLimit)) {
                _context24.next = 57;
                break;
              }
              return response = null, _context24.prev = 3, _context24.next = 6, getUrl(url, options);

             case 6:
              if (!(429 === (response = _context24.sent).statusCode && attempt < attemptLimit)) {
                _context24.next = 20;
                break;
              }
              if (tryAgain = !0, !throttleCallback) {
                _context24.next = 13;
                break;
              }
              return _context24.next = 12, throttleCallback(attempt, url);

             case 12:
              tryAgain = _context24.sent;

             case 13:
              if (!tryAgain) {
                _context24.next = 20;
                break;
              }
              return _stall = 0, retryAfter = response.headers["retry-after"], _stall = "string" == typeof retryAfter && retryAfter.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(retryAfter) : throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt))), 
              _context24.next = 19, staller(_stall);

             case 19:
              return _context24.abrupt("continue", 54);

             case 20:
              _context24.next = 26;
              break;

             case 22:
              _context24.prev = 22, _context24.t0 = _context24.catch(3), null == (response = _context24.t0.response) && (runningTimeout.cancel(), 
              logger$r.throwError("missing response", Logger.errors.SERVER_ERROR, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                serverError: _context24.t0,
                url
              }));

             case 26:
              if (_body = response.body, allow304 && 304 === response.statusCode ? _body = null : (response.statusCode < 200 || response.statusCode >= 300) && (runningTimeout.cancel(), 
              logger$r.throwError("bad response", Logger.errors.SERVER_ERROR, {
                status: response.statusCode,
                headers: response.headers,
                body: bodyify(_body, response.headers ? response.headers["content-type"] : null),
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url
              })), !processFunc) {
                _context24.next = 52;
                break;
              }
              return _context24.prev = 29, _context24.next = 32, processFunc(_body, response);

             case 32:
              return result = _context24.sent, runningTimeout.cancel(), _context24.abrupt("return", result);

             case 37:
              if (_context24.prev = 37, _context24.t1 = _context24.catch(29), !(_context24.t1.throttleRetry && attempt < attemptLimit)) {
                _context24.next = 50;
                break;
              }
              if (_tryAgain = !0, !throttleCallback) {
                _context24.next = 45;
                break;
              }
              return _context24.next = 44, throttleCallback(attempt, url);

             case 44:
              _tryAgain = _context24.sent;

             case 45:
              if (!_tryAgain) {
                _context24.next = 50;
                break;
              }
              return _timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt))), 
              _context24.next = 49, staller(_timeout);

             case 49:
              return _context24.abrupt("continue", 54);

             case 50:
              runningTimeout.cancel(), logger$r.throwError("processing response error", Logger.errors.SERVER_ERROR, {
                body: bodyify(_body, response.headers ? response.headers["content-type"] : null),
                error: _context24.t1,
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url
              });

             case 52:
              return runningTimeout.cancel(), _context24.abrupt("return", _body);

             case 54:
              attempt++, _context24.next = 1;
              break;

             case 57:
              return _context24.abrupt("return", logger$r.throwError("failed response", Logger.errors.SERVER_ERROR, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url
              }));

             case 58:
             case "end":
              return _context24.stop();
            }
          }), _callee24, null, [ [ 3, 22 ], [ 29, 37 ] ]);
        })));
      }();
      return Promise.race([ runningTimeout.promise, runningFetch ]);
    }
    function fetchJson(connection, json, processFunc) {
      var body = null;
      if (null != json) {
        body = toUtf8Bytes(json);
        var updated = "string" == typeof connection ? {
          url: connection
        } : shallowCopy(connection);
        if (updated.headers) 0 !== Object.keys(updated.headers).filter((function(k) {
          return "content-type" === k.toLowerCase();
        })).length || (updated.headers = shallowCopy(updated.headers), updated.headers["content-type"] = "application/json"); else updated.headers = {
          "content-type": "application/json"
        };
        connection = updated;
      }
      return _fetchData(connection, body, (function(value, response) {
        var result = null;
        if (null != value) try {
          result = JSON.parse(toUtf8String(value));
        } catch (error) {
          logger$r.throwError("invalid JSON", Logger.errors.SERVER_ERROR, {
            body: value,
            error
          });
        }
        return processFunc && (result = processFunc(result, response)), result;
      }));
    }
    function poll(func, options) {
      return options || (options = {}), null == (options = shallowCopy(options)).floor && (options.floor = 0), 
      null == options.ceiling && (options.ceiling = 1e4), null == options.interval && (options.interval = 250), 
      new Promise((function(resolve, reject) {
        var timer = null, done = !1, cancel = function() {
          return !done && (done = !0, timer && clearTimeout(timer), !0);
        };
        options.timeout && (timer = setTimeout((function() {
          cancel() && reject(new Error("timeout"));
        }), options.timeout));
        var retryLimit = options.retryLimit, attempt = 0;
        !function check() {
          return func().then((function(result) {
            if (void 0 !== result) cancel() && resolve(result); else if (options.oncePoll) options.oncePoll.once("poll", check); else if (options.onceBlock) options.onceBlock.once("block", check); else if (!done) {
              if (++attempt > retryLimit) return void (cancel() && reject(new Error("retry limit reached")));
              var timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
              timeout < options.floor && (timeout = options.floor), timeout > options.ceiling && (timeout = options.ceiling), 
              setTimeout(check, timeout);
            }
            return null;
          }), (function(error) {
            cancel() && reject(error);
          }));
        }();
      }));
    }
    for (var ALPHABET = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", ALPHABET_MAP = {}, z = 0; z < 32; z++) {
      var x = ALPHABET.charAt(z);
      if (void 0 !== ALPHABET_MAP[x]) throw new TypeError(x + " is ambiguous");
      ALPHABET_MAP[x] = z;
    }
    function polymodStep(pre) {
      var b = pre >> 25;
      return (33554431 & pre) << 5 ^ 996825010 & -(b >> 0 & 1) ^ 642813549 & -(b >> 1 & 1) ^ 513874426 & -(b >> 2 & 1) ^ 1027748829 & -(b >> 3 & 1) ^ 705979059 & -(b >> 4 & 1);
    }
    function prefixChk(prefix) {
      for (var chk = 1, i = 0; i < prefix.length; ++i) {
        var c = prefix.charCodeAt(i);
        if (c < 33 || c > 126) return "Invalid prefix (" + prefix + ")";
        chk = polymodStep(chk) ^ c >> 5;
      }
      for (chk = polymodStep(chk), i = 0; i < prefix.length; ++i) {
        var v = prefix.charCodeAt(i);
        chk = polymodStep(chk) ^ 31 & v;
      }
      return chk;
    }
    function __decode(str, LIMIT) {
      if (LIMIT = LIMIT || 90, str.length < 8) return str + " too short";
      if (str.length > LIMIT) return "Exceeds length limit";
      var lowered = str.toLowerCase(), uppered = str.toUpperCase();
      if (str !== lowered && str !== uppered) return "Mixed-case string " + str;
      var split = (str = lowered).lastIndexOf("1");
      if (-1 === split) return "No separator character for " + str;
      if (0 === split) return "Missing prefix for " + str;
      var prefix = str.slice(0, split), wordChars = str.slice(split + 1);
      if (wordChars.length < 6) return "Data too short";
      var chk = prefixChk(prefix);
      if ("string" == typeof chk) return chk;
      for (var words = [], i = 0; i < wordChars.length; ++i) {
        var c = wordChars.charAt(i), v = ALPHABET_MAP[c];
        if (void 0 === v) return "Unknown character " + c;
        chk = polymodStep(chk) ^ v, i + 6 >= wordChars.length || words.push(v);
      }
      return 1 !== chk ? "Invalid checksum for " + str : {
        prefix,
        words
      };
    }
    function convert(data, inBits, outBits, pad) {
      for (var value = 0, bits = 0, maxV = (1 << outBits) - 1, result = [], i = 0; i < data.length; ++i) for (value = value << inBits | data[i], 
      bits += inBits; bits >= outBits; ) bits -= outBits, result.push(value >> bits & maxV);
      if (pad) bits > 0 && result.push(value << outBits - bits & maxV); else {
        if (bits >= inBits) return "Excess padding";
        if (value << outBits - bits & maxV) return "Non-zero padding";
      }
      return result;
    }
    var bech32 = {
      decodeUnsafe: function() {
        var res = __decode.apply(null, arguments);
        if ("object" === _typeof(res)) return res;
      },
      decode: function(str) {
        var res = __decode.apply(null, arguments);
        if ("object" === _typeof(res)) return res;
        throw new Error(res);
      },
      encode: function(prefix, words, LIMIT) {
        if (LIMIT = LIMIT || 90, prefix.length + 7 + words.length > LIMIT) throw new TypeError("Exceeds length limit");
        var chk = prefixChk(prefix = prefix.toLowerCase());
        if ("string" == typeof chk) throw new Error(chk);
        for (var result = prefix + "1", i = 0; i < words.length; ++i) {
          var x = words[i];
          if (x >> 5 != 0) throw new Error("Non 5-bit word");
          chk = polymodStep(chk) ^ x, result += ALPHABET.charAt(x);
        }
        for (i = 0; i < 6; ++i) chk = polymodStep(chk);
        for (chk ^= 1, i = 0; i < 6; ++i) {
          result += ALPHABET.charAt(chk >> 5 * (5 - i) & 31);
        }
        return result;
      },
      toWordsUnsafe: function(bytes) {
        var res = convert(bytes, 8, 5, !0);
        if (Array.isArray(res)) return res;
      },
      toWords: function(bytes) {
        var res = convert(bytes, 8, 5, !0);
        if (Array.isArray(res)) return res;
        throw new Error(res);
      },
      fromWordsUnsafe: function(words) {
        var res = convert(words, 5, 8, !1);
        if (Array.isArray(res)) return res;
      },
      fromWords: function(words) {
        var res = convert(words, 5, 8, !1);
        if (Array.isArray(res)) return res;
        throw new Error(res);
      }
    }, version$m = "providers/5.2.0", logger$s = new Logger(version$m), Formatter = function() {
      function Formatter() {
        _classCallCheck(this, Formatter), logger$s.checkNew(this instanceof Formatter ? this.constructor : void 0, Formatter), 
        this.formats = this.getDefaultFormats();
      }
      return _createClass(Formatter, [ {
        key: "getDefaultFormats",
        value: function() {
          var _this36 = this, formats = {}, address = this.address.bind(this), bigNumber = this.bigNumber.bind(this), blockTag = this.blockTag.bind(this), data = this.data.bind(this), hash = this.hash.bind(this), hex = this.hex.bind(this), number = this.number.bind(this);
          return formats.transaction = {
            hash,
            type: Formatter.allowNull(number, null),
            accessList: Formatter.allowNull(this.accessList.bind(this), null),
            blockHash: Formatter.allowNull(hash, null),
            blockNumber: Formatter.allowNull(number, null),
            transactionIndex: Formatter.allowNull(number, null),
            confirmations: Formatter.allowNull(number, null),
            from: address,
            gasPrice: bigNumber,
            gasLimit: bigNumber,
            to: Formatter.allowNull(address, null),
            value: bigNumber,
            nonce: number,
            data,
            r: Formatter.allowNull(this.uint256),
            s: Formatter.allowNull(this.uint256),
            v: Formatter.allowNull(number),
            creates: Formatter.allowNull(address, null),
            raw: Formatter.allowNull(data)
          }, formats.transactionRequest = {
            from: Formatter.allowNull(address),
            nonce: Formatter.allowNull(number),
            gasLimit: Formatter.allowNull(bigNumber),
            gasPrice: Formatter.allowNull(bigNumber),
            to: Formatter.allowNull(address),
            value: Formatter.allowNull(bigNumber),
            data: Formatter.allowNull((function(v) {
              return _this36.data(v, !0);
            })),
            type: Formatter.allowNull(number),
            accessList: Formatter.allowNull(this.accessList.bind(this), null)
          }, formats.receiptLog = {
            transactionIndex: number,
            blockNumber: number,
            transactionHash: hash,
            address,
            topics: Formatter.arrayOf(hash),
            data,
            logIndex: number,
            blockHash: hash
          }, formats.receipt = {
            to: Formatter.allowNull(this.address, null),
            from: Formatter.allowNull(this.address, null),
            contractAddress: Formatter.allowNull(address, null),
            transactionIndex: number,
            root: Formatter.allowNull(hex),
            gasUsed: bigNumber,
            logsBloom: Formatter.allowNull(data),
            blockHash: hash,
            transactionHash: hash,
            logs: Formatter.arrayOf(this.receiptLog.bind(this)),
            blockNumber: number,
            confirmations: Formatter.allowNull(number, null),
            cumulativeGasUsed: bigNumber,
            status: Formatter.allowNull(number)
          }, formats.block = {
            hash,
            parentHash: hash,
            number,
            timestamp: number,
            nonce: Formatter.allowNull(hex),
            difficulty: this.difficulty.bind(this),
            gasLimit: bigNumber,
            gasUsed: bigNumber,
            miner: address,
            extraData: data,
            transactions: Formatter.allowNull(Formatter.arrayOf(hash))
          }, formats.blockWithTransactions = shallowCopy(formats.block), formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this))), 
          formats.filter = {
            fromBlock: Formatter.allowNull(blockTag, void 0),
            toBlock: Formatter.allowNull(blockTag, void 0),
            blockHash: Formatter.allowNull(hash, void 0),
            address: Formatter.allowNull(address, void 0),
            topics: Formatter.allowNull(this.topics.bind(this), void 0)
          }, formats.filterLog = {
            blockNumber: Formatter.allowNull(number),
            blockHash: Formatter.allowNull(hash),
            transactionIndex: number,
            removed: Formatter.allowNull(this.boolean.bind(this)),
            address,
            data: Formatter.allowFalsish(data, "0x"),
            topics: Formatter.arrayOf(hash),
            transactionHash: hash,
            logIndex: number
          }, formats;
        }
      }, {
        key: "accessList",
        value: function(_accessList) {
          return accessListify(_accessList || []);
        }
      }, {
        key: "number",
        value: function(_number) {
          return "0x" === _number ? 0 : BigNumber.from(_number).toNumber();
        }
      }, {
        key: "bigNumber",
        value: function(value) {
          return BigNumber.from(value);
        }
      }, {
        key: "boolean",
        value: function(value) {
          if ("boolean" == typeof value) return value;
          if ("string" == typeof value) {
            if ("true" === (value = value.toLowerCase())) return !0;
            if ("false" === value) return !1;
          }
          throw new Error("invalid boolean - " + value);
        }
      }, {
        key: "hex",
        value: function(value, strict) {
          return "string" == typeof value && (strict || "0x" === value.substring(0, 2) || (value = "0x" + value), 
          isHexString(value)) ? value.toLowerCase() : logger$s.throwArgumentError("invalid hash", "value", value);
        }
      }, {
        key: "data",
        value: function(value, strict) {
          var result = this.hex(value, strict);
          if (result.length % 2 != 0) throw new Error("invalid data; odd-length - " + value);
          return result;
        }
      }, {
        key: "address",
        value: function(value) {
          return _getAddress(value);
        }
      }, {
        key: "callAddress",
        value: function(value) {
          if (!isHexString(value, 32)) return null;
          var address = _getAddress(hexDataSlice(value, 12));
          return address === AddressZero ? null : address;
        }
      }, {
        key: "contractAddress",
        value: function(value) {
          return _getContractAddress(value);
        }
      }, {
        key: "blockTag",
        value: function(_blockTag) {
          if (null == _blockTag) return "latest";
          if ("earliest" === _blockTag) return "0x0";
          if ("latest" === _blockTag || "pending" === _blockTag) return _blockTag;
          if ("number" == typeof _blockTag || isHexString(_blockTag)) return hexValue(_blockTag);
          throw new Error("invalid blockTag");
        }
      }, {
        key: "hash",
        value: function(value, strict) {
          var result = this.hex(value, strict);
          return 32 !== hexDataLength(result) ? logger$s.throwArgumentError("invalid hash", "value", value) : result;
        }
      }, {
        key: "difficulty",
        value: function(value) {
          if (null == value) return null;
          var v = BigNumber.from(value);
          try {
            return v.toNumber();
          } catch (error) {}
          return null;
        }
      }, {
        key: "uint256",
        value: function(value) {
          if (!isHexString(value)) throw new Error("invalid uint256");
          return hexZeroPad(value, 32);
        }
      }, {
        key: "_block",
        value: function(value, format) {
          return null != value.author && null == value.miner && (value.miner = value.author), 
          Formatter.check(format, value);
        }
      }, {
        key: "block",
        value: function(value) {
          return this._block(value, this.formats.block);
        }
      }, {
        key: "blockWithTransactions",
        value: function(value) {
          return this._block(value, this.formats.blockWithTransactions);
        }
      }, {
        key: "transactionRequest",
        value: function(value) {
          return Formatter.check(this.formats.transactionRequest, value);
        }
      }, {
        key: "transactionResponse",
        value: function(transaction) {
          null != transaction.gas && null == transaction.gasLimit && (transaction.gasLimit = transaction.gas), 
          transaction.to && BigNumber.from(transaction.to).isZero() && (transaction.to = "0x0000000000000000000000000000000000000000"), 
          null != transaction.input && null == transaction.data && (transaction.data = transaction.input), 
          null == transaction.to && null == transaction.creates && (transaction.creates = this.contractAddress(transaction)), 
          1 === transaction.type && null == transaction.accessList && (transaction.accessList = []);
          var result = Formatter.check(this.formats.transaction, transaction);
          if (null != transaction.chainId) {
            var chainId = transaction.chainId;
            isHexString(chainId) && (chainId = BigNumber.from(chainId).toNumber()), result.chainId = chainId;
          } else {
            var _chainId = transaction.networkId;
            null == _chainId && null == result.v && (_chainId = transaction.chainId), isHexString(_chainId) && (_chainId = BigNumber.from(_chainId).toNumber()), 
            "number" != typeof _chainId && null != result.v && ((_chainId = (result.v - 35) / 2) < 0 && (_chainId = 0), 
            _chainId = parseInt(_chainId)), "number" != typeof _chainId && (_chainId = 0), result.chainId = _chainId;
          }
          return result.blockHash && "x" === result.blockHash.replace(/0/g, "") && (result.blockHash = null), 
          result;
        }
      }, {
        key: "transaction",
        value: function(value) {
          return parse(value);
        }
      }, {
        key: "receiptLog",
        value: function(value) {
          return Formatter.check(this.formats.receiptLog, value);
        }
      }, {
        key: "receipt",
        value: function(value) {
          var result = Formatter.check(this.formats.receipt, value);
          if (null != result.root) if (result.root.length <= 4) {
            var _value = BigNumber.from(result.root).toNumber();
            0 === _value || 1 === _value ? (null != result.status && result.status !== _value && logger$s.throwArgumentError("alt-root-status/status mismatch", "value", {
              root: result.root,
              status: result.status
            }), result.status = _value, delete result.root) : logger$s.throwArgumentError("invalid alt-root-status", "value.root", result.root);
          } else 66 !== result.root.length && logger$s.throwArgumentError("invalid root hash", "value.root", result.root);
          return null != result.status && (result.byzantium = !0), result;
        }
      }, {
        key: "topics",
        value: function(value) {
          var _this37 = this;
          return Array.isArray(value) ? value.map((function(v) {
            return _this37.topics(v);
          })) : null != value ? this.hash(value, !0) : null;
        }
      }, {
        key: "filter",
        value: function(value) {
          return Formatter.check(this.formats.filter, value);
        }
      }, {
        key: "filterLog",
        value: function(value) {
          return Formatter.check(this.formats.filterLog, value);
        }
      } ], [ {
        key: "check",
        value: function(format, object) {
          var result = {};
          for (var _key21 in format) try {
            var value = format[_key21](object[_key21]);
            void 0 !== value && (result[_key21] = value);
          } catch (error) {
            throw error.checkKey = _key21, error.checkValue = object[_key21], error;
          }
          return result;
        }
      }, {
        key: "allowNull",
        value: function(format, nullValue) {
          return function(value) {
            return null == value ? nullValue : format(value);
          };
        }
      }, {
        key: "allowFalsish",
        value: function(format, replaceValue) {
          return function(value) {
            return value ? format(value) : replaceValue;
          };
        }
      }, {
        key: "arrayOf",
        value: function(format) {
          return function(array) {
            if (!Array.isArray(array)) throw new Error("not an array");
            var result = [];
            return array.forEach((function(value) {
              result.push(format(value));
            })), result;
          };
        }
      } ]), Formatter;
    }();
    function isCommunityResourcable(value) {
      return value && "function" == typeof value.isCommunityResource;
    }
    function isCommunityResource(value) {
      return isCommunityResourcable(value) && value.isCommunityResource();
    }
    var throttleMessage = !1;
    function showThrottleMessage() {
      throttleMessage || (throttleMessage = !0);
    }
    var __awaiter$8 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$t = new Logger(version$m);
    function checkTopic(topic) {
      return null == topic ? "null" : (32 !== hexDataLength(topic) && logger$t.throwArgumentError("invalid topic", "topic", topic), 
      topic.toLowerCase());
    }
    function serializeTopics(topics) {
      for (topics = topics.slice(); topics.length > 0 && null == topics[topics.length - 1]; ) topics.pop();
      return topics.map((function(topic) {
        if (Array.isArray(topic)) {
          var unique = {};
          topic.forEach((function(topic) {
            unique[checkTopic(topic)] = !0;
          }));
          var sorted = Object.keys(unique);
          return sorted.sort(), sorted.join("|");
        }
        return checkTopic(topic);
      })).join("&");
    }
    function getEventTag$1(eventName) {
      if ("string" == typeof eventName) {
        if (32 === hexDataLength(eventName = eventName.toLowerCase())) return "tx:" + eventName;
        if (-1 === eventName.indexOf(":")) return eventName;
      } else {
        if (Array.isArray(eventName)) return "filter:*:" + serializeTopics(eventName);
        if (ForkEvent.isForkEvent(eventName)) throw logger$t.warn("not implemented"), new Error("not implemented");
        if (eventName && "object" === _typeof(eventName)) return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
      }
      throw new Error("invalid event - " + eventName);
    }
    function getTime() {
      return (new Date).getTime();
    }
    function stall(duration) {
      return new Promise((function(resolve) {
        setTimeout(resolve, duration);
      }));
    }
    var PollableEvents = [ "block", "network", "pending", "poll" ], Event = function() {
      function Event(tag, listener, once) {
        _classCallCheck(this, Event), defineReadOnly(this, "tag", tag), defineReadOnly(this, "listener", listener), 
        defineReadOnly(this, "once", once);
      }
      return _createClass(Event, [ {
        key: "event",
        get: function() {
          switch (this.type) {
           case "tx":
            return this.hash;

           case "filter":
            return this.filter;
          }
          return this.tag;
        }
      }, {
        key: "type",
        get: function() {
          return this.tag.split(":")[0];
        }
      }, {
        key: "hash",
        get: function() {
          var comps = this.tag.split(":");
          return "tx" !== comps[0] ? null : comps[1];
        }
      }, {
        key: "filter",
        get: function() {
          var comps = this.tag.split(":");
          if ("filter" !== comps[0]) return null;
          var address = comps[1], topics = function(data) {
            return "" === data ? [] : data.split(/&/g).map((function(topic) {
              if ("" === topic) return [];
              var comps = topic.split("|").map((function(topic) {
                return "null" === topic ? null : topic;
              }));
              return 1 === comps.length ? comps[0] : comps;
            }));
          }(comps[2]), filter = {};
          return topics.length > 0 && (filter.topics = topics), address && "*" !== address && (filter.address = address), 
          filter;
        }
      }, {
        key: "pollable",
        value: function() {
          return this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0;
        }
      } ]), Event;
    }(), coinInfos = {
      0: {
        symbol: "btc",
        p2pkh: 0,
        p2sh: 5,
        prefix: "bc"
      },
      2: {
        symbol: "ltc",
        p2pkh: 48,
        p2sh: 50,
        prefix: "ltc"
      },
      3: {
        symbol: "doge",
        p2pkh: 30,
        p2sh: 22
      },
      60: {
        symbol: "eth",
        ilk: "eth"
      },
      61: {
        symbol: "etc",
        ilk: "eth"
      },
      700: {
        symbol: "xdai",
        ilk: "eth"
      }
    };
    function bytes32ify(value) {
      return hexZeroPad(BigNumber.from(value).toHexString(), 32);
    }
    function base58Encode(data) {
      return Base58.encode(concat([ data, hexDataSlice(sha256$1(sha256$1(data)), 0, 4) ]));
    }
    var Resolver = function() {
      function Resolver(provider, address, name) {
        _classCallCheck(this, Resolver), defineReadOnly(this, "provider", provider), defineReadOnly(this, "name", name), 
        defineReadOnly(this, "address", provider.formatter.address(address));
      }
      return _createClass(Resolver, [ {
        key: "_fetchBytes",
        value: function(selector, parameters) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee25() {
            var transaction, result, offset, length;
            return regeneratorRuntime.wrap((function(_context25) {
              for (;;) switch (_context25.prev = _context25.next) {
               case 0:
                return transaction = {
                  to: this.address,
                  data: hexConcat([ selector, namehash(this.name), parameters || "0x" ])
                }, _context25.next = 3, this.provider.call(transaction);

               case 3:
                if ("0x" !== (result = _context25.sent)) {
                  _context25.next = 6;
                  break;
                }
                return _context25.abrupt("return", null);

               case 6:
                return offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber(), length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber(), 
                _context25.abrupt("return", hexDataSlice(result, offset + 32, offset + 32 + length));

               case 9:
               case "end":
                return _context25.stop();
              }
            }), _callee25, this);
          })));
        }
      }, {
        key: "_getAddress",
        value: function(coinType, hexBytes) {
          var coinInfo = coinInfos[String(coinType)];
          if (null == coinInfo && logger$t.throwError("unsupported coin type: ".concat(coinType), Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "getAddress(".concat(coinType, ")")
          }), "eth" === coinInfo.ilk) return this.provider.formatter.address(hexBytes);
          var bytes = arrayify(hexBytes);
          if (null != coinInfo.p2pkh) {
            var p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
            if (p2pkh) {
              var length = parseInt(p2pkh[1], 16);
              if (p2pkh[2].length === 2 * length && length >= 1 && length <= 75) return base58Encode(concat([ [ coinInfo.p2pkh ], "0x" + p2pkh[2] ]));
            }
          }
          if (null != coinInfo.p2sh) {
            var p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
            if (p2sh) {
              var _length5 = parseInt(p2sh[1], 16);
              if (p2sh[2].length === 2 * _length5 && _length5 >= 1 && _length5 <= 75) return base58Encode(concat([ [ coinInfo.p2sh ], "0x" + p2sh[2] ]));
            }
          }
          if (null != coinInfo.prefix) {
            var _length6 = bytes[1], _version = bytes[0];
            if (0 === _version ? 20 !== _length6 && 32 !== _length6 && (_version = -1) : _version = -1, 
            _version >= 0 && bytes.length === 2 + _length6 && _length6 >= 1 && _length6 <= 75) {
              var _words2 = bech32.toWords(bytes.slice(2));
              return _words2.unshift(_version), bech32.encode(coinInfo.prefix, _words2);
            }
          }
          return null;
        }
      }, {
        key: "getAddress",
        value: function(coinType) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee26() {
            var transaction, _hexBytes, hexBytes, address;
            return regeneratorRuntime.wrap((function(_context26) {
              for (;;) switch (_context26.prev = _context26.next) {
               case 0:
                if (null == coinType && (coinType = 60), 60 !== coinType) {
                  _context26.next = 9;
                  break;
                }
                return transaction = {
                  to: this.address,
                  data: "0x3b3b57de" + namehash(this.name).substring(2)
                }, _context26.next = 5, this.provider.call(transaction);

               case 5:
                if ("0x" !== (_hexBytes = _context26.sent) && _hexBytes !== HashZero) {
                  _context26.next = 8;
                  break;
                }
                return _context26.abrupt("return", null);

               case 8:
                return _context26.abrupt("return", this.provider.formatter.callAddress(_hexBytes));

               case 9:
                return _context26.next = 11, this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));

               case 11:
                if (null != (hexBytes = _context26.sent) && "0x" !== hexBytes) {
                  _context26.next = 14;
                  break;
                }
                return _context26.abrupt("return", null);

               case 14:
                return null == (address = this._getAddress(coinType, hexBytes)) && logger$t.throwError("invalid or unsupported coin data", Logger.errors.UNSUPPORTED_OPERATION, {
                  operation: "getAddress(".concat(coinType, ")"),
                  coinType,
                  data: hexBytes
                }), _context26.abrupt("return", address);

               case 17:
               case "end":
                return _context26.stop();
              }
            }), _callee26, this);
          })));
        }
      }, {
        key: "getContentHash",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee27() {
            var hexBytes, ipfs, length, swarm;
            return regeneratorRuntime.wrap((function(_context27) {
              for (;;) switch (_context27.prev = _context27.next) {
               case 0:
                return _context27.next = 2, this._fetchBytes("0xbc1c58d1");

               case 2:
                if (null != (hexBytes = _context27.sent) && "0x" !== hexBytes) {
                  _context27.next = 5;
                  break;
                }
                return _context27.abrupt("return", null);

               case 5:
                if (!(ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/))) {
                  _context27.next = 10;
                  break;
                }
                if (length = parseInt(ipfs[3], 16), ipfs[4].length !== 2 * length) {
                  _context27.next = 10;
                  break;
                }
                return _context27.abrupt("return", "ipfs://" + Base58.encode("0x" + ipfs[1]));

               case 10:
                if (!(swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/))) {
                  _context27.next = 14;
                  break;
                }
                if (64 !== swarm[1].length) {
                  _context27.next = 14;
                  break;
                }
                return _context27.abrupt("return", "bzz://" + swarm[1]);

               case 14:
                return _context27.abrupt("return", logger$t.throwError("invalid or unsupported content hash data", Logger.errors.UNSUPPORTED_OPERATION, {
                  operation: "getContentHash()",
                  data: hexBytes
                }));

               case 15:
               case "end":
                return _context27.stop();
              }
            }), _callee27, this);
          })));
        }
      }, {
        key: "getText",
        value: function(key) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee28() {
            var keyBytes, hexBytes;
            return regeneratorRuntime.wrap((function(_context28) {
              for (;;) switch (_context28.prev = _context28.next) {
               case 0:
                return keyBytes = toUtf8Bytes(key), (keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ])).length % 32 != 0 && (keyBytes = concat([ keyBytes, hexZeroPad("0x", 32 - key.length % 32) ])), 
                _context28.next = 5, this._fetchBytes("0x59d1d43c", hexlify(keyBytes));

               case 5:
                if (null != (hexBytes = _context28.sent) && "0x" !== hexBytes) {
                  _context28.next = 8;
                  break;
                }
                return _context28.abrupt("return", null);

               case 8:
                return _context28.abrupt("return", toUtf8String(hexBytes));

               case 9:
               case "end":
                return _context28.stop();
              }
            }), _callee28, this);
          })));
        }
      } ]), Resolver;
    }(), defaultFormatter = null, nextPollId = 1, BaseProvider = function(_Provider) {
      _inherits(BaseProvider, _Provider);
      var _super40 = _createSuper(BaseProvider);
      function BaseProvider(network) {
        var _this38;
        if (_classCallCheck(this, BaseProvider), logger$t.checkNew(this instanceof BaseProvider ? this.constructor : void 0, Provider), 
        (_this38 = _super40.call(this))._events = [], _this38._emitted = {
          block: -2
        }, _this38.formatter = (this instanceof BaseProvider ? this.constructor : void 0).getFormatter(), 
        defineReadOnly(_assertThisInitialized(_this38), "anyNetwork", "any" === network), 
        _this38.anyNetwork && (network = _this38.detectNetwork()), network instanceof Promise) _this38._networkPromise = network, 
        network.catch((function(error) {})), _this38._ready().catch((function(error) {})); else {
          var knownNetwork = getStatic(this instanceof BaseProvider ? this.constructor : void 0, "getNetwork")(network);
          knownNetwork ? (defineReadOnly(_assertThisInitialized(_this38), "_network", knownNetwork), 
          _this38.emit("network", knownNetwork, null)) : logger$t.throwArgumentError("invalid network", "network", network);
        }
        return _this38._maxInternalBlockNumber = -1024, _this38._lastBlockNumber = -2, _this38._pollingInterval = 4e3, 
        _this38._fastQueryDate = 0, _this38;
      }
      return _createClass(BaseProvider, [ {
        key: "_ready",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee29() {
            var network;
            return regeneratorRuntime.wrap((function(_context29) {
              for (;;) switch (_context29.prev = _context29.next) {
               case 0:
                if (null != this._network) {
                  _context29.next = 17;
                  break;
                }
                if (network = null, !this._networkPromise) {
                  _context29.next = 11;
                  break;
                }
                return _context29.prev = 3, _context29.next = 6, this._networkPromise;

               case 6:
                network = _context29.sent, _context29.next = 11;
                break;

               case 9:
                _context29.prev = 9, _context29.t0 = _context29.catch(3);

               case 11:
                if (null != network) {
                  _context29.next = 15;
                  break;
                }
                return _context29.next = 14, this.detectNetwork();

               case 14:
                network = _context29.sent;

               case 15:
                network || logger$t.throwError("no network detected", Logger.errors.UNKNOWN_ERROR, {}), 
                null == this._network && (this.anyNetwork ? this._network = network : defineReadOnly(this, "_network", network), 
                this.emit("network", network, null));

               case 17:
                return _context29.abrupt("return", this._network);

               case 18:
               case "end":
                return _context29.stop();
              }
            }), _callee29, this, [ [ 3, 9 ] ]);
          })));
        }
      }, {
        key: "ready",
        get: function() {
          var _this39 = this;
          return poll((function() {
            return _this39._ready().then((function(network) {
              return network;
            }), (function(error) {
              if (error.code !== Logger.errors.NETWORK_ERROR || "noNetwork" !== error.event) throw error;
            }));
          }));
        }
      }, {
        key: "_getInternalBlockNumber",
        value: function(maxAge) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee30() {
            var internalBlockNumber, result, reqTime, checkInternalBlockNumber, _this40 = this;
            return regeneratorRuntime.wrap((function(_context30) {
              for (;;) switch (_context30.prev = _context30.next) {
               case 0:
                return _context30.next = 2, this._ready();

               case 2:
                if (!(maxAge > 0)) {
                  _context30.next = 20;
                  break;
                }

               case 3:
                if (!this._internalBlockNumber) {
                  _context30.next = 20;
                  break;
                }
                return internalBlockNumber = this._internalBlockNumber, _context30.prev = 5, _context30.next = 8, 
                internalBlockNumber;

               case 8:
                if (result = _context30.sent, !(getTime() - result.respTime <= maxAge)) {
                  _context30.next = 11;
                  break;
                }
                return _context30.abrupt("return", result.blockNumber);

               case 11:
                return _context30.abrupt("break", 20);

               case 14:
                if (_context30.prev = 14, _context30.t0 = _context30.catch(5), this._internalBlockNumber !== internalBlockNumber) {
                  _context30.next = 18;
                  break;
                }
                return _context30.abrupt("break", 20);

               case 18:
                _context30.next = 3;
                break;

               case 20:
                return reqTime = getTime(), checkInternalBlockNumber = resolveProperties({
                  blockNumber: this.perform("getBlockNumber", {}),
                  networkError: this.getNetwork().then((function(network) {
                    return null;
                  }), (function(error) {
                    return error;
                  }))
                }).then((function(_ref4) {
                  var blockNumber = _ref4.blockNumber, networkError = _ref4.networkError;
                  if (networkError) throw _this40._internalBlockNumber === checkInternalBlockNumber && (_this40._internalBlockNumber = null), 
                  networkError;
                  var respTime = getTime();
                  return (blockNumber = BigNumber.from(blockNumber).toNumber()) < _this40._maxInternalBlockNumber && (blockNumber = _this40._maxInternalBlockNumber), 
                  _this40._maxInternalBlockNumber = blockNumber, _this40._setFastBlockNumber(blockNumber), 
                  {
                    blockNumber,
                    reqTime,
                    respTime
                  };
                })), this._internalBlockNumber = checkInternalBlockNumber, checkInternalBlockNumber.catch((function(error) {
                  _this40._internalBlockNumber === checkInternalBlockNumber && (_this40._internalBlockNumber = null);
                })), _context30.next = 26, checkInternalBlockNumber;

               case 26:
                return _context30.abrupt("return", _context30.sent.blockNumber);

               case 27:
               case "end":
                return _context30.stop();
              }
            }), _callee30, this, [ [ 5, 14 ] ]);
          })));
        }
      }, {
        key: "poll",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee31() {
            var pollId, runners, blockNumber, _i43, _this41 = this;
            return regeneratorRuntime.wrap((function(_context31) {
              for (;;) switch (_context31.prev = _context31.next) {
               case 0:
                return pollId = nextPollId++, runners = [], blockNumber = null, _context31.prev = 3, 
                _context31.next = 6, this._getInternalBlockNumber(100 + this.pollingInterval / 2);

               case 6:
                blockNumber = _context31.sent, _context31.next = 13;
                break;

               case 9:
                return _context31.prev = 9, _context31.t0 = _context31.catch(3), this.emit("error", _context31.t0), 
                _context31.abrupt("return");

               case 13:
                if (this._setFastBlockNumber(blockNumber), this.emit("poll", pollId, blockNumber), 
                blockNumber !== this._lastBlockNumber) {
                  _context31.next = 18;
                  break;
                }
                return this.emit("didPoll", pollId), _context31.abrupt("return");

               case 18:
                if (-2 === this._emitted.block && (this._emitted.block = blockNumber - 1), Math.abs(this._emitted.block - blockNumber) > 1e3) logger$t.warn("network block skew detected; skipping block events (emitted=".concat(this._emitted.block, " blockNumber").concat(blockNumber, ")")), 
                this.emit("error", logger$t.makeError("network block skew detected", Logger.errors.NETWORK_ERROR, {
                  blockNumber,
                  event: "blockSkew",
                  previousBlockNumber: this._emitted.block
                })), this.emit("block", blockNumber); else for (_i43 = this._emitted.block + 1; _i43 <= blockNumber; _i43++) this.emit("block", _i43);
                return this._emitted.block !== blockNumber && (this._emitted.block = blockNumber, 
                Object.keys(this._emitted).forEach((function(key) {
                  if ("block" !== key) {
                    var eventBlockNumber = _this41._emitted[key];
                    "pending" !== eventBlockNumber && blockNumber - eventBlockNumber > 12 && delete _this41._emitted[key];
                  }
                }))), -2 === this._lastBlockNumber && (this._lastBlockNumber = blockNumber - 1), 
                this._events.forEach((function(event) {
                  switch (event.type) {
                   case "tx":
                    var hash = event.hash, runner = _this41.getTransactionReceipt(hash).then((function(receipt) {
                      return receipt && null != receipt.blockNumber ? (_this41._emitted["t:" + hash] = receipt.blockNumber, 
                      _this41.emit(hash, receipt), null) : null;
                    })).catch((function(error) {
                      _this41.emit("error", error);
                    }));
                    runners.push(runner);
                    break;

                   case "filter":
                    var filter = event.filter;
                    filter.fromBlock = _this41._lastBlockNumber + 1, filter.toBlock = blockNumber;
                    var _runner = _this41.getLogs(filter).then((function(logs) {
                      0 !== logs.length && logs.forEach((function(log) {
                        _this41._emitted["b:" + log.blockHash] = log.blockNumber, _this41._emitted["t:" + log.transactionHash] = log.blockNumber, 
                        _this41.emit(filter, log);
                      }));
                    })).catch((function(error) {
                      _this41.emit("error", error);
                    }));
                    runners.push(_runner);
                  }
                })), this._lastBlockNumber = blockNumber, Promise.all(runners).then((function() {
                  _this41.emit("didPoll", pollId);
                })).catch((function(error) {
                  _this41.emit("error", error);
                })), _context31.abrupt("return");

               case 26:
               case "end":
                return _context31.stop();
              }
            }), _callee31, this, [ [ 3, 9 ] ]);
          })));
        }
      }, {
        key: "resetEventsBlock",
        value: function(blockNumber) {
          this._lastBlockNumber = blockNumber - 1, this.polling && this.poll();
        }
      }, {
        key: "network",
        get: function() {
          return this._network;
        }
      }, {
        key: "detectNetwork",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee32() {
            return regeneratorRuntime.wrap((function(_context32) {
              for (;;) switch (_context32.prev = _context32.next) {
               case 0:
                return _context32.abrupt("return", logger$t.throwError("provider does not support network detection", Logger.errors.UNSUPPORTED_OPERATION, {
                  operation: "provider.detectNetwork"
                }));

               case 1:
               case "end":
                return _context32.stop();
              }
            }), _callee32);
          })));
        }
      }, {
        key: "getNetwork",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee33() {
            var network, currentNetwork, error;
            return regeneratorRuntime.wrap((function(_context33) {
              for (;;) switch (_context33.prev = _context33.next) {
               case 0:
                return _context33.next = 2, this._ready();

               case 2:
                return network = _context33.sent, _context33.next = 5, this.detectNetwork();

               case 5:
                if (currentNetwork = _context33.sent, network.chainId === currentNetwork.chainId) {
                  _context33.next = 23;
                  break;
                }
                if (!this.anyNetwork) {
                  _context33.next = 20;
                  break;
                }
                return this._network = currentNetwork, this._lastBlockNumber = -2, this._fastBlockNumber = null, 
                this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, 
                this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", currentNetwork, network), 
                _context33.next = 19, stall(0);

               case 19:
                return _context33.abrupt("return", this._network);

               case 20:
                throw error = logger$t.makeError("underlying network changed", Logger.errors.NETWORK_ERROR, {
                  event: "changed",
                  network,
                  detectedNetwork: currentNetwork
                }), this.emit("error", error), error;

               case 23:
                return _context33.abrupt("return", network);

               case 24:
               case "end":
                return _context33.stop();
              }
            }), _callee33, this);
          })));
        }
      }, {
        key: "blockNumber",
        get: function() {
          var _this42 = this;
          return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((function(blockNumber) {
            _this42._setFastBlockNumber(blockNumber);
          }), (function(error) {})), null != this._fastBlockNumber ? this._fastBlockNumber : -1;
        }
      }, {
        key: "polling",
        get: function() {
          return null != this._poller;
        },
        set: function(value) {
          var _this43 = this;
          value && !this._poller ? (this._poller = setInterval((function() {
            _this43.poll();
          }), this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout((function() {
            _this43.poll(), _this43._bootstrapPoll = setTimeout((function() {
              _this43._poller || _this43.poll(), _this43._bootstrapPoll = null;
            }), _this43.pollingInterval);
          }), 0))) : !value && this._poller && (clearInterval(this._poller), this._poller = null);
        }
      }, {
        key: "pollingInterval",
        get: function() {
          return this._pollingInterval;
        },
        set: function(value) {
          var _this44 = this;
          if ("number" != typeof value || value <= 0 || parseInt(String(value)) != value) throw new Error("invalid polling interval");
          this._pollingInterval = value, this._poller && (clearInterval(this._poller), this._poller = setInterval((function() {
            _this44.poll();
          }), this._pollingInterval));
        }
      }, {
        key: "_getFastBlockNumber",
        value: function() {
          var _this45 = this, now = getTime();
          return now - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = now, 
          this._fastBlockNumberPromise = this.getBlockNumber().then((function(blockNumber) {
            return (null == _this45._fastBlockNumber || blockNumber > _this45._fastBlockNumber) && (_this45._fastBlockNumber = blockNumber), 
            _this45._fastBlockNumber;
          }))), this._fastBlockNumberPromise;
        }
      }, {
        key: "_setFastBlockNumber",
        value: function(blockNumber) {
          null != this._fastBlockNumber && blockNumber < this._fastBlockNumber || (this._fastQueryDate = getTime(), 
          (null == this._fastBlockNumber || blockNumber > this._fastBlockNumber) && (this._fastBlockNumber = blockNumber, 
          this._fastBlockNumberPromise = Promise.resolve(blockNumber)));
        }
      }, {
        key: "waitForTransaction",
        value: function(transactionHash, confirmations, timeout) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee34() {
            return regeneratorRuntime.wrap((function(_context34) {
              for (;;) switch (_context34.prev = _context34.next) {
               case 0:
                return _context34.abrupt("return", this._waitForTransaction(transactionHash, null == confirmations ? 1 : confirmations, timeout || 0, null));

               case 1:
               case "end":
                return _context34.stop();
              }
            }), _callee34, this);
          })));
        }
      }, {
        key: "_waitForTransaction",
        value: function(transactionHash, confirmations, timeout, replaceable) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee37() {
            var receipt, _this46 = this;
            return regeneratorRuntime.wrap((function(_context37) {
              for (;;) switch (_context37.prev = _context37.next) {
               case 0:
                return _context37.next = 2, this.getTransactionReceipt(transactionHash);

               case 2:
                if (!(((receipt = _context37.sent) ? receipt.confirmations : 0) >= confirmations)) {
                  _context37.next = 5;
                  break;
                }
                return _context37.abrupt("return", receipt);

               case 5:
                return _context37.abrupt("return", new Promise((function(resolve, reject) {
                  var cancelFuncs = [], done = !1, alreadyDone = function() {
                    return !!done || (done = !0, cancelFuncs.forEach((function(func) {
                      func();
                    })), !1);
                  }, minedHandler = function(receipt) {
                    receipt.confirmations < confirmations || alreadyDone() || resolve(receipt);
                  };
                  if (_this46.on(transactionHash, minedHandler), cancelFuncs.push((function() {
                    _this46.removeListener(transactionHash, minedHandler);
                  })), replaceable) {
                    var lastBlockNumber = replaceable.startBlock, scannedBlock = null, replaceHandler = function replaceHandler(blockNumber) {
                      return __awaiter$8(_this46, void 0, void 0, regeneratorRuntime.mark((function _callee36() {
                        var _this47 = this;
                        return regeneratorRuntime.wrap((function(_context36) {
                          for (;;) switch (_context36.prev = _context36.next) {
                           case 0:
                            if (!done) {
                              _context36.next = 2;
                              break;
                            }
                            return _context36.abrupt("return");

                           case 2:
                            return _context36.next = 4, stall(1e3);

                           case 4:
                            this.getTransactionCount(replaceable.from).then((function(nonce) {
                              return __awaiter$8(_this47, void 0, void 0, regeneratorRuntime.mark((function _callee35() {
                                var mined, block, ti, tx, _receipt, reason;
                                return regeneratorRuntime.wrap((function(_context35) {
                                  for (;;) switch (_context35.prev = _context35.next) {
                                   case 0:
                                    if (!done) {
                                      _context35.next = 2;
                                      break;
                                    }
                                    return _context35.abrupt("return");

                                   case 2:
                                    if (!(nonce <= replaceable.nonce)) {
                                      _context35.next = 6;
                                      break;
                                    }
                                    lastBlockNumber = blockNumber, _context35.next = 41;
                                    break;

                                   case 6:
                                    return _context35.next = 8, this.getTransaction(transactionHash);

                                   case 8:
                                    if (!(mined = _context35.sent) || null == mined.blockNumber) {
                                      _context35.next = 11;
                                      break;
                                    }
                                    return _context35.abrupt("return");

                                   case 11:
                                    null == scannedBlock && (scannedBlock = lastBlockNumber - 3) < replaceable.startBlock && (scannedBlock = replaceable.startBlock);

                                   case 12:
                                    if (!(scannedBlock <= blockNumber)) {
                                      _context35.next = 41;
                                      break;
                                    }
                                    if (!done) {
                                      _context35.next = 15;
                                      break;
                                    }
                                    return _context35.abrupt("return");

                                   case 15:
                                    return _context35.next = 17, this.getBlockWithTransactions(scannedBlock);

                                   case 17:
                                    block = _context35.sent, ti = 0;

                                   case 19:
                                    if (!(ti < block.transactions.length)) {
                                      _context35.next = 38;
                                      break;
                                    }
                                    if ((tx = block.transactions[ti]).hash !== transactionHash) {
                                      _context35.next = 23;
                                      break;
                                    }
                                    return _context35.abrupt("return");

                                   case 23:
                                    if (tx.from !== replaceable.from || tx.nonce !== replaceable.nonce) {
                                      _context35.next = 35;
                                      break;
                                    }
                                    if (!done) {
                                      _context35.next = 26;
                                      break;
                                    }
                                    return _context35.abrupt("return");

                                   case 26:
                                    return _context35.next = 28, this.waitForTransaction(tx.hash, confirmations);

                                   case 28:
                                    if (_receipt = _context35.sent, !alreadyDone()) {
                                      _context35.next = 31;
                                      break;
                                    }
                                    return _context35.abrupt("return");

                                   case 31:
                                    return reason = "replaced", tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value) ? reason = "repriced" : "0x" === tx.data && tx.from === tx.to && tx.value.isZero() && (reason = "cancelled"), 
                                    reject(logger$t.makeError("transaction was replaced", Logger.errors.TRANSACTION_REPLACED, {
                                      cancelled: "replaced" === reason || "cancelled" === reason,
                                      reason,
                                      replacement: this._wrapTransaction(tx),
                                      hash: transactionHash,
                                      receipt: _receipt
                                    })), _context35.abrupt("return");

                                   case 35:
                                    ti++, _context35.next = 19;
                                    break;

                                   case 38:
                                    scannedBlock++, _context35.next = 12;
                                    break;

                                   case 41:
                                    if (!done) {
                                      _context35.next = 43;
                                      break;
                                    }
                                    return _context35.abrupt("return");

                                   case 43:
                                    this.once("block", replaceHandler);

                                   case 44:
                                   case "end":
                                    return _context35.stop();
                                  }
                                }), _callee35, this);
                              })));
                            }), (function(error) {
                              done || _this47.once("block", replaceHandler);
                            }));

                           case 5:
                           case "end":
                            return _context36.stop();
                          }
                        }), _callee36, this);
                      })));
                    };
                    if (done) return;
                    _this46.once("block", replaceHandler), cancelFuncs.push((function() {
                      _this46.removeListener("block", replaceHandler);
                    }));
                  }
                  if ("number" == typeof timeout && timeout > 0) {
                    var _timer = setTimeout((function() {
                      alreadyDone() || reject(logger$t.makeError("timeout exceeded", Logger.errors.TIMEOUT, {
                        timeout
                      }));
                    }), timeout);
                    _timer.unref && _timer.unref(), cancelFuncs.push((function() {
                      clearTimeout(_timer);
                    }));
                  }
                })));

               case 6:
               case "end":
                return _context37.stop();
              }
            }), _callee37, this);
          })));
        }
      }, {
        key: "getBlockNumber",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee38() {
            return regeneratorRuntime.wrap((function(_context38) {
              for (;;) switch (_context38.prev = _context38.next) {
               case 0:
                return _context38.abrupt("return", this._getInternalBlockNumber(0));

               case 1:
               case "end":
                return _context38.stop();
              }
            }), _callee38, this);
          })));
        }
      }, {
        key: "getGasPrice",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee39() {
            var result;
            return regeneratorRuntime.wrap((function(_context39) {
              for (;;) switch (_context39.prev = _context39.next) {
               case 0:
                return _context39.next = 2, this.getNetwork();

               case 2:
                return _context39.next = 4, this.perform("getGasPrice", {});

               case 4:
                return result = _context39.sent, _context39.prev = 5, _context39.abrupt("return", BigNumber.from(result));

               case 9:
                return _context39.prev = 9, _context39.t0 = _context39.catch(5), _context39.abrupt("return", logger$t.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                  method: "getGasPrice",
                  result,
                  error: _context39.t0
                }));

               case 12:
               case "end":
                return _context39.stop();
              }
            }), _callee39, this, [ [ 5, 9 ] ]);
          })));
        }
      }, {
        key: "getBalance",
        value: function(addressOrName, blockTag) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee40() {
            var params, result;
            return regeneratorRuntime.wrap((function(_context40) {
              for (;;) switch (_context40.prev = _context40.next) {
               case 0:
                return _context40.next = 2, this.getNetwork();

               case 2:
                return _context40.next = 4, resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag)
                });

               case 4:
                return params = _context40.sent, _context40.next = 7, this.perform("getBalance", params);

               case 7:
                return result = _context40.sent, _context40.prev = 8, _context40.abrupt("return", BigNumber.from(result));

               case 12:
                return _context40.prev = 12, _context40.t0 = _context40.catch(8), _context40.abrupt("return", logger$t.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                  method: "getBalance",
                  params,
                  result,
                  error: _context40.t0
                }));

               case 15:
               case "end":
                return _context40.stop();
              }
            }), _callee40, this, [ [ 8, 12 ] ]);
          })));
        }
      }, {
        key: "getTransactionCount",
        value: function(addressOrName, blockTag) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee41() {
            var params, result;
            return regeneratorRuntime.wrap((function(_context41) {
              for (;;) switch (_context41.prev = _context41.next) {
               case 0:
                return _context41.next = 2, this.getNetwork();

               case 2:
                return _context41.next = 4, resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag)
                });

               case 4:
                return params = _context41.sent, _context41.next = 7, this.perform("getTransactionCount", params);

               case 7:
                return result = _context41.sent, _context41.prev = 8, _context41.abrupt("return", BigNumber.from(result).toNumber());

               case 12:
                return _context41.prev = 12, _context41.t0 = _context41.catch(8), _context41.abrupt("return", logger$t.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                  method: "getTransactionCount",
                  params,
                  result,
                  error: _context41.t0
                }));

               case 15:
               case "end":
                return _context41.stop();
              }
            }), _callee41, this, [ [ 8, 12 ] ]);
          })));
        }
      }, {
        key: "getCode",
        value: function(addressOrName, blockTag) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee42() {
            var params, result;
            return regeneratorRuntime.wrap((function(_context42) {
              for (;;) switch (_context42.prev = _context42.next) {
               case 0:
                return _context42.next = 2, this.getNetwork();

               case 2:
                return _context42.next = 4, resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag)
                });

               case 4:
                return params = _context42.sent, _context42.next = 7, this.perform("getCode", params);

               case 7:
                return result = _context42.sent, _context42.prev = 8, _context42.abrupt("return", hexlify(result));

               case 12:
                return _context42.prev = 12, _context42.t0 = _context42.catch(8), _context42.abrupt("return", logger$t.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                  method: "getCode",
                  params,
                  result,
                  error: _context42.t0
                }));

               case 15:
               case "end":
                return _context42.stop();
              }
            }), _callee42, this, [ [ 8, 12 ] ]);
          })));
        }
      }, {
        key: "getStorageAt",
        value: function(addressOrName, position, blockTag) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee43() {
            var params, result;
            return regeneratorRuntime.wrap((function(_context43) {
              for (;;) switch (_context43.prev = _context43.next) {
               case 0:
                return _context43.next = 2, this.getNetwork();

               case 2:
                return _context43.next = 4, resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag),
                  position: Promise.resolve(position).then((function(p) {
                    return hexValue(p);
                  }))
                });

               case 4:
                return params = _context43.sent, _context43.next = 7, this.perform("getStorageAt", params);

               case 7:
                return result = _context43.sent, _context43.prev = 8, _context43.abrupt("return", hexlify(result));

               case 12:
                return _context43.prev = 12, _context43.t0 = _context43.catch(8), _context43.abrupt("return", logger$t.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                  method: "getStorageAt",
                  params,
                  result,
                  error: _context43.t0
                }));

               case 15:
               case "end":
                return _context43.stop();
              }
            }), _callee43, this, [ [ 8, 12 ] ]);
          })));
        }
      }, {
        key: "_wrapTransaction",
        value: function(tx, hash, startBlock) {
          var _this48 = this;
          if (null != hash && 32 !== hexDataLength(hash)) throw new Error("invalid response - sendTransaction");
          var result = tx;
          return null != hash && tx.hash !== hash && logger$t.throwError("Transaction hash mismatch from Provider.sendTransaction.", Logger.errors.UNKNOWN_ERROR, {
            expectedHash: tx.hash,
            returnedHash: hash
          }), result.wait = function(confirms, timeout) {
            return __awaiter$8(_this48, void 0, void 0, regeneratorRuntime.mark((function _callee44() {
              var replacement, receipt;
              return regeneratorRuntime.wrap((function(_context44) {
                for (;;) switch (_context44.prev = _context44.next) {
                 case 0:
                  return null == confirms && (confirms = 1), null == timeout && (timeout = 0), replacement = void 0, 
                  0 !== confirms && null != startBlock && (replacement = {
                    data: tx.data,
                    from: tx.from,
                    nonce: tx.nonce,
                    to: tx.to,
                    value: tx.value,
                    startBlock
                  }), _context44.next = 6, this._waitForTransaction(tx.hash, confirms, timeout, replacement);

                 case 6:
                  if (null != (receipt = _context44.sent) || 0 !== confirms) {
                    _context44.next = 9;
                    break;
                  }
                  return _context44.abrupt("return", null);

                 case 9:
                  return this._emitted["t:" + tx.hash] = receipt.blockNumber, 0 === receipt.status && logger$t.throwError("transaction failed", Logger.errors.CALL_EXCEPTION, {
                    transactionHash: tx.hash,
                    transaction: tx,
                    receipt
                  }), _context44.abrupt("return", receipt);

                 case 12:
                 case "end":
                  return _context44.stop();
                }
              }), _callee44, this);
            })));
          }, result;
        }
      }, {
        key: "sendTransaction",
        value: function(signedTransaction) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee45() {
            var hexTx, tx, blockNumber, hash;
            return regeneratorRuntime.wrap((function(_context45) {
              for (;;) switch (_context45.prev = _context45.next) {
               case 0:
                return _context45.next = 2, this.getNetwork();

               case 2:
                return _context45.next = 4, Promise.resolve(signedTransaction).then((function(t) {
                  return hexlify(t);
                }));

               case 4:
                return hexTx = _context45.sent, tx = this.formatter.transaction(signedTransaction), 
                _context45.next = 8, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

               case 8:
                return blockNumber = _context45.sent, _context45.prev = 9, _context45.next = 12, 
                this.perform("sendTransaction", {
                  signedTransaction: hexTx
                });

               case 12:
                return hash = _context45.sent, _context45.abrupt("return", this._wrapTransaction(tx, hash, blockNumber));

               case 16:
                throw _context45.prev = 16, _context45.t0 = _context45.catch(9), _context45.t0.transaction = tx, 
                _context45.t0.transactionHash = tx.hash, _context45.t0;

               case 21:
               case "end":
                return _context45.stop();
              }
            }), _callee45, this, [ [ 9, 16 ] ]);
          })));
        }
      }, {
        key: "_getTransactionRequest",
        value: function(transaction) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee46() {
            var values, tx, _this49 = this;
            return regeneratorRuntime.wrap((function(_context46) {
              for (;;) switch (_context46.prev = _context46.next) {
               case 0:
                return _context46.next = 2, transaction;

               case 2:
                return values = _context46.sent, tx = {}, [ "from", "to" ].forEach((function(key) {
                  null != values[key] && (tx[key] = Promise.resolve(values[key]).then((function(v) {
                    return v ? _this49._getAddress(v) : null;
                  })));
                })), [ "gasLimit", "gasPrice", "value" ].forEach((function(key) {
                  null != values[key] && (tx[key] = Promise.resolve(values[key]).then((function(v) {
                    return v ? BigNumber.from(v) : null;
                  })));
                })), [ "type" ].forEach((function(key) {
                  null != values[key] && (tx[key] = Promise.resolve(values[key]).then((function(v) {
                    return null != v ? v : null;
                  })));
                })), values.accessList && (tx.accessList = this.formatter.accessList(values.accessList)), 
                [ "data" ].forEach((function(key) {
                  null != values[key] && (tx[key] = Promise.resolve(values[key]).then((function(v) {
                    return v ? hexlify(v) : null;
                  })));
                })), _context46.t0 = this.formatter, _context46.next = 12, resolveProperties(tx);

               case 12:
                return _context46.t1 = _context46.sent, _context46.abrupt("return", _context46.t0.transactionRequest.call(_context46.t0, _context46.t1));

               case 14:
               case "end":
                return _context46.stop();
              }
            }), _callee46, this);
          })));
        }
      }, {
        key: "_getFilter",
        value: function(filter) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee47() {
            var result, _this50 = this;
            return regeneratorRuntime.wrap((function(_context47) {
              for (;;) switch (_context47.prev = _context47.next) {
               case 0:
                return _context47.next = 2, filter;

               case 2:
                return filter = _context47.sent, result = {}, null != filter.address && (result.address = this._getAddress(filter.address)), 
                [ "blockHash", "topics" ].forEach((function(key) {
                  null != filter[key] && (result[key] = filter[key]);
                })), [ "fromBlock", "toBlock" ].forEach((function(key) {
                  null != filter[key] && (result[key] = _this50._getBlockTag(filter[key]));
                })), _context47.t0 = this.formatter, _context47.next = 10, resolveProperties(result);

               case 10:
                return _context47.t1 = _context47.sent, _context47.abrupt("return", _context47.t0.filter.call(_context47.t0, _context47.t1));

               case 12:
               case "end":
                return _context47.stop();
              }
            }), _callee47, this);
          })));
        }
      }, {
        key: "call",
        value: function(transaction, blockTag) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee48() {
            var params, result;
            return regeneratorRuntime.wrap((function(_context48) {
              for (;;) switch (_context48.prev = _context48.next) {
               case 0:
                return _context48.next = 2, this.getNetwork();

               case 2:
                return _context48.next = 4, resolveProperties({
                  transaction: this._getTransactionRequest(transaction),
                  blockTag: this._getBlockTag(blockTag)
                });

               case 4:
                return params = _context48.sent, _context48.next = 7, this.perform("call", params);

               case 7:
                return result = _context48.sent, _context48.prev = 8, _context48.abrupt("return", hexlify(result));

               case 12:
                return _context48.prev = 12, _context48.t0 = _context48.catch(8), _context48.abrupt("return", logger$t.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                  method: "call",
                  params,
                  result,
                  error: _context48.t0
                }));

               case 15:
               case "end":
                return _context48.stop();
              }
            }), _callee48, this, [ [ 8, 12 ] ]);
          })));
        }
      }, {
        key: "estimateGas",
        value: function(transaction) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee49() {
            var params, result;
            return regeneratorRuntime.wrap((function(_context49) {
              for (;;) switch (_context49.prev = _context49.next) {
               case 0:
                return _context49.next = 2, this.getNetwork();

               case 2:
                return _context49.next = 4, resolveProperties({
                  transaction: this._getTransactionRequest(transaction)
                });

               case 4:
                return params = _context49.sent, _context49.next = 7, this.perform("estimateGas", params);

               case 7:
                return result = _context49.sent, _context49.prev = 8, _context49.abrupt("return", BigNumber.from(result));

               case 12:
                return _context49.prev = 12, _context49.t0 = _context49.catch(8), _context49.abrupt("return", logger$t.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                  method: "estimateGas",
                  params,
                  result,
                  error: _context49.t0
                }));

               case 15:
               case "end":
                return _context49.stop();
              }
            }), _callee49, this, [ [ 8, 12 ] ]);
          })));
        }
      }, {
        key: "_getAddress",
        value: function(addressOrName) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee50() {
            var address;
            return regeneratorRuntime.wrap((function(_context50) {
              for (;;) switch (_context50.prev = _context50.next) {
               case 0:
                return _context50.next = 2, this.resolveName(addressOrName);

               case 2:
                return null == (address = _context50.sent) && logger$t.throwError("ENS name not configured", Logger.errors.UNSUPPORTED_OPERATION, {
                  operation: "resolveName(".concat(JSON.stringify(addressOrName), ")")
                }), _context50.abrupt("return", address);

               case 5:
               case "end":
                return _context50.stop();
              }
            }), _callee50, this);
          })));
        }
      }, {
        key: "_getBlock",
        value: function(blockHashOrBlockTag, includeTransactions) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee52() {
            var blockNumber, params, _this51 = this;
            return regeneratorRuntime.wrap((function(_context52) {
              for (;;) switch (_context52.prev = _context52.next) {
               case 0:
                return _context52.next = 2, this.getNetwork();

               case 2:
                return _context52.next = 4, blockHashOrBlockTag;

               case 4:
                if (blockHashOrBlockTag = _context52.sent, blockNumber = -128, params = {
                  includeTransactions: !!includeTransactions
                }, !isHexString(blockHashOrBlockTag, 32)) {
                  _context52.next = 11;
                  break;
                }
                params.blockHash = blockHashOrBlockTag, _context52.next = 23;
                break;

               case 11:
                return _context52.prev = 11, _context52.t0 = this.formatter, _context52.next = 15, 
                this._getBlockTag(blockHashOrBlockTag);

               case 15:
                _context52.t1 = _context52.sent, params.blockTag = _context52.t0.blockTag.call(_context52.t0, _context52.t1), 
                isHexString(params.blockTag) && (blockNumber = parseInt(params.blockTag.substring(2), 16)), 
                _context52.next = 23;
                break;

               case 20:
                _context52.prev = 20, _context52.t2 = _context52.catch(11), logger$t.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);

               case 23:
                return _context52.abrupt("return", poll((function() {
                  return __awaiter$8(_this51, void 0, void 0, regeneratorRuntime.mark((function _callee51() {
                    var block, _blockNumber, _i44, tx, confirmations;
                    return regeneratorRuntime.wrap((function(_context51) {
                      for (;;) switch (_context51.prev = _context51.next) {
                       case 0:
                        return _context51.next = 2, this.perform("getBlock", params);

                       case 2:
                        if (null != (block = _context51.sent)) {
                          _context51.next = 11;
                          break;
                        }
                        if (null == params.blockHash) {
                          _context51.next = 7;
                          break;
                        }
                        if (null != this._emitted["b:" + params.blockHash]) {
                          _context51.next = 7;
                          break;
                        }
                        return _context51.abrupt("return", null);

                       case 7:
                        if (null == params.blockTag) {
                          _context51.next = 10;
                          break;
                        }
                        if (!(blockNumber > this._emitted.block)) {
                          _context51.next = 10;
                          break;
                        }
                        return _context51.abrupt("return", null);

                       case 10:
                        return _context51.abrupt("return", void 0);

                       case 11:
                        if (!includeTransactions) {
                          _context51.next = 32;
                          break;
                        }
                        _blockNumber = null, _i44 = 0;

                       case 14:
                        if (!(_i44 < block.transactions.length)) {
                          _context51.next = 31;
                          break;
                        }
                        if (null != (tx = block.transactions[_i44]).blockNumber) {
                          _context51.next = 20;
                          break;
                        }
                        tx.confirmations = 0, _context51.next = 28;
                        break;

                       case 20:
                        if (null != tx.confirmations) {
                          _context51.next = 28;
                          break;
                        }
                        if (null != _blockNumber) {
                          _context51.next = 25;
                          break;
                        }
                        return _context51.next = 24, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

                       case 24:
                        _blockNumber = _context51.sent;

                       case 25:
                        (confirmations = _blockNumber - tx.blockNumber + 1) <= 0 && (confirmations = 1), 
                        tx.confirmations = confirmations;

                       case 28:
                        _i44++, _context51.next = 14;
                        break;

                       case 31:
                        return _context51.abrupt("return", this.formatter.blockWithTransactions(block));

                       case 32:
                        return _context51.abrupt("return", this.formatter.block(block));

                       case 33:
                       case "end":
                        return _context51.stop();
                      }
                    }), _callee51, this);
                  })));
                }), {
                  oncePoll: this
                }));

               case 24:
               case "end":
                return _context52.stop();
              }
            }), _callee52, this, [ [ 11, 20 ] ]);
          })));
        }
      }, {
        key: "getBlock",
        value: function(blockHashOrBlockTag) {
          return this._getBlock(blockHashOrBlockTag, !1);
        }
      }, {
        key: "getBlockWithTransactions",
        value: function(blockHashOrBlockTag) {
          return this._getBlock(blockHashOrBlockTag, !0);
        }
      }, {
        key: "getTransaction",
        value: function(transactionHash) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee54() {
            var params, _this52 = this;
            return regeneratorRuntime.wrap((function(_context54) {
              for (;;) switch (_context54.prev = _context54.next) {
               case 0:
                return _context54.next = 2, this.getNetwork();

               case 2:
                return _context54.next = 4, transactionHash;

               case 4:
                return transactionHash = _context54.sent, params = {
                  transactionHash: this.formatter.hash(transactionHash, !0)
                }, _context54.abrupt("return", poll((function() {
                  return __awaiter$8(_this52, void 0, void 0, regeneratorRuntime.mark((function _callee53() {
                    var result, tx, blockNumber, confirmations;
                    return regeneratorRuntime.wrap((function(_context53) {
                      for (;;) switch (_context53.prev = _context53.next) {
                       case 0:
                        return _context53.next = 2, this.perform("getTransaction", params);

                       case 2:
                        if (null != (result = _context53.sent)) {
                          _context53.next = 7;
                          break;
                        }
                        if (null != this._emitted["t:" + transactionHash]) {
                          _context53.next = 6;
                          break;
                        }
                        return _context53.abrupt("return", null);

                       case 6:
                        return _context53.abrupt("return", void 0);

                       case 7:
                        if (null != (tx = this.formatter.transactionResponse(result)).blockNumber) {
                          _context53.next = 12;
                          break;
                        }
                        tx.confirmations = 0, _context53.next = 19;
                        break;

                       case 12:
                        if (null != tx.confirmations) {
                          _context53.next = 19;
                          break;
                        }
                        return _context53.next = 15, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

                       case 15:
                        blockNumber = _context53.sent, (confirmations = blockNumber - tx.blockNumber + 1) <= 0 && (confirmations = 1), 
                        tx.confirmations = confirmations;

                       case 19:
                        return _context53.abrupt("return", this._wrapTransaction(tx));

                       case 20:
                       case "end":
                        return _context53.stop();
                      }
                    }), _callee53, this);
                  })));
                }), {
                  oncePoll: this
                }));

               case 7:
               case "end":
                return _context54.stop();
              }
            }), _callee54, this);
          })));
        }
      }, {
        key: "getTransactionReceipt",
        value: function(transactionHash) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee56() {
            var params, _this53 = this;
            return regeneratorRuntime.wrap((function(_context56) {
              for (;;) switch (_context56.prev = _context56.next) {
               case 0:
                return _context56.next = 2, this.getNetwork();

               case 2:
                return _context56.next = 4, transactionHash;

               case 4:
                return transactionHash = _context56.sent, params = {
                  transactionHash: this.formatter.hash(transactionHash, !0)
                }, _context56.abrupt("return", poll((function() {
                  return __awaiter$8(_this53, void 0, void 0, regeneratorRuntime.mark((function _callee55() {
                    var result, receipt, blockNumber, confirmations;
                    return regeneratorRuntime.wrap((function(_context55) {
                      for (;;) switch (_context55.prev = _context55.next) {
                       case 0:
                        return _context55.next = 2, this.perform("getTransactionReceipt", params);

                       case 2:
                        if (null != (result = _context55.sent)) {
                          _context55.next = 7;
                          break;
                        }
                        if (null != this._emitted["t:" + transactionHash]) {
                          _context55.next = 6;
                          break;
                        }
                        return _context55.abrupt("return", null);

                       case 6:
                        return _context55.abrupt("return", void 0);

                       case 7:
                        if (null != result.blockHash) {
                          _context55.next = 9;
                          break;
                        }
                        return _context55.abrupt("return", void 0);

                       case 9:
                        if (null != (receipt = this.formatter.receipt(result)).blockNumber) {
                          _context55.next = 14;
                          break;
                        }
                        receipt.confirmations = 0, _context55.next = 21;
                        break;

                       case 14:
                        if (null != receipt.confirmations) {
                          _context55.next = 21;
                          break;
                        }
                        return _context55.next = 17, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

                       case 17:
                        blockNumber = _context55.sent, (confirmations = blockNumber - receipt.blockNumber + 1) <= 0 && (confirmations = 1), 
                        receipt.confirmations = confirmations;

                       case 21:
                        return _context55.abrupt("return", receipt);

                       case 22:
                       case "end":
                        return _context55.stop();
                      }
                    }), _callee55, this);
                  })));
                }), {
                  oncePoll: this
                }));

               case 7:
               case "end":
                return _context56.stop();
              }
            }), _callee56, this);
          })));
        }
      }, {
        key: "getLogs",
        value: function(filter) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee57() {
            var params, logs;
            return regeneratorRuntime.wrap((function(_context57) {
              for (;;) switch (_context57.prev = _context57.next) {
               case 0:
                return _context57.next = 2, this.getNetwork();

               case 2:
                return _context57.next = 4, resolveProperties({
                  filter: this._getFilter(filter)
                });

               case 4:
                return params = _context57.sent, _context57.next = 7, this.perform("getLogs", params);

               case 7:
                return (logs = _context57.sent).forEach((function(log) {
                  null == log.removed && (log.removed = !1);
                })), _context57.abrupt("return", Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs));

               case 10:
               case "end":
                return _context57.stop();
              }
            }), _callee57, this);
          })));
        }
      }, {
        key: "getEtherPrice",
        value: function() {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee58() {
            return regeneratorRuntime.wrap((function(_context58) {
              for (;;) switch (_context58.prev = _context58.next) {
               case 0:
                return _context58.next = 2, this.getNetwork();

               case 2:
                return _context58.abrupt("return", this.perform("getEtherPrice", {}));

               case 3:
               case "end":
                return _context58.stop();
              }
            }), _callee58, this);
          })));
        }
      }, {
        key: "_getBlockTag",
        value: function(blockTag) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee59() {
            var blockNumber;
            return regeneratorRuntime.wrap((function(_context59) {
              for (;;) switch (_context59.prev = _context59.next) {
               case 0:
                return _context59.next = 2, blockTag;

               case 2:
                if (!("number" == typeof (blockTag = _context59.sent) && blockTag < 0)) {
                  _context59.next = 11;
                  break;
                }
                return blockTag % 1 && logger$t.throwArgumentError("invalid BlockTag", "blockTag", blockTag), 
                _context59.next = 7, this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

               case 7:
                return blockNumber = _context59.sent, (blockNumber += blockTag) < 0 && (blockNumber = 0), 
                _context59.abrupt("return", this.formatter.blockTag(blockNumber));

               case 11:
                return _context59.abrupt("return", this.formatter.blockTag(blockTag));

               case 12:
               case "end":
                return _context59.stop();
              }
            }), _callee59, this);
          })));
        }
      }, {
        key: "getResolver",
        value: function(name) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee60() {
            var address;
            return regeneratorRuntime.wrap((function(_context60) {
              for (;;) switch (_context60.prev = _context60.next) {
               case 0:
                return _context60.next = 2, this._getResolver(name);

               case 2:
                if (null != (address = _context60.sent)) {
                  _context60.next = 5;
                  break;
                }
                return _context60.abrupt("return", null);

               case 5:
                return _context60.abrupt("return", new Resolver(this, address, name));

               case 6:
               case "end":
                return _context60.stop();
              }
            }), _callee60, this);
          })));
        }
      }, {
        key: "_getResolver",
        value: function(name) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee61() {
            var network, transaction;
            return regeneratorRuntime.wrap((function(_context61) {
              for (;;) switch (_context61.prev = _context61.next) {
               case 0:
                return _context61.next = 2, this.getNetwork();

               case 2:
                return (network = _context61.sent).ensAddress || logger$t.throwError("network does not support ENS", Logger.errors.UNSUPPORTED_OPERATION, {
                  operation: "ENS",
                  network: network.name
                }), transaction = {
                  to: network.ensAddress,
                  data: "0x0178b8bf" + namehash(name).substring(2)
                }, _context61.t0 = this.formatter, _context61.next = 8, this.call(transaction);

               case 8:
                return _context61.t1 = _context61.sent, _context61.abrupt("return", _context61.t0.callAddress.call(_context61.t0, _context61.t1));

               case 10:
               case "end":
                return _context61.stop();
              }
            }), _callee61, this);
          })));
        }
      }, {
        key: "resolveName",
        value: function(name) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee62() {
            var resolver;
            return regeneratorRuntime.wrap((function(_context62) {
              for (;;) switch (_context62.prev = _context62.next) {
               case 0:
                return _context62.next = 2, name;

               case 2:
                return name = _context62.sent, _context62.prev = 3, _context62.abrupt("return", Promise.resolve(this.formatter.address(name)));

               case 7:
                if (_context62.prev = 7, _context62.t0 = _context62.catch(3), !isHexString(name)) {
                  _context62.next = 11;
                  break;
                }
                throw _context62.t0;

               case 11:
                return "string" != typeof name && logger$t.throwArgumentError("invalid ENS name", "name", name), 
                _context62.next = 14, this.getResolver(name);

               case 14:
                if (resolver = _context62.sent) {
                  _context62.next = 17;
                  break;
                }
                return _context62.abrupt("return", null);

               case 17:
                return _context62.next = 19, resolver.getAddress();

               case 19:
                return _context62.abrupt("return", _context62.sent);

               case 20:
               case "end":
                return _context62.stop();
              }
            }), _callee62, this, [ [ 3, 7 ] ]);
          })));
        }
      }, {
        key: "lookupAddress",
        value: function(address) {
          return __awaiter$8(this, void 0, void 0, regeneratorRuntime.mark((function _callee63() {
            var reverseName, resolverAddress, bytes, length, name;
            return regeneratorRuntime.wrap((function(_context63) {
              for (;;) switch (_context63.prev = _context63.next) {
               case 0:
                return _context63.next = 2, address;

               case 2:
                return address = _context63.sent, address = this.formatter.address(address), reverseName = address.substring(2).toLowerCase() + ".addr.reverse", 
                _context63.next = 7, this._getResolver(reverseName);

               case 7:
                if (resolverAddress = _context63.sent) {
                  _context63.next = 10;
                  break;
                }
                return _context63.abrupt("return", null);

               case 10:
                return _context63.t0 = arrayify, _context63.next = 13, this.call({
                  to: resolverAddress,
                  data: "0x691f3431" + namehash(reverseName).substring(2)
                });

               case 13:
                if (_context63.t1 = _context63.sent, !((bytes = (0, _context63.t0)(_context63.t1)).length < 32) && BigNumber.from(bytes.slice(0, 32)).eq(32)) {
                  _context63.next = 17;
                  break;
                }
                return _context63.abrupt("return", null);

               case 17:
                if (!((bytes = bytes.slice(32)).length < 32)) {
                  _context63.next = 20;
                  break;
                }
                return _context63.abrupt("return", null);

               case 20:
                if (length = BigNumber.from(bytes.slice(0, 32)).toNumber(), bytes = bytes.slice(32), 
                !(length > bytes.length)) {
                  _context63.next = 24;
                  break;
                }
                return _context63.abrupt("return", null);

               case 24:
                return name = toUtf8String(bytes.slice(0, length)), _context63.next = 27, this.resolveName(name);

               case 27:
                if (_context63.sent == address) {
                  _context63.next = 30;
                  break;
                }
                return _context63.abrupt("return", null);

               case 30:
                return _context63.abrupt("return", name);

               case 31:
               case "end":
                return _context63.stop();
              }
            }), _callee63, this);
          })));
        }
      }, {
        key: "perform",
        value: function(method, params) {
          return logger$t.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, {
            operation: method
          });
        }
      }, {
        key: "_startEvent",
        value: function(event) {
          this.polling = this._events.filter((function(e) {
            return e.pollable();
          })).length > 0;
        }
      }, {
        key: "_stopEvent",
        value: function(event) {
          this.polling = this._events.filter((function(e) {
            return e.pollable();
          })).length > 0;
        }
      }, {
        key: "_addEventListener",
        value: function(eventName, listener, once) {
          var event = new Event(getEventTag$1(eventName), listener, once);
          return this._events.push(event), this._startEvent(event), this;
        }
      }, {
        key: "on",
        value: function(eventName, listener) {
          return this._addEventListener(eventName, listener, !1);
        }
      }, {
        key: "once",
        value: function(eventName, listener) {
          return this._addEventListener(eventName, listener, !0);
        }
      }, {
        key: "emit",
        value: function(eventName) {
          for (var _this54 = this, _len12 = arguments.length, args = new Array(_len12 > 1 ? _len12 - 1 : 0), _key22 = 1; _key22 < _len12; _key22++) args[_key22 - 1] = arguments[_key22];
          var result = !1, stopped = [], eventTag = getEventTag$1(eventName);
          return this._events = this._events.filter((function(event) {
            return event.tag !== eventTag || (setTimeout((function() {
              event.listener.apply(_this54, args);
            }), 0), result = !0, !event.once || (stopped.push(event), !1));
          })), stopped.forEach((function(event) {
            _this54._stopEvent(event);
          })), result;
        }
      }, {
        key: "listenerCount",
        value: function(eventName) {
          if (!eventName) return this._events.length;
          var eventTag = getEventTag$1(eventName);
          return this._events.filter((function(event) {
            return event.tag === eventTag;
          })).length;
        }
      }, {
        key: "listeners",
        value: function(eventName) {
          if (null == eventName) return this._events.map((function(event) {
            return event.listener;
          }));
          var eventTag = getEventTag$1(eventName);
          return this._events.filter((function(event) {
            return event.tag === eventTag;
          })).map((function(event) {
            return event.listener;
          }));
        }
      }, {
        key: "off",
        value: function(eventName, listener) {
          var _this55 = this;
          if (null == listener) return this.removeAllListeners(eventName);
          var stopped = [], found = !1, eventTag = getEventTag$1(eventName);
          return this._events = this._events.filter((function(event) {
            return event.tag !== eventTag || event.listener != listener || (!!found || (found = !0, 
            stopped.push(event), !1));
          })), stopped.forEach((function(event) {
            _this55._stopEvent(event);
          })), this;
        }
      }, {
        key: "removeAllListeners",
        value: function(eventName) {
          var _this56 = this, stopped = [];
          if (null == eventName) stopped = this._events, this._events = []; else {
            var eventTag = getEventTag$1(eventName);
            this._events = this._events.filter((function(event) {
              return event.tag !== eventTag || (stopped.push(event), !1);
            }));
          }
          return stopped.forEach((function(event) {
            _this56._stopEvent(event);
          })), this;
        }
      } ], [ {
        key: "getFormatter",
        value: function() {
          return null == defaultFormatter && (defaultFormatter = new Formatter), defaultFormatter;
        }
      }, {
        key: "getNetwork",
        value: function(network) {
          return _getNetwork(null == network ? "homestead" : network);
        }
      } ]), BaseProvider;
    }(Provider), __awaiter$9 = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$u = new Logger(version$m), errorGas = [ "call", "estimateGas" ];
    function checkError(method, error, params) {
      if ("call" === method && error.code === Logger.errors.SERVER_ERROR) {
        var e = error.error;
        if (e && e.message.match("reverted") && isHexString(e.data)) return e.data;
      }
      var message = error.message;
      error.code === Logger.errors.SERVER_ERROR && error.error && "string" == typeof error.error.message ? message = error.error.message : "string" == typeof error.body ? message = error.body : "string" == typeof error.responseText && (message = error.responseText), 
      message = (message || "").toLowerCase();
      var transaction = params.transaction || params.signedTransaction;
      throw message.match(/insufficient funds/) && logger$u.throwError("insufficient funds for intrinsic transaction cost", Logger.errors.INSUFFICIENT_FUNDS, {
        error,
        method,
        transaction
      }), message.match(/nonce too low/) && logger$u.throwError("nonce has already been used", Logger.errors.NONCE_EXPIRED, {
        error,
        method,
        transaction
      }), message.match(/replacement transaction underpriced/) && logger$u.throwError("replacement fee too low", Logger.errors.REPLACEMENT_UNDERPRICED, {
        error,
        method,
        transaction
      }), message.match(/only replay-protected/) && logger$u.throwError("legacy pre-eip-155 transactions not supported", Logger.errors.UNSUPPORTED_OPERATION, {
        error,
        method,
        transaction
      }), errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/) && logger$u.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
        error,
        method,
        transaction
      }), error;
    }
    function timer(timeout) {
      return new Promise((function(resolve) {
        setTimeout(resolve, timeout);
      }));
    }
    function getResult(payload) {
      if (payload.error) {
        var error = new Error(payload.error.message);
        throw error.code = payload.error.code, error.data = payload.error.data, error;
      }
      return payload.result;
    }
    function getLowerCase(value) {
      return value ? value.toLowerCase() : value;
    }
    var _constructorGuard$4 = {}, JsonRpcSigner = function(_Signer3) {
      _inherits(JsonRpcSigner, _Signer3);
      var _super41 = _createSuper(JsonRpcSigner);
      function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {
        var _this57;
        if (_classCallCheck(this, JsonRpcSigner), logger$u.checkNew(this instanceof JsonRpcSigner ? this.constructor : void 0, JsonRpcSigner), 
        _this57 = _super41.call(this), constructorGuard !== _constructorGuard$4) throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
        return defineReadOnly(_assertThisInitialized(_this57), "provider", provider), null == addressOrIndex && (addressOrIndex = 0), 
        "string" == typeof addressOrIndex ? (defineReadOnly(_assertThisInitialized(_this57), "_address", _this57.provider.formatter.address(addressOrIndex)), 
        defineReadOnly(_assertThisInitialized(_this57), "_index", null)) : "number" == typeof addressOrIndex ? (defineReadOnly(_assertThisInitialized(_this57), "_index", addressOrIndex), 
        defineReadOnly(_assertThisInitialized(_this57), "_address", null)) : logger$u.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex), 
        _this57;
      }
      return _createClass(JsonRpcSigner, [ {
        key: "connect",
        value: function(provider) {
          return logger$u.throwError("cannot alter JSON-RPC Signer connection", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "connect"
          });
        }
      }, {
        key: "connectUnchecked",
        value: function() {
          return new UncheckedJsonRpcSigner(_constructorGuard$4, this.provider, this._address || this._index);
        }
      }, {
        key: "getAddress",
        value: function() {
          var _this58 = this;
          return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then((function(accounts) {
            return accounts.length <= _this58._index && logger$u.throwError("unknown account #" + _this58._index, Logger.errors.UNSUPPORTED_OPERATION, {
              operation: "getAddress"
            }), _this58.provider.formatter.address(accounts[_this58._index]);
          }));
        }
      }, {
        key: "sendUncheckedTransaction",
        value: function(transaction) {
          var _this59 = this;
          transaction = shallowCopy(transaction);
          var fromAddress = this.getAddress().then((function(address) {
            return address && (address = address.toLowerCase()), address;
          }));
          if (null == transaction.gasLimit) {
            var estimate = shallowCopy(transaction);
            estimate.from = fromAddress, transaction.gasLimit = this.provider.estimateGas(estimate);
          }
          return resolveProperties({
            tx: resolveProperties(transaction),
            sender: fromAddress
          }).then((function(_ref5) {
            var tx = _ref5.tx, sender = _ref5.sender;
            null != tx.from ? tx.from.toLowerCase() !== sender && logger$u.throwArgumentError("from address mismatch", "transaction", transaction) : tx.from = sender;
            var hexTx = _this59.provider.constructor.hexlifyTransaction(tx, {
              from: !0
            });
            return _this59.provider.send("eth_sendTransaction", [ hexTx ]).then((function(hash) {
              return hash;
            }), (function(error) {
              return checkError("sendTransaction", error, hexTx);
            }));
          }));
        }
      }, {
        key: "signTransaction",
        value: function(transaction) {
          return logger$u.throwError("signing transactions is unsupported", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "signTransaction"
          });
        }
      }, {
        key: "sendTransaction",
        value: function(transaction) {
          var _this60 = this;
          return this.sendUncheckedTransaction(transaction).then((function(hash) {
            return poll((function() {
              return _this60.provider.getTransaction(hash).then((function(tx) {
                if (null !== tx) return _this60.provider._wrapTransaction(tx, hash);
              }));
            }), {
              oncePoll: _this60.provider
            }).catch((function(error) {
              throw error.transactionHash = hash, error;
            }));
          }));
        }
      }, {
        key: "signMessage",
        value: function(message) {
          return __awaiter$9(this, void 0, void 0, regeneratorRuntime.mark((function _callee64() {
            var data, address;
            return regeneratorRuntime.wrap((function(_context64) {
              for (;;) switch (_context64.prev = _context64.next) {
               case 0:
                return data = "string" == typeof message ? toUtf8Bytes(message) : message, _context64.next = 3, 
                this.getAddress();

               case 3:
                return address = _context64.sent, _context64.next = 6, this.provider.send("eth_sign", [ address.toLowerCase(), hexlify(data) ]);

               case 6:
                return _context64.abrupt("return", _context64.sent);

               case 7:
               case "end":
                return _context64.stop();
              }
            }), _callee64, this);
          })));
        }
      }, {
        key: "_signTypedData",
        value: function(domain, types, value) {
          return __awaiter$9(this, void 0, void 0, regeneratorRuntime.mark((function _callee65() {
            var populated, address, _this61 = this;
            return regeneratorRuntime.wrap((function(_context65) {
              for (;;) switch (_context65.prev = _context65.next) {
               case 0:
                return _context65.next = 2, TypedDataEncoder.resolveNames(domain, types, value, (function(name) {
                  return _this61.provider.resolveName(name);
                }));

               case 2:
                return populated = _context65.sent, _context65.next = 5, this.getAddress();

               case 5:
                return address = _context65.sent, _context65.next = 8, this.provider.send("eth_signTypedData_v4", [ address.toLowerCase(), JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value)) ]);

               case 8:
                return _context65.abrupt("return", _context65.sent);

               case 9:
               case "end":
                return _context65.stop();
              }
            }), _callee65, this);
          })));
        }
      }, {
        key: "unlock",
        value: function(password) {
          return __awaiter$9(this, void 0, void 0, regeneratorRuntime.mark((function _callee66() {
            var provider, address;
            return regeneratorRuntime.wrap((function(_context66) {
              for (;;) switch (_context66.prev = _context66.next) {
               case 0:
                return provider = this.provider, _context66.next = 3, this.getAddress();

               case 3:
                return address = _context66.sent, _context66.abrupt("return", provider.send("personal_unlockAccount", [ address.toLowerCase(), password, null ]));

               case 5:
               case "end":
                return _context66.stop();
              }
            }), _callee66, this);
          })));
        }
      } ]), JsonRpcSigner;
    }(Signer), UncheckedJsonRpcSigner = function(_JsonRpcSigner) {
      _inherits(UncheckedJsonRpcSigner, _JsonRpcSigner);
      var _super42 = _createSuper(UncheckedJsonRpcSigner);
      function UncheckedJsonRpcSigner() {
        return _classCallCheck(this, UncheckedJsonRpcSigner), _super42.apply(this, arguments);
      }
      return _createClass(UncheckedJsonRpcSigner, [ {
        key: "sendTransaction",
        value: function(transaction) {
          var _this62 = this;
          return this.sendUncheckedTransaction(transaction).then((function(hash) {
            return {
              hash,
              nonce: null,
              gasLimit: null,
              gasPrice: null,
              data: null,
              value: null,
              chainId: null,
              confirmations: 0,
              from: null,
              wait: function(confirmations) {
                return _this62.provider.waitForTransaction(hash, confirmations);
              }
            };
          }));
        }
      } ]), UncheckedJsonRpcSigner;
    }(JsonRpcSigner), allowedTransactionKeys$3 = {
      chainId: !0,
      data: !0,
      gasLimit: !0,
      gasPrice: !0,
      nonce: !0,
      to: !0,
      value: !0,
      type: !0,
      accessList: !0
    }, JsonRpcProvider = function(_BaseProvider) {
      _inherits(JsonRpcProvider, _BaseProvider);
      var _super43 = _createSuper(JsonRpcProvider);
      function JsonRpcProvider(url, network) {
        var _this63;
        _classCallCheck(this, JsonRpcProvider), logger$u.checkNew(this instanceof JsonRpcProvider ? this.constructor : void 0, JsonRpcProvider);
        var networkOrReady = network;
        return null == networkOrReady && (networkOrReady = new Promise((function(resolve, reject) {
          setTimeout((function() {
            _this63.detectNetwork().then((function(network) {
              resolve(network);
            }), (function(error) {
              reject(error);
            }));
          }), 0);
        }))), _this63 = _super43.call(this, networkOrReady), url || (url = getStatic(_this63.constructor, "defaultUrl")()), 
        defineReadOnly(_assertThisInitialized(_this63), "connection", "string" == typeof url ? Object.freeze({
          url
        }) : Object.freeze(shallowCopy(url))), _this63._nextId = 42, _this63;
      }
      return _createClass(JsonRpcProvider, [ {
        key: "_cache",
        get: function() {
          return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache;
        }
      }, {
        key: "detectNetwork",
        value: function() {
          var _this64 = this;
          return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), 
          setTimeout((function() {
            _this64._cache.detectNetwork = null;
          }), 0)), this._cache.detectNetwork;
        }
      }, {
        key: "_uncachedDetectNetwork",
        value: function() {
          return __awaiter$9(this, void 0, void 0, regeneratorRuntime.mark((function _callee67() {
            var chainId, getNetwork;
            return regeneratorRuntime.wrap((function(_context67) {
              for (;;) switch (_context67.prev = _context67.next) {
               case 0:
                return _context67.next = 2, timer(0);

               case 2:
                return chainId = null, _context67.prev = 3, _context67.next = 6, this.send("eth_chainId", []);

               case 6:
                chainId = _context67.sent, _context67.next = 19;
                break;

               case 9:
                return _context67.prev = 9, _context67.t0 = _context67.catch(3), _context67.prev = 11, 
                _context67.next = 14, this.send("net_version", []);

               case 14:
                chainId = _context67.sent, _context67.next = 19;
                break;

               case 17:
                _context67.prev = 17, _context67.t1 = _context67.catch(11);

               case 19:
                if (null == chainId) {
                  _context67.next = 28;
                  break;
                }
                return getNetwork = getStatic(this.constructor, "getNetwork"), _context67.prev = 21, 
                _context67.abrupt("return", getNetwork(BigNumber.from(chainId).toNumber()));

               case 25:
                return _context67.prev = 25, _context67.t2 = _context67.catch(21), _context67.abrupt("return", logger$u.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
                  chainId,
                  event: "invalidNetwork",
                  serverError: _context67.t2
                }));

               case 28:
                return _context67.abrupt("return", logger$u.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
                  event: "noNetwork"
                }));

               case 29:
               case "end":
                return _context67.stop();
              }
            }), _callee67, this, [ [ 3, 9 ], [ 11, 17 ], [ 21, 25 ] ]);
          })));
        }
      }, {
        key: "getSigner",
        value: function(addressOrIndex) {
          return new JsonRpcSigner(_constructorGuard$4, this, addressOrIndex);
        }
      }, {
        key: "getUncheckedSigner",
        value: function(addressOrIndex) {
          return this.getSigner(addressOrIndex).connectUnchecked();
        }
      }, {
        key: "listAccounts",
        value: function() {
          var _this65 = this;
          return this.send("eth_accounts", []).then((function(accounts) {
            return accounts.map((function(a) {
              return _this65.formatter.address(a);
            }));
          }));
        }
      }, {
        key: "send",
        value: function(method, params) {
          var _this66 = this, request = {
            method,
            params,
            id: this._nextId++,
            jsonrpc: "2.0"
          };
          this.emit("debug", {
            action: "request",
            request: deepCopy(request),
            provider: this
          });
          var cache = [ "eth_chainId", "eth_blockNumber" ].indexOf(method) >= 0;
          if (cache && this._cache[method]) return this._cache[method];
          var result = fetchJson(this.connection, JSON.stringify(request), getResult).then((function(result) {
            return _this66.emit("debug", {
              action: "response",
              request,
              response: result,
              provider: _this66
            }), result;
          }), (function(error) {
            throw _this66.emit("debug", {
              action: "response",
              error,
              request,
              provider: _this66
            }), error;
          }));
          return cache && (this._cache[method] = result, setTimeout((function() {
            _this66._cache[method] = null;
          }), 0)), result;
        }
      }, {
        key: "prepareRequest",
        value: function(method, params) {
          switch (method) {
           case "getBlockNumber":
            return [ "eth_blockNumber", [] ];

           case "getGasPrice":
            return [ "eth_gasPrice", [] ];

           case "getBalance":
            return [ "eth_getBalance", [ getLowerCase(params.address), params.blockTag ] ];

           case "getTransactionCount":
            return [ "eth_getTransactionCount", [ getLowerCase(params.address), params.blockTag ] ];

           case "getCode":
            return [ "eth_getCode", [ getLowerCase(params.address), params.blockTag ] ];

           case "getStorageAt":
            return [ "eth_getStorageAt", [ getLowerCase(params.address), params.position, params.blockTag ] ];

           case "sendTransaction":
            return [ "eth_sendRawTransaction", [ params.signedTransaction ] ];

           case "getBlock":
            return params.blockTag ? [ "eth_getBlockByNumber", [ params.blockTag, !!params.includeTransactions ] ] : params.blockHash ? [ "eth_getBlockByHash", [ params.blockHash, !!params.includeTransactions ] ] : null;

           case "getTransaction":
            return [ "eth_getTransactionByHash", [ params.transactionHash ] ];

           case "getTransactionReceipt":
            return [ "eth_getTransactionReceipt", [ params.transactionHash ] ];

           case "call":
            return [ "eth_call", [ getStatic(this.constructor, "hexlifyTransaction")(params.transaction, {
              from: !0
            }), params.blockTag ] ];

           case "estimateGas":
            return [ "eth_estimateGas", [ getStatic(this.constructor, "hexlifyTransaction")(params.transaction, {
              from: !0
            }) ] ];

           case "getLogs":
            return params.filter && null != params.filter.address && (params.filter.address = getLowerCase(params.filter.address)), 
            [ "eth_getLogs", [ params.filter ] ];
          }
          return null;
        }
      }, {
        key: "perform",
        value: function(method, params) {
          return __awaiter$9(this, void 0, void 0, regeneratorRuntime.mark((function _callee68() {
            var args;
            return regeneratorRuntime.wrap((function(_context68) {
              for (;;) switch (_context68.prev = _context68.next) {
               case 0:
                return null == (args = this.prepareRequest(method, params)) && logger$u.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, {
                  operation: method
                }), _context68.prev = 2, _context68.next = 5, this.send(args[0], args[1]);

               case 5:
                return _context68.abrupt("return", _context68.sent);

               case 8:
                return _context68.prev = 8, _context68.t0 = _context68.catch(2), _context68.abrupt("return", checkError(method, _context68.t0, params));

               case 11:
               case "end":
                return _context68.stop();
              }
            }), _callee68, this, [ [ 2, 8 ] ]);
          })));
        }
      }, {
        key: "_startEvent",
        value: function(event) {
          "pending" === event.tag && this._startPending(), _get(_getPrototypeOf(JsonRpcProvider.prototype), "_startEvent", this).call(this, event);
        }
      }, {
        key: "_startPending",
        value: function() {
          if (null == this._pendingFilter) {
            var self = this, pendingFilter = this.send("eth_newPendingTransactionFilter", []);
            this._pendingFilter = pendingFilter, pendingFilter.then((function(filterId) {
              return function poll() {
                self.send("eth_getFilterChanges", [ filterId ]).then((function(hashes) {
                  if (self._pendingFilter != pendingFilter) return null;
                  var seq = Promise.resolve();
                  return hashes.forEach((function(hash) {
                    self._emitted["t:" + hash.toLowerCase()] = "pending", seq = seq.then((function() {
                      return self.getTransaction(hash).then((function(tx) {
                        return self.emit("pending", tx), null;
                      }));
                    }));
                  })), seq.then((function() {
                    return timer(1e3);
                  }));
                })).then((function() {
                  if (self._pendingFilter == pendingFilter) return setTimeout((function() {
                    poll();
                  }), 0), null;
                  self.send("eth_uninstallFilter", [ filterId ]);
                })).catch((function(error) {}));
              }(), filterId;
            })).catch((function(error) {}));
          }
        }
      }, {
        key: "_stopEvent",
        value: function(event) {
          "pending" === event.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), 
          _get(_getPrototypeOf(JsonRpcProvider.prototype), "_stopEvent", this).call(this, event);
        }
      } ], [ {
        key: "defaultUrl",
        value: function() {
          return "http://localhost:8545";
        }
      }, {
        key: "hexlifyTransaction",
        value: function(transaction, allowExtra) {
          var allowed = shallowCopy(allowedTransactionKeys$3);
          if (allowExtra) for (var _key23 in allowExtra) allowExtra[_key23] && (allowed[_key23] = !0);
          checkProperties(transaction, allowed);
          var result = {};
          return [ "gasLimit", "gasPrice", "type", "nonce", "value" ].forEach((function(key) {
            if (null != transaction[key]) {
              var value = hexValue(transaction[key]);
              "gasLimit" === key && (key = "gas"), result[key] = value;
            }
          })), [ "from", "to", "data" ].forEach((function(key) {
            null != transaction[key] && (result[key] = hexlify(transaction[key]));
          })), transaction.accessList && (result.accessList = accessListify(transaction.accessList)), 
          result;
        }
      } ]), JsonRpcProvider;
    }(BaseProvider), WS = null;
    try {
      if (null == (WS = WebSocket)) throw new Error("inject please");
    } catch (error) {
      var _logger = new Logger(version$m);
      WS = function() {
        _logger.throwError("WebSockets not supported in this environment", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "new WebSocket()"
        });
      };
    }
    var __awaiter$a = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$v = new Logger(version$m), NextId = 1, WebSocketProvider = function(_JsonRpcProvider) {
      _inherits(WebSocketProvider, _JsonRpcProvider);
      var _super44 = _createSuper(WebSocketProvider);
      function WebSocketProvider(url, network) {
        var _thisSuper, _this67;
        _classCallCheck(this, WebSocketProvider), "any" === network && logger$v.throwError("WebSocketProvider does not support 'any' network yet", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "network:any"
        }), (_this67 = _super44.call(this, url, network))._pollingInterval = -1, _this67._wsReady = !1, 
        defineReadOnly(_assertThisInitialized(_this67), "_websocket", new WS(_this67.connection.url)), 
        defineReadOnly(_assertThisInitialized(_this67), "_requests", {}), defineReadOnly(_assertThisInitialized(_this67), "_subs", {}), 
        defineReadOnly(_assertThisInitialized(_this67), "_subIds", {}), defineReadOnly(_assertThisInitialized(_this67), "_detectNetwork", _get((_thisSuper = _assertThisInitialized(_this67), 
        _getPrototypeOf(WebSocketProvider.prototype)), "detectNetwork", _thisSuper).call(_thisSuper)), 
        _this67._websocket.onopen = function() {
          _this67._wsReady = !0, Object.keys(_this67._requests).forEach((function(id) {
            _this67._websocket.send(_this67._requests[id].payload);
          }));
        }, _this67._websocket.onmessage = function(messageEvent) {
          var data = messageEvent.data, result = JSON.parse(data);
          if (null != result.id) {
            var _id = String(result.id), request = _this67._requests[_id];
            if (delete _this67._requests[_id], void 0 !== result.result) request.callback(null, result.result), 
            _this67.emit("debug", {
              action: "response",
              request: JSON.parse(request.payload),
              response: result.result,
              provider: _assertThisInitialized(_this67)
            }); else {
              var error = null;
              result.error ? (defineReadOnly(error = new Error(result.error.message || "unknown error"), "code", result.error.code || null), 
              defineReadOnly(error, "response", data)) : error = new Error("unknown error"), request.callback(error, void 0), 
              _this67.emit("debug", {
                action: "response",
                error,
                request: JSON.parse(request.payload),
                provider: _assertThisInitialized(_this67)
              });
            }
          } else if ("eth_subscription" === result.method) {
            var sub = _this67._subs[result.params.subscription];
            sub && sub.processFunc(result.params.result);
          }
        };
        var fauxPoll = setInterval((function() {
          _this67.emit("poll");
        }), 1e3);
        return fauxPoll.unref && fauxPoll.unref(), _this67;
      }
      return _createClass(WebSocketProvider, [ {
        key: "detectNetwork",
        value: function() {
          return this._detectNetwork;
        }
      }, {
        key: "pollingInterval",
        get: function() {
          return 0;
        },
        set: function(value) {
          logger$v.throwError("cannot set polling interval on WebSocketProvider", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "setPollingInterval"
          });
        }
      }, {
        key: "resetEventsBlock",
        value: function(blockNumber) {
          logger$v.throwError("cannot reset events block on WebSocketProvider", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "resetEventBlock"
          });
        }
      }, {
        key: "poll",
        value: function() {
          return __awaiter$a(this, void 0, void 0, regeneratorRuntime.mark((function _callee69() {
            return regeneratorRuntime.wrap((function(_context69) {
              for (;;) switch (_context69.prev = _context69.next) {
               case 0:
                return _context69.abrupt("return", null);

               case 1:
               case "end":
                return _context69.stop();
              }
            }), _callee69);
          })));
        }
      }, {
        key: "polling",
        set: function(value) {
          value && logger$v.throwError("cannot set polling on WebSocketProvider", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "setPolling"
          });
        }
      }, {
        key: "send",
        value: function(method, params) {
          var _this68 = this, rid = NextId++;
          return new Promise((function(resolve, reject) {
            var payload = JSON.stringify({
              method,
              params,
              id: rid,
              jsonrpc: "2.0"
            });
            _this68.emit("debug", {
              action: "request",
              request: JSON.parse(payload),
              provider: _this68
            }), _this68._requests[String(rid)] = {
              callback: function(error, result) {
                return error ? reject(error) : resolve(result);
              },
              payload
            }, _this68._wsReady && _this68._websocket.send(payload);
          }));
        }
      }, {
        key: "_subscribe",
        value: function(tag, param, processFunc) {
          return __awaiter$a(this, void 0, void 0, regeneratorRuntime.mark((function _callee70() {
            var subIdPromise, subId, _this69 = this;
            return regeneratorRuntime.wrap((function(_context70) {
              for (;;) switch (_context70.prev = _context70.next) {
               case 0:
                return null == (subIdPromise = this._subIds[tag]) && (subIdPromise = Promise.all(param).then((function(param) {
                  return _this69.send("eth_subscribe", param);
                })), this._subIds[tag] = subIdPromise), _context70.next = 4, subIdPromise;

               case 4:
                subId = _context70.sent, this._subs[subId] = {
                  tag,
                  processFunc
                };

               case 6:
               case "end":
                return _context70.stop();
              }
            }), _callee70, this);
          })));
        }
      }, {
        key: "_startEvent",
        value: function(event) {
          var _this70 = this;
          switch (event.type) {
           case "block":
            this._subscribe("block", [ "newHeads" ], (function(result) {
              var blockNumber = BigNumber.from(result.number).toNumber();
              _this70._emitted.block = blockNumber, _this70.emit("block", blockNumber);
            }));
            break;

           case "pending":
            this._subscribe("pending", [ "newPendingTransactions" ], (function(result) {
              _this70.emit("pending", result);
            }));
            break;

           case "filter":
            this._subscribe(event.tag, [ "logs", this._getFilter(event.filter) ], (function(result) {
              null == result.removed && (result.removed = !1), _this70.emit(event.filter, _this70.formatter.filterLog(result));
            }));
            break;

           case "tx":
            var emitReceipt = function(event) {
              var hash = event.hash;
              _this70.getTransactionReceipt(hash).then((function(receipt) {
                receipt && _this70.emit(hash, receipt);
              }));
            };
            emitReceipt(event), this._subscribe("tx", [ "newHeads" ], (function(result) {
              _this70._events.filter((function(e) {
                return "tx" === e.type;
              })).forEach(emitReceipt);
            }));
          }
        }
      }, {
        key: "_stopEvent",
        value: function(event) {
          var _this71 = this, tag = event.tag;
          if ("tx" === event.type) {
            if (this._events.filter((function(e) {
              return "tx" === e.type;
            })).length) return;
            tag = "tx";
          } else if (this.listenerCount(event.event)) return;
          var subId = this._subIds[tag];
          subId && (delete this._subIds[tag], subId.then((function(subId) {
            _this71._subs[subId] && (delete _this71._subs[subId], _this71.send("eth_unsubscribe", [ subId ]));
          })));
        }
      }, {
        key: "destroy",
        value: function() {
          return __awaiter$a(this, void 0, void 0, regeneratorRuntime.mark((function _callee71() {
            var _this72 = this;
            return regeneratorRuntime.wrap((function(_context71) {
              for (;;) switch (_context71.prev = _context71.next) {
               case 0:
                if (this._websocket.readyState !== WS.CONNECTING) {
                  _context71.next = 3;
                  break;
                }
                return _context71.next = 3, new Promise((function(resolve) {
                  _this72._websocket.onopen = function() {
                    resolve(!0);
                  }, _this72._websocket.onerror = function() {
                    resolve(!1);
                  };
                }));

               case 3:
                this._websocket.close(1e3);

               case 4:
               case "end":
                return _context71.stop();
              }
            }), _callee71, this);
          })));
        }
      } ], [ {
        key: "defaultUrl",
        value: function() {
          return "ws://localhost:8546";
        }
      } ]), WebSocketProvider;
    }(JsonRpcProvider), __awaiter$b = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$w = new Logger(version$m), StaticJsonRpcProvider = function(_JsonRpcProvider2) {
      _inherits(StaticJsonRpcProvider, _JsonRpcProvider2);
      var _super45 = _createSuper(StaticJsonRpcProvider);
      function StaticJsonRpcProvider() {
        return _classCallCheck(this, StaticJsonRpcProvider), _super45.apply(this, arguments);
      }
      return _createClass(StaticJsonRpcProvider, [ {
        key: "detectNetwork",
        value: function() {
          var _this73 = this, _super = Object.create(null, {
            detectNetwork: {
              get: function() {
                return _get(_getPrototypeOf(StaticJsonRpcProvider.prototype), "detectNetwork", _this73);
              }
            }
          });
          return __awaiter$b(this, void 0, void 0, regeneratorRuntime.mark((function _callee72() {
            var network;
            return regeneratorRuntime.wrap((function(_context72) {
              for (;;) switch (_context72.prev = _context72.next) {
               case 0:
                if (null != (network = this.network)) {
                  _context72.next = 7;
                  break;
                }
                return _context72.next = 4, _super.detectNetwork.call(this);

               case 4:
                (network = _context72.sent) || logger$w.throwError("no network detected", Logger.errors.UNKNOWN_ERROR, {}), 
                null == this._network && (defineReadOnly(this, "_network", network), this.emit("network", network, null));

               case 7:
                return _context72.abrupt("return", network);

               case 8:
               case "end":
                return _context72.stop();
              }
            }), _callee72, this);
          })));
        }
      } ]), StaticJsonRpcProvider;
    }(JsonRpcProvider), UrlJsonRpcProvider = function(_StaticJsonRpcProvide) {
      _inherits(UrlJsonRpcProvider, _StaticJsonRpcProvide);
      var _super46 = _createSuper(UrlJsonRpcProvider);
      function UrlJsonRpcProvider(network, apiKey) {
        var _this74;
        _classCallCheck(this, UrlJsonRpcProvider), logger$w.checkAbstract(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, UrlJsonRpcProvider), 
        network = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, "getNetwork")(network), 
        apiKey = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, "getApiKey")(apiKey);
        var connection = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, "getUrl")(network, apiKey);
        return _this74 = _super46.call(this, connection, network), "string" == typeof apiKey ? defineReadOnly(_assertThisInitialized(_this74), "apiKey", apiKey) : null != apiKey && Object.keys(apiKey).forEach((function(key) {
          defineReadOnly(_assertThisInitialized(_this74), key, apiKey[key]);
        })), _this74;
      }
      return _createClass(UrlJsonRpcProvider, [ {
        key: "_startPending",
        value: function() {
          logger$w.warn("WARNING: API provider does not support pending filters");
        }
      }, {
        key: "isCommunityResource",
        value: function() {
          return !1;
        }
      }, {
        key: "getSigner",
        value: function(address) {
          return logger$w.throwError("API provider does not support signing", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "getSigner"
          });
        }
      }, {
        key: "listAccounts",
        value: function() {
          return Promise.resolve([]);
        }
      } ], [ {
        key: "getApiKey",
        value: function(apiKey) {
          return apiKey;
        }
      }, {
        key: "getUrl",
        value: function(network, apiKey) {
          return logger$w.throwError("not implemented; sub-classes must override getUrl", Logger.errors.NOT_IMPLEMENTED, {
            operation: "getUrl"
          });
        }
      } ]), UrlJsonRpcProvider;
    }(StaticJsonRpcProvider), logger$x = new Logger(version$m), defaultApiKey = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC", AlchemyWebSocketProvider = function(_WebSocketProvider) {
      _inherits(AlchemyWebSocketProvider, _WebSocketProvider);
      var _super47 = _createSuper(AlchemyWebSocketProvider);
      function AlchemyWebSocketProvider(network, apiKey) {
        var _this75;
        _classCallCheck(this, AlchemyWebSocketProvider);
        var provider = new AlchemyProvider(network, apiKey), url = provider.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
        return defineReadOnly(_assertThisInitialized(_this75 = _super47.call(this, url, provider.network)), "apiKey", provider.apiKey), 
        _this75;
      }
      return _createClass(AlchemyWebSocketProvider, [ {
        key: "isCommunityResource",
        value: function() {
          return this.apiKey === defaultApiKey;
        }
      } ]), AlchemyWebSocketProvider;
    }(WebSocketProvider), AlchemyProvider = function(_UrlJsonRpcProvider) {
      _inherits(AlchemyProvider, _UrlJsonRpcProvider);
      var _super48 = _createSuper(AlchemyProvider);
      function AlchemyProvider() {
        return _classCallCheck(this, AlchemyProvider), _super48.apply(this, arguments);
      }
      return _createClass(AlchemyProvider, [ {
        key: "isCommunityResource",
        value: function() {
          return this.apiKey === defaultApiKey;
        }
      } ], [ {
        key: "getWebSocketProvider",
        value: function(network, apiKey) {
          return new AlchemyWebSocketProvider(network, apiKey);
        }
      }, {
        key: "getApiKey",
        value: function(apiKey) {
          return null == apiKey ? defaultApiKey : (apiKey && "string" != typeof apiKey && logger$x.throwArgumentError("invalid apiKey", "apiKey", apiKey), 
          apiKey);
        }
      }, {
        key: "getUrl",
        value: function(network, apiKey) {
          var host = null;
          switch (network.name) {
           case "homestead":
            host = "eth-mainnet.alchemyapi.io/v2/";
            break;

           case "ropsten":
            host = "eth-ropsten.alchemyapi.io/v2/";
            break;

           case "rinkeby":
            host = "eth-rinkeby.alchemyapi.io/v2/";
            break;

           case "goerli":
            host = "eth-goerli.alchemyapi.io/v2/";
            break;

           case "kovan":
            host = "eth-kovan.alchemyapi.io/v2/";
            break;

           default:
            logger$x.throwArgumentError("unsupported network", "network", arguments[0]);
          }
          return {
            allowGzip: !0,
            url: "https://" + host + apiKey,
            throttleCallback: function(attempt, url) {
              return apiKey === defaultApiKey && showThrottleMessage(), Promise.resolve(!0);
            }
          };
        }
      } ]), AlchemyProvider;
    }(UrlJsonRpcProvider), __awaiter$c = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$y = new Logger(version$m), CloudflareProvider = function(_UrlJsonRpcProvider2) {
      _inherits(CloudflareProvider, _UrlJsonRpcProvider2);
      var _super49 = _createSuper(CloudflareProvider);
      function CloudflareProvider() {
        return _classCallCheck(this, CloudflareProvider), _super49.apply(this, arguments);
      }
      return _createClass(CloudflareProvider, [ {
        key: "perform",
        value: function(method, params) {
          var _this76 = this, _super = Object.create(null, {
            perform: {
              get: function() {
                return _get(_getPrototypeOf(CloudflareProvider.prototype), "perform", _this76);
              }
            }
          });
          return __awaiter$c(this, void 0, void 0, regeneratorRuntime.mark((function _callee73() {
            var block;
            return regeneratorRuntime.wrap((function(_context73) {
              for (;;) switch (_context73.prev = _context73.next) {
               case 0:
                if ("getBlockNumber" !== method) {
                  _context73.next = 5;
                  break;
                }
                return _context73.next = 3, _super.perform.call(this, "getBlock", {
                  blockTag: "latest"
                });

               case 3:
                return block = _context73.sent, _context73.abrupt("return", block.number);

               case 5:
                return _context73.abrupt("return", _super.perform.call(this, method, params));

               case 6:
               case "end":
                return _context73.stop();
              }
            }), _callee73, this);
          })));
        }
      } ], [ {
        key: "getApiKey",
        value: function(apiKey) {
          return null != apiKey && logger$y.throwArgumentError("apiKey not supported for cloudflare", "apiKey", apiKey), 
          null;
        }
      }, {
        key: "getUrl",
        value: function(network, apiKey) {
          var host = null;
          if ("homestead" === network.name) host = "https://cloudflare-eth.com/"; else logger$y.throwArgumentError("unsupported network", "network", arguments[0]);
          return host;
        }
      } ]), CloudflareProvider;
    }(UrlJsonRpcProvider), __awaiter$d = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$z = new Logger(version$m);
    function getTransactionPostData(transaction) {
      var result = {};
      for (var _key24 in transaction) if (null != transaction[_key24]) {
        var value = transaction[_key24];
        value = {
          type: !0,
          gasLimit: !0,
          gasPrice: !0,
          nonce: !0,
          value: !0
        }[_key24] ? hexValue(hexlify(value)) : "accessList" === _key24 ? "[" + accessListify(value).map((function(set) {
          return '{address:"'.concat(set.address, '",storageKeys:["').concat(set.storageKeys.join('","'), '"]}');
        })).join(",") + "]" : hexlify(value), result[_key24] = value;
      }
      return result;
    }
    function getResult$1(result) {
      if (0 == result.status && ("No records found" === result.message || "No transactions found" === result.message)) return result.result;
      if (1 != result.status || "OK" != result.message) {
        var error = new Error("invalid response");
        throw error.result = JSON.stringify(result), (result.result || "").toLowerCase().indexOf("rate limit") >= 0 && (error.throttleRetry = !0), 
        error;
      }
      return result.result;
    }
    function getJsonResult(result) {
      if (result && 0 == result.status && "NOTOK" == result.message && (result.result || "").toLowerCase().indexOf("rate limit") >= 0) {
        var error = new Error("throttled response");
        throw error.result = JSON.stringify(result), error.throttleRetry = !0, error;
      }
      if ("2.0" != result.jsonrpc) {
        var _error = new Error("invalid response");
        throw _error.result = JSON.stringify(result), _error;
      }
      if (result.error) {
        var _error2 = new Error(result.error.message || "unknown error");
        throw result.error.code && (_error2.code = result.error.code), result.error.data && (_error2.data = result.error.data), 
        _error2;
      }
      return result.result;
    }
    function checkLogTag(blockTag) {
      if ("pending" === blockTag) throw new Error("pending not supported");
      return "latest" === blockTag ? blockTag : parseInt(blockTag.substring(2), 16);
    }
    function checkError$1(method, error, transaction) {
      if ("call" === method && error.code === Logger.errors.SERVER_ERROR) {
        var e = error.error;
        if (e && e.message.match("reverted") && isHexString(e.data)) return e.data;
      }
      var message = error.message;
      throw error.code === Logger.errors.SERVER_ERROR && (error.error && "string" == typeof error.error.message ? message = error.error.message : "string" == typeof error.body ? message = error.body : "string" == typeof error.responseText && (message = error.responseText)), 
      (message = (message || "").toLowerCase()).match(/insufficient funds/) && logger$z.throwError("insufficient funds for intrinsic transaction cost", Logger.errors.INSUFFICIENT_FUNDS, {
        error,
        method,
        transaction
      }), message.match(/same hash was already imported|transaction nonce is too low/) && logger$z.throwError("nonce has already been used", Logger.errors.NONCE_EXPIRED, {
        error,
        method,
        transaction
      }), message.match(/another transaction with same nonce/) && logger$z.throwError("replacement fee too low", Logger.errors.REPLACEMENT_UNDERPRICED, {
        error,
        method,
        transaction
      }), message.match(/execution failed due to an exception/) && logger$z.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
        error,
        method,
        transaction
      }), error;
    }
    var EtherscanProvider = function(_BaseProvider2) {
      _inherits(EtherscanProvider, _BaseProvider2);
      var _super50 = _createSuper(EtherscanProvider);
      function EtherscanProvider(network, apiKey) {
        var _this77;
        return _classCallCheck(this, EtherscanProvider), logger$z.checkNew(this instanceof EtherscanProvider ? this.constructor : void 0, EtherscanProvider), 
        defineReadOnly(_assertThisInitialized(_this77 = _super50.call(this, network)), "baseUrl", _this77.getBaseUrl()), 
        defineReadOnly(_assertThisInitialized(_this77), "apiKey", apiKey || "9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB"), 
        _this77;
      }
      return _createClass(EtherscanProvider, [ {
        key: "getBaseUrl",
        value: function() {
          switch (this.network ? this.network.name : "invalid") {
           case "homestead":
            return "https://api.etherscan.io";

           case "ropsten":
            return "https://api-ropsten.etherscan.io";

           case "rinkeby":
            return "https://api-rinkeby.etherscan.io";

           case "kovan":
            return "https://api-kovan.etherscan.io";

           case "goerli":
            return "https://api-goerli.etherscan.io";
          }
          return logger$z.throwArgumentError("unsupported network", "network", name);
        }
      }, {
        key: "getUrl",
        value: function(module, params) {
          var query = Object.keys(params).reduce((function(accum, key) {
            var value = params[key];
            return null != value && (accum += "&".concat(key, "=").concat(value)), accum;
          }), ""), apiKey = this.apiKey ? "&apikey=".concat(this.apiKey) : "";
          return "".concat(this.baseUrl, "/api?module=").concat(module).concat(query).concat(apiKey);
        }
      }, {
        key: "getPostUrl",
        value: function() {
          return "".concat(this.baseUrl, "/api");
        }
      }, {
        key: "getPostData",
        value: function(module, params) {
          return params.module = module, params.apikey = this.apiKey, params;
        }
      }, {
        key: "fetch",
        value: function(module, params, post) {
          return __awaiter$d(this, void 0, void 0, regeneratorRuntime.mark((function _callee74() {
            var url, payload, procFunc, connection, payloadStr, result, _this78 = this;
            return regeneratorRuntime.wrap((function(_context74) {
              for (;;) switch (_context74.prev = _context74.next) {
               case 0:
                return url = post ? this.getPostUrl() : this.getUrl(module, params), payload = post ? this.getPostData(module, params) : null, 
                procFunc = "proxy" === module ? getJsonResult : getResult$1, this.emit("debug", {
                  action: "request",
                  request: url,
                  provider: this
                }), connection = {
                  url,
                  throttleSlotInterval: 1e3,
                  throttleCallback: function(attempt, url) {
                    return _this78.isCommunityResource() && showThrottleMessage(), Promise.resolve(!0);
                  }
                }, payloadStr = null, payload && (connection.headers = {
                  "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                }, payloadStr = Object.keys(payload).map((function(key) {
                  return "".concat(key, "=").concat(payload[key]);
                })).join("&")), _context74.next = 9, fetchJson(connection, payloadStr, procFunc || getJsonResult);

               case 9:
                return result = _context74.sent, this.emit("debug", {
                  action: "response",
                  request: url,
                  response: deepCopy(result),
                  provider: this
                }), _context74.abrupt("return", result);

               case 12:
               case "end":
                return _context74.stop();
              }
            }), _callee74, this);
          })));
        }
      }, {
        key: "detectNetwork",
        value: function() {
          return __awaiter$d(this, void 0, void 0, regeneratorRuntime.mark((function _callee75() {
            return regeneratorRuntime.wrap((function(_context75) {
              for (;;) switch (_context75.prev = _context75.next) {
               case 0:
                return _context75.abrupt("return", this.network);

               case 1:
               case "end":
                return _context75.stop();
              }
            }), _callee75, this);
          })));
        }
      }, {
        key: "perform",
        value: function(method, params) {
          var _this79 = this, _super = Object.create(null, {
            perform: {
              get: function() {
                return _get(_getPrototypeOf(EtherscanProvider.prototype), "perform", _this79);
              }
            }
          });
          return __awaiter$d(this, void 0, void 0, regeneratorRuntime.mark((function _callee76() {
            var postData, _postData, args, topic0, logs, blocks, _i45, log, block;
            return regeneratorRuntime.wrap((function(_context76) {
              for (;;) switch (_context76.prev = _context76.next) {
               case 0:
                _context76.t0 = method, _context76.next = "getBlockNumber" === _context76.t0 ? 3 : "getGasPrice" === _context76.t0 ? 4 : "getBalance" === _context76.t0 ? 5 : "getTransactionCount" === _context76.t0 ? 6 : "getCode" === _context76.t0 ? 7 : "getStorageAt" === _context76.t0 ? 8 : "sendTransaction" === _context76.t0 ? 9 : "getBlock" === _context76.t0 ? 10 : "getTransaction" === _context76.t0 ? 13 : "getTransactionReceipt" === _context76.t0 ? 14 : "call" === _context76.t0 ? 15 : "estimateGas" === _context76.t0 ? 29 : "getLogs" === _context76.t0 ? 41 : "getEtherPrice" === _context76.t0 ? 65 : 72;
                break;

               case 3:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_blockNumber"
                }));

               case 4:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_gasPrice"
                }));

               case 5:
                return _context76.abrupt("return", this.fetch("account", {
                  action: "balance",
                  address: params.address,
                  tag: params.blockTag
                }));

               case 6:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_getTransactionCount",
                  address: params.address,
                  tag: params.blockTag
                }));

               case 7:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_getCode",
                  address: params.address,
                  tag: params.blockTag
                }));

               case 8:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_getStorageAt",
                  address: params.address,
                  position: params.position,
                  tag: params.blockTag
                }));

               case 9:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_sendRawTransaction",
                  hex: params.signedTransaction
                }, !0).catch((function(error) {
                  return checkError$1("sendTransaction", error, params.signedTransaction);
                })));

               case 10:
                if (!params.blockTag) {
                  _context76.next = 12;
                  break;
                }
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_getBlockByNumber",
                  tag: params.blockTag,
                  boolean: params.includeTransactions ? "true" : "false"
                }));

               case 12:
                throw new Error("getBlock by blockHash not implemented");

               case 13:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_getTransactionByHash",
                  txhash: params.transactionHash
                }));

               case 14:
                return _context76.abrupt("return", this.fetch("proxy", {
                  action: "eth_getTransactionReceipt",
                  txhash: params.transactionHash
                }));

               case 15:
                if ("latest" === params.blockTag) {
                  _context76.next = 17;
                  break;
                }
                throw new Error("EtherscanProvider does not support blockTag for call");

               case 17:
                return (postData = getTransactionPostData(params.transaction)).module = "proxy", 
                postData.action = "eth_call", _context76.prev = 20, _context76.next = 23, this.fetch("proxy", postData, !0);

               case 23:
                return _context76.abrupt("return", _context76.sent);

               case 26:
                return _context76.prev = 26, _context76.t1 = _context76.catch(20), _context76.abrupt("return", checkError$1("call", _context76.t1, params.transaction));

               case 29:
                return (_postData = getTransactionPostData(params.transaction)).module = "proxy", 
                _postData.action = "eth_estimateGas", _context76.prev = 32, _context76.next = 35, 
                this.fetch("proxy", _postData, !0);

               case 35:
                return _context76.abrupt("return", _context76.sent);

               case 38:
                return _context76.prev = 38, _context76.t2 = _context76.catch(32), _context76.abrupt("return", checkError$1("estimateGas", _context76.t2, params.transaction));

               case 41:
                return args = {
                  action: "getLogs"
                }, params.filter.fromBlock && (args.fromBlock = checkLogTag(params.filter.fromBlock)), 
                params.filter.toBlock && (args.toBlock = checkLogTag(params.filter.toBlock)), params.filter.address && (args.address = params.filter.address), 
                params.filter.topics && params.filter.topics.length > 0 && (params.filter.topics.length > 1 && logger$z.throwError("unsupported topic count", Logger.errors.UNSUPPORTED_OPERATION, {
                  topics: params.filter.topics
                }), 1 === params.filter.topics.length && ("string" == typeof (topic0 = params.filter.topics[0]) && 66 === topic0.length || logger$z.throwError("unsupported topic format", Logger.errors.UNSUPPORTED_OPERATION, {
                  topic0
                }), args.topic0 = topic0)), _context76.next = 48, this.fetch("logs", args);

               case 48:
                logs = _context76.sent, blocks = {}, _i45 = 0;

               case 51:
                if (!(_i45 < logs.length)) {
                  _context76.next = 64;
                  break;
                }
                if (null == (log = logs[_i45]).blockHash) {
                  _context76.next = 55;
                  break;
                }
                return _context76.abrupt("continue", 61);

               case 55:
                if (null != blocks[log.blockNumber]) {
                  _context76.next = 60;
                  break;
                }
                return _context76.next = 58, this.getBlock(log.blockNumber);

               case 58:
                (block = _context76.sent) && (blocks[log.blockNumber] = block.hash);

               case 60:
                log.blockHash = blocks[log.blockNumber];

               case 61:
                _i45++, _context76.next = 51;
                break;

               case 64:
                return _context76.abrupt("return", logs);

               case 65:
                if ("homestead" === this.network.name) {
                  _context76.next = 67;
                  break;
                }
                return _context76.abrupt("return", 0);

               case 67:
                return _context76.t3 = parseFloat, _context76.next = 70, this.fetch("stats", {
                  action: "ethprice"
                });

               case 70:
                return _context76.t4 = _context76.sent.ethusd, _context76.abrupt("return", (0, _context76.t3)(_context76.t4));

               case 72:
                return _context76.abrupt("break", 73);

               case 73:
                return _context76.abrupt("return", _super.perform.call(this, method, params));

               case 74:
               case "end":
                return _context76.stop();
              }
            }), _callee76, this, [ [ 20, 26 ], [ 32, 38 ] ]);
          })));
        }
      }, {
        key: "getHistory",
        value: function(addressOrName, startBlock, endBlock) {
          return __awaiter$d(this, void 0, void 0, regeneratorRuntime.mark((function _callee77() {
            var params, result, _this80 = this;
            return regeneratorRuntime.wrap((function(_context77) {
              for (;;) switch (_context77.prev = _context77.next) {
               case 0:
                return _context77.next = 2, this.resolveName(addressOrName);

               case 2:
                return _context77.t0 = _context77.sent, _context77.t1 = null == startBlock ? 0 : startBlock, 
                _context77.t2 = null == endBlock ? 99999999 : endBlock, params = {
                  action: "txlist",
                  address: _context77.t0,
                  startblock: _context77.t1,
                  endblock: _context77.t2,
                  sort: "asc"
                }, _context77.next = 8, this.fetch("account", params);

               case 8:
                return result = _context77.sent, _context77.abrupt("return", result.map((function(tx) {
                  [ "contractAddress", "to" ].forEach((function(key) {
                    "" == tx[key] && delete tx[key];
                  })), null == tx.creates && null != tx.contractAddress && (tx.creates = tx.contractAddress);
                  var item = _this80.formatter.transactionResponse(tx);
                  return tx.timeStamp && (item.timestamp = parseInt(tx.timeStamp)), item;
                })));

               case 10:
               case "end":
                return _context77.stop();
              }
            }), _callee77, this);
          })));
        }
      }, {
        key: "isCommunityResource",
        value: function() {
          return "9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB" === this.apiKey;
        }
      } ]), EtherscanProvider;
    }(BaseProvider), __awaiter$e = window && window.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))((function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator.throw(value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          var value;
          result.done ? resolve(result.value) : (value = result.value, value instanceof P ? value : new P((function(resolve) {
            resolve(value);
          }))).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      }));
    }, logger$A = new Logger(version$m);
    function now() {
      return (new Date).getTime();
    }
    function checkNetworks(networks) {
      for (var result = null, _i46 = 0; _i46 < networks.length; _i46++) {
        var network = networks[_i46];
        if (null == network) return null;
        result ? result.name === network.name && result.chainId === network.chainId && (result.ensAddress === network.ensAddress || null == result.ensAddress && null == network.ensAddress) || logger$A.throwArgumentError("provider mismatch", "networks", networks) : result = network;
      }
      return result;
    }
    function median(values, maxDelta) {
      values = values.slice().sort();
      var middle = Math.floor(values.length / 2);
      if (values.length % 2) return values[middle];
      var a = values[middle - 1], b = values[middle];
      return null != maxDelta && Math.abs(a - b) > maxDelta ? null : (a + b) / 2;
    }
    function serialize$1(value) {
      if (null === value) return "null";
      if ("number" == typeof value || "boolean" == typeof value) return JSON.stringify(value);
      if ("string" == typeof value) return value;
      if (BigNumber.isBigNumber(value)) return value.toString();
      if (Array.isArray(value)) return JSON.stringify(value.map((function(i) {
        return serialize$1(i);
      })));
      if ("object" === _typeof(value)) {
        var keys = Object.keys(value);
        return keys.sort(), "{" + keys.map((function(key) {
          var v = value[key];
          return v = "function" == typeof v ? "[function]" : serialize$1(v), JSON.stringify(key) + ":" + v;
        })).join(",") + "}";
      }
      throw new Error("unknown value type: " + _typeof(value));
    }
    var nextRid = 1;
    function stall$1(duration) {
      var cancel = null, timer = null, promise = new Promise((function(resolve) {
        cancel = function() {
          timer && (clearTimeout(timer), timer = null), resolve();
        }, timer = setTimeout(cancel, duration);
      }));
      return {
        cancel,
        getPromise: function() {
          return promise;
        },
        wait: function(func) {
          return promise = promise.then(func);
        }
      };
    }
    var ForwardErrors = [ Logger.errors.CALL_EXCEPTION, Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED, Logger.errors.UNPREDICTABLE_GAS_LIMIT ], ForwardProperties = [ "address", "args", "errorArgs", "errorSignature", "method", "transaction" ];
    function exposeDebugConfig(config, now) {
      var result = {
        weight: config.weight
      };
      return Object.defineProperty(result, "provider", {
        get: function() {
          return config.provider;
        }
      }), config.start && (result.start = config.start), now && (result.duration = now - config.start), 
      config.done && (config.error ? result.error = config.error : result.result = config.result || null), 
      result;
    }
    function getProcessFunc(provider, method, params) {
      var normalize = serialize$1;
      switch (method) {
       case "getBlockNumber":
        return function(configs) {
          var values = configs.map((function(c) {
            return c.result;
          })), blockNumber = median(configs.map((function(c) {
            return c.result;
          })), 2);
          if (null != blockNumber) return blockNumber = Math.ceil(blockNumber), values.indexOf(blockNumber + 1) >= 0 && blockNumber++, 
          blockNumber >= provider._highestBlockNumber && (provider._highestBlockNumber = blockNumber), 
          provider._highestBlockNumber;
        };

       case "getGasPrice":
        return function(configs) {
          var values = configs.map((function(c) {
            return c.result;
          }));
          return values.sort(), values[Math.floor(values.length / 2)];
        };

       case "getEtherPrice":
        return function(configs) {
          return median(configs.map((function(c) {
            return c.result;
          })));
        };

       case "getBalance":
       case "getTransactionCount":
       case "getCode":
       case "getStorageAt":
       case "call":
       case "estimateGas":
       case "getLogs":
        break;

       case "getTransaction":
       case "getTransactionReceipt":
        normalize = function(tx) {
          return null == tx ? null : ((tx = shallowCopy(tx)).confirmations = -1, serialize$1(tx));
        };
        break;

       case "getBlock":
        normalize = params.includeTransactions ? function(block) {
          return null == block ? null : ((block = shallowCopy(block)).transactions = block.transactions.map((function(tx) {
            return (tx = shallowCopy(tx)).confirmations = -1, tx;
          })), serialize$1(block));
        } : function(block) {
          return null == block ? null : serialize$1(block);
        };
        break;

       default:
        throw new Error("unknown method: " + method);
      }
      return function(normalize, quorum) {
        return function(configs) {
          var tally = {};
          configs.forEach((function(c) {
            var value = normalize(c.result);
            tally[value] || (tally[value] = {
              count: 0,
              result: c.result
            }), tally[value].count++;
          }));
          for (var keys = Object.keys(tally), _i47 = 0; _i47 < keys.length; _i47++) {
            var check = tally[keys[_i47]];
            if (check.count >= quorum) return check.result;
          }
        };
      }(normalize, provider.quorum);
    }
    function waitForSync(config, blockNumber) {
      return __awaiter$e(this, void 0, void 0, regeneratorRuntime.mark((function _callee78() {
        var provider;
        return regeneratorRuntime.wrap((function(_context78) {
          for (;;) switch (_context78.prev = _context78.next) {
           case 0:
            if (!(null != (provider = config.provider).blockNumber && provider.blockNumber >= blockNumber || -1 === blockNumber)) {
              _context78.next = 3;
              break;
            }
            return _context78.abrupt("return", provider);

           case 3:
            return _context78.abrupt("return", poll((function() {
              return new Promise((function(resolve, reject) {
                setTimeout((function() {
                  return provider.blockNumber >= blockNumber ? resolve(provider) : config.cancelled ? resolve(null) : resolve(void 0);
                }), 0);
              }));
            }), {
              oncePoll: provider
            }));

           case 4:
           case "end":
            return _context78.stop();
          }
        }), _callee78);
      })));
    }
    function getRunner(config, currentBlockNumber, method, params) {
      return __awaiter$e(this, void 0, void 0, regeneratorRuntime.mark((function _callee79() {
        var provider, filter;
        return regeneratorRuntime.wrap((function(_context79) {
          for (;;) switch (_context79.prev = _context79.next) {
           case 0:
            provider = config.provider, _context79.t0 = method, _context79.next = "getBlockNumber" === _context79.t0 || "getGasPrice" === _context79.t0 ? 4 : "getEtherPrice" === _context79.t0 ? 5 : "getBalance" === _context79.t0 || "getTransactionCount" === _context79.t0 || "getCode" === _context79.t0 ? 8 : "getStorageAt" === _context79.t0 ? 13 : "getBlock" === _context79.t0 ? 18 : "call" === _context79.t0 || "estimateGas" === _context79.t0 ? 23 : "getTransaction" === _context79.t0 || "getTransactionReceipt" === _context79.t0 ? 28 : "getLogs" === _context79.t0 ? 29 : 35;
            break;

           case 4:
            return _context79.abrupt("return", provider[method]());

           case 5:
            if (!provider.getEtherPrice) {
              _context79.next = 7;
              break;
            }
            return _context79.abrupt("return", provider.getEtherPrice());

           case 7:
            return _context79.abrupt("break", 35);

           case 8:
            if (!params.blockTag || !isHexString(params.blockTag)) {
              _context79.next = 12;
              break;
            }
            return _context79.next = 11, waitForSync(config, currentBlockNumber);

           case 11:
            provider = _context79.sent;

           case 12:
            return _context79.abrupt("return", provider[method](params.address, params.blockTag || "latest"));

           case 13:
            if (!params.blockTag || !isHexString(params.blockTag)) {
              _context79.next = 17;
              break;
            }
            return _context79.next = 16, waitForSync(config, currentBlockNumber);

           case 16:
            provider = _context79.sent;

           case 17:
            return _context79.abrupt("return", provider.getStorageAt(params.address, params.position, params.blockTag || "latest"));

           case 18:
            if (!params.blockTag || !isHexString(params.blockTag)) {
              _context79.next = 22;
              break;
            }
            return _context79.next = 21, waitForSync(config, currentBlockNumber);

           case 21:
            provider = _context79.sent;

           case 22:
            return _context79.abrupt("return", provider[params.includeTransactions ? "getBlockWithTransactions" : "getBlock"](params.blockTag || params.blockHash));

           case 23:
            if (!params.blockTag || !isHexString(params.blockTag)) {
              _context79.next = 27;
              break;
            }
            return _context79.next = 26, waitForSync(config, currentBlockNumber);

           case 26:
            provider = _context79.sent;

           case 27:
            return _context79.abrupt("return", provider[method](params.transaction));

           case 28:
            return _context79.abrupt("return", provider[method](params.transactionHash));

           case 29:
            if (!((filter = params.filter).fromBlock && isHexString(filter.fromBlock) || filter.toBlock && isHexString(filter.toBlock))) {
              _context79.next = 34;
              break;
            }
            return _context79.next = 33, waitForSync(config, currentBlockNumber);

           case 33:
            provider = _context79.sent;

           case 34:
            return _context79.abrupt("return", provider.getLogs(filter));

           case 35:
            return _context79.abrupt("return", logger$A.throwError("unknown method error", Logger.errors.UNKNOWN_ERROR, {
              method,
              params
            }));

           case 36:
           case "end":
            return _context79.stop();
          }
        }), _callee79);
      })));
    }
    var FallbackProvider = function(_BaseProvider3) {
      _inherits(FallbackProvider, _BaseProvider3);
      var _super51 = _createSuper(FallbackProvider);
      function FallbackProvider(providers, quorum) {
        var _this81;
        _classCallCheck(this, FallbackProvider), logger$A.checkNew(this instanceof FallbackProvider ? this.constructor : void 0, FallbackProvider), 
        0 === providers.length && logger$A.throwArgumentError("missing providers", "providers", providers);
        var providerConfigs = providers.map((function(configOrProvider, index) {
          if (Provider.isProvider(configOrProvider)) {
            var stallTimeout = isCommunityResource(configOrProvider) ? 2e3 : 750;
            return Object.freeze({
              provider: configOrProvider,
              weight: 1,
              stallTimeout,
              priority: 1
            });
          }
          var config = shallowCopy(configOrProvider);
          null == config.priority && (config.priority = 1), null == config.stallTimeout && (config.stallTimeout = isCommunityResource(configOrProvider) ? 2e3 : 750), 
          null == config.weight && (config.weight = 1);
          var weight = config.weight;
          return (weight % 1 || weight > 512 || weight < 1) && logger$A.throwArgumentError("invalid weight; must be integer in [1, 512]", "providers[".concat(index, "].weight"), weight), 
          Object.freeze(config);
        })), total = providerConfigs.reduce((function(accum, c) {
          return accum + c.weight;
        }), 0);
        null == quorum ? quorum = total / 2 : quorum > total && logger$A.throwArgumentError("quorum will always fail; larger than total weight", "quorum", quorum);
        var networkOrReady = checkNetworks(providerConfigs.map((function(c) {
          return c.provider.network;
        })));
        return null == networkOrReady && (networkOrReady = new Promise((function(resolve, reject) {
          setTimeout((function() {
            _this81.detectNetwork().then(resolve, reject);
          }), 0);
        }))), defineReadOnly(_assertThisInitialized(_this81 = _super51.call(this, networkOrReady)), "providerConfigs", Object.freeze(providerConfigs)), 
        defineReadOnly(_assertThisInitialized(_this81), "quorum", quorum), _this81._highestBlockNumber = -1, 
        _this81;
      }
      return _createClass(FallbackProvider, [ {
        key: "detectNetwork",
        value: function() {
          return __awaiter$e(this, void 0, void 0, regeneratorRuntime.mark((function _callee80() {
            var networks;
            return regeneratorRuntime.wrap((function(_context80) {
              for (;;) switch (_context80.prev = _context80.next) {
               case 0:
                return _context80.next = 2, Promise.all(this.providerConfigs.map((function(c) {
                  return c.provider.getNetwork();
                })));

               case 2:
                return networks = _context80.sent, _context80.abrupt("return", checkNetworks(networks));

               case 4:
               case "end":
                return _context80.stop();
              }
            }), _callee80, this);
          })));
        }
      }, {
        key: "perform",
        value: function(method, params) {
          return __awaiter$e(this, void 0, void 0, regeneratorRuntime.mark((function _callee81() {
            var results, _i48, result, processFunc, configs, currentBlockNumber, i, first, _loop4, _ret2, _this82 = this;
            return regeneratorRuntime.wrap((function(_context82) {
              for (;;) switch (_context82.prev = _context82.next) {
               case 0:
                if ("sendTransaction" !== method) {
                  _context82.next = 13;
                  break;
                }
                return _context82.next = 3, Promise.all(this.providerConfigs.map((function(c) {
                  return c.provider.sendTransaction(params.signedTransaction).then((function(result) {
                    return result.hash;
                  }), (function(error) {
                    return error;
                  }));
                })));

               case 3:
                results = _context82.sent, _i48 = 0;

               case 5:
                if (!(_i48 < results.length)) {
                  _context82.next = 12;
                  break;
                }
                if ("string" != typeof (result = results[_i48])) {
                  _context82.next = 9;
                  break;
                }
                return _context82.abrupt("return", result);

               case 9:
                _i48++, _context82.next = 5;
                break;

               case 12:
                throw results[0];

               case 13:
                if (-1 !== this._highestBlockNumber || "getBlockNumber" === method) {
                  _context82.next = 16;
                  break;
                }
                return _context82.next = 16, this.getBlockNumber();

               case 16:
                processFunc = getProcessFunc(this, method, params), (configs = shuffled(this.providerConfigs.map(shallowCopy))).sort((function(a, b) {
                  return a.priority - b.priority;
                })), currentBlockNumber = this._highestBlockNumber, i = 0, first = !0, _loop4 = regeneratorRuntime.mark((function _loop4() {
                  var t0, inflightWeight, _loop5, waiting, results, _result4, errors;
                  return regeneratorRuntime.wrap((function(_context81) {
                    for (;;) switch (_context81.prev = _context81.next) {
                     case 0:
                      for (t0 = now(), inflightWeight = configs.filter((function(c) {
                        return c.runner && t0 - c.start < c.stallTimeout;
                      })).reduce((function(accum, c) {
                        return accum + c.weight;
                      }), 0), _loop5 = function() {
                        var config = configs[i++], rid = nextRid++;
                        config.start = now(), config.staller = stall$1(config.stallTimeout), config.staller.wait((function() {
                          config.staller = null;
                        })), config.runner = getRunner(config, currentBlockNumber, method, params).then((function(result) {
                          config.done = !0, config.result = result, _this82.listenerCount("debug") && _this82.emit("debug", {
                            action: "request",
                            rid,
                            backend: exposeDebugConfig(config, now()),
                            request: {
                              method,
                              params: deepCopy(params)
                            },
                            provider: _this82
                          });
                        }), (function(error) {
                          config.done = !0, config.error = error, _this82.listenerCount("debug") && _this82.emit("debug", {
                            action: "request",
                            rid,
                            backend: exposeDebugConfig(config, now()),
                            request: {
                              method,
                              params: deepCopy(params)
                            },
                            provider: _this82
                          });
                        })), _this82.listenerCount("debug") && _this82.emit("debug", {
                          action: "request",
                          rid,
                          backend: exposeDebugConfig(config, null),
                          request: {
                            method,
                            params: deepCopy(params)
                          },
                          provider: _this82
                        }), inflightWeight += config.weight;
                      }; inflightWeight < _this82.quorum && i < configs.length; ) _loop5();
                      if (waiting = [], configs.forEach((function(c) {
                        !c.done && c.runner && (waiting.push(c.runner), c.staller && waiting.push(c.staller.getPromise()));
                      })), !waiting.length) {
                        _context81.next = 9;
                        break;
                      }
                      return _context81.next = 9, Promise.race(waiting);

                     case 9:
                      if (!((results = configs.filter((function(c) {
                        return c.done && null == c.error;
                      }))).length >= _this82.quorum)) {
                        _context81.next = 19;
                        break;
                      }
                      if (void 0 === (_result4 = processFunc(results))) {
                        _context81.next = 15;
                        break;
                      }
                      return configs.forEach((function(c) {
                        c.staller && c.staller.cancel(), c.cancelled = !0;
                      })), _context81.abrupt("return", {
                        v: _result4
                      });

                     case 15:
                      if (first) {
                        _context81.next = 18;
                        break;
                      }
                      return _context81.next = 18, stall$1(100).getPromise();

                     case 18:
                      first = !1;

                     case 19:
                      if (errors = configs.reduce((function(accum, c) {
                        if (!c.done || null == c.error) return accum;
                        var code = c.error.code;
                        return ForwardErrors.indexOf(code) >= 0 && (accum[code] || (accum[code] = {
                          error: c.error,
                          weight: 0
                        }), accum[code].weight += c.weight), accum;
                      }), {}), Object.keys(errors).forEach((function(errorCode) {
                        var tally = errors[errorCode];
                        if (!(tally.weight < _this82.quorum)) {
                          configs.forEach((function(c) {
                            c.staller && c.staller.cancel(), c.cancelled = !0;
                          }));
                          var e = tally.error, props = {};
                          ForwardProperties.forEach((function(name) {
                            null != e[name] && (props[name] = e[name]);
                          })), logger$A.throwError(e.reason || e.message, errorCode, props);
                        }
                      })), 0 !== configs.filter((function(c) {
                        return !c.done;
                      })).length) {
                        _context81.next = 23;
                        break;
                      }
                      return _context81.abrupt("return", "break");

                     case 23:
                     case "end":
                      return _context81.stop();
                    }
                  }), _loop4);
                }));

               case 23:
                return _context82.delegateYield(_loop4(), "t0", 25);

               case 25:
                if ("break" !== (_ret2 = _context82.t0)) {
                  _context82.next = 28;
                  break;
                }
                return _context82.abrupt("break", 32);

               case 28:
                if ("object" !== _typeof(_ret2)) {
                  _context82.next = 30;
                  break;
                }
                return _context82.abrupt("return", _ret2.v);

               case 30:
                _context82.next = 23;
                break;

               case 32:
                return configs.forEach((function(c) {
                  c.staller && c.staller.cancel(), c.cancelled = !0;
                })), _context82.abrupt("return", logger$A.throwError("failed to meet quorum", Logger.errors.SERVER_ERROR, {
                  method,
                  params,
                  results: configs.map((function(c) {
                    return exposeDebugConfig(c);
                  })),
                  provider: this
                }));

               case 34:
               case "end":
                return _context82.stop();
              }
            }), _callee81, this);
          })));
        }
      } ]), FallbackProvider;
    }(BaseProvider), IpcProvider = null, logger$B = new Logger(version$m), defaultProjectId = "84842078b09946638c03157f83405213", InfuraWebSocketProvider = function(_WebSocketProvider2) {
      _inherits(InfuraWebSocketProvider, _WebSocketProvider2);
      var _super52 = _createSuper(InfuraWebSocketProvider);
      function InfuraWebSocketProvider(network, apiKey) {
        var _this83;
        _classCallCheck(this, InfuraWebSocketProvider);
        var provider = new InfuraProvider(network, apiKey), connection = provider.connection;
        connection.password && logger$B.throwError("INFURA WebSocket project secrets unsupported", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "InfuraProvider.getWebSocketProvider()"
        });
        var url = connection.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
        return defineReadOnly(_assertThisInitialized(_this83 = _super52.call(this, url, network)), "apiKey", provider.projectId), 
        defineReadOnly(_assertThisInitialized(_this83), "projectId", provider.projectId), 
        defineReadOnly(_assertThisInitialized(_this83), "projectSecret", provider.projectSecret), 
        _this83;
      }
      return _createClass(InfuraWebSocketProvider, [ {
        key: "isCommunityResource",
        value: function() {
          return this.projectId === defaultProjectId;
        }
      } ]), InfuraWebSocketProvider;
    }(WebSocketProvider), InfuraProvider = function(_UrlJsonRpcProvider3) {
      _inherits(InfuraProvider, _UrlJsonRpcProvider3);
      var _super53 = _createSuper(InfuraProvider);
      function InfuraProvider() {
        return _classCallCheck(this, InfuraProvider), _super53.apply(this, arguments);
      }
      return _createClass(InfuraProvider, [ {
        key: "isCommunityResource",
        value: function() {
          return this.projectId === defaultProjectId;
        }
      } ], [ {
        key: "getWebSocketProvider",
        value: function(network, apiKey) {
          return new InfuraWebSocketProvider(network, apiKey);
        }
      }, {
        key: "getApiKey",
        value: function(apiKey) {
          var apiKeyObj = {
            apiKey: defaultProjectId,
            projectId: defaultProjectId,
            projectSecret: null
          };
          return null == apiKey || ("string" == typeof apiKey ? apiKeyObj.projectId = apiKey : null != apiKey.projectSecret ? (logger$B.assertArgument("string" == typeof apiKey.projectId, "projectSecret requires a projectId", "projectId", apiKey.projectId), 
          logger$B.assertArgument("string" == typeof apiKey.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"), 
          apiKeyObj.projectId = apiKey.projectId, apiKeyObj.projectSecret = apiKey.projectSecret) : apiKey.projectId && (apiKeyObj.projectId = apiKey.projectId), 
          apiKeyObj.apiKey = apiKeyObj.projectId), apiKeyObj;
        }
      }, {
        key: "getUrl",
        value: function(network, apiKey) {
          var host = null;
          switch (network ? network.name : "unknown") {
           case "homestead":
            host = "mainnet.infura.io";
            break;

           case "ropsten":
            host = "ropsten.infura.io";
            break;

           case "rinkeby":
            host = "rinkeby.infura.io";
            break;

           case "kovan":
            host = "kovan.infura.io";
            break;

           case "goerli":
            host = "goerli.infura.io";
            break;

           default:
            logger$B.throwError("unsupported network", Logger.errors.INVALID_ARGUMENT, {
              argument: "network",
              value: network
            });
          }
          var connection = {
            allowGzip: !0,
            url: "https://" + host + "/v3/" + apiKey.projectId,
            throttleCallback: function(attempt, url) {
              return apiKey.projectId === defaultProjectId && showThrottleMessage(), Promise.resolve(!0);
            }
          };
          return null != apiKey.projectSecret && (connection.user = "", connection.password = apiKey.projectSecret), 
          connection;
        }
      } ]), InfuraProvider;
    }(UrlJsonRpcProvider), JsonRpcBatchProvider = function(_JsonRpcProvider3) {
      _inherits(JsonRpcBatchProvider, _JsonRpcProvider3);
      var _super54 = _createSuper(JsonRpcBatchProvider);
      function JsonRpcBatchProvider() {
        return _classCallCheck(this, JsonRpcBatchProvider), _super54.apply(this, arguments);
      }
      return _createClass(JsonRpcBatchProvider, [ {
        key: "send",
        value: function(method, params) {
          var _this84 = this, request = {
            method,
            params,
            id: this._nextId++,
            jsonrpc: "2.0"
          };
          null == this._pendingBatch && (this._pendingBatch = []);
          var inflightRequest = {
            request,
            resolve: null,
            reject: null
          }, promise = new Promise((function(resolve, reject) {
            inflightRequest.resolve = resolve, inflightRequest.reject = reject;
          }));
          return this._pendingBatch.push(inflightRequest), this._pendingBatchAggregator || (this._pendingBatchAggregator = setTimeout((function() {
            var batch = _this84._pendingBatch;
            _this84._pendingBatch = null, _this84._pendingBatchAggregator = null;
            var request = batch.map((function(inflight) {
              return inflight.request;
            }));
            return _this84.emit("debug", {
              action: "requestBatch",
              request: deepCopy(request),
              provider: _this84
            }), fetchJson(_this84.connection, JSON.stringify(request)).then((function(result) {
              _this84.emit("debug", {
                action: "response",
                request,
                response: result,
                provider: _this84
              }), batch.forEach((function(inflightRequest, index) {
                var payload = result[index];
                if (payload.error) {
                  var error = new Error(payload.error.message);
                  error.code = payload.error.code, error.data = payload.error.data, inflightRequest.reject(error);
                } else inflightRequest.resolve(payload.result);
              }));
            }), (function(error) {
              _this84.emit("debug", {
                action: "response",
                error,
                request,
                provider: _this84
              }), batch.forEach((function(inflightRequest) {
                inflightRequest.reject(error);
              }));
            }));
          }), 10)), promise;
        }
      } ]), JsonRpcBatchProvider;
    }(JsonRpcProvider), logger$C = new Logger(version$m), NodesmithProvider = function(_UrlJsonRpcProvider4) {
      _inherits(NodesmithProvider, _UrlJsonRpcProvider4);
      var _super55 = _createSuper(NodesmithProvider);
      function NodesmithProvider() {
        return _classCallCheck(this, NodesmithProvider), _super55.apply(this, arguments);
      }
      return _createClass(NodesmithProvider, null, [ {
        key: "getApiKey",
        value: function(apiKey) {
          return apiKey && "string" != typeof apiKey && logger$C.throwArgumentError("invalid apiKey", "apiKey", apiKey), 
          apiKey || "ETHERS_JS_SHARED";
        }
      }, {
        key: "getUrl",
        value: function(network, apiKey) {
          logger$C.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
          var host = null;
          switch (network.name) {
           case "homestead":
            host = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
            break;

           case "ropsten":
            host = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
            break;

           case "rinkeby":
            host = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
            break;

           case "goerli":
            host = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
            break;

           case "kovan":
            host = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
            break;

           default:
            logger$C.throwArgumentError("unsupported network", "network", arguments[0]);
          }
          return host + "?apiKey=" + apiKey;
        }
      } ]), NodesmithProvider;
    }(UrlJsonRpcProvider), logger$D = new Logger(version$m), defaultApplicationIds = {
      homestead: "6004bcd10040261633ade990",
      ropsten: "6004bd4d0040261633ade991",
      rinkeby: "6004bda20040261633ade994",
      goerli: "6004bd860040261633ade992"
    }, PocketProvider = function(_UrlJsonRpcProvider5) {
      _inherits(PocketProvider, _UrlJsonRpcProvider5);
      var _super56 = _createSuper(PocketProvider);
      function PocketProvider(network, apiKey) {
        if (_classCallCheck(this, PocketProvider), null == apiKey) {
          var n = getStatic(this instanceof PocketProvider ? this.constructor : void 0, "getNetwork")(network);
          if (n) {
            var applicationId = defaultApplicationIds[n.name];
            applicationId && (apiKey = {
              applicationId,
              loadBalancer: !0
            });
          }
          null == apiKey && logger$D.throwError("unsupported network", Logger.errors.INVALID_ARGUMENT, {
            argument: "network",
            value: network
          });
        }
        return _super56.call(this, network, apiKey);
      }
      return _createClass(PocketProvider, [ {
        key: "isCommunityResource",
        value: function() {
          return this.applicationId === defaultApplicationIds[this.network.name];
        }
      } ], [ {
        key: "getApiKey",
        value: function(apiKey) {
          null == apiKey && logger$D.throwArgumentError("PocketProvider.getApiKey does not support null apiKey", "apiKey", apiKey);
          var apiKeyObj = {
            applicationId: null,
            loadBalancer: !1,
            applicationSecretKey: null
          };
          return "string" == typeof apiKey ? apiKeyObj.applicationId = apiKey : null != apiKey.applicationSecretKey ? (logger$D.assertArgument("string" == typeof apiKey.applicationId, "applicationSecretKey requires an applicationId", "applicationId", apiKey.applicationId), 
          logger$D.assertArgument("string" == typeof apiKey.applicationSecretKey, "invalid applicationSecretKey", "applicationSecretKey", "[REDACTED]"), 
          apiKeyObj.applicationId = apiKey.applicationId, apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey, 
          apiKeyObj.loadBalancer = !!apiKey.loadBalancer) : apiKey.applicationId ? (logger$D.assertArgument("string" == typeof apiKey.applicationId, "apiKey.applicationId must be a string", "apiKey.applicationId", apiKey.applicationId), 
          apiKeyObj.applicationId = apiKey.applicationId, apiKeyObj.loadBalancer = !!apiKey.loadBalancer) : logger$D.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", apiKey), 
          apiKeyObj;
        }
      }, {
        key: "getUrl",
        value: function(network, apiKey) {
          var host = null;
          switch (network ? network.name : "unknown") {
           case "homestead":
            host = "eth-mainnet.gateway.pokt.network";
            break;

           case "ropsten":
            host = "eth-ropsten.gateway.pokt.network";
            break;

           case "rinkeby":
            host = "eth-rinkeby.gateway.pokt.network";
            break;

           case "goerli":
            host = "eth-goerli.gateway.pokt.network";
            break;

           default:
            logger$D.throwError("unsupported network", Logger.errors.INVALID_ARGUMENT, {
              argument: "network",
              value: network
            });
          }
          var connection = {
            url: apiKey.loadBalancer ? "https://".concat(host, "/v1/lb/").concat(apiKey.applicationId) : "https://".concat(host, "/v1/").concat(apiKey.applicationId),
            headers: {}
          };
          return null != apiKey.applicationSecretKey && (connection.user = "", connection.password = apiKey.applicationSecretKey), 
          connection;
        }
      } ]), PocketProvider;
    }(UrlJsonRpcProvider), logger$E = new Logger(version$m), _nextId = 1;
    function buildWeb3LegacyFetcher(provider, sendFunc) {
      var fetcher = "Web3LegacyFetcher";
      return function(method, params) {
        var _this85 = this;
        "eth_sign" == method && (provider.isMetaMask || provider.isStatus) && (method = "personal_sign", 
        params = [ params[1], params[0] ]);
        var request = {
          method,
          params,
          id: _nextId++,
          jsonrpc: "2.0"
        };
        return new Promise((function(resolve, reject) {
          _this85.emit("debug", {
            action: "request",
            fetcher,
            request: deepCopy(request),
            provider: _this85
          }), sendFunc(request, (function(error, response) {
            if (error) return _this85.emit("debug", {
              action: "response",
              fetcher,
              error,
              request,
              provider: _this85
            }), reject(error);
            if (_this85.emit("debug", {
              action: "response",
              fetcher,
              request,
              response,
              provider: _this85
            }), response.error) {
              var _error3 = new Error(response.error.message);
              return _error3.code = response.error.code, _error3.data = response.error.data, reject(_error3);
            }
            resolve(response.result);
          }));
        }));
      };
    }
    var Web3Provider = function(_JsonRpcProvider4) {
      _inherits(Web3Provider, _JsonRpcProvider4);
      var _super57 = _createSuper(Web3Provider);
      function Web3Provider(provider, network) {
        var _this87;
        _classCallCheck(this, Web3Provider), logger$E.checkNew(this instanceof Web3Provider ? this.constructor : void 0, Web3Provider), 
        null == provider && logger$E.throwArgumentError("missing provider", "provider", provider);
        var path = null, jsonRpcFetchFunc = null, subprovider = null;
        return "function" == typeof provider ? (path = "unknown:", jsonRpcFetchFunc = provider) : (!(path = provider.host || provider.path || "") && provider.isMetaMask && (path = "metamask"), 
        subprovider = provider, provider.request ? ("" === path && (path = "eip-1193:"), 
        jsonRpcFetchFunc = function(provider) {
          return function(method, params) {
            var _this86 = this;
            null == params && (params = []), "eth_sign" == method && (provider.isMetaMask || provider.isStatus) && (method = "personal_sign", 
            params = [ params[1], params[0] ]);
            var request = {
              method,
              params
            };
            return this.emit("debug", {
              action: "request",
              fetcher: "Eip1193Fetcher",
              request: deepCopy(request),
              provider: this
            }), provider.request(request).then((function(response) {
              return _this86.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                response,
                provider: _this86
              }), response;
            }), (function(error) {
              throw _this86.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                error,
                provider: _this86
              }), error;
            }));
          };
        }(provider)) : provider.sendAsync ? jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider)) : provider.send ? jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider)) : logger$E.throwArgumentError("unsupported provider", "provider", provider), 
        path || (path = "unknown:")), defineReadOnly(_assertThisInitialized(_this87 = _super57.call(this, path, network)), "jsonRpcFetchFunc", jsonRpcFetchFunc), 
        defineReadOnly(_assertThisInitialized(_this87), "provider", subprovider), _this87;
      }
      return _createClass(Web3Provider, [ {
        key: "send",
        value: function(method, params) {
          return this.jsonRpcFetchFunc(method, params);
        }
      } ]), Web3Provider;
    }(JsonRpcProvider), logger$F = new Logger(version$m);
    function getDefaultProvider(network, options) {
      if (null == network && (network = "homestead"), "string" == typeof network) {
        var match = network.match(/^(ws|http)s?:/i);
        if (match) switch (match[1]) {
         case "http":
          return new JsonRpcProvider(network);

         case "ws":
          return new WebSocketProvider(network);

         default:
          logger$F.throwArgumentError("unsupported URL scheme", "network", network);
        }
      }
      var n = _getNetwork(network);
      return n && n._defaultProvider || logger$F.throwError("unsupported getDefaultProvider network", Logger.errors.NETWORK_ERROR, {
        operation: "getDefaultProvider",
        network
      }), n._defaultProvider({
        FallbackProvider,
        AlchemyProvider,
        CloudflareProvider,
        EtherscanProvider,
        InfuraProvider,
        JsonRpcProvider,
        NodesmithProvider,
        PocketProvider,
        Web3Provider,
        IpcProvider
      }, options);
    }
    var index$3 = Object.freeze({
      __proto__: null,
      Provider,
      BaseProvider,
      Resolver,
      UrlJsonRpcProvider,
      FallbackProvider,
      AlchemyProvider,
      AlchemyWebSocketProvider,
      CloudflareProvider,
      EtherscanProvider,
      InfuraProvider,
      InfuraWebSocketProvider,
      JsonRpcProvider,
      JsonRpcBatchProvider,
      NodesmithProvider,
      PocketProvider,
      StaticJsonRpcProvider,
      Web3Provider,
      WebSocketProvider,
      IpcProvider,
      JsonRpcSigner,
      getDefaultProvider,
      getNetwork: _getNetwork,
      isCommunityResource,
      isCommunityResourcable,
      showThrottleMessage,
      Formatter
    }), regexBytes = new RegExp("^bytes([0-9]+)$"), regexNumber = new RegExp("^(u?int)([0-9]*)$"), regexArray = new RegExp("^(.*)\\[([0-9]*)\\]$"), Zeros$1 = "0000000000000000000000000000000000000000000000000000000000000000";
    function _pack(type, value, isArray) {
      switch (type) {
       case "address":
        return isArray ? zeroPad(value, 32) : arrayify(value);

       case "string":
        return toUtf8Bytes(value);

       case "bytes":
        return arrayify(value);

       case "bool":
        return value = value ? "0x01" : "0x00", isArray ? zeroPad(value, 32) : arrayify(value);
      }
      var match = type.match(regexNumber);
      if (match) {
        var size = parseInt(match[2] || "256");
        if (match[2] && String(size) !== match[2] || size % 8 != 0 || 0 === size || size > 256) throw new Error("invalid number type - " + type);
        return isArray && (size = 256), zeroPad(value = BigNumber.from(value).toTwos(size), size / 8);
      }
      if (match = type.match(regexBytes)) {
        var _size2 = parseInt(match[1]);
        if (String(_size2) !== match[1] || 0 === _size2 || _size2 > 32) throw new Error("invalid bytes type - " + type);
        if (arrayify(value).byteLength !== _size2) throw new Error("invalid value for " + type);
        return isArray ? arrayify((value + Zeros$1).substring(0, 66)) : value;
      }
      if ((match = type.match(regexArray)) && Array.isArray(value)) {
        var baseType = match[1];
        if (parseInt(match[2] || String(value.length)) != value.length) throw new Error("invalid value for " + type);
        var result = [];
        return value.forEach((function(value) {
          result.push(_pack(baseType, value, !0));
        })), concat(result);
      }
      throw new Error("invalid type - " + type);
    }
    function pack$1(types, values) {
      if (types.length != values.length) throw new Error("type/value count mismatch");
      var tight = [];
      return types.forEach((function(type, index) {
        tight.push(_pack(type, values[index]));
      })), hexlify(concat(tight));
    }
    var logger$G = new Logger("units/5.2.0"), names = [ "wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether" ];
    function formatUnits(value, unitName) {
      if ("string" == typeof unitName) {
        var _index5 = names.indexOf(unitName);
        -1 !== _index5 && (unitName = 3 * _index5);
      }
      return formatFixed(value, null != unitName ? unitName : 18);
    }
    function parseUnits(value, unitName) {
      if ("string" != typeof value && logger$G.throwArgumentError("value must be a string", "value", value), 
      "string" == typeof unitName) {
        var _index6 = names.indexOf(unitName);
        -1 !== _index6 && (unitName = 3 * _index6);
      }
      return parseFixed(value, null != unitName ? unitName : 18);
    }
    var utils$1 = Object.freeze({
      __proto__: null,
      AbiCoder,
      defaultAbiCoder,
      Fragment,
      ErrorFragment,
      EventFragment,
      FunctionFragment,
      ParamType,
      FormatTypes,
      checkResultErrors,
      Logger,
      RLP: index,
      _fetchData,
      fetchJson,
      poll,
      checkProperties,
      deepCopy,
      defineReadOnly,
      getStatic,
      resolveProperties,
      shallowCopy,
      arrayify,
      concat,
      stripZeros,
      zeroPad,
      isBytes,
      isBytesLike,
      defaultPath,
      HDNode,
      SigningKey,
      Interface,
      LogDescription,
      TransactionDescription,
      base58: Base58,
      base64: index$2,
      hexlify,
      isHexString,
      hexConcat,
      hexStripZeros,
      hexValue,
      hexZeroPad,
      hexDataLength,
      hexDataSlice,
      nameprep,
      _toEscapedUtf8String: function(bytes, onError) {
        return '"' + getUtf8CodePoints(bytes, onError).map((function(codePoint) {
          if (codePoint < 256) {
            switch (codePoint) {
             case 8:
              return "\\b";

             case 9:
              return "\\t";

             case 10:
              return "\\n";

             case 13:
              return "\\r";

             case 34:
              return '\\"';

             case 92:
              return "\\\\";
            }
            if (codePoint >= 32 && codePoint < 127) return String.fromCharCode(codePoint);
          }
          return codePoint <= 65535 ? escapeChar(codePoint) : escapeChar(55296 + ((codePoint -= 65536) >> 10 & 1023)) + escapeChar(56320 + (1023 & codePoint));
        })).join("") + '"';
      },
      toUtf8Bytes,
      toUtf8CodePoints,
      toUtf8String,
      Utf8ErrorFuncs,
      formatBytes32String: function(text) {
        var bytes = toUtf8Bytes(text);
        if (bytes.length > 31) throw new Error("bytes32 string must be less than 32 bytes");
        return hexlify(concat([ bytes, HashZero ]).slice(0, 32));
      },
      parseBytes32String: function(bytes) {
        var data = arrayify(bytes);
        if (32 !== data.length) throw new Error("invalid bytes32 - not 32 bytes long");
        if (0 !== data[31]) throw new Error("invalid bytes32 string - no null terminator");
        for (var length = 31; 0 === data[length - 1]; ) length--;
        return toUtf8String(data.slice(0, length));
      },
      hashMessage,
      namehash,
      isValidName: function(name) {
        try {
          for (var comps = name.split("."), _i11 = 0; _i11 < comps.length; _i11++) if (0 === nameprep(comps[_i11]).length) throw new Error("empty");
          return !0;
        } catch (error) {}
        return !1;
      },
      id,
      _TypedDataEncoder: TypedDataEncoder,
      getAddress: _getAddress,
      getIcapAddress: function(address) {
        for (var value, base36 = (value = _getAddress(address).substring(2), new BN(value, 16).toString(36)).toUpperCase(); base36.length < 30; ) base36 = "0" + base36;
        return "XE" + ibanChecksum("XE00" + base36) + base36;
      },
      getContractAddress: _getContractAddress,
      getCreate2Address: function(from, salt, initCodeHash) {
        return 32 !== hexDataLength(salt) && logger$7.throwArgumentError("salt must be 32 bytes", "salt", salt), 
        32 !== hexDataLength(initCodeHash) && logger$7.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", initCodeHash), 
        _getAddress(hexDataSlice(keccak256(concat([ "0xff", _getAddress(from), salt, initCodeHash ])), 12));
      },
      isAddress: function(address) {
        try {
          return _getAddress(address), !0;
        } catch (error) {}
        return !1;
      },
      formatEther: function(wei) {
        return formatUnits(wei, 18);
      },
      parseEther: function(ether) {
        return parseUnits(ether, 18);
      },
      formatUnits,
      parseUnits,
      commify: function(value) {
        var comps = String(value).split(".");
        (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || "." === value || "-." === value) && logger$G.throwArgumentError("invalid value", "value", value);
        var whole = comps[0], negative = "";
        for ("-" === whole.substring(0, 1) && (negative = "-", whole = whole.substring(1)); "0" === whole.substring(0, 1); ) whole = whole.substring(1);
        "" === whole && (whole = "0");
        var suffix = "";
        for (2 === comps.length && (suffix = "." + (comps[1] || "0")); suffix.length > 2 && "0" === suffix[suffix.length - 1]; ) suffix = suffix.substring(0, suffix.length - 1);
        for (var formatted = []; whole.length; ) {
          if (whole.length <= 3) {
            formatted.unshift(whole);
            break;
          }
          var _index4 = whole.length - 3;
          formatted.unshift(whole.substring(_index4)), whole = whole.substring(0, _index4);
        }
        return negative + formatted.join(",") + suffix;
      },
      computeHmac,
      keccak256,
      ripemd160: ripemd160$1,
      sha256: sha256$1,
      sha512: function(data) {
        return "0x" + hash_1.sha512().update(arrayify(data)).digest("hex");
      },
      randomBytes,
      shuffled,
      solidityPack: pack$1,
      solidityKeccak256: function(types, values) {
        return keccak256(pack$1(types, values));
      },
      soliditySha256: function(types, values) {
        return sha256$1(pack$1(types, values));
      },
      splitSignature,
      joinSignature,
      accessListify,
      parseTransaction: parse,
      serializeTransaction: serialize,
      getJsonWalletAddress: function(json) {
        if (isCrowdsaleWallet(json)) try {
          return _getAddress(JSON.parse(json).ethaddr);
        } catch (error) {
          return null;
        }
        if (isKeystoreWallet(json)) try {
          return _getAddress(JSON.parse(json).address);
        } catch (error) {
          return null;
        }
        return null;
      },
      computeAddress,
      recoverAddress,
      computePublicKey,
      recoverPublicKey,
      verifyMessage: function(message, signature) {
        return recoverAddress(hashMessage(message), signature);
      },
      verifyTypedData: function(domain, types, value, signature) {
        return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);
      },
      getAccountPath: function(index) {
        return ("number" != typeof index || index < 0 || index >= 2147483648 || index % 1) && logger$l.throwArgumentError("invalid account index", "index", index), 
        "m/44'/60'/".concat(index, "'/0/0");
      },
      mnemonicToEntropy,
      entropyToMnemonic,
      isValidMnemonic: function(mnemonic, wordlist) {
        try {
          return mnemonicToEntropy(mnemonic, wordlist), !0;
        } catch (error) {}
        return !1;
      },
      mnemonicToSeed,
      get SupportedAlgorithm() {
        return SupportedAlgorithm;
      },
      get UnicodeNormalizationForm() {
        return UnicodeNormalizationForm;
      },
      get Utf8ErrorReason() {
        return Utf8ErrorReason;
      },
      Indexed
    }), version$o = "ethers/5.2.0", logger$H = new Logger(version$o), ethers = Object.freeze({
      __proto__: null,
      Signer,
      Wallet,
      VoidSigner,
      getDefaultProvider,
      providers: index$3,
      BaseContract,
      Contract,
      ContractFactory,
      BigNumber,
      FixedNumber,
      constants: index$1,
      get errors() {
        return ErrorCode;
      },
      logger: logger$H,
      utils: utils$1,
      wordlists,
      version: version$o,
      Wordlist
    });
    try {
      var _anyGlobal2 = window;
      null == _anyGlobal2._ethers && (_anyGlobal2._ethers = ethers);
    } catch (error) {}
  },
  653360: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      ECDHVerifyKey: () => ECDHVerifyKey,
      accelerateTrans: () => accelerateTrans,
      addCustomerNetwork: () => addCustomerNetwork,
      addCustomerNetworkToken: () => addCustomerNetworkToken,
      addFeedback: () => addFeedback,
      addToken: () => addToken,
      allTokensMessage: () => allTokensMessage,
      assetMarkUTXO: () => assetMarkUTXO,
      babylonAssetReport: () => babylonAssetReport,
      backupDelete: () => backupDelete,
      backupDetail: () => backupDetail,
      backupListV2: () => backupListV2,
      backupUpdate: () => backupUpdate,
      batchBalance: () => batchBalance,
      buyGetChainList: () => buyGetChainList,
      buyGetConfig: () => buyGetConfig,
      buyGetHistoryList: () => buyGetHistoryList,
      buyGetPrice: () => buyGetPrice,
      buyGetTokenAddress: () => buyGetTokenAddress,
      buyGetTokenList: () => buyGetTokenList,
      buyPushRecord: () => buyPushRecord,
      centerExchange: () => centerExchange,
      centerExchangeSubmit: () => centerExchangeSubmit,
      chainBalanceList: () => chainBalanceList,
      checkBackupExist: () => checkBackupExist,
      checkBackupQuery: () => checkBackupQuery,
      coinNetworkInfo: () => coinNetworkInfo,
      connection: () => connection,
      cookiesVerify: () => cookiesVerify,
      customerEvmCoinDetail: () => customerEvmCoinDetail,
      customerEvmGas: () => customerEvmGas,
      customerEvmToken: () => customerEvmToken,
      customerEvmTransAllCoin: () => customerEvmTransAllCoin,
      dappRecord: () => dappRecord,
      decryptionBatch: () => decryptionBatch,
      defiCategoryList: () => defiCategoryList,
      defiProjectList: () => defiProjectList,
      delCustomerNetwork: () => delCustomerNetwork,
      delCustomerNetworkToken: () => delCustomerNetworkToken,
      editNFT: () => editNFT,
      encryptionBatch: () => encryptionBatch,
      evmMint: () => evmMint,
      evmMintV2: () => evmMintV2,
      exchangeCancel: () => exchangeCancel,
      exchangeCancelFee: () => exchangeCancelFee,
      exchangeHistoryDetail: () => exchangeHistoryDetail,
      exchangeHistoryList: () => exchangeHistoryList,
      exchangeQuote: () => exchangeQuote,
      exchangeRate: () => exchangeRate,
      exchangeResubmit: () => exchangeResubmit,
      fetchChainGasData: () => fetchChainGasData,
      fetchChainGasTrend: () => fetchChainGasTrend,
      fetchSwapType: () => fetchSwapType,
      gasIsUsable: () => gasIsUsable,
      gasViewChainList: () => gasViewChainList,
      getAddressByDomain: () => getAddressByDomain,
      getBackupRecoveryBatch: () => getBackupRecoveryBatch,
      getBlob20Balance: () => getBlob20Balance,
      getChainKey: () => getChainKey,
      getChainStableCoin: () => getChainStableCoin,
      getCoinPrice: () => getCoinPrice,
      getCommunityList: () => getCommunityList,
      getDepositAddress: () => getDepositAddress,
      getDomainByAddress: () => getDomainByAddress,
      getDomains: () => getDomains,
      getECDHPublicKey: () => getECDHPublicKey,
      getExchangeTranstionInfo: () => getExchangeTranstionInfo,
      getInfoCoin: () => getInfoCoin,
      getIsRegular: () => getIsRegular,
      getMpcWallet: () => getMpcWallet,
      getNFTDetail: () => getNFTDetail,
      getNFTList: () => getNFTList,
      getNFTTrans: () => getNFTTrans,
      getNFTTransV3: () => getNFTTransV3,
      getNetworkList: () => getNetworkList,
      getQAPage: () => getQAPage,
      getRgbppAssetsByBtcAddress: () => getRgbppAssetsByBtcAddress,
      getSafepwdVerify: () => getSafepwdVerify,
      getSingleTokenInfo: () => getSingleTokenInfo,
      getStakeAPR: () => getStakeAPR,
      getTickBalance: () => getTickBalance,
      getTokenInfos: () => getTokenInfos,
      getTonTransStatusByHash: () => getTonTransStatusByHash,
      getTonTransStatusByInHash: () => getTonTransStatusByInHash,
      getTransAllCoin: () => getTransAllCoin,
      getTransaction: () => getTransaction,
      getTransactionStatus: () => getTransactionStatus,
      getTransactionV2: () => getTransactionV2,
      getTransactionV3: () => getTransactionV3,
      getTransactionV4: () => getTransactionV4,
      getVerifyCode: () => getVerifyCode,
      getWalletCoinDetail: () => getWalletCoinDetail,
      getWalletConfig: () => getWalletConfig,
      getWalletIdByAddress: () => getWalletIdByAddress,
      getWeb3Balance: () => getWeb3Balance,
      hashExist: () => hashExist,
      homeWalletToken: () => homeWalletToken,
      homeWalletTokenList: () => homeWalletTokenList,
      ordinalsDeploy: () => ordinalsDeploy,
      ordinalsGetNFTUrl: () => ordinalsGetNFTUrl,
      ordinalsInscribeNFT: () => ordinalsInscribeNFT,
      ordinalsInscriptions: () => ordinalsInscriptions,
      ordinalsMint: () => ordinalsMint,
      ordinalsToList: () => ordinalsToList,
      ordinalsTransfer: () => ordinalsTransfer,
      pendingTransConfirm: () => pendingTransConfirm,
      postAddTokenTransData: () => postAddTokenTransData,
      postAddTransData: () => postAddTransData,
      postBackupBatch: () => postBackupBatch,
      postBackupBatchV2: () => postBackupBatchV2,
      queryBatch: () => queryBatch,
      queryMatchPriceForDecutoken: () => queryMatchPriceForDecutoken,
      recordWalletAddress: () => recordWalletAddress,
      recoveryUTXO: () => recoveryUTXO,
      relievedUTXO: () => relievedUTXO,
      saveUserAccredit: () => saveUserAccredit,
      searchExchangeTokenList: () => searchExchangeTokenList,
      secondVerifyMethods: () => secondVerifyMethods,
      sendMemoStatus: () => sendMemoStatus,
      sendRawTransactionBatch: () => sendRawTransactionBatch,
      submitTokenToGas: () => submitTokenToGas,
      swapGetTokenList: () => swapGetTokenList,
      tokenIndexSearch: () => tokenIndexSearch,
      tokenManage: () => tokenManage,
      tokenSearch: () => tokenSearch,
      ton20BatchMint: () => ton20BatchMint,
      ton20Deploy: () => ton20Deploy,
      ton20Transfer: () => ton20Transfer,
      tradeInfo: () => tradeInfo,
      transDataDetail: () => transDataDetail,
      utxoManageExist: () => utxoManageExist,
      utxoManageList: () => utxoManageList,
      utxoManageStatistics: () => utxoManageStatistics,
      utxoRelievedList: () => utxoRelievedList,
      walletListBalance: () => walletListBalance,
      walletRecord: () => walletRecord
    });
    __webpack_require__(207452), __webpack_require__(689560), __webpack_require__(579389), 
    __webpack_require__(380115), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(505086), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(407899), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(103101), __webpack_require__(936012), 
    __webpack_require__(269193), __webpack_require__(564216), __webpack_require__(418665), 
    __webpack_require__(929979), __webpack_require__(14602);
    var _config__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(289933), _httpService__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(227383), _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(419969), _bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(358547);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var postBackupBatch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupBatch"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang"),
        plug_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_25__.version
      }, params));
    }, postBackupBatchV2 = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupBatchV2"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang"),
        plug_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_25__.version
      }, params));
    }, getBackupRecoveryBatch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupRecoveryBatch"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang"),
        plug_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_25__.version
      }, params));
    }, backupUpdate = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupUpdate"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang"),
        plug_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_25__.version
      }, params));
    }, getSafepwdVerify = function() {
      var fn, _ref = (fn = regeneratorRuntime.mark((function _callee(params) {
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.abrupt("return", (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/verifySafePwd"), _objectSpread({
              Timestamp: Date.now() / 1e3
            }, params)));

           case 1:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })), function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      });
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), getECDHPublicKey = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/publicKey"), params);
    }, ECDHVerifyKey = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/common/verifyKey"), params);
    }, encryptionBatch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/encryptionBatch"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang")
      }, params));
    }, backupDetail = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupDetail"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang")
      }, params));
    }, backupListV2 = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupList"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang")
      }, params));
    }, backupDelete = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupDel"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang")
      }, params));
    }, decryptionBatch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/decryptionBatch"), _objectSpread({
        Timestamp: Date.now() / 1e3,
        appLang: localStorage.getItem("lang")
      }, params));
    }, checkBackupExist = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupExist"), _objectSpread({
        plug_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_25__.version
      }, params));
    }, checkBackupQuery = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.chromePostData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/backupQuery"), _objectSpread({
        plug_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_25__.version
      }, params));
    }, homeWalletToken = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.pi, "/wallet/token"), params);
    }, homeWalletTokenList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/wallet/tokenList"), params);
    }, allTokensMessage = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/token/address?url=/token/address&").concat(params));
    }, tokenSearch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.hL, "/token/search?url=/token/address&").concat(params));
    }, tokenIndexSearch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.hL, "/token/IndexSearch?url=/token/address&").concat(params));
    }, tokenManage = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/coin/edit"), params);
    }, getTokenInfos = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/token/info?url=/token/info&address=").concat(params.contractAddress, "&chain_type=").concat(params.chain));
    }, getSingleTokenInfo = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/token/info?&address=").concat(params.contractAddress, "&chain_type=").concat(params.chain));
    }, addToken = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/coin/add"), params);
    }, walletListBalance = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/wallet/balance"), params);
    }, getTransaction = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/user/transcationData"), params);
    }, getNetworkList = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.pi, "/chain/config"));
    }, getInfoCoin = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_26__.zC, "/token/native-price"), params);
    }, getChainKey = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/chain/key"));
    }, recordWalletAddress = function(params, headers) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/gatewallet/record"), params, headers);
    }, walletRecord = function(params, headers) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/userTrace/walletRecord"), params, headers);
    }, getTransAllCoin = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.pi, "/token/transAllCoin?url=/token/transAllCoin&token_type=").concat(params.tokenType, "&chain_name=").concat(params.chainName, "&limit=").concat(params.limit, "&address=").concat(params.address, "&is_filter=").concat(params.isFilter, "&is_split=").concat(params.isSplit));
    }, coinNetworkInfo = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/token/coinNetworkInfo"), params);
    }, getWeb3Balance = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/web3/getBalance?address=").concat(params.address, "&chain_name=").concat(params.chain_name));
    }, getNFTList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__._D, "/nft/list"), params);
    }, getNFTDetail = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.hL, "/nft/detail"), params);
    }, editNFT = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/nft/edit"), params);
    }, getNFTTrans = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.pi, "/nft/trans"), params);
    }, getNFTTransV3 = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/nft/trans"), params);
    }, getDepositAddress = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/wallet/depositAddress?chain=").concat(params.chain, "&currencyType=").concat(params.currencyType));
    }, getWalletCoinDetail = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.pi, "/wallet/coin/detail"), params);
    }, getTransactionV2 = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/user/transcationData"), params);
    }, getWalletConfig = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/wallet/config"), params);
    }, postAddTransData = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.pi, "/nft/addTransData"), params);
    }, postAddTokenTransData = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/trans/record"), params);
    }, dappRecord = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/userTrace/dappRecord"), params);
    }, buyGetTokenAddress = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/getTokenAddress?wallet_id=").concat(params.walletId, "&chain_name=").concat(params.chainName, "&token_name=").concat(params.tokenName));
    }, buyGetTokenList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/getTokenList?chain_name=").concat(params ? params.chain_name : ""));
    }, buyGetChainList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/getChainList"));
    }, buyGetConfig = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/getConfig"));
    }, buyPushRecord = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/pushRecord"), params);
    }, buyGetHistoryList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/list?page_index=").concat(params.pageNum, "&page_size=").concat(params.pageSize));
    }, buyGetPrice = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/getPrice?fiat=").concat(params.fiat, "&tokenName=").concat(params.tokenName, "&amount=").concat(params.amount, "&chain=").concat(params.chain));
    }, getQAPage = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/view/getQAPage"));
    }, accelerateTrans = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/app/web3/transactions/accelerate?chainName=").concat(params.chainName, "&txId=").concat(params.txId, "&tokenName=").concat(params.tokenName, "&feeRate=").concat(params.feeRate));
    }, ordinalsDeploy = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/deploy"), params);
    }, ordinalsMint = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/mint"), params);
    }, ordinalsTransfer = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/transfer"), params);
    }, ordinalsToList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/toList"), params);
    }, addFeedback = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/feedback/addFeedback"), params);
    }, ordinalsInscribeNFT = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/mintImageAndText"), params);
    }, ordinalsInscriptions = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/config"), params);
    }, ordinalsGetNFTUrl = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/common/upload"), params);
    }, swapGetTokenList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/tokenList?wallet_id=").concat(params.walletId));
    }, fetchSwapType = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/exchangeMethod?chain_from=").concat(params.chain_from, "&asset_from=").concat(params.asset_from, "&chain_to=").concat(params.chain_to, "&asset_to=").concat(params.asset_to));
    }, centerExchange = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.l0, "/exchange/coin/inquiryPrice"), params);
    }, exchangeQuote = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.l0, "/exchange/coin/inquiryPriceV2"), params);
    }, centerExchangeSubmit = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/user/exchangeSubmit"), params);
    }, exchangeHistoryList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/user/historyList?uid=").concat(params.uid, "&wallet_id=").concat(params.walletId));
    }, exchangeHistoryDetail = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/user/exchangeDetail?order_id=").concat(params.order_id, "&wallet_id=").concat(params.walletId));
    }, exchangeCancelFee = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/user/exchangeCancelFee?order_id=").concat(params.order_id));
    }, exchangeCancel = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/user/exchangeCancel"), params);
    }, exchangeResubmit = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/user/exchangeResubmit"), params);
    }, chainBalanceList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/chainBalanceList"), params);
    }, addCustomerNetwork = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/addCustomerNetwork"), params);
    }, delCustomerNetwork = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/delCustomerNetwork"), params);
    }, customerEvmToken = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/customerEvmToken"), params);
    }, customerEvmTransAllCoin = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/customerEvmTransAllCoin?token_type=").concat(params.tokenType, "&chain_name=").concat(params.chainName, "&network_key=").concat(params.networkKey, "&limit=").concat(params.limit, "&address=").concat(params.address, "&is_filter=").concat(params.isFilter, "&chain_id=").concat(params.chainId, "&type=").concat(params.type));
    }, addCustomerNetworkToken = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/addCustomerNetworkToken"), params);
    }, delCustomerNetworkToken = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/delCustomerNetworkToken"), params);
    }, customerEvmGas = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/customerEvmGas?rpc_url=").concat(params.rpc_url, "&type=").concat(params.type));
    }, customerEvmCoinDetail = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/customerNetwork/customerEvmCoinDetail"), params);
    }, evmMint = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/evmMint"), params);
    }, evmMintV2 = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/evmMintV2"), params);
    }, tradeInfo = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/token/tradeInfo?token_short_name=").concat(params.token_short_name, "&chain_name=").concat(params.chain_name, "&is_inscription=").concat(params.is_inscription, "&protocol=").concat(params.protocol));
    }, batchBalance = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_26__.zC, "/wallet/batch_balance"), params);
    }, getDomains = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/domains"));
    }, defiProjectList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/project/list?wallet_id=").concat(params.wallet_id, "&project_name=").concat(params.project_name, "&category=").concat(params.category));
    }, defiCategoryList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/project/category?wallet_id=").concat(params.wallet_id, "&project_name=").concat(params.project_name));
    }, getTransactionV3 = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/user/transcationData"), params);
    }, getTransactionV4 = function(params, config) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.hL, "/user/transcationData"), params, config);
    }, cookiesVerify = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/verify"));
    }, connection = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.wss_connection)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.H1));
    }, transDataDetail = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/user/transDataDetail?id=").concat(params.id, "&chain_name=").concat(params.chain_name));
    }, sendRawTransactionBatch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/trans/sendRawTransactionBatch"), params);
    }, queryBatch = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/trans/queryBatch"), params);
    }, saveUserAccredit = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/project/accredit"), params);
    }, hashExist = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/chain/hashExist?chainName=").concat(params.chainName, "&hash=").concat(params.hash));
    }, pendingTransConfirm = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/trans/confirm"), params);
    }, getTonTransStatusByInHash = function(chainName, hash) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("\n    ".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/trans/getHashByInHash"), {
        chain_name: chainName,
        hash
      });
    }, getTonTransStatusByHash = function(hash) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("\nhttps://toncenter.com/api/v3/transactionsByMessage?direction=in&msg_hash=".concat(encodeURIComponent(hash), "&limit=128&offset=0"));
    }, getTransactionStatus = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/trans/getTransStatus?hash=").concat(params.hash, "&chain_name=").concat(params.chainName));
    }, getCoinPrice = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.as, "/token/coinPrice?time=").concat(null == params ? void 0 : params.time, "&gate_id=").concat(null == params ? void 0 : params.gate_id));
    }, getWalletIdByAddress = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/getWalletIdByAddress"), params);
    }, searchExchangeTokenList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/exchange/tokenList"), params);
    }, getRgbppAssetsByBtcAddress = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ckb/getRgbAssets"), params);
    }, getMpcWallet = function(params, headers) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.$0, "/mpc_api/api/v1/wallet/getMpcWallet"), params, headers);
    }, utxoManageExist = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/utxoManage/exist?chainName=").concat(null == params ? void 0 : params.chainName, "&addressStr=").concat(null == params ? void 0 : params.address));
    }, utxoManageStatistics = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/utxoManage/statistics?chainName=").concat(null == params ? void 0 : params.chainName, "&address=").concat(null == params ? void 0 : params.address));
    }, utxoManageList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/utxoManage/listOccupied?chainName=").concat(null == params ? void 0 : params.chainName, "&address=").concat(null == params ? void 0 : params.address));
    }, assetMarkUTXO = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/utxoManage/assetMark"), params);
    }, relievedUTXO = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/utxoManage/relieved"), params);
    }, utxoRelievedList = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/utxoManage/listRelieved?chainName=").concat(null == params ? void 0 : params.chainName, "&address=").concat(null == params ? void 0 : params.address));
    }, recoveryUTXO = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/utxoManage/recovery"), params);
    }, gasIsUsable = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/transaction/gas/exchange/isUsable"), params);
    }, submitTokenToGas = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/transaction/gas/exchange/submit"), params);
    }, sendMemoStatus = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/trans/sendMemoStatus"), params);
    }, getExchangeTranstionInfo = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/transaction/gas/exchange/txInfo"), params);
    }, ton20Deploy = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ton20/deploy"), params);
    }, ton20BatchMint = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ton20/batchMint"), params);
    }, ton20Transfer = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ton20/transfer"), params);
    }, getTickBalance = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ton20/getTickBalance"), params);
    }, queryMatchPriceForDecutoken = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.B$, "/transaction/gas/exchange/getRequestQuote"), params);
    }, secondVerifyMethods = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/secondVerifyMethods"), params);
    }, getVerifyCode = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.SH, "/getVerifyCode"), params);
    }, getIsRegular = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/buyCrypto/isRegular"), params);
    }, getChainStableCoin = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/chain/chainStableCoin"), params);
    }, getAddressByDomain = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/network/domain/getAddress?domain=").concat(params.domain, "&tld=").concat(params.tld));
    }, getDomainByAddress = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/network/domain/getName?address=").concat(params.address, "&tld=").concat(params.tld));
    }, getBlob20Balance = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/ordinals/inscription/balance?address=").concat(params.address, "&tick=").concat(params.tick));
    }, getStakeAPR = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.mC, "/api/validator/consensus/rank"), params);
    }, exchangeRate = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/token/exchangeRate"), params);
    }, gasViewChainList = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/gasView/chainList"));
    }, fetchChainGasTrend = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/gasView/chainGasTrend"), params);
    }, fetchChainGasData = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/gasView/chainGasData"), params);
    }, babylonAssetReport = function(params) {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.postJson)("".concat(_config__WEBPACK_IMPORTED_MODULE_23__.O5, "/project/assetReport"), params);
    }, getCommunityList = function() {
      return (0, _httpService__WEBPACK_IMPORTED_MODULE_24__.getData)("".concat(_bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_26__.zC, "/community/list"));
    };
  },
  664311: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => solana_rpc
    });
    __webpack_require__(207452), __webpack_require__(259581), __webpack_require__(418665), 
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(752231), __webpack_require__(579389), 
    __webpack_require__(906048), __webpack_require__(194009), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(118772), __webpack_require__(551037), __webpack_require__(168763), 
    __webpack_require__(687136), __webpack_require__(640173), __webpack_require__(663555), 
    __webpack_require__(992157), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(504895), __webpack_require__(564216), __webpack_require__(714913), 
    __webpack_require__(498741), __webpack_require__(215195), __webpack_require__(407899), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(103101), __webpack_require__(936012);
    var wallet_core = __webpack_require__(259159), gt_on_chain = __webpack_require__(296477), index_browser_esm = __webpack_require__(262643), gt_tokens = __webpack_require__(871219), mint = __webpack_require__(121498), constants = __webpack_require__(949215), account = __webpack_require__(304491), associatedTokenAccount = __webpack_require__(509646), transferChecked = __webpack_require__(192549), calculate = __webpack_require__(745788), gt_networks = (__webpack_require__(868329), 
    __webpack_require__(447746), __webpack_require__(43148), __webpack_require__(660862)), sui_types = __webpack_require__(394001), gt_on_chain_constants = __webpack_require__(153341), type_transfer = __webpack_require__(228972), cosmos_rpc = __webpack_require__(787773);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    const wallet_core_rpc = function() {
      function WalletCoreRpc(wasm, totalNetworkDic) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, WalletCoreRpc), _defineProperty(this, "wasm", void 0), _defineProperty(this, "totalNetworkDic", void 0), 
        this.wasm = wasm, this.totalNetworkDic = totalNetworkDic;
      }
      var Constructor, protoProps, staticProps, _init, _isEffectiveAddress;
      return Constructor = WalletCoreRpc, protoProps = [ {
        key: "isValidAddress",
        value: function(address, coinName) {
          var _this$wasm = this.wasm, AnyAddress = _this$wasm.AnyAddress, CoinType = _this$wasm.CoinType;
          try {
            var coinType = CoinType[coinName];
            return AnyAddress.isValid(address, coinType);
          } catch (e) {
            return !1;
          }
        }
      }, {
        key: "isEffectiveAddress",
        value: (_isEffectiveAddress = _asyncToGenerator(regeneratorRuntime.mark((function _callee(networkKey, address) {
          var _address, _getNetworkSort, standardCosmosNetworks, _ref, chainArchitecture, isTest, key, _this$totalNetworkDic, _this$totalNetworkDic2, _this$totalNetworkDic3, hrp;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              if (_context.prev = 0, _getNetworkSort = (0, gt_networks.Fb)(this.totalNetworkDic), 
              standardCosmosNetworks = _getNetworkSort.standardCosmosNetworks, _ref = this.totalNetworkDic[networkKey] || {}, 
              chainArchitecture = _ref.chainArchitecture, isTest = _ref.isTest, address = null === (_address = address) || void 0 === _address ? void 0 : _address.trim(), 
              "SUI" != networkKey) {
                _context.next = 8;
                break;
              }
              return _context.abrupt("return", (0, sui_types.AP)(address));

             case 8:
              if ("SOL" != networkKey) {
                _context.next = 13;
                break;
              }
              return key = new index_browser_esm.J3(address), _context.abrupt("return", index_browser_esm.J3.isOnCurve(key.toBytes()));

             case 13:
              if (null == standardCosmosNetworks || !standardCosmosNetworks.includes(networkKey)) {
                _context.next = 18;
                break;
              }
              return hrp = null === (_this$totalNetworkDic = this.totalNetworkDic) || void 0 === _this$totalNetworkDic || null === (_this$totalNetworkDic2 = _this$totalNetworkDic[networkKey]) || void 0 === _this$totalNetworkDic2 || null === (_this$totalNetworkDic3 = _this$totalNetworkDic2.accountCreateParams) || void 0 === _this$totalNetworkDic3 ? void 0 : _this$totalNetworkDic3.hrp, 
              _context.abrupt("return", cosmos_rpc.A.isValidCosmosAddress({
                address,
                hrp
              }));

             case 18:
              if ("BTC" !== chainArchitecture) {
                _context.next = 22;
                break;
              }
              return _context.abrupt("return", this.isValidAddress(address, isTest ? "bitcoinTestnet" : "bitcoin"));

             case 22:
              return _context.abrupt("return", this.isValidAddress(address, gt_on_chain_constants.s8[networkKey]));

             case 23:
              _context.next = 28;
              break;

             case 25:
              return _context.prev = 25, _context.t0 = _context.catch(0), _context.abrupt("return", !1);

             case 28:
             case "end":
              return _context.stop();
            }
          }), _callee, this, [ [ 0, 25 ] ]);
        }))), function(_x, _x2) {
          return _isEffectiveAddress.apply(this, arguments);
        })
      }, {
        key: "getPrivateKeyFromB58SecretKey",
        value: function(secretKeyB58) {
          var secretKey = this.wasm.Base58.decodeNoCheck(secretKeyB58), hexSecreKey = (0, 
          type_transfer.U5)(secretKey);
          return (0, type_transfer.LL)(hexSecreKey).substring(0, 64);
        }
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(totalNetworkDic) {
          var wasm;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return _context2.next = 2, (0, wallet_core.t)();

             case 2:
              return wasm = _context2.sent, _context2.abrupt("return", new WalletCoreRpc(wasm, totalNetworkDic));

             case 4:
             case "end":
              return _context2.stop();
            }
          }), _callee2);
        }))), function(_x3) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), WalletCoreRpc;
    }();
    var node_modules_long = __webpack_require__(274442), gt_fetch = __webpack_require__(525735), bs58 = __webpack_require__(616763), bs58_default = __webpack_require__.n(bs58), gt_send_receive = __webpack_require__(15250), send_receive = __webpack_require__(492774), nacl_fast = __webpack_require__(188947), nacl_fast_default = __webpack_require__.n(nacl_fast), joypixels = __webpack_require__(352327), joypixels_default = __webpack_require__.n(joypixels), emoji_regex = __webpack_require__(90631), dist = __webpack_require__(431927), input_amount_constants = __webpack_require__(503591), gas = __webpack_require__(145581), Buffer = __webpack_require__(348287).Buffer;
    function solana_rpc_typeof(obj) {
      return solana_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, solana_rpc_typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          solana_rpc_defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e2) {
              throw _e2;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e3) {
          didErr = !0, err = _e3;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function solana_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function solana_rpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            solana_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            solana_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function solana_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, solana_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function solana_rpc_defineProperty(obj, key, value) {
      return (key = solana_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function solana_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== solana_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== solana_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === solana_rpc_typeof(key) ? key : String(key);
    }
    var SolanaRpc = function() {
      function SolanaRpc(wasm, totalNetworkDic, networkKey, rpcUrl, solanaConnection) {
        var _this = this;
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, SolanaRpc), solana_rpc_defineProperty(this, "wasm", void 0), solana_rpc_defineProperty(this, "totalNetworkDic", void 0), 
        solana_rpc_defineProperty(this, "networkKey", void 0), solana_rpc_defineProperty(this, "rpcUrl", void 0), 
        solana_rpc_defineProperty(this, "solanaConnection", void 0), solana_rpc_defineProperty(this, "getLookupTableAccounts", function() {
          var _ref = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(tx) {
            var _tx$message$addressTa, lookupTableAddresses, lookupTableAccounts;
            return regeneratorRuntime.wrap((function(_context2) {
              for (;;) switch (_context2.prev = _context2.next) {
               case 0:
                return lookupTableAddresses = (null === (_tx$message$addressTa = tx.message.addressTableLookups) || void 0 === _tx$message$addressTa ? void 0 : _tx$message$addressTa.map((function(lookup) {
                  return lookup.accountKey;
                }))) || [], _context2.next = 3, Promise.all(lookupTableAddresses.map(function() {
                  var _ref2 = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(pubkey) {
                    var _yield$_this$solanaCo, value;
                    return regeneratorRuntime.wrap((function(_context) {
                      for (;;) switch (_context.prev = _context.next) {
                       case 0:
                        return _context.next = 2, _this.solanaConnection.getAddressLookupTable(pubkey);

                       case 2:
                        if (_yield$_this$solanaCo = _context.sent, null !== (value = _yield$_this$solanaCo.value)) {
                          _context.next = 6;
                          break;
                        }
                        throw new Error("Failed to fetch address lookup table for ".concat(pubkey.toBase58()));

                       case 6:
                        return _context.abrupt("return", new index_browser_esm.kc({
                          key: pubkey,
                          state: value.state
                        }));

                       case 7:
                       case "end":
                        return _context.stop();
                      }
                    }), _callee);
                  })));
                  return function(_x2) {
                    return _ref2.apply(this, arguments);
                  };
                }()));

               case 3:
                return lookupTableAccounts = _context2.sent, _context2.abrupt("return", lookupTableAccounts);

               case 5:
               case "end":
                return _context2.stop();
              }
            }), _callee2);
          })));
          return function(_x) {
            return _ref.apply(this, arguments);
          };
        }()), this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, this.networkKey = networkKey, 
        rpcUrl && (this.rpcUrl = rpcUrl), solanaConnection && (this.solanaConnection = solanaConnection);
      }
      var Constructor, protoProps, staticProps, _init, _signSolanaNFT, _getRentFee, _getSonicGasFee, _fetchRecentPriorityFees, _getSolanaGasFee, _getSolanaGasPriceByBlocks, _getSolanaGasPriceByApi, _getGasUsedByBlocks, _getGasUsedByApi, _getUnSignSPLTokenTransferRawTransaction, _getUnSignSolTransferRawTransaction, _sendSolTransactionReTry, _signAndSendSolanaTransaction, _signHardwareSolana, _fetchIsToken, _getTokenAccountsByOwner, _isCreateAccountSplAddress, _signSolanaToken, _signSolanaMainToken, _signSolana, _getSolanaHardwareTransaction, _getSolanaTransaction, _getSolanaLatestBlockhash, _getSolanaBlance;
      return Constructor = SolanaRpc, protoProps = [ {
        key: "getSolanaBlance",
        value: (_getSolanaBlance = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3(token, sender) {
          var coinPrecision, coinAddress, pubKey, res, amount, walletCoreRpc, isToken2022, tokenAddress, _res, uiAmountString, walletPublickey, splMintPublickey, associatedAddress, accountRes;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              if (coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              !(0, gt_tokens.hT)(coinAddress)) {
                _context3.next = 12;
                break;
              }
              return pubKey = new index_browser_esm.J3(sender), _context3.next = 7, this.solanaConnection.getBalance(pubKey);

             case 7:
              return res = _context3.sent, amount = (0, calculate.dataOperation)(res, Math.pow(10, parseInt(coinPrecision)), "/"), 
              _context3.abrupt("return", {
                balance: amount
              });

             case 12:
              return _context3.next = 14, wallet_core_rpc.init(this.totalNetworkDic);

             case 14:
              return walletCoreRpc = _context3.sent, _context3.next = 17, walletCoreRpc.isEffectiveAddress(this.networkKey, coinAddress);

             case 17:
              if (!_context3.sent) {
                _context3.next = 37;
                break;
              }
              return _context3.next = 21, this.fetchIsToken2022(new index_browser_esm.J3(coinAddress));

             case 21:
              return isToken2022 = _context3.sent, _context3.next = 24, (0, mint.Ob)(new index_browser_esm.J3(coinAddress), new index_browser_esm.J3(sender), !!isToken2022 && index_browser_esm.J3.isOnCurve(new index_browser_esm.J3(sender).toBytes()), isToken2022 ? constants.sy : constants.x5);

             case 24:
              return tokenAddress = _context3.sent, _context3.prev = 25, _context3.next = 28, 
              this.solanaConnection.getTokenAccountBalance(new index_browser_esm.J3(tokenAddress));

             case 28:
              return _res = _context3.sent, uiAmountString = _res.value.uiAmountString, _context3.abrupt("return", {
                balance: uiAmountString || "0"
              });

             case 33:
              _context3.prev = 33, _context3.t0 = _context3.catch(25);

             case 35:
              _context3.next = 52;
              break;

             case 37:
              return _context3.prev = 37, walletPublickey = new index_browser_esm.J3(sender), 
              splMintPublickey = new index_browser_esm.J3(coinAddress), _context3.next = 42, (0, 
              mint.Ob)(splMintPublickey, walletPublickey);

             case 42:
              return associatedAddress = _context3.sent, _context3.next = 45, (0, account.sU)(this.solanaConnection, associatedAddress);

             case 45:
              if (!(accountRes = _context3.sent) || !coinPrecision) {
                _context3.next = 48;
                break;
              }
              return _context3.abrupt("return", {
                balance: (0, calculate.dataOperation)(accountRes.amount.toString(), Math.pow(10, parseInt(coinPrecision)), "/")
              });

             case 48:
              _context3.next = 52;
              break;

             case 50:
              _context3.prev = 50, _context3.t1 = _context3.catch(37);

             case 52:
              return _context3.abrupt("return", {
                balance: "0"
              });

             case 53:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this, [ [ 25, 33 ], [ 37, 50 ] ]);
        }))), function(_x3, _x4) {
          return _getSolanaBlance.apply(this, arguments);
        })
      }, {
        key: "signTransaction",
        value: function(params) {
          var receiver = params.receiver, privateKeyHex = params.privateKeyHex, sendAmount = params.sendAmount, blockHash = params.blockHash, priorityFee = params.priorityFee, pf = Number(null != priorityFee ? priorityFee : 0), _this$wasm = this.wasm, HexCoding = _this$wasm.HexCoding, AnySigner = _this$wasm.AnySigner, CoinType = _this$wasm.CoinType, input = wallet_core.TW.Solana.Proto.SigningInput.create({
            recentBlockhash: blockHash,
            transferTransaction: wallet_core.TW.Solana.Proto.Transfer.create({
              recipient: receiver,
              value: node_modules_long.A.fromString(sendAmount)
            }),
            privateKey: HexCoding.decode(privateKeyHex),
            priorityFeePrice: {
              price: node_modules_long.A.fromNumber(pf)
            }
          }), encoded = wallet_core.TW.Solana.Proto.SigningInput.encode(input).finish(), outputData = AnySigner.sign(encoded, CoinType.solana);
          return wallet_core.TW.Solana.Proto.SigningOutput.decode(outputData);
        }
      }, {
        key: "signSendSolanaToken",
        value: function(params) {
          var transfer, privateKeyHex = params.privateKeyHex, receiver = params.receiver, amount = params.amount, blockHash = params.blockHash, senderTokenAddress = params.senderTokenAddress, recipientTokenAddress = params.recipientTokenAddress, isFirstReceive = params.isFirstReceive, solanaPriorityFee = params.solanaPriorityFee, token = params.token, nft = params.nft, isToken2022 = params.isToken2022, _this$wasm2 = this.wasm, HexCoding = _this$wasm2.HexCoding, AnySigner = _this$wasm2.AnySigner, CoinType = _this$wasm2.CoinType, coinPrecision = token ? (0, 
          gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, this.networkKey, "token_decimal") : "0", coinAddress = token ? (0, 
          gt_tokens.N8)(token, this.networkKey, "coinAddress") : null == nft ? void 0 : nft.contractAddress, sendAmount = (0, 
          calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision)));
          transfer = isFirstReceive ? wallet_core.TW.Solana.Proto.CreateAndTransferToken.create({
            recipientMainAddress: receiver,
            recipientTokenAddress,
            tokenMintAddress: coinAddress,
            senderTokenAddress,
            amount: node_modules_long.A.fromString(sendAmount),
            decimals: parseInt(coinPrecision),
            tokenProgramId: isToken2022 ? 1 : 0
          }) : wallet_core.TW.Solana.Proto.TokenTransfer.create({
            tokenMintAddress: coinAddress,
            recipientTokenAddress,
            senderTokenAddress,
            amount: node_modules_long.A.fromString(sendAmount),
            decimals: parseInt(coinPrecision),
            tokenProgramId: isToken2022 ? 1 : 0
          });
          var input = wallet_core.TW.Solana.Proto.SigningInput.create({
            recentBlockhash: blockHash,
            tokenTransferTransaction: isFirstReceive ? null : transfer,
            createAndTransferTokenTransaction: isFirstReceive ? transfer : null,
            privateKey: HexCoding.decode(privateKeyHex),
            priorityFeePrice: {
              price: node_modules_long.A.fromNumber(Number(solanaPriorityFee))
            }
          }), encoded = wallet_core.TW.Solana.Proto.SigningInput.encode(input).finish(), outputData = AnySigner.sign(encoded, CoinType.solana);
          return wallet_core.TW.Solana.Proto.SigningOutput.decode(outputData);
        }
      }, {
        key: "getSolanaLatestBlockhash",
        value: (_getSolanaLatestBlockhash = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4() {
          var _res$result, _res$result$value, res;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _context4.next = 2, (0, gt_fetch.uJ)("POST", this.rpcUrl, {}, {
                jsonrpc: "2.0",
                id: 1,
                method: "getLatestBlockhash",
                params: []
              }, "data");

             case 2:
              return res = _context4.sent, _context4.abrupt("return", null == res || null === (_res$result = res.result) || void 0 === _res$result || null === (_res$result$value = _res$result.value) || void 0 === _res$result$value ? void 0 : _res$result$value.blockhash);

             case 4:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function() {
          return _getSolanaLatestBlockhash.apply(this, arguments);
        })
      }, {
        key: "getSolanaTransaction",
        value: (_getSolanaTransaction = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5(rpcUrl, hash_id) {
          var res;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.next = 2, (0, gt_fetch.uJ)("POST", rpcUrl, {}, {
                jsonrpc: "2.0",
                id: 1,
                method: "getTransaction",
                params: [ hash_id, "json" ]
              }, "data");

             case 2:
              return res = _context5.sent, _context5.abrupt("return", null == res ? void 0 : res.result);

             case 4:
             case "end":
              return _context5.stop();
            }
          }), _callee5);
        }))), function(_x5, _x6) {
          return _getSolanaTransaction.apply(this, arguments);
        })
      }, {
        key: "getSolanaHardwareTransaction",
        value: (_getSolanaHardwareTransaction = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
          var _hardware$device, _hardware$device2, sender, receiver, sendAmount, solanaPriorityFee, blockHash, hardware, network, modifyComputeUnits, addPriorityFee, transaction, unSignedRaw, signedRsv, signatureBytes, serializedTransaction;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, sendAmount = params.sendAmount, 
              solanaPriorityFee = params.solanaPriorityFee, blockHash = params.blockHash, hardware = params.hardware, 
              network = this.totalNetworkDic[this.networkKey], modifyComputeUnits = index_browser_esm.d_.setComputeUnitLimit({
                units: 4e3
              }), addPriorityFee = index_browser_esm.d_.setComputeUnitPrice({
                microLamports: Number(solanaPriorityFee)
              }), (transaction = new index_browser_esm.ZX).feePayer = new index_browser_esm.J3(sender), 
              transaction.recentBlockhash = blockHash, transaction.add(index_browser_esm.yq.transfer({
                fromPubkey: new index_browser_esm.J3(sender),
                toPubkey: new index_browser_esm.J3(receiver),
                lamports: Number(sendAmount)
              })), solanaPriorityFee && transaction.add(modifyComputeUnits).add(addPriorityFee), 
              unSignedRaw = transaction.serializeMessage(), _context6.next = 12, null == hardware || null === (_hardware$device = hardware.device) || void 0 === _hardware$device ? void 0 : _hardware$device.signTxRaw("SOL", unSignedRaw, {
                c: [ {
                  t: 0,
                  ca: "SOL",
                  sy: null == network ? void 0 : network.networkSimpleSymbol,
                  d: Number(network.networkPrecision),
                  ch: network.networkName,
                  curve: 4
                } ]
              });

             case 12:
              if (_context6.sent.sign) {
                _context6.next = 15;
                break;
              }
              throw new Error("user cancel");

             case 15:
              return _context6.next = 17, null == hardware || null === (_hardware$device2 = hardware.device) || void 0 === _hardware$device2 ? void 0 : _hardware$device2.request(null == hardware ? void 0 : hardware.path, 0, "0x00");

             case 17:
              return signedRsv = _context6.sent, signatureBytes = Buffer.from(signedRsv, "hex"), 
              transaction.addSignature(new index_browser_esm.J3(sender), signatureBytes), serializedTransaction = transaction.serialize(), 
              _context6.abrupt("return", bs58_default().encode(new Uint8Array(serializedTransaction)));

             case 22:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x7) {
          return _getSolanaHardwareTransaction.apply(this, arguments);
        })
      }, {
        key: "signSolana",
        value: (_signSolana = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var token, coinAddress;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              if (token = params.token, coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              !(0, gt_tokens.hT)(coinAddress)) {
                _context7.next = 9;
                break;
              }
              return _context7.next = 6, this.signSolanaMainToken(params);

             case 6:
             case 11:
              return _context7.abrupt("return", _context7.sent);

             case 9:
              return _context7.next = 11, this.signSolanaToken(params);

             case 12:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x8) {
          return _signSolana.apply(this, arguments);
        })
      }, {
        key: "signSolanaMainToken",
        value: (_signSolanaMainToken = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee8(params) {
          var _feeList, _this$totalNetworkDic, privateKey, sender, receiver, amount, gasFeeInfo, feeIndex, options, _ref3, priorityFee, coinPrecision, sendAmount, blockHash, _output, walletCoreRpc, privateKeyHex, output;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              if (privateKey = params.privateKey, sender = params.sender, receiver = params.receiver, 
              amount = params.amount, gasFeeInfo = params.gasFeeInfo, feeIndex = params.feeIndex, 
              options = params.options, _ref3 = (null === (_feeList = gasFeeInfo.feeList) || void 0 === _feeList ? void 0 : _feeList[feeIndex]) || {}, 
              priorityFee = _ref3.priorityFee, receiver) {
                _context8.next = 4;
                break;
              }
              throw new Error("Invalid recipient address");

             case 4:
              if (amount && !isNaN(Number(amount))) {
                _context8.next = 6;
                break;
              }
              throw new Error("Invalid transfer amount");

             case 6:
              if (this.rpcUrl) {
                _context8.next = 8;
                break;
              }
              throw new Error("Invalid RPC address");

             case 8:
              return coinPrecision = null === (_this$totalNetworkDic = this.totalNetworkDic[this.networkKey]) || void 0 === _this$totalNetworkDic ? void 0 : _this$totalNetworkDic.networkPrecision, 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              _context8.next = 12, this.getSolanaLatestBlockhash();

             case 12:
              if (blockHash = _context8.sent, null == options || !options.hardware) {
                _context8.next = 18;
                break;
              }
              return _context8.next = 16, this.getSolanaHardwareTransaction({
                sender,
                receiver,
                sendAmount,
                solanaPriorityFee: priorityFee,
                blockHash,
                hardware: options.hardware
              });

             case 16:
              return _output = _context8.sent, _context8.abrupt("return", {
                tx: [ _output ],
                rpcUrl: this.rpcUrl
              });

             case 18:
              return _context8.next = 20, wallet_core_rpc.init(this.totalNetworkDic);

             case 20:
              return walletCoreRpc = _context8.sent, privateKeyHex = walletCoreRpc.getPrivateKeyFromB58SecretKey(privateKey), 
              output = this.signTransaction({
                receiver,
                privateKeyHex,
                sendAmount,
                blockHash,
                priorityFee
              }), _context8.abrupt("return", {
                tx: [ null == output ? void 0 : output.encoded ],
                rpcUrl: this.rpcUrl
              });

             case 24:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x9) {
          return _signSolanaMainToken.apply(this, arguments);
        })
      }, {
        key: "signSolanaToken",
        value: (_signSolanaToken = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee9(params) {
          var _feeList2, token, privateKey, sender, receiver, amount, gasFeeInfo, options, feeIndex, _ref4, solanaPriorityFee, coinAddress, mintPublicKey, _yield$Promise$all, _yield$Promise$all2, walletCoreRpc, isToken2022, _yield$Promise$all3, _yield$Promise$all4, tokenAccounts, blockHash, _ref5, isFirstReceive, senderTokenAddress, recipientTokenAddress, signTx, signedRaw, privateKeyHex, output;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return token = params.token, privateKey = params.privateKey, sender = params.sender, 
              receiver = params.receiver, amount = params.amount, gasFeeInfo = params.gasFeeInfo, 
              options = params.options, feeIndex = params.feeIndex, _ref4 = (null === (_feeList2 = gasFeeInfo.feeList) || void 0 === _feeList2 ? void 0 : _feeList2[feeIndex]) || {}, 
              solanaPriorityFee = _ref4.priorityFee, coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              mintPublicKey = new index_browser_esm.J3(coinAddress), _context9.next = 6, Promise.all([ wallet_core_rpc.init(this.totalNetworkDic), this.fetchIsToken2022(mintPublicKey) ]);

             case 6:
              return _yield$Promise$all = _context9.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              walletCoreRpc = _yield$Promise$all2[0], isToken2022 = _yield$Promise$all2[1], _context9.next = 12, 
              Promise.all([ this.getTokenAccountsByOwner(coinAddress, sender, receiver, isToken2022), this.getSolanaLatestBlockhash() ]);

             case 12:
              if (_yield$Promise$all3 = _context9.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2), 
              tokenAccounts = _yield$Promise$all4[0], blockHash = _yield$Promise$all4[1], isFirstReceive = (_ref5 = tokenAccounts || {}).isFirstReceive, 
              senderTokenAddress = _ref5.senderTokenAddress, recipientTokenAddress = _ref5.recipientTokenAddress, 
              null == options || !options.hardware) {
                _context9.next = 24;
                break;
              }
              return _context9.next = 20, this.signHardwareSolana({
                token,
                sender,
                receiver,
                amount,
                solanaPriorityFee,
                hardware: options.hardware
              });

             case 20:
              signedRaw = _context9.sent, signTx = [ signedRaw ], _context9.next = 27;
              break;

             case 24:
              privateKeyHex = walletCoreRpc.getPrivateKeyFromB58SecretKey(privateKey), output = this.signSendSolanaToken({
                privateKeyHex,
                receiver,
                amount,
                blockHash,
                senderTokenAddress,
                recipientTokenAddress,
                isFirstReceive,
                solanaPriorityFee,
                token,
                isToken2022
              }), signTx = [ null == output ? void 0 : output.encoded ];

             case 27:
              return _context9.abrupt("return", {
                tx: signTx,
                rpcUrl: this.rpcUrl
              });

             case 28:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x10) {
          return _signSolanaToken.apply(this, arguments);
        })
      }, {
        key: "isCreateAccountSplAddress",
        value: (_isCreateAccountSplAddress = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee10(coinAddress, receiver) {
          var toAssociatedAddress, isToken2022, mintKey, receiverKey, info;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              if (_context10.prev = 0, coinAddress && "-" !== coinAddress) {
                _context10.next = 5;
                break;
              }
              toAssociatedAddress = new index_browser_esm.J3(receiver), _context10.next = 13;
              break;

             case 5:
              return _context10.next = 7, this.fetchIsToken2022(new index_browser_esm.J3(coinAddress));

             case 7:
              return isToken2022 = _context10.sent, mintKey = new index_browser_esm.J3(coinAddress), 
              receiverKey = new index_browser_esm.J3(receiver), _context10.next = 12, (0, mint.Ob)(mintKey, receiverKey, !!isToken2022 && index_browser_esm.J3.isOnCurve(new index_browser_esm.J3(receiver).toBytes()), isToken2022 ? constants.sy : constants.x5);

             case 12:
              toAssociatedAddress = _context10.sent;

             case 13:
              return _context10.next = 15, this.solanaConnection.getAccountInfo(toAssociatedAddress, "confirmed");

             case 15:
              return info = _context10.sent, _context10.abrupt("return", !!info);

             case 19:
              return _context10.prev = 19, _context10.t0 = _context10.catch(0), _context10.abrupt("return", !1);

             case 22:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this, [ [ 0, 19 ] ]);
        }))), function(_x11, _x12) {
          return _isCreateAccountSplAddress.apply(this, arguments);
        })
      }, {
        key: "getTokenAccountsByOwner",
        value: (_getTokenAccountsByOwner = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee11(mintAddress, sender, receiver, isToken2022) {
          var mintKey, senderKey, receiverKey, _yield$Promise$all5, _yield$Promise$all6, senderTokenAddress, recipientTokenAddress, info, isFirstReceive;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return mintKey = new index_browser_esm.J3(mintAddress), senderKey = new index_browser_esm.J3(sender), 
              receiverKey = new index_browser_esm.J3(receiver), _context11.next = 5, Promise.all([ (0, 
              mint.Ob)(mintKey, senderKey, !!isToken2022 && index_browser_esm.J3.isOnCurve(new index_browser_esm.J3(sender).toBytes()), isToken2022 ? constants.sy : constants.x5), (0, 
              mint.Ob)(mintKey, receiverKey, !!isToken2022 && index_browser_esm.J3.isOnCurve(new index_browser_esm.J3(receiver).toBytes()), isToken2022 ? constants.sy : constants.x5) ]);

             case 5:
              return _yield$Promise$all5 = _context11.sent, _yield$Promise$all6 = _slicedToArray(_yield$Promise$all5, 2), 
              senderTokenAddress = _yield$Promise$all6[0], recipientTokenAddress = _yield$Promise$all6[1], 
              _context11.next = 11, this.solanaConnection.getAccountInfo(recipientTokenAddress, "confirmed");

             case 11:
              return info = _context11.sent, isFirstReceive = !info, _context11.abrupt("return", {
                isFirstReceive,
                senderTokenAddress: null == senderTokenAddress ? void 0 : senderTokenAddress.toString(),
                recipientTokenAddress: null == recipientTokenAddress ? void 0 : recipientTokenAddress.toString()
              });

             case 14:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x13, _x14, _x15, _x16) {
          return _getTokenAccountsByOwner.apply(this, arguments);
        })
      }, {
        key: "fetchIsToken2022",
        value: (_fetchIsToken = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee12(mintPublicKey) {
          var _mintAccountInfo$valu, mintAccountInfo, mintAccountData;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return _context12.next = 2, this.solanaConnection.getParsedAccountInfo(mintPublicKey);

             case 2:
              return mintAccountInfo = _context12.sent, mintAccountData = null === (_mintAccountInfo$valu = mintAccountInfo.value) || void 0 === _mintAccountInfo$valu ? void 0 : _mintAccountInfo$valu.data, 
              _context12.abrupt("return", "spl-token-2022" === (null == mintAccountData ? void 0 : mintAccountData.program));

             case 5:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x17) {
          return _fetchIsToken.apply(this, arguments);
        })
      }, {
        key: "signHardwareSolana",
        value: (_signHardwareSolana = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee13(params) {
          var _this$totalNetworkDic2, token, sender, receiver, amount, solanaPriorityFee, hardware, coinPrecision, coinAddress, sendAmount, fromPublicKey, toPublicKey, mintPublicKey, networkName, coinSimpleName, coinName, coinInfo, isToken2022, programId, fromTokenAccount, toTokenAccount, transaction, modifyComputeUnits, addPriorityFee, _yield$Promise$all7, _yield$Promise$all8, rentExemptionAmount, createToTokenAccountIx, blockhash, unsignedTx, extraMsg, signature, _hardware$device3, signedRsv, signatureBytes, serializedTransaction;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return token = params.token, sender = params.sender, receiver = params.receiver, 
              amount = params.amount, solanaPriorityFee = params.solanaPriorityFee, hardware = params.hardware, 
              coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              fromPublicKey = new index_browser_esm.J3(sender), toPublicKey = new index_browser_esm.J3(receiver), 
              mintPublicKey = new index_browser_esm.J3(coinAddress), networkName = null === (_this$totalNetworkDic2 = this.totalNetworkDic[this.networkKey]) || void 0 === _this$totalNetworkDic2 ? void 0 : _this$totalNetworkDic2.networkName, 
              coinSimpleName = null == token ? void 0 : token.coinSimpleName, coinName = SolanaRpc.getSolanaCoinName(coinSimpleName), 
              coinInfo = {
                t: 0,
                ca: this.networkKey,
                sy: "SOL",
                d: 9,
                ch: networkName,
                curve: 4
              }, _context13.next = 13, this.fetchIsToken2022(mintPublicKey);

             case 13:
              return isToken2022 = _context13.sent, programId = isToken2022 ? constants.sy : void 0, 
              _context13.next = 17, (0, mint.Ob)(mintPublicKey, fromPublicKey, !!isToken2022 && index_browser_esm.J3.isOnCurve(fromPublicKey.toBytes()), programId);

             case 17:
              return fromTokenAccount = _context13.sent, _context13.next = 20, (0, mint.Ob)(mintPublicKey, toPublicKey, !!isToken2022 && index_browser_esm.J3.isOnCurve(toPublicKey.toBytes()), programId);

             case 20:
              return toTokenAccount = _context13.sent, transaction = new index_browser_esm.ZX, 
              solanaPriorityFee && (modifyComputeUnits = index_browser_esm.d_.setComputeUnitLimit({
                units: 4e5
              }), addPriorityFee = index_browser_esm.d_.setComputeUnitPrice({
                microLamports: Number(solanaPriorityFee)
              }), transaction.add(modifyComputeUnits).add(addPriorityFee)), _context13.next = 25, 
              this.solanaConnection.getAccountInfo(toTokenAccount);

             case 25:
              if (_context13.sent) {
                _context13.next = 37;
                break;
              }
              return _context13.next = 29, Promise.all([ this.solanaConnection.getMinimumBalanceForRentExemption(165), this.solanaConnection.getBalance(fromPublicKey) ]);

             case 29:
              if (_yield$Promise$all7 = _context13.sent, _yield$Promise$all8 = _slicedToArray(_yield$Promise$all7, 2), 
              rentExemptionAmount = _yield$Promise$all8[0], !(_yield$Promise$all8[1] - Number(solanaPriorityFee) < rentExemptionAmount)) {
                _context13.next = 35;
                break;
              }
              throw new Error("Insufficient funds to create fromTokenAccount");

             case 35:
              createToTokenAccountIx = (0, associatedTokenAccount.JA)(fromPublicKey, toTokenAccount, toPublicKey, mintPublicKey, programId), 
              transaction.add(createToTokenAccountIx);

             case 37:
              return transaction.add((0, transferChecked.fl)(fromTokenAccount, mintPublicKey, toTokenAccount, fromPublicKey, parseInt(sendAmount), parseInt(coinPrecision), [], programId)), 
              _context13.next = 40, this.getSolanaLatestBlockhash();

             case 40:
              return blockhash = _context13.sent, transaction.recentBlockhash = blockhash, transaction.feePayer = fromPublicKey, 
              unsignedTx = transaction.serializeMessage(), extraMsg = {
                c: [ coinInfo ],
                t: [ {
                  a: coinAddress,
                  s: coinName,
                  d: parseInt(coinPrecision),
                  t: 0
                } ]
              }, _context13.next = 47, hardware.device.signTxRaw("SOL", unsignedTx, extraMsg);

             case 47:
              if ((signature = _context13.sent).sign) {
                _context13.next = 50;
                break;
              }
              throw new Error("user cancel");

             case 50:
              if (null == signature || !signature.sign) {
                _context13.next = 58;
                break;
              }
              return _context13.next = 53, null == hardware || null === (_hardware$device3 = hardware.device) || void 0 === _hardware$device3 ? void 0 : _hardware$device3.request(null == hardware ? void 0 : hardware.path, 0, "0x00");

             case 53:
              return signedRsv = _context13.sent, signatureBytes = Buffer.from(signedRsv, "hex"), 
              transaction.addSignature(fromPublicKey, signatureBytes), serializedTransaction = transaction.serialize(), 
              _context13.abrupt("return", bs58_default().encode(new Uint8Array(serializedTransaction)));

             case 58:
              return _context13.abrupt("return", "");

             case 59:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x18) {
          return _signHardwareSolana.apply(this, arguments);
        })
      }, {
        key: "signAndSendSolanaTransaction",
        value: (_signAndSendSolanaTransaction = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee14(message, privateKey) {
          var maxRetries, sender, transFeeSol, account, tx, buffer, list, i, _buffer, newMessage, priorityFee, res, signature, _args14 = arguments;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return maxRetries = _args14.length > 2 && void 0 !== _args14[2] ? _args14[2] : 3, 
              sender = _args14.length > 3 ? _args14[3] : void 0, _context14.next = 4, (0, send_receive.TN)();

             case 4:
              if (transFeeSol = _context14.sent, account = index_browser_esm.AX.fromSecretKey(bs58_default().decode(privateKey)), 
              "string" == typeof message) buffer = bs58_default().decode(message), tx = index_browser_esm.Kt.deserialize(buffer); else {
                for (i in list = [], message) list.push(message[i]);
                _buffer = Buffer.from(list), newMessage = index_browser_esm.QB.from(_buffer), tx = new index_browser_esm.Kt(newMessage), 
                tx = index_browser_esm.Kt.deserialize(tx.serialize());
              }
              return priorityFee = (null == transFeeSol ? void 0 : transFeeSol.prioritizationFee) || "0", 
              (tx = SolanaRpc.handlePriorityFee(tx, priorityFee)).sign([ account ]), _context14.next = 12, 
              this.sendSolTransactionReTry(tx, maxRetries, sender);

             case 12:
              if (res = _context14.sent, signature = null == res ? void 0 : res.hash) {
                _context14.next = 16;
                break;
              }
              throw new Error("no signature");

             case 16:
              return _context14.abrupt("return", {
                signature
              });

             case 17:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x19, _x20) {
          return _signAndSendSolanaTransaction.apply(this, arguments);
        })
      }, {
        key: "sendSolTransactionReTry",
        value: (_sendSolTransactionReTry = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee15(tx, maxRetries, sender) {
          var lastError, i, res;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              i = 0;

             case 1:
              if (!(i < maxRetries)) {
                _context15.next = 19;
                break;
              }
              return _context15.prev = 2, _context15.next = 5, (0, gt_send_receive.cz)(this.totalNetworkDic, this.networkKey, [ bs58_default().encode(tx.serialize()) ], sender);

             case 5:
              return res = _context15.sent, _context15.abrupt("return", res);

             case 9:
              if (_context15.prev = 9, _context15.t0 = _context15.catch(2), lastError = _context15.t0, 
              i !== maxRetries - 1) {
                _context15.next = 14;
                break;
              }
              throw _context15.t0;

             case 14:
              return _context15.next = 16, new Promise((function(resolve) {
                return setTimeout(resolve, 1e3);
              }));

             case 16:
              i++, _context15.next = 1;
              break;

             case 19:
              throw lastError;

             case 20:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this, [ [ 2, 9 ] ]);
        }))), function(_x21, _x22, _x23) {
          return _sendSolTransactionReTry.apply(this, arguments);
        })
      }, {
        key: "getUnSignSolTransferRawTransaction",
        value: (_getUnSignSolTransferRawTransaction = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee16(params) {
          var sender, receiver, priorityFee, payerKey, toKey, instructions, blockhash, v0Message, vtx;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, priorityFee = params.priorityFee, 
              payerKey = new index_browser_esm.J3(sender), toKey = new index_browser_esm.J3(receiver), 
              instructions = [ index_browser_esm.d_.setComputeUnitLimit({
                units: 2e5
              }), index_browser_esm.d_.setComputeUnitPrice({
                microLamports: priorityFee
              }), index_browser_esm.yq.transfer({
                fromPubkey: payerKey,
                toPubkey: toKey,
                lamports: 0
              }) ], _context16.next = 6, this.getSolanaLatestBlockhash();

             case 6:
              return blockhash = _context16.sent, v0Message = new index_browser_esm.wu({
                payerKey,
                recentBlockhash: blockhash,
                instructions
              }).compileToV0Message(), vtx = new index_browser_esm.Kt(v0Message), _context16.abrupt("return", vtx);

             case 10:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this);
        }))), function(_x24) {
          return _getUnSignSolTransferRawTransaction.apply(this, arguments);
        })
      }, {
        key: "getUnSignSPLTokenTransferRawTransaction",
        value: (_getUnSignSPLTokenTransferRawTransaction = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee17(params) {
          var sender, receiver, coinAddress, priorityFee, hasReceiverCreate, payerKey, toKey, mintPublicKey, instructions, isToken2022, programId, fromTokenAccount, toTokenAccount, mintInfo, decimals, blockhash, v0Message, vtx;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, coinAddress = params.coinAddress, 
              priorityFee = params.priorityFee, hasReceiverCreate = params.hasReceiverCreate, 
              payerKey = new index_browser_esm.J3(sender), toKey = new index_browser_esm.J3(receiver), 
              mintPublicKey = new index_browser_esm.J3(coinAddress), instructions = [ index_browser_esm.d_.setComputeUnitLimit({
                units: 2e5
              }), index_browser_esm.d_.setComputeUnitPrice({
                microLamports: priorityFee
              }) ], _context17.next = 7, this.fetchIsToken2022(mintPublicKey);

             case 7:
              return isToken2022 = _context17.sent, programId = isToken2022 ? constants.sy : constants.x5, 
              _context17.next = 11, (0, mint.Ob)(mintPublicKey, payerKey, !!isToken2022 && index_browser_esm.J3.isOnCurve(payerKey.toBytes()), programId);

             case 11:
              return fromTokenAccount = _context17.sent, _context17.next = 14, (0, mint.Ob)(mintPublicKey, toKey, !!isToken2022 && index_browser_esm.J3.isOnCurve(toKey.toBytes()), programId);

             case 14:
              return toTokenAccount = _context17.sent, hasReceiverCreate || (isToken2022 ? instructions.push((0, 
              associatedTokenAccount.CA)(payerKey, toTokenAccount, toKey, mintPublicKey, programId)) : instructions.push((0, 
              associatedTokenAccount.JA)(payerKey, toTokenAccount, toKey, mintPublicKey, programId))), 
              _context17.next = 18, (0, mint.b6)(this.solanaConnection, mintPublicKey, void 0, programId);

             case 18:
              return mintInfo = _context17.sent, decimals = Number(mintInfo.decimals), instructions.push((0, 
              transferChecked.fl)(fromTokenAccount, mintPublicKey, toTokenAccount, payerKey, 1, decimals, [], programId)), 
              instructions.push(index_browser_esm.yq.transfer({
                fromPubkey: payerKey,
                toPubkey: toKey,
                lamports: 0
              })), _context17.next = 24, this.getSolanaLatestBlockhash();

             case 24:
              return blockhash = _context17.sent, v0Message = new index_browser_esm.wu({
                payerKey,
                recentBlockhash: blockhash,
                instructions
              }).compileToV0Message(), vtx = new index_browser_esm.Kt(v0Message), _context17.abrupt("return", vtx);

             case 28:
             case "end":
              return _context17.stop();
            }
          }), _callee17, this);
        }))), function(_x25) {
          return _getUnSignSPLTokenTransferRawTransaction.apply(this, arguments);
        })
      }, {
        key: "getGasUsedByApi",
        value: (_getGasUsedByApi = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee18(_ref6) {
          var sender, receiver, coinAddress, priorityFee, hasReceiverCreate, vtx, data;
          return regeneratorRuntime.wrap((function(_context18) {
            for (;;) switch (_context18.prev = _context18.next) {
             case 0:
              if (sender = _ref6.sender, receiver = _ref6.receiver, coinAddress = _ref6.coinAddress, 
              priorityFee = _ref6.priorityFee, hasReceiverCreate = _ref6.hasReceiverCreate, !_ref6.coinIsMain) {
                _context18.next = 7;
                break;
              }
              return _context18.next = 4, this.getUnSignSolTransferRawTransaction({
                sender,
                receiver,
                priorityFee
              });

             case 4:
              _context18.t0 = _context18.sent, _context18.next = 10;
              break;

             case 7:
              return _context18.next = 9, this.getUnSignSPLTokenTransferRawTransaction({
                sender,
                receiver,
                coinAddress,
                priorityFee,
                hasReceiverCreate
              });

             case 9:
              _context18.t0 = _context18.sent;

             case 10:
              return vtx = _context18.t0, data = Buffer.from(vtx.serialize()).toString("base64"), 
              _context18.next = 14, (0, gas.X0)({
                data
              });

             case 14:
              return _context18.abrupt("return", _context18.sent);

             case 15:
             case "end":
              return _context18.stop();
            }
          }), _callee18, this);
        }))), function(_x26) {
          return _getGasUsedByApi.apply(this, arguments);
        })
      }, {
        key: "getGasUsedByBlocks",
        value: (_getGasUsedByBlocks = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee19(_ref7) {
          var _sim$value$unitsConsu, _sim$value, sender, receiver, coinAddress, priorityFee, hasReceiverCreate, vtx, sim, unitsConsumed;
          return regeneratorRuntime.wrap((function(_context19) {
            for (;;) switch (_context19.prev = _context19.next) {
             case 0:
              if (sender = _ref7.sender, receiver = _ref7.receiver, coinAddress = _ref7.coinAddress, 
              priorityFee = _ref7.priorityFee, hasReceiverCreate = _ref7.hasReceiverCreate, !_ref7.coinIsMain) {
                _context19.next = 7;
                break;
              }
              return _context19.next = 4, this.getUnSignSolTransferRawTransaction({
                sender,
                receiver,
                priorityFee
              });

             case 4:
              _context19.t0 = _context19.sent, _context19.next = 10;
              break;

             case 7:
              return _context19.next = 9, this.getUnSignSPLTokenTransferRawTransaction({
                sender,
                receiver,
                coinAddress,
                priorityFee,
                hasReceiverCreate
              });

             case 9:
              _context19.t0 = _context19.sent;

             case 10:
              return vtx = _context19.t0, _context19.next = 13, this.solanaConnection.simulateTransaction(vtx, {
                sigVerify: !1,
                replaceRecentBlockhash: !0
              });

             case 13:
              return sim = _context19.sent, unitsConsumed = null !== (_sim$value$unitsConsu = null === (_sim$value = sim.value) || void 0 === _sim$value ? void 0 : _sim$value.unitsConsumed) && void 0 !== _sim$value$unitsConsu ? _sim$value$unitsConsu : 0, 
              _context19.abrupt("return", {
                units_consumed: unitsConsumed
              });

             case 16:
             case "end":
              return _context19.stop();
            }
          }), _callee19, this);
        }))), function(_x27) {
          return _getGasUsedByBlocks.apply(this, arguments);
        })
      }, {
        key: "getSolanaGasPriceByApi",
        value: (_getSolanaGasPriceByApi = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee20() {
          return regeneratorRuntime.wrap((function(_context20) {
            for (;;) switch (_context20.prev = _context20.next) {
             case 0:
              return _context20.next = 2, (0, gas.bx)();

             case 2:
              return _context20.abrupt("return", _context20.sent);

             case 3:
             case "end":
              return _context20.stop();
            }
          }), _callee20);
        }))), function() {
          return _getSolanaGasPriceByApi.apply(this, arguments);
        })
      }, {
        key: "getSolanaGasPriceByBlocks",
        value: (_getSolanaGasPriceByBlocks = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee21(sender) {
          var network, coinPrice, res, priorityFee, _iterator, _step, element, fee, lowPriorityFee, avgPriorityFee;
          return regeneratorRuntime.wrap((function(_context21) {
            for (;;) switch (_context21.prev = _context21.next) {
             case 0:
              return network = this.totalNetworkDic[this.networkKey], _context21.next = 3, (0, 
              gt_tokens.I)(this.networkKey);

             case 3:
              return coinPrice = _context21.sent, _context21.next = 6, this.fetchRecentPriorityFees(sender);

             case 6:
              res = _context21.sent, priorityFee = 0, _iterator = _createForOfIteratorHelper(res);
              try {
                for (_iterator.s(); !(_step = _iterator.n()).done; ) element = _step.value, (fee = element.prioritizationFee) > priorityFee && (priorityFee = fee);
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              return lowPriorityFee = (0, calculate.dataOperation)(priorityFee, 3, "/"), avgPriorityFee = priorityFee, 
              _context21.abrupt("return", {
                native_coin_price: coinPrice.toString(),
                native_decimal: +(null == network ? void 0 : network.networkPrecision),
                low_microlp_per_cu: lowPriorityFee,
                avg_microlp_per_cu: avgPriorityFee.toString(),
                fast_microlp_per_cu: (0, calculate.dataOperation)(lowPriorityFee, 5),
                super_fast_microlp_per_cu: (0, calculate.dataOperation)(lowPriorityFee, 15),
                base_microlp_per_signature: 5e9.toString()
              });

             case 13:
             case "end":
              return _context21.stop();
            }
          }), _callee21, this);
        }))), function(_x28) {
          return _getSolanaGasPriceByBlocks.apply(this, arguments);
        })
      }, {
        key: "formatGasFee",
        value: function(gasPriceResult, gasLimit) {
          var _feeList3, network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, _ref8 = gasPriceResult || {}, _ref8$low_microlp_per = _ref8.low_microlp_per_cu, low_microlp_per_cu = void 0 === _ref8$low_microlp_per ? 0 : _ref8$low_microlp_per, _ref8$avg_microlp_per = _ref8.avg_microlp_per_cu, avg_microlp_per_cu = void 0 === _ref8$avg_microlp_per ? 0 : _ref8$avg_microlp_per, _ref8$fast_microlp_pe = _ref8.fast_microlp_per_cu, fast_microlp_per_cu = void 0 === _ref8$fast_microlp_pe ? 0 : _ref8$fast_microlp_pe, _ref8$base_microlp_pe = _ref8.base_microlp_per_signature, base_microlp_per_signature = void 0 === _ref8$base_microlp_pe ? 0 : _ref8$base_microlp_pe, native_coin_price = _ref8.native_coin_price, precision = Math.pow(10, parseInt(networkPrecision) + 6), baseFee = (0, 
          calculate.dataOperation)(base_microlp_per_signature, precision, "/"), lowPriority = (0, 
          calculate.dataOperation)((0, calculate.dataOperation)(low_microlp_per_cu, gasLimit.units_consumed), 1.5), avgPriority = (0, 
          calculate.dataOperation)((0, calculate.dataOperation)(avg_microlp_per_cu, gasLimit.units_consumed), 1.5), fastPriority = (0, 
          calculate.dataOperation)((0, calculate.dataOperation)(fast_microlp_per_cu, gasLimit.units_consumed), 1.5), lowPriorityFee = (0, 
          calculate.dataOperation)(lowPriority, precision, "/"), avgPriorityFee = (0, calculate.dataOperation)(avgPriority, precision, "/"), fastPriorityFee = (0, 
          calculate.dataOperation)(fastPriority, precision, "/"), lowTransactionFee = (0, 
          calculate.dataOperation)((0, calculate.dataOperation)(baseFee, lowPriorityFee, "+"), 1.3), avgTransactionFee = (0, 
          calculate.dataOperation)((0, calculate.dataOperation)(baseFee, avgPriorityFee, "+"), 1.3), fastTransactionFee = (0, 
          calculate.dataOperation)((0, calculate.dataOperation)(baseFee, fastPriorityFee, "+"), 1.3);
          return {
            gasFee: fastTransactionFee,
            solanaPriorityFee: avgPriorityFee,
            baseFee,
            gasFeeUnit: "SOL",
            feeList: (_feeList3 = {}, solana_rpc_defineProperty(_feeList3, gt_on_chain_constants.SQ.LOW, {
              priorityFee: lowPriorityFee,
              transactionFee: lowTransactionFee,
              transactionFeeUsd: (0, calculate.dataOperation)(lowTransactionFee, native_coin_price)
            }), solana_rpc_defineProperty(_feeList3, gt_on_chain_constants.SQ.AVG, {
              priorityFee: avgPriorityFee,
              transactionFee: avgTransactionFee,
              transactionFeeUsd: (0, calculate.dataOperation)(avgTransactionFee, native_coin_price)
            }), solana_rpc_defineProperty(_feeList3, gt_on_chain_constants.SQ.FAST, {
              priorityFee: fastPriorityFee,
              transactionFee: fastTransactionFee,
              transactionFeeUsd: (0, calculate.dataOperation)(fastTransactionFee, native_coin_price)
            }), _feeList3)
          };
        }
      }, {
        key: "getSolanaGasFee",
        value: (_getSolanaGasFee = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee22(sender, receiver, token) {
          var network, coinAddress, coinIsMain, hasReceiverCreate, promises, gasPrice, _yield$Promise$allSet, _yield$Promise$allSet2, rentFeeRes, gasLimitRes, gasLimit, gasInfo, _feeList4;
          return regeneratorRuntime.wrap((function(_context22) {
            for (;;) switch (_context22.prev = _context22.next) {
             case 0:
              return network = this.totalNetworkDic[this.networkKey], _context22.prev = 1, coinAddress = (0, 
              gt_tokens.N8)(token, this.networkKey, "coinAddress"), coinIsMain = (0, gt_tokens.hT)(coinAddress), 
              _context22.next = 6, this.isCreateAccountSplAddress(coinAddress, receiver);

             case 6:
              if (hasReceiverCreate = _context22.sent, promises = [ this.getRentFee({
                coinAddress,
                receiver,
                hasReceiverCreate: !1
              }) ], network.isTest || network.isCustom) {
                _context22.next = 15;
                break;
              }
              return _context22.next = 11, this.getSolanaGasPriceByApi();

             case 11:
              gasPrice = _context22.sent, promises.push(this.getGasUsedByApi({
                sender,
                receiver,
                coinAddress,
                priorityFee: +gasPrice.avg_microlp_per_cu,
                hasReceiverCreate,
                coinIsMain
              })), _context22.next = 19;
              break;

             case 15:
              return _context22.next = 17, this.getSolanaGasPriceByBlocks(sender);

             case 17:
              gasPrice = _context22.sent, promises.push(this.getGasUsedByBlocks({
                sender,
                receiver,
                coinAddress,
                priorityFee: +gasPrice.avg_microlp_per_cu,
                hasReceiverCreate,
                coinIsMain
              }));

             case 19:
              return _context22.next = 21, Promise.allSettled(promises);

             case 21:
              return _yield$Promise$allSet = _context22.sent, _yield$Promise$allSet2 = _slicedToArray(_yield$Promise$allSet, 2), 
              rentFeeRes = _yield$Promise$allSet2[0], gasLimitRes = _yield$Promise$allSet2[1], 
              gasLimit = "fulfilled" === gasLimitRes.status ? gasLimitRes.value : {
                units_consumed: 0
              }, gasInfo = this.formatGasFee(gasPrice, gasLimit), _context22.abrupt("return", _objectSpread({
                hasReceiverCreate,
                gasLimit,
                rentFee: "fulfilled" === rentFeeRes.status ? rentFeeRes.value : input_amount_constants.Hw.toString()
              }, gasInfo));

             case 30:
              return _context22.prev = 30, _context22.t0 = _context22.catch(1), _context22.abrupt("return", {
                errorMsg: null === _context22.t0 || void 0 === _context22.t0 ? void 0 : _context22.t0.message,
                gasFee: "0",
                solanaPriorityFee: "0",
                hasReceiverCreate: !0,
                baseFee: (0, calculate.dataOperation)(5e9, Math.pow(10, parseInt(network.networkPrecision) + 6), "/"),
                gasLimit: {
                  units_consumed: 0
                },
                gasFeeUnit: "SOL",
                rentFee: input_amount_constants.Hw.toString(),
                feeList: (_feeList4 = {}, solana_rpc_defineProperty(_feeList4, gt_on_chain_constants.SQ.LOW, {
                  priorityFee: "0",
                  transactionFee: "0",
                  transactionFeeUsd: "0"
                }), solana_rpc_defineProperty(_feeList4, gt_on_chain_constants.SQ.AVG, {
                  priorityFee: "0",
                  transactionFee: "0",
                  transactionFeeUsd: "0"
                }), solana_rpc_defineProperty(_feeList4, gt_on_chain_constants.SQ.FAST, {
                  priorityFee: "0",
                  transactionFee: "0",
                  transactionFeeUsd: "0"
                }), _feeList4)
              });

             case 33:
             case "end":
              return _context22.stop();
            }
          }), _callee22, this, [ [ 1, 30 ] ]);
        }))), function(_x29, _x30, _x31) {
          return _getSolanaGasFee.apply(this, arguments);
        })
      }, {
        key: "fetchRecentPriorityFees",
        value: (_fetchRecentPriorityFees = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee23(address) {
          var params, res;
          return regeneratorRuntime.wrap((function(_context23) {
            for (;;) switch (_context23.prev = _context23.next) {
             case 0:
              return params = {
                jsonrpc: "2.0",
                id: 1,
                method: "getRecentPrioritizationFees",
                params: address ? [ new index_browser_esm.J3(address) ] : []
              }, _context23.next = 3, (0, gt_fetch.uJ)("POST", this.rpcUrl, {}, params, "data");

             case 3:
              return res = _context23.sent, _context23.abrupt("return", (null == res ? void 0 : res.result) || []);

             case 5:
             case "end":
              return _context23.stop();
            }
          }), _callee23, this);
        }))), function(_x32) {
          return _fetchRecentPriorityFees.apply(this, arguments);
        })
      }, {
        key: "getSonicGasFee",
        value: (_getSonicGasFee = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee24() {
          var network, networkPrecision, res, maxFee, _iterator2, _step2, element, fee, gasFee;
          return regeneratorRuntime.wrap((function(_context24) {
            for (;;) switch (_context24.prev = _context24.next) {
             case 0:
              return network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              _context24.next = 4, this.fetchRecentPriorityFees();

             case 4:
              res = _context24.sent, maxFee = 0, _iterator2 = _createForOfIteratorHelper(res);
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) element = _step2.value, 
                (fee = element.prioritizationFee) > maxFee && (maxFee = fee);
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
              return gasFee = (0, calculate.dataOperation)(maxFee, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context24.abrupt("return", {
                gasFee
              });

             case 10:
             case "end":
              return _context24.stop();
            }
          }), _callee24, this);
        }))), function() {
          return _getSonicGasFee.apply(this, arguments);
        })
      }, {
        key: "signSolanaMessage",
        value: function(message, privateKey) {
          var account = index_browser_esm.AX.fromSecretKey(bs58_default().decode(privateKey)), arr = [];
          for (var i in message) arr.push(message[i]);
          return {
            signature: nacl_fast_default().sign.detached(new Uint8Array(arr), account.secretKey),
            publicKey: account.publicKey
          };
        }
      }, {
        key: "getRentFee",
        value: (_getRentFee = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee25(params) {
          var _SVM_CREATE_AMOUNT_MA, coinAddress, receiver, hasReceiverCreate, isToken2022, coinIsMain, createAmount;
          return regeneratorRuntime.wrap((function(_context25) {
            for (;;) switch (_context25.prev = _context25.next) {
             case 0:
              if (coinAddress = params.coinAddress, receiver = params.receiver, hasReceiverCreate = params.hasReceiverCreate, 
              isToken2022 = !1, coinIsMain = (0, gt_tokens.hT)(coinAddress), createAmount = null !== (_SVM_CREATE_AMOUNT_MA = input_amount_constants.aA[this.networkKey]) && void 0 !== _SVM_CREATE_AMOUNT_MA ? _SVM_CREATE_AMOUNT_MA : input_amount_constants.Hw, 
              coinIsMain) {
                _context25.next = 8;
                break;
              }
              return _context25.next = 7, this.fetchIsToken2022(new index_browser_esm.J3(coinAddress));

             case 7:
              isToken2022 = _context25.sent;

             case 8:
              if (!isToken2022) {
                _context25.next = 12;
                break;
              }
              return _context25.abrupt("return", (0, calculate.dataOperation)(createAmount, input_amount_constants.ZP, "+"));

             case 12:
              if (null == hasReceiverCreate) {
                _context25.next = 16;
                break;
              }
              _context25.t0 = hasReceiverCreate, _context25.next = 19;
              break;

             case 16:
              return _context25.next = 18, this.isCreateAccountSplAddress(coinAddress, receiver).catch((function() {
                return !0;
              }));

             case 18:
              _context25.t0 = _context25.sent;

             case 19:
              if (_context25.t0) {
                _context25.next = 28;
                break;
              }
              if (!coinIsMain) {
                _context25.next = 25;
                break;
              }
              return _context25.abrupt("return", createAmount.toString());

             case 25:
              return _context25.abrupt("return", (0, calculate.dataOperation)(createAmount, input_amount_constants.z, "+"));

             case 26:
              _context25.next = 29;
              break;

             case 28:
              return _context25.abrupt("return", "0");

             case 29:
             case "end":
              return _context25.stop();
            }
          }), _callee25, this);
        }))), function(_x33) {
          return _getRentFee.apply(this, arguments);
        })
      }, {
        key: "signSolanaNFT",
        value: (_signSolanaNFT = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee26(params) {
          var nft, privateKey, sender, receiver, gasInfo, solanaPriorityFee, coinAddress, mintPublicKey, _yield$Promise$all9, _yield$Promise$all10, walletCoreRpc, isToken2022, _yield$Promise$all11, _yield$Promise$all12, tokenAccounts, blockHash, _ref9, isFirstReceive, senderTokenAddress, recipientTokenAddress, privateKeyHex, output, signTx;
          return regeneratorRuntime.wrap((function(_context26) {
            for (;;) switch (_context26.prev = _context26.next) {
             case 0:
              return nft = params.nft, privateKey = params.privateKey, sender = params.sender, 
              receiver = params.receiver, gasInfo = params.gasInfo, solanaPriorityFee = gasInfo.priorityFee, 
              coinAddress = null == nft ? void 0 : nft.contractAddress, mintPublicKey = new index_browser_esm.J3(coinAddress), 
              _context26.next = 6, Promise.all([ wallet_core_rpc.init(this.totalNetworkDic), this.fetchIsToken2022(mintPublicKey) ]);

             case 6:
              return _yield$Promise$all9 = _context26.sent, _yield$Promise$all10 = _slicedToArray(_yield$Promise$all9, 2), 
              walletCoreRpc = _yield$Promise$all10[0], isToken2022 = _yield$Promise$all10[1], 
              _context26.next = 12, Promise.all([ this.getTokenAccountsByOwner(coinAddress, sender, receiver, isToken2022), this.getSolanaLatestBlockhash() ]);

             case 12:
              return _yield$Promise$all11 = _context26.sent, _yield$Promise$all12 = _slicedToArray(_yield$Promise$all11, 2), 
              tokenAccounts = _yield$Promise$all12[0], blockHash = _yield$Promise$all12[1], isFirstReceive = (_ref9 = tokenAccounts || {}).isFirstReceive, 
              senderTokenAddress = _ref9.senderTokenAddress, recipientTokenAddress = _ref9.recipientTokenAddress, 
              privateKeyHex = walletCoreRpc.getPrivateKeyFromB58SecretKey(privateKey), output = this.signSendSolanaToken({
                privateKeyHex,
                receiver,
                amount: "1",
                blockHash,
                senderTokenAddress,
                recipientTokenAddress,
                isFirstReceive,
                solanaPriorityFee,
                nft,
                isToken2022
              }), signTx = [ null == output ? void 0 : output.encoded ], _context26.abrupt("return", {
                tx: signTx,
                rpcUrl: this.rpcUrl
              });

             case 21:
             case "end":
              return _context26.stop();
            }
          }), _callee26, this);
        }))), function(_x34) {
          return _signSolanaNFT.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = solana_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee27(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime) {
          var wasm, rpcUrl, solanaConnection;
          return regeneratorRuntime.wrap((function(_context27) {
            for (;;) switch (_context27.prev = _context27.next) {
             case 0:
              return _context27.next = 2, (0, wallet_core.t)();

             case 2:
              if (wasm = _context27.sent, rpcUrl = "", !rpcUrls) {
                _context27.next = 9;
                break;
              }
              return _context27.next = 7, (0, gt_networks.gL)(totalNetworkDic, networkKey, rpcUrls[networkKey], lastGetSuccessRpcTime || 0);

             case 7:
              rpcUrl = _context27.sent, solanaConnection = (0, gt_on_chain.Qp)(networkKey, totalNetworkDic, rpcUrl);

             case 9:
              return _context27.abrupt("return", new SolanaRpc(wasm, totalNetworkDic, networkKey, rpcUrl, solanaConnection));

             case 10:
             case "end":
              return _context27.stop();
            }
          }), _callee27);
        }))), function(_x35, _x36, _x37, _x38) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "decodeLength",
        value: function(bytes) {
          for (var len = 0, size = 0; ;) {
            var elem = bytes.shift();
            if (len |= (127 & (elem || 0)) << 7 * size, size += 1, 0 == (128 & (elem || 0))) break;
          }
          return len;
        }
      }, {
        key: "signSolanaTransaction",
        value: function(serializedTx, privateKey) {
          var versionedTx, account = index_browser_esm.AX.fromSecretKey(bs58_default().decode(privateKey)), buffer = bs58_default().decode(serializedTx);
          try {
            versionedTx = index_browser_esm.Kt.deserialize(buffer);
          } catch (_unused) {
            for (var byteArray = _toConsumableArray(buffer), byteArray1 = _toConsumableArray(buffer), signatures = [], signaturesLength = this.decodeLength(byteArray), i = 0; i < signaturesLength; i++) signatures.push(new Uint8Array(byteArray.splice(0, this.SIGNATURE_LENGTH_IN_BYTES)));
            var message = index_browser_esm.B2.deserialize(new Uint8Array(byteArray1));
            versionedTx = new index_browser_esm.Kt(message, signatures);
          }
          return versionedTx.sign([ account ]), versionedTx.serialize();
        }
      }, {
        key: "signSolAllTransactions",
        value: function(message, privateKey) {
          var _this2 = this;
          return message.map((function(item) {
            return _this2.signSolanaTransaction(item, privateKey);
          }));
        }
      }, {
        key: "getSolanaCoinName",
        value: function(_char) {
          var coinName = _char;
          return (0, emoji_regex.A)().test(_char) && (coinName = joypixels_default().toShort(coinName).replace(/[^\w\s]/gi, "")), 
          coinName;
        }
      }, {
        key: "handlePriorityFee",
        value: function(tx, priorityFee) {
          if (Number(priorityFee) <= 0) return tx;
          if (!tx.message.compiledInstructions.some((function(ix) {
            return tx.message.staticAccountKeys[ix.programIdIndex].equals(index_browser_esm.d_.programId) && (3 === ix.data[0] || 3 === ix.data[0]);
          }))) {
            tx.message.staticAccountKeys.some((function(key) {
              return key.equals(index_browser_esm.d_.programId);
            })) || tx.message.staticAccountKeys.push(index_browser_esm.d_.programId);
            var feeInstruction = index_browser_esm.d_.setComputeUnitPrice({
              microLamports: Number(priorityFee)
            }), newInstruction = {
              programIdIndex: tx.message.staticAccountKeys.findIndex((function(key) {
                return key.equals(index_browser_esm.d_.programId);
              })),
              accountKeyIndexes: [],
              data: new Uint8Array(feeInstruction.data)
            };
            tx.message.compiledInstructions.unshift(newInstruction);
          }
          return tx;
        }
      }, {
        key: "signSolanaTransactionWithPriorityFee",
        value: function(params) {
          var _tx, priorityFee = params.priorityFee, message = params.message, privateKey = params.privateKey, account = index_browser_esm.AX.fromSecretKey(bs58_default().decode(privateKey)), buffer = new Uint8Array(Buffer.from(message, "base64")), tx = index_browser_esm.Kt.deserialize(buffer);
          return (tx = this.handlePriorityFee(tx, priorityFee)).sign([ account ]), dist.base.base58.encode(null === (_tx = tx) || void 0 === _tx ? void 0 : _tx.serialize());
        }
      } ], protoProps && solana_rpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && solana_rpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), SolanaRpc;
    }();
    solana_rpc_defineProperty(SolanaRpc, "SIGNATURE_LENGTH_IN_BYTES", 64);
    const solana_rpc = SolanaRpc;
  },
  666178: () => {},
  676850: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      d9: () => transHistoryResultTypes,
      i4: () => defaultAutoTime,
      ls: () => selectOptions,
      tm: () => fData,
      wy: () => selectTimeOptions
    });
    __webpack_require__(579389), __webpack_require__(505086), __webpack_require__(906048), 
    __webpack_require__(542006), __webpack_require__(194009);
    var fData = [ {
      name: "慢",
      className: "wallet-orange-color",
      desc: "< 5Min",
      isSelect: !1,
      selectFeeIndex: 0
    }, {
      name: "平均",
      className: "brand-color",
      desc: "< 4Min",
      isSelect: !0,
      selectFeeIndex: 1
    }, {
      name: "快",
      className: "wallet-green-color",
      desc: "< 1Min",
      isSelect: !1,
      selectFeeIndex: 2
    } ], defaultAutoTime = "120", transHistoryResultTypes = {
      0: {
        icon: "red",
        title: "失败",
        className: "red"
      },
      1: {
        icon: "green",
        title: "已确认",
        className: "green"
      },
      2: {
        icon: "yellow",
        title: "待确认",
        className: "yellow"
      }
    }, selectOptions = [ {
      label: "中文简体",
      value: "cn"
    }, {
      label: "English",
      value: "en"
    } ], selectTimeOptions = [ {
      label: "5",
      value: "1",
      unit: "minute",
      time: "5"
    }, {
      label: "30",
      value: "2",
      unit: "minute",
      time: "30"
    }, {
      label: "2",
      value: "3",
      unit: "hour",
      time: "120"
    }, {
      label: "6",
      value: "4",
      unit: "hour",
      time: "720"
    }, {
      label: "12",
      value: "5",
      unit: "hour",
      time: "1440"
    }, {
      label: "永不锁屏",
      value: "6",
      time: Number.MAX_SAFE_INTEGER.toString(),
      isNeverLock: !0
    } ];
  },
  688280: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      HC: () => getETHGasFeeFinal,
      M0: () => transferETHToken,
      M6: () => dealRecordData,
      OW: () => batchTransferETHToken,
      Ph: () => ethInscribe,
      dF: () => combiningSendData,
      hL: () => getBlob20TransferJson,
      kk: () => transferSUIToken
    });
    __webpack_require__(207452), __webpack_require__(718636), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(196088), __webpack_require__(700017), 
    __webpack_require__(259581), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(700533), __webpack_require__(752231), 
    __webpack_require__(194009), __webpack_require__(447746), __webpack_require__(43148), 
    __webpack_require__(754989), __webpack_require__(714913), __webpack_require__(269193), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(380115), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(407899), __webpack_require__(110678), __webpack_require__(103101), 
    __webpack_require__(936012), __webpack_require__(504895), __webpack_require__(564216), 
    __webpack_require__(215195), __webpack_require__(498741);
    var _gate_gui__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(279386), _popup_lib_tool_tokens__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(847235), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(326394), _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(84477), _model_contractAbi__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(157943), _api_api__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(653360), uuid__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(418562), _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(212864), _popup_lib_tool_sui_suiSend__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(318568), _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(426451), _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(601110), _popup_lib_tool_evmSign_index__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(601133), _dataUtils__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(845404), _walletCore_wallet_walletUtil__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(422899), _utils__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(219740), _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(419969), _crypto_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(532437), bignumber_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(760346), quais__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(96348), ethers__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(937457), ethers__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(455523), ethers6__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(433861), ethers6__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(769667), _tallyho_tally_background_services_chain_utils_optimismGasPriceOracle__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(407167), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(259159), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(660862), _bg_utils_gt_api_send_receive__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(492774);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _readOnlyError(name) {
      throw new TypeError('"' + name + '" is read-only');
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var combiningSendData = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(item, type, totalNetworkDic) {
        var sendToken, _totalNetworkDic$netN, _totalNetworkDic$netN2, _totalNetworkDic$netN3, _item$netName, _item$netName2, isMain, netName, networkRpcAddress, tokenNetList;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            if (!(item instanceof Object && "{}" !== JSON.stringify(item))) {
              _context.next = 19;
              break;
            }
            if (sendToken = {}, "network" != type) {
              _context.next = 10;
              break;
            }
            return isMain = null == item || !item.coinAddress || "-" == (null == item ? void 0 : item.coinAddress), 
            netName = null == item ? void 0 : item.networkKey, networkRpcAddress = null === (_totalNetworkDic$netN = totalNetworkDic[netName]) || void 0 === _totalNetworkDic$netN || null === (_totalNetworkDic$netN2 = _totalNetworkDic$netN.endpoints) || void 0 === _totalNetworkDic$netN2 || null === (_totalNetworkDic$netN3 = _totalNetworkDic$netN2.find((function(item) {
              return "rpc" === (null == item ? void 0 : item.type);
            }))) || void 0 === _totalNetworkDic$netN3 ? void 0 : _totalNetworkDic$netN3.url, 
            sendToken = {
              coinID: null == item ? void 0 : item.coinID,
              coinImage: null == item ? void 0 : item.coinImage,
              coinSimpleName: null == item ? void 0 : item.coinSimpleName,
              coinFullName: null == item ? void 0 : item.coinFullName,
              coinIsMain: isMain,
              coinContractAddress: null == item ? void 0 : item.coinAddress,
              coinIsMultiNetwork: null == item ? void 0 : item.coinIsMultiNetwork,
              coinNumber: null == item ? void 0 : item.coinNumber,
              coinUnitPrice: item[netName] && "coinOriginUnitPrice" in item[netName] ? (null === (_item$netName = item[netName]) || void 0 === _item$netName ? void 0 : _item$netName.coinOriginUnitPrice) || "" : null == item ? void 0 : item.coinOriginUnitPrice,
              coinNetworkName: null == item ? void 0 : item.networkName,
              coinNetworkChainID: null == item ? void 0 : item.networkChainID,
              coinNetworkSymbol: null == item ? void 0 : item.networkSimpleSymbol,
              coinNetworkRpcAddress: networkRpcAddress,
              coinNetworkPrecision: null == item ? void 0 : item.networkPrecision,
              coinNetworkKey: null == item ? void 0 : item.networkKey,
              coinNetworkChainSimpleName: null == item ? void 0 : item.networkChainSimpleName,
              coinNetworkFullSymbol: null == item ? void 0 : item.networkFullSymbol,
              coinNetworkGateChainName: null == item ? void 0 : item.networkGateChainName,
              coinTick: (null === (_item$netName2 = item[netName]) || void 0 === _item$netName2 ? void 0 : _item$netName2.tick) || (null == item ? void 0 : item.tick)
            }, _context.abrupt("return", sendToken);

           case 10:
            if (!((tokenNetList = _popup_lib_tool_tokens__WEBPACK_IMPORTED_MODULE_36__.l3(item)).length > 0)) {
              _context.next = 16;
              break;
            }
            return tokenNetList.forEach((function(t) {
              var _netinfo$endpoints, _netinfo$endpoints$fi, _item$t, _item$t2, _item$t3, netinfo = totalNetworkDic[t], networkRpcAddress = null == netinfo || null === (_netinfo$endpoints = netinfo.endpoints) || void 0 === _netinfo$endpoints || null === (_netinfo$endpoints$fi = _netinfo$endpoints.find((function(item) {
                return "rpc" === (null == item ? void 0 : item.type);
              }))) || void 0 === _netinfo$endpoints$fi ? void 0 : _netinfo$endpoints$fi.url, isMain = !item[t].coinAddress || "-" == item[t].coinAddress;
              sendToken = {
                coinImage: null == item ? void 0 : item.coinImage,
                coinSimpleName: null == item ? void 0 : item.coinSimpleName,
                coinFullName: null == item ? void 0 : item.coinFullName,
                coinIsMain: isMain,
                coinContractAddress: null === (_item$t = item[t]) || void 0 === _item$t ? void 0 : _item$t.coinAddress,
                coinTick: (null === (_item$t2 = item[t]) || void 0 === _item$t2 ? void 0 : _item$t2.tick) || (null == item ? void 0 : item.tick),
                coinIsMultiNetwork: null == item ? void 0 : item.coinIsMultiNetwork,
                coinNumber: null == item ? void 0 : item.coinNumber,
                coinUnitPrice: item[t] && "coinOriginUnitPrice" in item[t] ? (null === (_item$t3 = item[t]) || void 0 === _item$t3 ? void 0 : _item$t3.coinOriginUnitPrice) || "" : null == item ? void 0 : item.coinOriginUnitPrice,
                coinNetworkName: null == netinfo ? void 0 : netinfo.networkName,
                coinNetworkChainID: null == netinfo ? void 0 : netinfo.networkChainID,
                coinNetworkSymbol: null == netinfo ? void 0 : netinfo.networkSimpleSymbol,
                coinNetworkPrecision: null == netinfo ? void 0 : netinfo.networkPrecision,
                coinNetworkKey: null == netinfo ? void 0 : netinfo.networkKey,
                coinNetworkChainSimpleName: null == netinfo ? void 0 : netinfo.networkChainSimpleName,
                coinNetworkFullSymbol: null == netinfo ? void 0 : netinfo.networkFullSymbol,
                coinNetworkGateChainName: null == netinfo ? void 0 : netinfo.networkGateChainName,
                coinNetworkRpcAddress: networkRpcAddress
              };
            })), _context.abrupt("return", sendToken);

           case 16:
           case 19:
            return _context.abrupt("return", {});

           case 17:
            _context.next = 20;
            break;

           case 20:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }(), getChainGasPrice = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(web3, coinItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _customResponse$data, _customResponse$data2, _yield$web3$eth$getFe, _web3$eth, _web3$eth$getFeeData, netSymbol, gasPrices, slowB, averageB, fastB, customNetSymbol, _ref3, isTest, type, res, rpc_url, customResponse, customData, gasPrice;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            netSymbol = null == coinItem ? void 0 : coinItem.coinNetworkKey, gasPrices = {
              slow_gwei: "",
              average_gwei: "",
              fast_gwei: "",
              slow: "",
              average: "",
              fast: ""
            }, slowB = 1.1, averageB = 1.2, fastB = 1.3, customNetSymbol = netSymbol, _ref3 = totalNetworkDic[netSymbol] || {}, 
            isTest = _ref3.isTest, _ref3.isCustom && (netSymbol = "GTCUSTOM_", type = 1), isTest && "QUAI_GATETEST" !== netSymbol && (netSymbol = "GTCUSTOM_", 
            type = 2), _context2.t0 = netSymbol, _context2.next = "ETH" === _context2.t0 || "MATIC" === _context2.t0 || "BSC" === _context2.t0 ? 12 : "GTCUSTOM_" === _context2.t0 ? 17 : 27;
            break;

           case 12:
            return _context2.next = 14, (0, _bg_utils_gt_api_send_receive__WEBPACK_IMPORTED_MODULE_61__.Oe)({
              chainName: netSymbol
            });

           case 14:
            return (res = _context2.sent) instanceof Object && "{}" !== JSON.stringify(res) && (gasPrices.slow_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(res.SafeGasPrice, slowB), 
            gasPrices.slow = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.slow_gwei, 1e9), 
            gasPrices.average_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(res.ProposeGasPrice, averageB), 
            gasPrices.average = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.average_gwei, 1e9), 
            gasPrices.fast_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(res.FastGasPrice, fastB), 
            gasPrices.fast = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.fast_gwei, 1e9)), 
            _context2.abrupt("break", 48);

           case 17:
            return _context2.next = 19, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_60__.gL)(totalNetworkDic, customNetSymbol, rpcUrls[customNetSymbol], lastGetSuccessRpcTime);

           case 19:
            return rpc_url = _context2.sent, _context2.next = 22, _api_api__WEBPACK_IMPORTED_MODULE_40__.customerEvmGas({
              rpc_url,
              type
            });

           case 22:
            return customResponse = _context2.sent, customData = null == customResponse || null === (_customResponse$data = customResponse.data) || void 0 === _customResponse$data ? void 0 : _customResponse$data.data, 
            200 == (null == customResponse || null === (_customResponse$data2 = customResponse.data) || void 0 === _customResponse$data2 ? void 0 : _customResponse$data2.code) && customData instanceof Object && "{}" !== JSON.stringify(customData) && (gasPrices.slow_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(customData.SafeGasPrice, slowB), 
            gasPrices.slow = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.slow_gwei, 1e9), 
            gasPrices.average_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(customData.ProposeGasPrice, averageB), 
            gasPrices.average = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.average_gwei, 1e9), 
            gasPrices.fast_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(customData.FastGasPrice, fastB), 
            gasPrices.fast = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.fast_gwei, 1e9)), 
            _context2.abrupt("break", 48);

           case 27:
            if ("QUAI_GATETEST" !== netSymbol) {
              _context2.next = 42;
              break;
            }
            return _context2.next = 30, null === (_web3$eth = web3.eth) || void 0 === _web3$eth || null === (_web3$eth$getFeeData = _web3$eth.getFeeData) || void 0 === _web3$eth$getFeeData ? void 0 : _web3$eth$getFeeData.call(_web3$eth, quais__WEBPACK_IMPORTED_MODULE_53__.bo.Cyprus1);

           case 30:
            if (_context2.t3 = _yield$web3$eth$getFe = _context2.sent, _context2.t2 = null === _context2.t3, 
            _context2.t2) {
              _context2.next = 34;
              break;
            }
            _context2.t2 = void 0 === _yield$web3$eth$getFe;

           case 34:
            if (!_context2.t2) {
              _context2.next = 38;
              break;
            }
            _context2.t4 = void 0, _context2.next = 39;
            break;

           case 38:
            _context2.t4 = _yield$web3$eth$getFe.gasPrice;

           case 39:
            _context2.t1 = _context2.t4, _context2.next = 45;
            break;

           case 42:
            return _context2.next = 44, web3.eth.getGasPrice();

           case 44:
            _context2.t1 = _context2.sent;

           case 45:
            return (gasPrice = _context2.t1) && (gasPrices.slow = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrice, slowB), 
            gasPrices.slow_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.slow, 1e9, "division"), 
            gasPrices.average = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrice, averageB), 
            gasPrices.average_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.average, 1e9, "division"), 
            gasPrices.fast = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrice, fastB), 
            gasPrices.fast_gwei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrices.fast, 1e9, "division")), 
            _context2.abrupt("break", 48);

           case 48:
            return _context2.abrupt("return", gasPrices);

           case 49:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x4, _x5, _x6, _x7, _x8) {
        return _ref2.apply(this, arguments);
      };
    }(), getL1ContractFee = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(web3, l1GasContract, rawTx) {
        var contract, l1Fee;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return contract = new web3.eth.Contract(_tallyho_tally_background_services_chain_utils_optimismGasPriceOracle__WEBPACK_IMPORTED_MODULE_58__.V, l1GasContract), 
            _context3.next = 3, contract.methods.getL1Fee(rawTx).call();

           case 3:
            return l1Fee = _context3.sent, _context3.abrupt("return", l1Fee);

           case 5:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x9, _x10, _x11) {
        return _ref4.apply(this, arguments);
      };
    }(), getEstimateGas = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(coinItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _gasLimit;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return _context4.next = 2, _popup_lib_tool_evmSign_index__WEBPACK_IMPORTED_MODULE_46__.Qr(null == coinItem ? void 0 : coinItem.coinTransferFromAddress, null == coinItem ? void 0 : coinItem.coinTransferToAddress, null == coinItem ? void 0 : coinItem.transactionvalue, null == coinItem ? void 0 : coinItem.data, {
              coinNetworkKey: null == coinItem ? void 0 : coinItem.coinNetworkKey,
              coinNetworkChainID: null == coinItem ? void 0 : coinItem.coinNetworkChainID,
              dappEstimateGas: null == coinItem ? void 0 : coinItem.dappEstimateGas
            }, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return _gasLimit = _context4.sent, _context4.abrupt("return", _gasLimit);

           case 4:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x12, _x13, _x14, _x15) {
        return _ref5.apply(this, arguments);
      };
    }(), getGasUse = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(coinItem, fromAddress, toAddress, protocolLabel, data, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var web3, rpcAddress, contract, tokenIdP, gasUse, _contract, _tokenIdP, amount, _data, _gasUse, gasRes, _contract2, coinP, _amount, _coinItem$coinNetwork, _gasRes;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return _context5.next = 2, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_44__.Qp(null == coinItem ? void 0 : coinItem.coinNetworkKey, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            if (web3 = _context5.sent, _context5.prev = 3, "dapp" != (null == coinItem ? void 0 : coinItem.dappType)) {
              _context5.next = 10;
              break;
            }
            return _context5.next = 7, getEstimateGas(coinItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 7:
            return _context5.abrupt("return", _context5.sent);

           case 10:
            if ("BLOB-20" != protocolLabel) {
              _context5.next = 19;
              break;
            }
            return _context5.next = 13, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_60__.gL)(totalNetworkDic, null == coinItem ? void 0 : coinItem.coinNetworkKey, rpcUrls[null == coinItem ? void 0 : coinItem.coinNetworkKey], lastGetSuccessRpcTime);

           case 13:
            return rpcAddress = _context5.sent, _context5.next = 16, getEstimateGas(_objectSpread(_objectSpread({}, coinItem), {}, {
              data,
              coinNetworkRpcAddress: rpcAddress
            }), totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 16:
            return _context5.abrupt("return", _context5.sent);

           case 19:
            if ("ERC721" !== (null == coinItem ? void 0 : coinItem.nftTokenStandard)) {
              _context5.next = 28;
              break;
            }
            return contract = new web3.eth.Contract(_model_contractAbi__WEBPACK_IMPORTED_MODULE_39__.Fw, null == coinItem ? void 0 : coinItem.coinContractAddress), 
            tokenIdP = web3.eth.abi.encodeParameter("uint256", null == coinItem ? void 0 : coinItem.nftTokenID), 
            _context5.next = 24, contract.methods.safeTransferFrom(fromAddress, toAddress, tokenIdP).estimateGas({
              from: fromAddress
            });

           case 24:
            return gasUse = _context5.sent, _context5.abrupt("return", gasUse);

           case 28:
            if ("ERC1155" !== (null == coinItem ? void 0 : coinItem.nftTokenStandard)) {
              _context5.next = 39;
              break;
            }
            return _contract = new web3.eth.Contract(_model_contractAbi__WEBPACK_IMPORTED_MODULE_39__.Hk, coinItem.coinContractAddress), 
            _tokenIdP = web3.eth.abi.encodeParameter("uint256", null == coinItem ? void 0 : coinItem.nftTokenID), 
            amount = web3.eth.abi.encodeParameter("uint256", "1"), _data = web3.eth.abi.encodeParameter("bytes", "0x00"), 
            _context5.next = 35, _contract.methods.safeTransferFrom(fromAddress, toAddress, _tokenIdP, amount, _data).estimateGas({
              from: fromAddress
            });

           case 35:
            return _gasUse = _context5.sent, _context5.abrupt("return", _gasUse);

           case 39:
            if (!coinItem.coinIsMain) {
              _context5.next = 46;
              break;
            }
            return _context5.next = 42, web3.eth.estimateGas({
              from: fromAddress,
              to: toAddress
            });

           case 42:
            return gasRes = _context5.sent, _context5.abrupt("return", gasRes);

           case 46:
            if (null == coinItem || !coinItem.coinContractAddress) {
              _context5.next = 68;
              break;
            }
            if (_contract2 = _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_38__.defineContract(web3, null == coinItem ? void 0 : coinItem.coinContractAddress), 
            coinP = Math.pow(10, null == coinItem ? void 0 : coinItem.coinPrecision), _amount = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(parseFloat(null == coinItem ? void 0 : coinItem.coinTransferAmount), coinP, "*"), 
            _context5.prev = 50, "ARB" != (null == coinItem || null === (_coinItem$coinNetwork = coinItem.coinNetworkKey) || void 0 === _coinItem$coinNetwork ? void 0 : _coinItem$coinNetwork.toUpperCase())) {
              _context5.next = 57;
              break;
            }
            return _context5.next = 54, _contract2.methods.transfer(toAddress, _amount || 1).estimateGas({
              from: fromAddress
            });

           case 54:
            _gasRes = _context5.sent, _context5.next = 60;
            break;

           case 57:
            return _context5.next = 59, _contract2.methods.transfer(toAddress, _amount || 1).estimateGas({
              from: fromAddress,
              gas: 1e6
            });

           case 59:
            _gasRes = _context5.sent;

           case 60:
            return _context5.abrupt("return", 1.5 * _gasRes);

           case 63:
            return _context5.prev = 63, _context5.t0 = _context5.catch(50), _context5.abrupt("return", "");

           case 66:
            _context5.next = 69;
            break;

           case 68:
            return _context5.abrupt("return", "");

           case 69:
            _context5.next = 74;
            break;

           case 71:
            return _context5.prev = 71, _context5.t1 = _context5.catch(3), _context5.abrupt("return", "");

           case 74:
           case "end":
            return _context5.stop();
          }
        }), _callee5, null, [ [ 3, 71 ], [ 50, 63 ] ]);
      })));
      return function(_x16, _x17, _x18, _x19, _x20, _x21, _x22, _x23) {
        return _ref6.apply(this, arguments);
      };
    }(), getGasInEIP1559 = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(web3, coinNetworkKey, isTestOrCustom) {
        var _feeHistory$reward, rewardPercentiles, latestBlock, feeHistory, baseFee, result, filterArrary, _loop, index;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            if (web3 && "BSC" !== coinNetworkKey && !isTestOrCustom) {
              _context6.next = 2;
              break;
            }
            return _context6.abrupt("return", []);

           case 2:
            return _context6.prev = 2, rewardPercentiles = [ 25, 50, 75 ], _context6.next = 6, 
            web3.eth.getBlock(web3.isQuai ? null : "latest");

           case 6:
            if (latestBlock = _context6.sent, Object.hasOwn(latestBlock, "baseFeePerGas")) {
              _context6.next = 9;
              break;
            }
            return _context6.abrupt("return", []);

           case 9:
            return _context6.next = 11, web3.eth.getFeeHistory(20, "BSC" === coinNetworkKey ? "pending" : "latest", rewardPercentiles);

           case 11:
            if (feeHistory = _context6.sent, baseFee = latestBlock.baseFeePerGas, result = [], 
            (filterArrary = (filterArrary = (null == feeHistory || null === (_feeHistory$reward = feeHistory.reward) || void 0 === _feeHistory$reward ? void 0 : _feeHistory$reward.filter((function(subArray) {
              return subArray.length > 0;
            }))) || []).filter((function(item) {
              return (item = item.filter((function(val) {
                return (0, bignumber_js__WEBPACK_IMPORTED_MODULE_52__.g)(val).isGreaterThan(0);
              }))).length;
            }))).length > 0) for (_loop = function(index) {
              var priorityFee = filterArrary.map((function(e) {
                return (0, bignumber_js__WEBPACK_IMPORTED_MODULE_52__.g)(e[index]).toString();
              })).reduce((function(curr, next) {
                return curr > next ? curr : next;
              })), estimatedGas = (0, bignumber_js__WEBPACK_IMPORTED_MODULE_52__.g)(baseFee).plus(priorityFee).toString(), maxFee = (0, 
              bignumber_js__WEBPACK_IMPORTED_MODULE_52__.g)(1.3).multipliedBy(estimatedGas).toString();
              "SONIC_EVM" === coinNetworkKey ? result.push({
                maxPriorityFeePerGas: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_52__.g)(priorityFee).multipliedBy(1.5).toString(),
                maxFeePerGas: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_52__.g)(maxFee).multipliedBy(1.5).toString(),
                estimatedGas: (0, bignumber_js__WEBPACK_IMPORTED_MODULE_52__.g)(estimatedGas).multipliedBy(1.5).toString()
              }) : result.push({
                maxPriorityFeePerGas: priorityFee,
                maxFeePerGas: maxFee,
                estimatedGas
              });
            }, index = 0; index < rewardPercentiles.length; index++) _loop(index);
            return _context6.abrupt("return", result);

           case 20:
            return _context6.prev = 20, _context6.t0 = _context6.catch(2), _context6.abrupt("return", []);

           case 23:
           case "end":
            return _context6.stop();
          }
        }), _callee6, null, [ [ 2, 20 ] ]);
      })));
      return function(_x24, _x25, _x26) {
        return _ref7.apply(this, arguments);
      };
    }(), getETHGasFeeFinal = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(coinItem, toAddress, selectFeeIndex) {
        var notCut, notUseCacheSendData, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, netSymbol, _ref9, isTest, isCustom, web3, feeList, usedFee, prices, gasPrice, defaultObj, currentAddress, data, otherFees, blobFeeCap, blobFeeCapTotal, estimateGas, _totalNetworkDic$coin, _totalNetworkDic$coin2, gasLimit, l1GasContract, _coinItem$coinNetwork2, nonce, to, amount, _coinItem$coinPrecisi, contract, _coinPrecision, _value, transferAmount, coinNetworkPrecision, _value2, txParams, maxFeePerGas, maxPriorityFeePerGas, rawTx, l1ContractFee, gasObj, _args7 = arguments;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return notCut = _args7.length > 3 && void 0 !== _args7[3] && _args7[3], notUseCacheSendData = _args7.length > 4 && void 0 !== _args7[4] && _args7[4], 
            totalNetworkDic = _args7.length > 5 ? _args7[5] : void 0, rpcUrls = _args7.length > 6 ? _args7[6] : void 0, 
            lastGetSuccessRpcTime = _args7.length > 7 ? _args7[7] : void 0, netSymbol = null == coinItem ? void 0 : coinItem.coinNetworkKey, 
            _ref9 = totalNetworkDic[netSymbol] || {}, isTest = _ref9.isTest, isCustom = _ref9.isCustom, 
            _context7.next = 9, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_44__.Qp(netSymbol, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 9:
            return web3 = _context7.sent, _context7.next = 12, getGasInEIP1559(web3, netSymbol, isTest || isCustom);

           case 12:
            if (feeList = _context7.sent, usedFee = feeList[selectFeeIndex], !isTest && !isCustom && "BSC" !== netSymbol && "METIS" !== netSymbol && 0 !== feeList.length) {
              _context7.next = 20;
              break;
            }
            return _context7.next = 17, getChainGasPrice(web3, coinItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 17:
            _context7.t0 = _context7.sent, _context7.next = 21;
            break;

           case 20:
            _context7.t0 = {
              slow_gwei: _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(feeList[0].estimatedGas, 1e9, "division"),
              average_gwei: _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(feeList[1].estimatedGas, 1e9, "division"),
              fast_gwei: _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(feeList[2].estimatedGas, 1e9, "division"),
              slow: feeList[0].estimatedGas,
              average: feeList[1].estimatedGas,
              fast: feeList[2].estimatedGas
            };

           case 21:
            if (prices = _context7.t0, gasPrice = (null == usedFee ? void 0 : usedFee.estimatedGas) || [ prices.slow, prices.average, prices.fast ][selectFeeIndex], 
            defaultObj = {
              gasPrice: "",
              gasLimit: "",
              gasFee: "",
              transferFee: "",
              feeMoneyText: "",
              gasFeeMoney: "",
              maxPriorityFeePerGas: null == usedFee ? void 0 : usedFee.maxPriorityFeePerGas,
              maxFeePerGas: null == usedFee ? void 0 : usedFee.estimatedGas,
              gasSelectData: {
                gasFee: [ "", "", "" ],
                gasMoney: [ "", "", "" ]
              },
              gasFeeList: feeList
            }, !("slow_gwei" in prices) || "" != prices.slow_gwei) {
              _context7.next = 26;
              break;
            }
            return _context7.abrupt("return", defaultObj);

           case 26:
            return _context7.next = 28, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getWalletAddress(null == coinItem ? void 0 : coinItem.coinNetworkKey);

           case 28:
            if (currentAddress = _context7.sent, otherFees = 0, "BLOB-20" != (null == coinItem ? void 0 : coinItem.protocolLabel)) {
              _context7.next = 37;
              break;
            }
            return data = (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.Q$)(), 
            _context7.next = 34, (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.o$)(null == coinItem ? void 0 : coinItem.coinNetworkKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 34:
            blobFeeCap = _context7.sent, blobFeeCapTotal = (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.SF)(1, blobFeeCap), 
            otherFees = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(otherFees, blobFeeCapTotal, "+");

           case 37:
            return _context7.next = 39, getGasUse(coinItem, currentAddress, toAddress, null == coinItem ? void 0 : coinItem.protocolLabel, data, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 39:
            if (estimateGas = _context7.sent, "QUAI_GATETEST" === (null == coinItem ? void 0 : coinItem.coinNetworkKey) && (parseInt(estimateGas), 
            _readOnlyError("estimateGas")), !estimateGas) {
              _context7.next = 64;
              break;
            }
            if (gasLimit = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(estimateGas, 1.2), 
            !(l1GasContract = null == totalNetworkDic || null === (_totalNetworkDic$coin = totalNetworkDic[null == coinItem ? void 0 : coinItem.coinNetworkKey]) || void 0 === _totalNetworkDic$coin || null === (_totalNetworkDic$coin2 = _totalNetworkDic$coin.transInfo) || void 0 === _totalNetworkDic$coin2 ? void 0 : _totalNetworkDic$coin2.l1GasContract)) {
              _context7.next = 60;
              break;
            }
            return _context7.next = 47, (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.ym)(null == coinItem ? void 0 : coinItem.coinNetworkKey, null == coinItem ? void 0 : coinItem.coinTransferFromAddress, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 47:
            return nonce = _context7.sent, data || (null == coinItem ? void 0 : coinItem.data) || null != coinItem && coinItem.coinIsMain || (contract = new web3.eth.Contract(_model_contractAbi__WEBPACK_IMPORTED_MODULE_39__.p5, coinItem.coinContractAddress, {
              from: coinItem.coinTransferFromAddress
            }), _coinPrecision = null !== (_coinItem$coinPrecisi = coinItem.coinPrecision) && void 0 !== _coinItem$coinPrecisi ? _coinItem$coinPrecisi : 18, 
            _value = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferAmount, Math.pow(10, _coinPrecision)), 
            transferAmount = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(_value)), 
            data = contract.methods.transfer(coinItem.coinTransferToAddress, transferAmount).encodeABI()), 
            to = "dapp" == (null == coinItem ? void 0 : coinItem.dappType) || null != coinItem && coinItem.coinIsMain ? null == coinItem ? void 0 : coinItem.coinTransferToAddress : coinItem.coinContractAddress, 
            coinNetworkPrecision = null !== (_coinItem$coinNetwork2 = coinItem.coinNetworkPrecision) && void 0 !== _coinItem$coinNetwork2 ? _coinItem$coinNetwork2 : 18, 
            null != coinItem && coinItem.coinIsMain && (_value2 = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferAmount, Math.pow(10, coinNetworkPrecision)), 
            amount = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(Number(_value2)))), 
            txParams = {
              to,
              gasPrice: ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(Number(gasPrice))),
              gasLimit: ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(Number(gasLimit))),
              value: amount,
              data,
              nonce,
              chainId: ethers__WEBPACK_IMPORTED_MODULE_54__.gH.from(null == coinItem ? void 0 : coinItem.coinNetworkChainID).toNumber()
            }, null != usedFee && usedFee.maxPriorityFeePerGas && null != usedFee && usedFee.maxFeePerGas && (txParams.type = 2, 
            maxFeePerGas = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(Math.floor(null == usedFee ? void 0 : usedFee.maxFeePerGas)), 
            maxPriorityFeePerGas = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(Math.floor(null == usedFee ? void 0 : usedFee.maxPriorityFeePerGas)), 
            txParams.gasPrice = maxFeePerGas, txParams.maxFeePerGas = maxFeePerGas, txParams.maxPriorityFeePerGas = maxPriorityFeePerGas), 
            rawTx = ethers__WEBPACK_IMPORTED_MODULE_55__.serialize(txParams), _context7.next = 58, 
            getL1ContractFee(web3, l1GasContract, rawTx);

           case 58:
            l1ContractFee = _context7.sent, otherFees = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(otherFees, l1ContractFee, "+");

           case 60:
            return _context7.next = 62, refreshGasUse(gasPrice, gasLimit, prices, coinItem, notCut, notUseCacheSendData, otherFees);

           case 62:
            return gasObj = _context7.sent, _context7.abrupt("return", _objectSpread(_objectSpread({}, defaultObj), gasObj));

           case 64:
            return _context7.abrupt("return", defaultObj);

           case 65:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })));
      return function(_x27, _x28, _x29) {
        return _ref8.apply(this, arguments);
      };
    }(), refreshGasUse = function() {
      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(gasPrice, gasRes, prices, coinItem) {
        var notCut, notUseCacheSendData, otherFees, value, slowValue, averageValue, maxFeeValue, gasFee, slowFee, averageFee, maxFee, gasData, _args9 = arguments;
        return regeneratorRuntime.wrap((function(_context9) {
          for (;;) switch (_context9.prev = _context9.next) {
           case 0:
            return notCut = _args9.length > 4 && void 0 !== _args9[4] && _args9[4], notUseCacheSendData = _args9.length > 5 && void 0 !== _args9[5] && _args9[5], 
            otherFees = _args9.length > 6 ? _args9[6] : void 0, value = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasPrice, gasRes), 
            slowValue = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(prices.slow, gasRes), 
            averageValue = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(prices.average, gasRes), 
            maxFeeValue = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(prices.fast, gasRes), 
            otherFees && (value = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(value, otherFees, "+"), 
            slowValue = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(slowValue, otherFees, "+"), 
            averageValue = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(averageValue, otherFees, "+"), 
            maxFeeValue = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(maxFeeValue, otherFees, "+")), 
            gasFee = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(value, 1e18, "division"), 
            slowFee = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(slowValue, 1e18, "division"), 
            averageFee = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(averageValue, 1e18, "division"), 
            maxFee = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(maxFeeValue, 1e18, "division"), 
            gasData = {
              gas: [ prices.slow_gwei, prices.average_gwei, prices.fast_gwei ],
              gasFee: [ slowFee, averageFee, maxFee ]
            }, _context9.next = 15, calculationETHFeeMoney(gasFee, gasData, coinItem, gasPrice, gasRes, notCut, notUseCacheSendData);

           case 15:
            return _context9.abrupt("return", _context9.sent);

           case 16:
           case "end":
            return _context9.stop();
          }
        }), _callee9);
      })));
      return function(_x33, _x34, _x35, _x36) {
        return _ref12.apply(this, arguments);
      };
    }(), calculationETHFeeMoney = function() {
      var _ref13 = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(gasFee, gasData, coinItem, gasPrice, gasRes) {
        var notCut, notUseCacheSendData, coinValue, cacheData, _coinUnitPrice, _args10 = arguments;
        return regeneratorRuntime.wrap((function(_context10) {
          for (;;) switch (_context10.prev = _context10.next) {
           case 0:
            return notCut = _args10.length > 5 && void 0 !== _args10[5] && _args10[5], notUseCacheSendData = _args10.length > 6 && void 0 !== _args10[6] && _args10[6], 
            coinValue = coinItem.coinNetworkKey, _context10.next = 5, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getDefiItem("".concat(coinValue, "-cacheSendData"));

           case 5:
            if (_context10.t0 = _context10.sent, _context10.t0) {
              _context10.next = 8;
              break;
            }
            _context10.t0 = {};

           case 8:
            if (cacheData = _context10.t0, !(coinItem && "coinUnitPrice" in cacheData && null != cacheData && cacheData.coinUnitPrice) || notUseCacheSendData) {
              _context10.next = 14;
              break;
            }
            return _coinUnitPrice = null == cacheData ? void 0 : cacheData.coinUnitPrice, _context10.abrupt("return", realPrice(_coinUnitPrice || "", gasFee, gasData, coinItem, gasPrice, gasRes, notCut));

           case 14:
            return _context10.next = 16, _api_api__WEBPACK_IMPORTED_MODULE_40__.getInfoCoin({
              networkKeyList: [ coinValue ]
            }).then((function(res) {
              var _res$data = res.data, code = _res$data.code, data = _res$data.data;
              if (0 === code && "{}" !== JSON.stringify(data)) {
                var item = data[coinValue];
                if (item && item.coinUnitPrice) {
                  var dealPrice = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getDecimalsUnitPrice(item.coinUnitPrice);
                  return _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.setDefiData(_defineProperty({}, "".concat(coinValue, "-cacheSendData"), _objectSpread(_objectSpread({}, cacheData), {
                    coinUnitPrice: dealPrice
                  }))), realPrice(dealPrice, gasFee, gasData, coinItem, gasPrice, gasRes, notCut);
                }
                return realPrice("", gasFee, gasData, coinItem, gasPrice, gasRes, notCut);
              }
            }));

           case 16:
            return _context10.abrupt("return", _context10.sent);

           case 17:
           case "end":
            return _context10.stop();
          }
        }), _callee10);
      })));
      return function(_x37, _x38, _x39, _x40, _x41) {
        return _ref13.apply(this, arguments);
      };
    }(), realPrice = function(coinPrice, gasFee, gasData, coinItem, gasPrice, gasRes) {
      var notCut = arguments.length > 6 && void 0 !== arguments[6] && arguments[6], resInfo = {};
      if (coinPrice) {
        var money = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinPrice, gasFee, "multiplication", !notCut), monetText = gasFee + " " + coinItem.coinNetworkSymbol + " ≈ $" + money, slowMoney = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinPrice, gasData.gasFee[0], "multiplication", !notCut), averageMoney = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinPrice, gasData.gasFee[1], "multiplication", !notCut), maxMoney = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinPrice, gasData.gasFee[2], "multiplication", !notCut);
        gasData.gasMoney = [ slowMoney, averageMoney, maxMoney ], gasData.gasCoinSymbol = coinItem.coinNetworkSymbol, 
        resInfo = {
          gasPrice,
          gasLimit: gasRes,
          gasFee,
          transferFee: gasFee,
          feeMoneyText: monetText,
          gasFeeMoney: money,
          gasSelectData: gasData
        };
      } else gasData.gasMoney = [ "", "", "" ], gasData.gasCoinSymbol = coinItem.coinNetworkSymbol, 
      resInfo = {
        gasPrice,
        gasLimit: gasRes,
        gasFee,
        transferFee: gasFee,
        feeMoneyText: gasFee + " " + coinItem.coinNetworkSymbol,
        gasFeeMoney: "",
        gasSelectData: gasData
      };
      return resInfo;
    }, transferETHToken = function() {
      var _ref14 = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(coinItem, history, setLoading, pwValue, userCookies) {
        var _coinItem$coinNetwork3, isReturn, hardWare, mpcWallet, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, sName, web3, noPrivateKeyWallet, privateKey, _coinTransferGasPrice, dealData, privateKeyFinal, _yield$getWasm, CoinType, chainIdTemp, toAddress, sendAmont, data, _value, contract, _coinPrecision, _value3, transferAmount, hexFromAddress, _ref15, isCustom, isTest, isGateRecommon, networkKey, networkChainID, networkChainSimpleName, recordData, dataItem, _dataItem, sendInfo, resultTX, _args11 = arguments;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            return isReturn = _args11.length > 5 && void 0 !== _args11[5] && _args11[5], hardWare = _args11.length > 6 && void 0 !== _args11[6] ? _args11[6] : null, 
            mpcWallet = _args11.length > 7 && void 0 !== _args11[7] ? _args11[7] : null, totalNetworkDic = _args11.length > 8 ? _args11[8] : void 0, 
            rpcUrls = _args11.length > 9 ? _args11[9] : void 0, lastGetSuccessRpcTime = _args11.length > 10 ? _args11[10] : void 0, 
            sName = null == coinItem || null === (_coinItem$coinNetwork3 = coinItem.coinNetworkKey) || void 0 === _coinItem$coinNetwork3 ? void 0 : _coinItem$coinNetwork3.toUpperCase(), 
            _context11.next = 9, _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_44__.Qp(sName, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 9:
            if (web3 = _context11.sent, !(noPrivateKeyWallet = !hardWare && !mpcWallet)) {
              _context11.next = 17;
              break;
            }
            return _context11.next = 14, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getWalletPrivateKey(coinItem, pwValue, userCookies);

           case 14:
            _context11.t0 = _context11.sent, _context11.next = 18;
            break;

           case 17:
            _context11.t0 = null;

           case 18:
            if ((privateKey = _context11.t0) || !noPrivateKeyWallet) {
              _context11.next = 23;
              break;
            }
            return (0, _gate_gui__WEBPACK_IMPORTED_MODULE_35__.Ds)({
              type: "error",
              message: "".concat((0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_42__.lang_string)("发送失败"))
            }), setLoading(!1), _context11.abrupt("return");

           case 23:
            return _coinTransferGasPrice = coinItem.coinTransferGasPrice, [ "GT", "GATE_GATETEST" ].includes(coinItem.coinNetworkKey) && ((dealData = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferGasPrice, 1e9, "division")).toString().includes(".") && (dealData = Math.round(dealData)), 
            _coinTransferGasPrice = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(dealData, 1e9)), 
            privateKeyFinal = "", privateKeyFinal = null != privateKey && privateKey.startsWith("0x") ? privateKey.slice(2, privateKey.length) : privateKey, 
            _context11.next = 29, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.t)();

           case 29:
            if (_yield$getWasm = _context11.sent, CoinType = _yield$getWasm.CoinType, chainIdTemp = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(coinItem.coinNetworkChainID)), 
            coinItem.coinIsMain ? (toAddress = coinItem.coinTransferToAddress, _value = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferAmount, 1e18), 
            sendAmont = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(_value)), 
            data = null) : ("BLOB-20" === (null == coinItem ? void 0 : coinItem.protocolLabel) ? (toAddress = coinItem.coinTransferToAddress, 
            data = (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.Q$)()) : (toAddress = coinItem.coinContractAddress, 
            contract = new web3.eth.Contract(_model_contractAbi__WEBPACK_IMPORTED_MODULE_39__.p5, coinItem.coinContractAddress, {
              from: coinItem.coinTransferFromAddress
            }), _coinPrecision = coinItem.coinPrecision ? coinItem.coinPrecision : 18, _value3 = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferAmount, Math.pow(10, _coinPrecision)), 
            transferAmount = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(_value3)), 
            data = contract.methods.transfer(coinItem.coinTransferToAddress, transferAmount).encodeABI()), 
            sendAmont = null), hexFromAddress = ethers6__WEBPACK_IMPORTED_MODULE_57__.b(coinItem.coinTransferFromAddress), 
            _context11.prev = 34, _ref15 = (null == totalNetworkDic ? void 0 : totalNetworkDic[(null == coinItem ? void 0 : coinItem.chainSimpleName) || (null == coinItem ? void 0 : coinItem.coinNetworkKey)]) || {}, 
            isCustom = _ref15.isCustom, isTest = _ref15.isTest, isGateRecommon = _ref15.isGateRecommon, 
            _ref15.networkName, networkKey = _ref15.networkKey, networkChainID = _ref15.networkChainID, 
            networkChainSimpleName = _ref15.networkChainSimpleName, !isCustom && !isTest) {
              _context11.next = 41;
              break;
            }
            dataItem = JSON.parse(JSON.stringify(coinItem)), recordData = {
              address: null == dataItem ? void 0 : dataItem.coinTransferFromAddress,
              chain_name: networkChainSimpleName,
              chain_id: networkChainID,
              chain_key: networkKey,
              token_addr: null == dataItem ? void 0 : dataItem.coinContractAddress,
              token_name: null == dataItem ? void 0 : dataItem.coinFullName,
              token_short_name: null == dataItem ? void 0 : dataItem.coinSimpleName,
              trans_type: "BLOB-20" === (null == dataItem ? void 0 : dataItem.protocolLabel) ? "transfer" : "send",
              trans_time: parseInt((new Date).getTime() / 1e3),
              trans_balance: null == dataItem ? void 0 : dataItem.coinTransferAmount,
              trans_balance_usd: null == dataItem ? void 0 : dataItem.coinTransferAmountMoney,
              trans_oppo_address: null == dataItem ? void 0 : dataItem.coinTransferToAddress,
              nonce: null == dataItem ? void 0 : dataItem.coinTransferNonce,
              is_contra: "-" == (null == dataItem ? void 0 : dataItem.token_addr) ? 0 : null != dataItem && dataItem.coinIsMain ? 1 : 0,
              trans_gas_fee: null == dataItem ? void 0 : dataItem.coinTransferFee,
              type: isTest ? 2 : isGateRecommon ? 3 : 1,
              domain: null == coinItem ? void 0 : coinItem.domain
            }, _context11.next = 46;
            break;

           case 41:
            return _dataItem = JSON.parse(JSON.stringify(coinItem)), _context11.next = 44, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getDefiItem("sendTokenInfo");

           case 44:
            sendInfo = _context11.sent, recordData = {
              chain_type: "EVM",
              address: null == _dataItem ? void 0 : _dataItem.coinTransferFromAddress,
              chain_name: (null == _dataItem ? void 0 : _dataItem.chainSimpleName) || (null == _dataItem ? void 0 : _dataItem.coinNetworkKey),
              token_addr: null == _dataItem ? void 0 : _dataItem.coinContractAddress,
              token_name: null == _dataItem ? void 0 : _dataItem.coinFullName,
              token_short_name: null == _dataItem ? void 0 : _dataItem.coinSimpleName,
              trans_type: "BLOB-20" === (null == _dataItem ? void 0 : _dataItem.protocolLabel) ? "transfer" : "send",
              trans_time: parseInt((new Date).getTime() / 1e3),
              trans_balance: null == _dataItem ? void 0 : _dataItem.coinTransferAmount,
              trans_balance_usd: null == _dataItem ? void 0 : _dataItem.coinTransferAmountMoney,
              trans_oppo_address: null == _dataItem ? void 0 : _dataItem.coinTransferToAddress,
              nonce: null == _dataItem ? void 0 : _dataItem.coinTransferNonce,
              is_contra: "-" == (null == _dataItem ? void 0 : _dataItem.token_addr) ? 0 : null != _dataItem && _dataItem.coinIsMain ? 1 : 0,
              trans_gas_fee: (null == _dataItem ? void 0 : _dataItem.coinTransferFee) || "",
              token_type: null == _dataItem ? void 0 : _dataItem.token_type,
              domain: null == sendInfo ? void 0 : sendInfo.domain,
              memo: null == sendInfo ? void 0 : sendInfo.memo,
              memo_name: null == sendInfo ? void 0 : sendInfo.memo_name,
              platform_operation: null == sendInfo ? void 0 : sendInfo.platform_operation,
              platform_name: null == sendInfo ? void 0 : sendInfo.platform_name,
              protocolLabel: null == _dataItem ? void 0 : _dataItem.protocolLabel
            };

           case 46:
            return _context11.next = 48, (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.Dr)(sName, chainIdTemp, hexFromAddress, toAddress, sendAmont, data, privateKeyFinal, "FIL" == sName ? "10000461" : CoinType.ethereum, parseFloat(_coinTransferGasPrice), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(parseFloat(coinItem.coinTransferGasLimit)), recordData, isReturn, hardWare, null == coinItem ? void 0 : coinItem.coinTransferNonce, coinItem, mpcWallet, isCustom || isTest, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 48:
            if (resultTX = _context11.sent, !isReturn || !resultTX) {
              _context11.next = 51;
              break;
            }
            return _context11.abrupt("return", [ resultTX ]);

           case 51:
            if (setLoading(!1), !resultTX) {
              _context11.next = 56;
              break;
            }
            (0, _dataUtils__WEBPACK_IMPORTED_MODULE_47__.sendTokenJumpPage)(_objectSpread(_objectSpread({}, coinItem), {}, {
              coinTransferHash: resultTX
            }), history), _context11.next = 59;
            break;

           case 56:
            if ((0, _gate_gui__WEBPACK_IMPORTED_MODULE_35__.Ds)({
              type: "error",
              message: "".concat((0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_42__.lang_string)("发送失败"))
            }), !hardWare) {
              _context11.next = 59;
              break;
            }
            return _context11.abrupt("return", Promise.reject("failed"));

           case 59:
            _context11.next = 67;
            break;

           case 61:
            if (_context11.prev = 61, _context11.t1 = _context11.catch(34), setLoading(!1), 
            (0, _gate_gui__WEBPACK_IMPORTED_MODULE_35__.Ds)({
              type: "error",
              message: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_42__.lang_string)("失败，请重试")
            }), !hardWare) {
              _context11.next = 67;
              break;
            }
            return _context11.abrupt("return", Promise.reject(_context11.t1));

           case 67:
           case "end":
            return _context11.stop();
          }
        }), _callee11, null, [ [ 34, 61 ] ]);
      })));
      return function(_x42, _x43, _x44, _x45, _x46) {
        return _ref14.apply(this, arguments);
      };
    }(), batchTransferETHToken = function() {
      var _ref16 = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(coinInfo, transferTxs, isSameFromAddress, pwValue, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _transferTxs$, sName, coinTransferGasPrice, coinTransferGasLimit, coinIsMain, coinNetworkChainID, coinContractAddress, coinPrecision, coinFullName, coinSimpleName, coinTransferFee, token_addr, web3, sendInfo, beginNonce, _yield$getWasm2, CoinType, promiseList, res, userInfo, userId, trace;
        return regeneratorRuntime.wrap((function(_context13) {
          for (;;) switch (_context13.prev = _context13.next) {
           case 0:
            return sName = coinInfo.sName, coinTransferGasPrice = coinInfo.coinTransferGasPrice, 
            coinTransferGasLimit = coinInfo.coinTransferGasLimit, coinIsMain = coinInfo.coinIsMain, 
            coinNetworkChainID = coinInfo.coinNetworkChainID, coinContractAddress = coinInfo.coinContractAddress, 
            coinPrecision = coinInfo.coinPrecision, coinFullName = coinInfo.coinFullName, coinSimpleName = coinInfo.coinSimpleName, 
            coinTransferFee = coinInfo.coinTransferFee, token_addr = coinInfo.token_addr, _context13.next = 3, 
            _popup_lib_tool_allWeb3Method__WEBPACK_IMPORTED_MODULE_44__.Qp(sName, null, !0, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 3:
            if (web3 = _context13.sent, sendInfo = {
              coinNetworkKey: sName,
              coinTransferFromAddress: null == transferTxs || null === (_transferTxs$ = transferTxs[0]) || void 0 === _transferTxs$ ? void 0 : _transferTxs$.coinTransferFromAddress
            }, !isSameFromAddress) {
              _context13.next = 9;
              break;
            }
            return _context13.next = 8, _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_38__.getNonce(sendInfo, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 8:
            beginNonce = _context13.sent;

           case 9:
            return _context13.next = 11, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.t)();

           case 11:
            return _yield$getWasm2 = _context13.sent, CoinType = _yield$getWasm2.CoinType, promiseList = transferTxs.map(function() {
              var _ref17 = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(coinItem, index) {
                var privateKey, _coinTransferGasPrice, dealData, privateKeyFinal, chainIdTemp, toAddress, sendAmont, data, _value, contract, _coinPrecision, _value4, transferAmount, hexFromAddress, coinTransferNonce, sendInfoItem, historyData, mpcwallet, resultTx;
                return regeneratorRuntime.wrap((function(_context12) {
                  for (;;) switch (_context12.prev = _context12.next) {
                   case 0:
                    if (privateKey = null == coinItem ? void 0 : coinItem.privateKey, _coinTransferGasPrice = coinTransferGasPrice, 
                    [ "GT", "GATE_GATETEST" ].includes(sName) && ((dealData = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(_coinTransferGasPrice, 1e9, "division")).toString().includes(".") && (dealData = Math.round(dealData)), 
                    _coinTransferGasPrice = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(dealData, 1e9)), 
                    privateKeyFinal = "", privateKeyFinal = privateKey.startsWith("0x") ? privateKey.slice(2, privateKey.length) : privateKey, 
                    chainIdTemp = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(coinNetworkChainID)), 
                    coinIsMain ? (toAddress = coinItem.coinTransferToAddress, _value = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferAmount, 1e18), 
                    sendAmont = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(_value)), 
                    data = null) : (toAddress = coinContractAddress, sendAmont = null, contract = new web3.eth.Contract(_model_contractAbi__WEBPACK_IMPORTED_MODULE_39__.p5, coinContractAddress, {
                      from: coinItem.coinTransferFromAddress
                    }), _coinPrecision = coinPrecision || 18, _value4 = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferAmount, Math.pow(10, _coinPrecision)), 
                    transferAmount = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(_value4)), 
                    data = contract.methods.transfer(coinItem.coinTransferToAddress, transferAmount).encodeABI()), 
                    hexFromAddress = ethers6__WEBPACK_IMPORTED_MODULE_57__.b(coinItem.coinTransferFromAddress), 
                    !isSameFromAddress) {
                      _context12.next = 13;
                      break;
                    }
                    coinTransferNonce = parseInt(beginNonce) + index, _context12.next = 17;
                    break;

                   case 13:
                    return sendInfoItem = {
                      coinNetworkKey: sName,
                      coinTransferFromAddress: coinItem.coinTransferFromAddress
                    }, _context12.next = 16, _popup_lib_tool_evm_web3__WEBPACK_IMPORTED_MODULE_38__.getNonce(sendInfoItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

                   case 16:
                    coinTransferNonce = _context12.sent;

                   case 17:
                    return historyData = {
                      address: null == coinItem ? void 0 : coinItem.coinTransferFromAddress,
                      chain_type: "EVM",
                      chain_name: sName,
                      token_addr: coinContractAddress,
                      token_name: coinFullName,
                      token_short_name: coinSimpleName,
                      trans_type: "send",
                      trans_time: parseInt((new Date).getTime() / 1e3),
                      trans_balance: null == coinItem ? void 0 : coinItem.coinTransferAmount,
                      trans_balance_usd: null == coinItem ? void 0 : coinItem.coinTransferAmountMoney,
                      trans_oppo_address: null == coinItem ? void 0 : coinItem.coinTransferToAddress,
                      nonce: coinTransferNonce,
                      is_contra: "-" == token_addr ? 0 : coinIsMain ? 1 : 0,
                      trans_gas_fee: coinTransferFee,
                      memo: null == coinItem ? void 0 : coinItem.memo,
                      memo_name: null == coinItem ? void 0 : coinItem.memo_name,
                      platform_operation: null == coinItem ? void 0 : coinItem.platform_operation,
                      platform_name: null == coinItem ? void 0 : coinItem.platform_name
                    }, _context12.next = 20, (0, _utils__WEBPACK_IMPORTED_MODULE_49__.uj)(sName, null == coinItem ? void 0 : coinItem.coinTransferFromAddress, pwValue, privateKeyFinal);

                   case 20:
                    return mpcwallet = _context12.sent, _context12.next = 23, (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.Dr)(sName, chainIdTemp, hexFromAddress, toAddress, sendAmont, data, privateKeyFinal, "FIL" == sName ? "10000461" : CoinType.ethereum, parseFloat(_coinTransferGasPrice), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(parseFloat(coinTransferGasLimit)), null, !0, null, coinTransferNonce, coinInfo, mpcwallet, !1);

                   case 23:
                    return resultTx = _context12.sent, _context12.abrupt("return", {
                      params: [ resultTx ],
                      history_data: historyData
                    });

                   case 25:
                   case "end":
                    return _context12.stop();
                  }
                }), _callee12);
              })));
              return function(_x54, _x55) {
                return _ref17.apply(this, arguments);
              };
            }()), _context13.prev = 14, _context13.next = 17, Promise.all(promiseList);

           case 17:
            return res = _context13.sent, _context13.next = 20, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_51__.pZ)("uid");

           case 20:
            return userInfo = _context13.sent, userId = null == userInfo ? void 0 : userInfo.checkValue, 
            trace = {
              user_id: userId,
              wallet_network: (0, _walletCore_wallet_walletUtil__WEBPACK_IMPORTED_MODULE_48__.VE)(sName),
              wallet_source: "plug",
              system_type: (0, _utils__WEBPACK_IMPORTED_MODULE_49__.RR)(),
              device_name: "google",
              system_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_50__.version || "pc",
              app_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_50__.version || "pc"
            }, _context13.abrupt("return", res.map((function(item) {
              return _objectSpread(_objectSpread({}, item), {}, {
                chain_name: sName,
                trace
              });
            })));

           case 26:
            _context13.prev = 26, _context13.t0 = _context13.catch(14), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_35__.Ds)({
              type: "error",
              message: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_42__.lang_string)("失败，请重试")
            });

           case 29:
           case "end":
            return _context13.stop();
          }
        }), _callee13, null, [ [ 14, 26 ] ]);
      })));
      return function(_x47, _x48, _x49, _x50, _x51, _x52, _x53) {
        return _ref16.apply(this, arguments);
      };
    }(), signEthInscribe = function() {
      var _ref18 = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(coinItem, datas, privateKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _coinItem$coinNetwork4, _yield$getWasm3, CoinType, sName, _coinTransferGasPrice, dealData, privateKeyFinal, chainIdTemp, hexFromAddress, signedTxs, gasFeeInWei, gasFee;
        return regeneratorRuntime.wrap((function(_context14) {
          for (;;) switch (_context14.prev = _context14.next) {
           case 0:
            return _context14.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_59__.t)();

           case 2:
            return _yield$getWasm3 = _context14.sent, CoinType = _yield$getWasm3.CoinType, sName = null == coinItem || null === (_coinItem$coinNetwork4 = coinItem.coinNetworkKey) || void 0 === _coinItem$coinNetwork4 ? void 0 : _coinItem$coinNetwork4.toUpperCase(), 
            _coinTransferGasPrice = coinItem.coinTransferGasPrice, [ "GT", "GATE_GATETEST" ].includes(coinItem.coinNetworkKey) && ((dealData = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(coinItem.coinTransferGasPrice, 1e9, "division")).toString().includes(".") && (dealData = Math.round(dealData)), 
            _coinTransferGasPrice = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(dealData, 1e9)), 
            privateKeyFinal = "string" == typeof privateKey && privateKey.startsWith("0x") ? privateKey.slice(2, privateKey.length) : privateKey, 
            chainIdTemp = ethers6__WEBPACK_IMPORTED_MODULE_56__.up(_popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(coinItem.coinNetworkChainID)), 
            hexFromAddress = ethers6__WEBPACK_IMPORTED_MODULE_57__.b(coinItem.coinTransferFromAddress), 
            _context14.next = 12, (0, _popup_lib_tool_walletCore_RPC_chainEvmMethod__WEBPACK_IMPORTED_MODULE_45__.y8)(sName, chainIdTemp, hexFromAddress, coinItem.coinTransferToAddress, datas, privateKeyFinal, "FIL" == sName ? "10000461" : CoinType.ethereum, parseFloat(_coinTransferGasPrice), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(parseFloat(coinItem.coinTransferGasLimit)), coinItem.maxPriorityFeePerGas ? parseFloat(coinItem.maxPriorityFeePerGas) : "", coinItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 12:
            return signedTxs = _context14.sent, gasFeeInWei = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(parseFloat(_coinTransferGasPrice), _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.cutInteger(parseFloat(coinItem.coinTransferGasLimit))), 
            gasFee = _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.dataOperation(gasFeeInWei, 1e18, "/"), 
            _context14.abrupt("return", {
              signedTxs,
              gasFee
            });

           case 16:
           case "end":
            return _context14.stop();
          }
        }), _callee14);
      })));
      return function(_x56, _x57, _x58, _x59, _x60, _x61) {
        return _ref18.apply(this, arguments);
      };
    }(), ethInscribe = function() {
      var _ref19 = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(coinItem, datas, privateKey, payload, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _coinItem$coinNetwork5, _yield$signEthInscrib, signedTxs, gasFee, params, result;
        return regeneratorRuntime.wrap((function(_context15) {
          for (;;) switch (_context15.prev = _context15.next) {
           case 0:
            return _context15.next = 2, signEthInscribe(coinItem, datas, privateKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return _yield$signEthInscrib = _context15.sent, signedTxs = _yield$signEthInscrib.signedTxs, 
            gasFee = _yield$signEthInscrib.gasFee, params = {
              accept_address: coinItem.coinTransferFromAddress,
              chain_name: null == coinItem || null === (_coinItem$coinNetwork5 = coinItem.coinNetworkKey) || void 0 === _coinItem$coinNetwork5 ? void 0 : _coinItem$coinNetwork5.toUpperCase(),
              raws: signedTxs.map((function(item, index) {
                return {
                  raw: item.signedTx,
                  contents: payload[index],
                  nonce: item.nonce,
                  gas_fee: gasFee
                };
              }))
            }, _context15.next = 8, _api_api__WEBPACK_IMPORTED_MODULE_40__.evmMintV2(params);

           case 8:
            return result = _context15.sent, _context15.abrupt("return", result);

           case 10:
           case "end":
            return _context15.stop();
          }
        }), _callee15);
      })));
      return function(_x62, _x63, _x64, _x65, _x66, _x67, _x68) {
        return _ref19.apply(this, arguments);
      };
    }(), transferSUIToken = function() {
      var _ref20 = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(sendInfo, privateKey, history, setLoading, isReturn, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var sendFunc, hash;
        return regeneratorRuntime.wrap((function(_context16) {
          for (;;) switch (_context16.prev = _context16.next) {
           case 0:
            return sendFunc = null != sendInfo && sendInfo.coinIsMain ? _popup_lib_tool_sui_suiSend__WEBPACK_IMPORTED_MODULE_43__.bO(sendInfo.coinTransferToAddress, sendInfo.coinTransferGasLimit, sendInfo.coinTransferAmount, sendInfo.coinPrecision, privateKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) : _popup_lib_tool_sui_suiSend__WEBPACK_IMPORTED_MODULE_43__.Xp(sendInfo, privateKey, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime), 
            _context16.prev = 1, _context16.next = 4, sendFunc;

           case 4:
            if (hash = _context16.sent, setLoading(!1), !hash || !isReturn) {
              _context16.next = 8;
              break;
            }
            return _context16.abrupt("return", hash);

           case 8:
            hash ? dealRecordData(sendInfo, hash, history, null == sendInfo ? void 0 : sendInfo.coinNetworkKey) : (0, 
            _gate_gui__WEBPACK_IMPORTED_MODULE_35__.Ds)({
              type: "error",
              message: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_42__.lang_string)("失败，请重试")
            }), _context16.next = 15;
            break;

           case 11:
            _context16.prev = 11, _context16.t0 = _context16.catch(1), setLoading(!1), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_35__.Ds)({
              type: "error",
              message: (0, _popup_lib_tool_lang_string__WEBPACK_IMPORTED_MODULE_42__.lang_string)("失败，请重试")
            });

           case 15:
           case "end":
            return _context16.stop();
          }
        }), _callee16, null, [ [ 1, 11 ] ]);
      })));
      return function(_x69, _x70, _x71, _x72, _x73, _x74, _x75, _x76) {
        return _ref20.apply(this, arguments);
      };
    }(), dealRecordData = function() {
      var _ref21 = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(coinItem, hash, history, chainType) {
        var _yield$method$getDefi, Item, dataItem, record, arr, sendInfo, _recentRecord;
        return regeneratorRuntime.wrap((function(_context17) {
          for (;;) switch (_context17.prev = _context17.next) {
           case 0:
            return Item = {
              coinTransferHash: hash,
              coinTransferTime: (new Date).getTime(),
              id: (0, uuid__WEBPACK_IMPORTED_MODULE_41__.A)()
            }, dataItem = _objectSpread(_objectSpread({}, coinItem), Item), _context17.next = 4, 
            _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getDefiItem("transferRecord");

           case 4:
            return record = _context17.sent, arr = [], arr = record ? [].concat(_toConsumableArray(record), [ dataItem ]) : [ dataItem ].concat(), 
            _context17.next = 9, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getDefiItem("sendTokenInfo");

           case 9:
            return sendInfo = _context17.sent, _context17.next = 12, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.getDefiItem("recentRecord");

           case 12:
            if (_context17.t1 = _yield$method$getDefi = _context17.sent, _context17.t0 = null !== _context17.t1, 
            !_context17.t0) {
              _context17.next = 16;
              break;
            }
            _context17.t0 = void 0 !== _yield$method$getDefi;

           case 16:
            if (!_context17.t0) {
              _context17.next = 20;
              break;
            }
            _context17.t2 = _yield$method$getDefi, _context17.next = 21;
            break;

           case 20:
            _context17.t2 = [];

           case 21:
            _recentRecord = _context17.t2, _popup_lib_tool_method__WEBPACK_IMPORTED_MODULE_37__.setDefiData({
              transferRecord: arr,
              sendTokenInfo: _objectSpread(_objectSpread({}, sendInfo), Item),
              cacheRecordsData: [],
              recentRecord: [].concat(_toConsumableArray(_recentRecord), [ dataItem ])
            }).then((function(res) {
              res && (_api_api__WEBPACK_IMPORTED_MODULE_40__.postAddTokenTransData({
                chain_type: chainType,
                address: null == dataItem ? void 0 : dataItem.coinTransferFromAddress,
                chain_name: (null == dataItem ? void 0 : dataItem.chainSimpleName) || (null == dataItem ? void 0 : dataItem.coinNetworkKey),
                hash_id: hash,
                token_addr: null == dataItem ? void 0 : dataItem.coinContractAddress,
                token_name: null == dataItem ? void 0 : dataItem.coinFullName,
                token_short_name: null == dataItem ? void 0 : dataItem.coinSimpleName,
                trans_type: "send",
                trans_time: parseInt((new Date).getTime() / 1e3),
                trans_balance: null == dataItem ? void 0 : dataItem.coinTransferAmount,
                trans_balance_usd: null == dataItem ? void 0 : dataItem.coinTransferAmountMoney,
                trans_oppo_address: null == dataItem ? void 0 : dataItem.coinTransferToAddress,
                nonce: null == dataItem ? void 0 : dataItem.coinTransferNonce,
                is_contra: "-" == (null == dataItem ? void 0 : dataItem.token_addr) ? 0 : null != dataItem && dataItem.coinIsMain ? 1 : 0,
                trans_gas_fee: (null == dataItem ? void 0 : dataItem.coinTransferFee) || "",
                token_type: null == dataItem ? void 0 : dataItem.token_type,
                domain: null == sendInfo ? void 0 : sendInfo.domain
              }).then((function(res) {})), history && (0, _dataUtils__WEBPACK_IMPORTED_MODULE_47__.sendTokenJumpPage)(dataItem, history));
            }));

           case 23:
           case "end":
            return _context17.stop();
          }
        }), _callee17);
      })));
      return function(_x77, _x78, _x79, _x80) {
        return _ref21.apply(this, arguments);
      };
    }(), getBlob20TransferJson = function(toAddress, amount, ticker) {
      var transfers = [ {
        to: toAddress,
        amount: Number(amount)
      } ];
      return '{"protocol":"blob20","token":{"operation":"transfer","ticker":"'.concat(ticker, '","transfers":').concat(JSON.stringify(transfers), "}}");
    };
  },
  700313: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      $N: () => sendRequestCustomNetworkRawTransaction,
      IM: () => sendRequestRawTransaction,
      Rz: () => sendRgbBtcRawTransaction,
      Xl: () => clearSubscribePending,
      cE: () => subscribePending
    });
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(407899), 
    __webpack_require__(219693), __webpack_require__(418665), __webpack_require__(505086), 
    __webpack_require__(269193), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(718636), __webpack_require__(447746), __webpack_require__(43148), 
    __webpack_require__(380115), __webpack_require__(194009), __webpack_require__(118772), 
    __webpack_require__(504895), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(714913), __webpack_require__(498741), 
    __webpack_require__(215195), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(815852), __webpack_require__(700017), __webpack_require__(110678), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(207452);
    var _api_httpService__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(227383), _config__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(289933), _wallet_walletUtil__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(422899), _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(532437), _utils__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(219740), _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(419969), _allWeb3Method__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(426451), _const__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(498050), _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(291842), _sui_suiSend__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(318568), _popup_lib_tool_solana_solSend__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(322976), _cosmos_cosmosRpc__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(648865), _web3RpcMethod__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(458939), _connect_eth__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(224882), _bnb_bnbRpc__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(140007), _substrate_index__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(910210), _api_api__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(653360), _ckb_index__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(866242), _ton_tonMethod__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(333043), _venom_venomMethod__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(898879), _tron_tronRpc__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(488663), _aptos_aptosRpc__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(403567), _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(660862), _bg_utils_gt_api_send_receive__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(492774);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var sendRequestRawTransaction = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(chainSimpleName, tx, historyData, rpcUrl, manually, accountID) {
        var userInfo, userId, trace, params, result;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, (0, _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_33__.pZ)("uid");

           case 2:
            return userInfo = _context.sent, userId = null == userInfo ? void 0 : userInfo.checkValue, 
            trace = {
              user_id: userId,
              wallet_network: (0, _wallet_walletUtil__WEBPACK_IMPORTED_MODULE_32__.VE)(chainSimpleName),
              wallet_source: "plug",
              system_type: (0, _utils__WEBPACK_IMPORTED_MODULE_34__.RR)(),
              device_name: "google",
              system_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_35__.version || "pc",
              app_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_35__.version || "pc"
            }, params = {
              chain_name: chainSimpleName,
              params: tx,
              trace,
              rpc_address: rpcUrl,
              manually,
              account_id: accountID
            }, historyData && (params.history_data = historyData), _context.next = 9, (0, _bg_utils_gt_api_send_receive__WEBPACK_IMPORTED_MODULE_53__.r2)(params);

           case 9:
            return result = _context.sent, _context.abrupt("return", result);

           case 11:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2, _x3, _x4, _x5, _x6) {
        return _ref.apply(this, arguments);
      };
    }(), sendRgbBtcRawTransaction = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(btxTx, rgbTx, historyData) {
        var userInfo, userId, trace, params, path, result;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, (0, _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_33__.pZ)("uid");

           case 2:
            return userInfo = _context2.sent, userId = null == userInfo ? void 0 : userInfo.checkValue, 
            trace = {
              user_id: userId,
              wallet_network: "BTC",
              wallet_source: "plug",
              system_type: (0, _utils__WEBPACK_IMPORTED_MODULE_34__.RR)(),
              device_name: "google",
              system_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_35__.version || "pc",
              app_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_35__.version || "pc"
            }, params = {
              btc_params: btxTx,
              rgb_params: rgbTx,
              trace
            }, historyData && (params.btc_history_data = historyData), path = "".concat(_config__WEBPACK_IMPORTED_MODULE_31__.B$, "/trans/sendRgbTransaction"), 
            _context2.next = 10, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_30__.postJson)(path, params);

           case 10:
            return result = _context2.sent, _context2.abrupt("return", result);

           case 12:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x7, _x8, _x9) {
        return _ref2.apply(this, arguments);
      };
    }(), ethName = new _connect_eth__WEBPACK_IMPORTED_MODULE_43__.EthNameSpace;
    function subscribePending(_x10, _x11, _x12, _x13, _x14) {
      return _subscribePending.apply(this, arguments);
    }
    function _subscribePending() {
      return (_subscribePending = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(data, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, resolve) {
        var _totalNetworkDic$_nam, _totalNetworkDic$_nam2, _getNetworkSort, substrateNetworks, standardCosmosNetworks, _name, interval, rpcAddress, _totalNetworkDic$_nam3, _totalNetworkDic$_nam4, _totalNetworkDic$_nam5, _totalNetworkDic$_nam6, _totalNetworkDic$_nam7, _totalNetworkDic$_nam8, _res$data, _res$data$result, res, _res$data2, _res$data2$result, _res$data2$result$eff, _res$data2$result$eff2, gtorg, result, _tx$meta, tx, _tx$meta2, _tx$meta2$status, _tx$txs, method, _tx, _tx$txs2, _method, _tx2, _tx2$tx_response, _tx3$data, _tx3$data2, _tx3$data2$data, _tx3, _tx3$data3, _tx3$data3$data, _getNetworkRestInfo, restAddress, _method2, _tx4, _method3, _tx5, methods, _tx6, _tx7, _result, _result2, _result3, sName, _rpcAddress, provider, _result4, timer;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            if (_getNetworkSort = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.Fb)(totalNetworkDic), 
            substrateNetworks = _getNetworkSort.substrateNetworks, standardCosmosNetworks = _getNetworkSort.standardCosmosNetworks, 
            _name = data.chain_name, interval = 5e3, rpcAddress = "", rpcAddress = "COSMOS" === (null === (_totalNetworkDic$_nam = totalNetworkDic[_name]) || void 0 === _totalNetworkDic$_nam ? void 0 : _totalNetworkDic$_nam.chainArchitecture) && "SEI" !== (null === (_totalNetworkDic$_nam2 = totalNetworkDic[_name]) || void 0 === _totalNetworkDic$_nam2 ? void 0 : _totalNetworkDic$_nam2.chainArchitecture) ? null === (_totalNetworkDic$_nam3 = totalNetworkDic[_name]) || void 0 === _totalNetworkDic$_nam3 || null === (_totalNetworkDic$_nam4 = _totalNetworkDic$_nam3.endpoints) || void 0 === _totalNetworkDic$_nam4 || null === (_totalNetworkDic$_nam5 = _totalNetworkDic$_nam4.find((function(item) {
              return "rest" === (null == item ? void 0 : item.type);
            }))) || void 0 === _totalNetworkDic$_nam5 ? void 0 : _totalNetworkDic$_nam5.url : null === (_totalNetworkDic$_nam6 = totalNetworkDic[_name]) || void 0 === _totalNetworkDic$_nam6 || null === (_totalNetworkDic$_nam7 = _totalNetworkDic$_nam6.endpoints) || void 0 === _totalNetworkDic$_nam7 || null === (_totalNetworkDic$_nam8 = _totalNetworkDic$_nam7.find((function(item) {
              return "rpc" === (null == item ? void 0 : item.type);
            }))) || void 0 === _totalNetworkDic$_nam8 ? void 0 : _totalNetworkDic$_nam8.url, 
            localStorage.setItem("pendingStatus", 1), "SUI" != _name) {
              _context5.next = 13;
              break;
            }
            return _context5.next = 9, (0, _sui_suiSend__WEBPACK_IMPORTED_MODULE_39__._H)(rpcAddress, data.hash_id);

           case 9:
            null != (res = _context5.sent) && null !== (_res$data = res.data) && void 0 !== _res$data && null !== (_res$data$result = _res$data.result) && void 0 !== _res$data$result && _res$data$result.effects && pushToServer({
              data,
              status: "success" === (null == res || null === (_res$data2 = res.data) || void 0 === _res$data2 || null === (_res$data2$result = _res$data2.result) || void 0 === _res$data2$result || null === (_res$data2$result$eff = _res$data2$result.effects) || void 0 === _res$data2$result$eff || null === (_res$data2$result$eff2 = _res$data2$result$eff.status) || void 0 === _res$data2$result$eff2 ? void 0 : _res$data2$result$eff2.status),
              resolve
            }), _context5.next = 160;
            break;

           case 13:
            if (_name !== _const__WEBPACK_IMPORTED_MODULE_37__.NETWORK_NAMES.GT_ORG) {
              _context5.next = 28;
              break;
            }
            return _context5.prev = 14, _context5.next = 17, (0, _allWeb3Method__WEBPACK_IMPORTED_MODULE_36__.Qp)(_name, null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 17:
            return gtorg = _context5.sent, _context5.next = 20, gtorg.getTx(data.hash_id);

           case 20:
            null != (result = _context5.sent) && result.height && pushToServer({
              data,
              status: !0,
              resolve
            }), _context5.next = 26;
            break;

           case 24:
            _context5.prev = 24, _context5.t0 = _context5.catch(14);

           case 26:
            _context5.next = 160;
            break;

           case 28:
            if (!_bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_38__.cI.includes(_name)) {
              _context5.next = 35;
              break;
            }
            return _context5.next = 31, _popup_lib_tool_solana_solSend__WEBPACK_IMPORTED_MODULE_40__.xw(rpcAddress, data.hash_id);

           case 31:
            null != (tx = _context5.sent) && null !== (_tx$meta = tx.meta) && void 0 !== _tx$meta && _tx$meta.status && pushToServer({
              data,
              status: null == tx || null === (_tx$meta2 = tx.meta) || void 0 === _tx$meta2 || null === (_tx$meta2$status = _tx$meta2.status) || void 0 === _tx$meta2$status ? void 0 : _tx$meta2$status.hasOwnProperty("Ok"),
              resolve
            }), _context5.next = 160;
            break;

           case 35:
            if ("SEI" != _name) {
              _context5.next = 50;
              break;
            }
            return _context5.prev = 36, _context5.next = 39, _cosmos_cosmosRpc__WEBPACK_IMPORTED_MODULE_41__.b.init(rpcAddress);

           case 39:
            return method = _context5.sent, _context5.next = 42, method.getSeiTransactionByHash(data.hash_id);

           case 42:
            null != (_tx = _context5.sent) && null !== (_tx$txs = _tx.txs) && void 0 !== _tx$txs && _tx$txs.length && pushToServer({
              data,
              status: (null == _tx || null === (_tx$txs2 = _tx.txs) || void 0 === _tx$txs2 ? void 0 : _tx$txs2.length) > 0,
              resolve
            }), _context5.next = 48;
            break;

           case 46:
            _context5.prev = 46, _context5.t1 = _context5.catch(36);

           case 48:
            _context5.next = 160;
            break;

           case 50:
            if (!("INJ" == _name || null != standardCosmosNetworks && standardCosmosNetworks.includes(_name))) {
              _context5.next = 65;
              break;
            }
            return _context5.prev = 51, _context5.next = 54, _cosmos_cosmosRpc__WEBPACK_IMPORTED_MODULE_41__.b.init(rpcAddress);

           case 54:
            return _method = _context5.sent, _context5.next = 57, _method.getNibiTransactionByHash(data.hash_id);

           case 57:
            null != (_tx2 = _context5.sent) && _tx2.tx_response && pushToServer({
              data,
              status: 0 === (null == _tx2 || null === (_tx2$tx_response = _tx2.tx_response) || void 0 === _tx2$tx_response ? void 0 : _tx2$tx_response.code),
              resolve
            }), _context5.next = 63;
            break;

           case 61:
            _context5.prev = 61, _context5.t2 = _context5.catch(51);

           case 63:
            _context5.next = 160;
            break;

           case 65:
            if (![].concat(_toConsumableArray(_const__WEBPACK_IMPORTED_MODULE_37__.MORE_ADDRESS_CHAIN), [ "DOGE", "DASH", "ADA" ]).includes(_name)) {
              _context5.next = 73;
              break;
            }
            return interval = 6e4, _context5.next = 69, (0, _api_api__WEBPACK_IMPORTED_MODULE_46__.hashExist)({
              chainName: _name,
              hash: data.hash_id
            });

           case 69:
            200 === (null == (_tx3 = _context5.sent) || null === (_tx3$data = _tx3.data) || void 0 === _tx3$data ? void 0 : _tx3$data.code) && 1 !== (null == _tx3 || null === (_tx3$data2 = _tx3.data) || void 0 === _tx3$data2 || null === (_tx3$data2$data = _tx3$data2.data) || void 0 === _tx3$data2$data ? void 0 : _tx3$data2$data.onlineStatus) && pushToServer({
              data,
              status: 2 === (null == _tx3 || null === (_tx3$data3 = _tx3.data) || void 0 === _tx3$data3 || null === (_tx3$data3$data = _tx3$data3.data) || void 0 === _tx3$data3$data ? void 0 : _tx3$data3$data.onlineStatus),
              resolve
            }), _context5.next = 160;
            break;

           case 73:
            if (!_const__WEBPACK_IMPORTED_MODULE_37__.APTOS_CHAINS.includes(_name)) {
              _context5.next = 89;
              break;
            }
            return _context5.prev = 74, _getNetworkRestInfo = (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.nD)(_name, totalNetworkDic), 
            restAddress = _getNetworkRestInfo.url, _context5.next = 78, _aptos_aptosRpc__WEBPACK_IMPORTED_MODULE_51__.V.init(restAddress);

           case 78:
            return _method2 = _context5.sent, _context5.next = 81, _method2.getTransactionByHash(data.hash_id);

           case 81:
            (_tx4 = _context5.sent) && "pending_transaction" !== _tx4.type && pushToServer({
              data,
              status: _tx4.success,
              resolve
            }), _context5.next = 87;
            break;

           case 85:
            _context5.prev = 85, _context5.t3 = _context5.catch(74);

           case 87:
            _context5.next = 160;
            break;

           case 89:
            if ("TRX" != _name) {
              _context5.next = 99;
              break;
            }
            return _context5.next = 92, _tron_tronRpc__WEBPACK_IMPORTED_MODULE_50__.B.init(totalNetworkDic);

           case 92:
            return _method3 = _context5.sent, _context5.next = 95, _method3.getTransactionInfoById(data.hash_id);

           case 95:
            null != (_tx5 = _context5.sent) && _tx5.blockNumber && pushToServer({
              data,
              status: !(null == _tx5 || !_tx5.blockNumber),
              resolve
            }), _context5.next = 160;
            break;

           case 99:
            if ("BNB_ORG" != _name) {
              _context5.next = 114;
              break;
            }
            return _context5.prev = 100, _context5.next = 103, _bnb_bnbRpc__WEBPACK_IMPORTED_MODULE_44__.w.init("https://api.binance.org/bc");

           case 103:
            return methods = _context5.sent, _context5.next = 106, methods.getTx(data.hash_id);

           case 106:
            _tx6 = _context5.sent, pushToServer({
              data,
              status: 0 === (null == _tx6 ? void 0 : _tx6.code),
              resolve
            }), _context5.next = 112;
            break;

           case 110:
            _context5.prev = 110, _context5.t4 = _context5.catch(100);

           case 112:
            _context5.next = 160;
            break;

           case 114:
            if (!substrateNetworks.includes(_name)) {
              _context5.next = 126;
              break;
            }
            return _context5.prev = 115, _context5.next = 118, (0, _substrate_index__WEBPACK_IMPORTED_MODULE_45__.s)({
              hash: data.hash_id,
              chainName: _name
            });

           case 118:
            1 === (_tx7 = _context5.sent) && pushToServer({
              data,
              status: 1 === Number(_tx7),
              resolve
            }), _context5.next = 124;
            break;

           case 122:
            _context5.prev = 122, _context5.t5 = _context5.catch(115);

           case 124:
            _context5.next = 160;
            break;

           case 126:
            if ("TON" !== _name) {
              _context5.next = 134;
              break;
            }
            if (!data.hash_id) {
              _context5.next = 132;
              break;
            }
            return _context5.next = 130, (0, _ton_tonMethod__WEBPACK_IMPORTED_MODULE_48__.getTranstionStatusByHash)(data.address, data.hash_id, _name, totalNetworkDic);

           case 130:
            (_result = _context5.sent) && Object.keys(_result).length > 0 && pushToServer({
              data: _objectSpread(_objectSpread({}, data), {}, {
                hash_id: null == _result ? void 0 : _result.confirmHash
              }),
              status: (null == _result ? void 0 : _result.outMessagesCount) > 0,
              resolve
            });

           case 132:
            _context5.next = 160;
            break;

           case 134:
            if ("VENOM" !== _name) {
              _context5.next = 141;
              break;
            }
            return _context5.next = 137, (0, _venom_venomMethod__WEBPACK_IMPORTED_MODULE_49__.getTransactionByHashId)(data.hash_id, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 137:
            _result2 = _context5.sent, pushToServer({
              data,
              status: !!_result2,
              resolve
            }), _context5.next = 160;
            break;

           case 141:
            if ("CKB" !== _name) {
              _context5.next = 148;
              break;
            }
            return _context5.next = 144, (0, _ckb_index__WEBPACK_IMPORTED_MODULE_47__.Q)(data.hash_id);

           case 144:
            (_result3 = _context5.sent) && pushToServer({
              data,
              status: _result3,
              resolve
            }), _context5.next = 160;
            break;

           case 148:
            return sName = _name.toUpperCase(), _context5.next = 151, (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.gL)(totalNetworkDic, sName, rpcUrls[sName], lastGetSuccessRpcTime);

           case 151:
            return _rpcAddress = _context5.sent, _context5.next = 154, _web3RpcMethod__WEBPACK_IMPORTED_MODULE_42__.K.init(_rpcAddress);

           case 154:
            return provider = _context5.sent, "POST", _context5.next = 158, provider.send("POST", _rpcAddress, ethName.eth_getTransactionReceipt(data.hash_id));

           case 158:
            (_result4 = _context5.sent) && pushToServer({
              data,
              status: "0x1" === (null == _result4 ? void 0 : _result4.status),
              resolve
            });

           case 160:
            localStorage.getItem("pendingStatus") && (timer = setTimeout((function() {
              subscribePending(data, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, resolve);
            }), interval), localStorage.setItem("pendingHash-".concat(data.hash_id), timer));

           case 162:
           case "end":
            return _context5.stop();
          }
        }), _callee5, null, [ [ 14, 24 ], [ 36, 46 ], [ 51, 61 ], [ 74, 85 ], [ 100, 110 ], [ 115, 122 ] ]);
      })))).apply(this, arguments);
    }
    var clearPendingData = function(hashId) {
      try {
        var pendingTimer = localStorage.getItem(hashId);
        clearTimeout(pendingTimer), localStorage.removeItem(hashId), localStorage.removeItem("pendingStatus");
      } catch (error) {}
    }, clearSubscribePending = function(hashId) {
      hashId ? clearPendingData("pendingHash-".concat(hashId)) : Object.keys(localStorage).forEach((function(key) {
        key.indexOf("pendingHash-") > -1 && clearPendingData(key);
      }));
    }, pushToServer = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(_ref3) {
        var data, status, resolve;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return data = _ref3.data, status = _ref3.status, resolve = _ref3.resolve, _context3.next = 3, 
            (0, _api_api__WEBPACK_IMPORTED_MODULE_46__.pendingTransConfirm)(data);

           case 3:
            200 === _context3.sent.data.code && (resolve({
              hash_id: data.hash_id,
              status
            }), clearSubscribePending());

           case 5:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x15) {
        return _ref4.apply(this, arguments);
      };
    }(), sendRequestCustomNetworkRawTransaction = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(tx, recordData, isEVM, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var chainKey, type, _yield$Promise$all, _yield$Promise$all2, userInfo, rpcAddress, userId, realChainKey, trace, recordNew, params, path, result;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return chainKey = (null == recordData ? void 0 : recordData.chain_key) || (null == recordData ? void 0 : recordData.chain_type), 
            type = null == recordData ? void 0 : recordData.type, _context4.next = 4, Promise.all([ (0, 
            _popup_lib_tool_crypto_js__WEBPACK_IMPORTED_MODULE_33__.pZ)("uid"), (0, _tallyho_tally_background_utils_gt_networks__WEBPACK_IMPORTED_MODULE_52__.gL)(totalNetworkDic, chainKey, rpcUrls[chainKey], lastGetSuccessRpcTime) ]);

           case 4:
            return _yield$Promise$all = _context4.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
            userInfo = _yield$Promise$all2[0], rpcAddress = _yield$Promise$all2[1], userId = null == userInfo ? void 0 : userInfo.checkValue, 
            null != recordData && recordData.chain_key && (recordData.network_key = recordData.chain_key, 
            delete recordData.chain_key), null != recordData && recordData.type && delete recordData.type, 
            realChainKey = null == recordData ? void 0 : recordData.chain_name, trace = {
              user_id: userId,
              wallet_address: null == recordData ? void 0 : recordData.address,
              wallet_network: isEVM ? "EVM" : realChainKey,
              wallet_source: "plug",
              system_type: (0, _utils__WEBPACK_IMPORTED_MODULE_34__.RR)(),
              device_name: "google",
              system_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_35__.version || "pc",
              app_version: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_35__.version || "pc"
            }, recordNew = {}, recordNew = _objectSpread({}, recordData), isEVM || (recordNew.chain_name = realChainKey, 
            recordNew.chain_type = realChainKey), params = _objectSpread(_objectSpread({}, recordNew), {}, {
              rpc_address: "QUAI_GATETEST" === chainKey ? "".concat(rpcAddress, "/cyprus1") : rpcAddress,
              params: tx,
              trace,
              type
            }), path = "".concat(_config__WEBPACK_IMPORTED_MODULE_31__.O5, "/customerNetwork/sendRawTransaction"), 
            _context4.next = 20, (0, _api_httpService__WEBPACK_IMPORTED_MODULE_30__.postJson)(path, params);

           case 20:
            return result = _context4.sent, _context4.abrupt("return", result);

           case 22:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x16, _x17, _x18, _x19, _x20, _x21) {
        return _ref5.apply(this, arguments);
      };
    }();
  },
  711593: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      a: () => PYGateMethod
    });
    __webpack_require__(207452), __webpack_require__(418665), __webpack_require__(301772), 
    __webpack_require__(505086), __webpack_require__(953746), __webpack_require__(520861), 
    __webpack_require__(571905), __webpack_require__(285213), __webpack_require__(97182), 
    __webpack_require__(512279), __webpack_require__(639302), __webpack_require__(770147), 
    __webpack_require__(866217), __webpack_require__(697966), __webpack_require__(735186), 
    __webpack_require__(135944), __webpack_require__(644787), __webpack_require__(950632), 
    __webpack_require__(552278), __webpack_require__(614245), __webpack_require__(252492), 
    __webpack_require__(193266), __webpack_require__(537192), __webpack_require__(237220), 
    __webpack_require__(482432), __webpack_require__(632483), __webpack_require__(536696), 
    __webpack_require__(458083), __webpack_require__(80475), __webpack_require__(215195), 
    __webpack_require__(929979), __webpack_require__(348825), __webpack_require__(579389), 
    __webpack_require__(906048), __webpack_require__(504895), __webpack_require__(335231), 
    __webpack_require__(259581), __webpack_require__(407899), __webpack_require__(714913), 
    __webpack_require__(687136), __webpack_require__(158649), __webpack_require__(67500), 
    __webpack_require__(752231), __webpack_require__(433734), __webpack_require__(380115), 
    __webpack_require__(640173), __webpack_require__(194009), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(564216), __webpack_require__(14602), 
    __webpack_require__(498741), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(815852), __webpack_require__(269193), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012);
    var browser = __webpack_require__(747108), browser_default = __webpack_require__.n(browser), create_hmac_browser = __webpack_require__(383507), create_hmac_browser_default = __webpack_require__.n(create_hmac_browser), bip32_ed25519 = __webpack_require__(444581), bip32_ed25519_default = __webpack_require__.n(bip32_ed25519), dist = __webpack_require__(722343), nacl_fast = __webpack_require__(188947), nacl_fast_default = __webpack_require__.n(nacl_fast), nacl_util = __webpack_require__(976386), nacl_util_default = __webpack_require__.n(nacl_util);
    __webpack_require__(804632), __webpack_require__(64189), __webpack_require__(741412), 
    __webpack_require__(734606), __webpack_require__(597755), __webpack_require__(312091);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, (arg = descriptor.key, 
        key = void 0, key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string"), "symbol" === _typeof(key) ? key : String(key)), descriptor);
      }
      var arg, key;
    }
    function hasher32le_typeof(obj) {
      return hasher32le_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, hasher32le_typeof(obj);
    }
    function hasher32le_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, (arg = descriptor.key, 
        key = void 0, key = function(input, hint) {
          if ("object" !== hasher32le_typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== hasher32le_typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string"), "symbol" === hasher32le_typeof(key) ? key : String(key)), descriptor);
      }
      var arg, key;
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === hasher32le_typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return function(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
          }(self);
        }(this, result);
      };
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    function rotateLeft(x, n) {
      return x << n | x >>> 32 - n | 0;
    }
    function ripemd_typeof(obj) {
      return ripemd_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, ripemd_typeof(obj);
    }
    function ripemd_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, (arg = descriptor.key, 
        key = void 0, key = function(input, hint) {
          if ("object" !== ripemd_typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== ripemd_typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string"), "symbol" === ripemd_typeof(key) ? key : String(key)), descriptor);
      }
      var arg, key;
    }
    function _get() {
      return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(target, property, receiver) {
        var base = function(object, property) {
          for (;!Object.prototype.hasOwnProperty.call(object, property) && null !== (object = ripemd_getPrototypeOf(object)); ) ;
          return object;
        }(target, property);
        if (base) {
          var desc = Object.getOwnPropertyDescriptor(base, property);
          return desc.get ? desc.get.call(arguments.length < 3 ? target : receiver) : desc.value;
        }
      }, _get.apply(this, arguments);
    }
    function ripemd_setPrototypeOf(o, p) {
      return ripemd_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, ripemd_setPrototypeOf(o, p);
    }
    function ripemd_createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = ripemd_getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = ripemd_getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === ripemd_typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return function(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
          }(self);
        }(this, result);
      };
    }
    function ripemd_getPrototypeOf(o) {
      return ripemd_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, ripemd_getPrototypeOf(o);
    }
    var ZL = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13 ], ZR = [ 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11 ], SL = [ 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6 ], SR = [ 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11 ];
    const ripemd = function(_Hasher32le) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && ripemd_setPrototypeOf(subClass, superClass);
      }(Ripemd, _Hasher32le);
      var Constructor, protoProps, staticProps, _super = ripemd_createSuper(Ripemd);
      function Ripemd(options) {
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, Ripemd), (options = options || {}).length = options.length || 160, _super.call(this, options);
      }
      return Constructor = Ripemd, staticProps = [ {
        key: "F",
        value: function(x, y, z) {
          return x ^ y ^ z;
        }
      }, {
        key: "G",
        value: function(x, y, z) {
          return x & y | ~x & z;
        }
      }, {
        key: "H",
        value: function(x, y, z) {
          return (x | ~y) ^ z;
        }
      }, {
        key: "I",
        value: function(x, y, z) {
          return x & z | y & ~z;
        }
      }, {
        key: "J",
        value: function(x, y, z) {
          return x ^ (y | ~z);
        }
      }, {
        key: "T",
        value: function(i, bl, cl, dl) {
          return i < 16 ? this.F(bl, cl, dl) : i < 32 ? this.G(bl, cl, dl) + 1518500249 | 0 : i < 48 ? this.H(bl, cl, dl) + 1859775393 | 0 : i < 64 ? this.I(bl, cl, dl) + 2400959708 | 0 : this.J(bl, cl, dl) + 2840853838 | 0;
        }
      }, {
        key: "T64",
        value: function(i, br, cr, dr) {
          return i < 16 ? this.I(br, cr, dr) + 1352829926 | 0 : i < 32 ? this.H(br, cr, dr) + 1548603684 | 0 : i < 48 ? this.G(br, cr, dr) + 1836072691 | 0 : this.F(br, cr, dr);
        }
      }, {
        key: "T80",
        value: function(i, br, cr, dr) {
          return i < 16 ? this.J(br, cr, dr) + 1352829926 | 0 : i < 32 ? this.I(br, cr, dr) + 1548603684 | 0 : i < 48 ? this.H(br, cr, dr) + 1836072691 | 0 : i < 64 ? this.G(br, cr, dr) + 2053994217 | 0 : this.F(br, cr, dr);
        }
      } ], (protoProps = [ {
        key: "reset",
        value: function() {
          switch (_get(ripemd_getPrototypeOf(Ripemd.prototype), "reset", this).call(this), 
          this.options.length) {
           case 128:
            this.state.hash = [ 1732584193, 4023233417, 2562383102, 271733878 ], this.processBlock = this.processBlock128;
            break;

           case 256:
            this.state.hash = [ 1732584193, 4023233417, 2562383102, 271733878, 1985229328, 4275878552, 2309737967, 19088743 ], 
            this.processBlock = this.processBlock256;
            break;

           case 320:
            this.state.hash = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520, 1985229328, 4275878552, 2309737967, 19088743, 1009589775 ], 
            this.processBlock = this.processBlock320;
            break;

           default:
            this.state.hash = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ], 
            this.processBlock = this.processBlock160;
          }
        }
      }, {
        key: "processBlock128",
        value: function(block) {
          for (var al = 0 | this.state.hash[0], bl = 0 | this.state.hash[1], cl = 0 | this.state.hash[2], dl = 0 | this.state.hash[3], ar = al, br = bl, cr = cl, dr = dl, i = 0; i < 64; i++) {
            var _t = al + block[ZL[i]] | 0;
            _t = _t + Ripemd.T(i, bl, cl, dl) | 0, al = dl, dl = cl, cl = bl, bl = _t = rotateLeft(_t, SL[i]), 
            _t = (_t = ar + block[ZR[i]] | 0) + Ripemd.T64(i, br, cr, dr) | 0, ar = dr, dr = cr, 
            cr = br, br = _t = rotateLeft(_t, SR[i]);
          }
          var t = this.state.hash[1] + cl + dr | 0;
          this.state.hash[1] = this.state.hash[2] + dl + ar | 0, this.state.hash[2] = this.state.hash[3] + al + br | 0, 
          this.state.hash[3] = this.state.hash[0] + bl + cr | 0, this.state.hash[0] = t;
        }
      }, {
        key: "processBlock160",
        value: function(block) {
          for (var al = 0 | this.state.hash[0], bl = 0 | this.state.hash[1], cl = 0 | this.state.hash[2], dl = 0 | this.state.hash[3], el = 0 | this.state.hash[4], ar = al, br = bl, cr = cl, dr = dl, er = el, i = 0; i < 80; i++) {
            var _t2 = al + block[ZL[i]] | 0;
            _t2 = (_t2 = rotateLeft(_t2 = _t2 + Ripemd.T(i, bl, cl, dl) | 0, SL[i])) + el | 0, 
            al = el, el = dl, dl = rotateLeft(cl, 10), cl = bl, bl = _t2, _t2 = (_t2 = rotateLeft(_t2 = (_t2 = ar + block[ZR[i]] | 0) + Ripemd.T80(i, br, cr, dr) | 0, SR[i])) + er | 0, 
            ar = er, er = dr, dr = rotateLeft(cr, 10), cr = br, br = _t2;
          }
          var t = this.state.hash[1] + cl + dr | 0;
          this.state.hash[1] = this.state.hash[2] + dl + er | 0, this.state.hash[2] = this.state.hash[3] + el + ar | 0, 
          this.state.hash[3] = this.state.hash[4] + al + br | 0, this.state.hash[4] = this.state.hash[0] + bl + cr | 0, 
          this.state.hash[0] = t;
        }
      }, {
        key: "processBlock256",
        value: function(block) {
          for (var al = 0 | this.state.hash[0], bl = 0 | this.state.hash[1], cl = 0 | this.state.hash[2], dl = 0 | this.state.hash[3], ar = 0 | this.state.hash[4], br = 0 | this.state.hash[5], cr = 0 | this.state.hash[6], dr = 0 | this.state.hash[7], i = 0; i < 64; i += 1) {
            var t = al + block[ZL[i]] | 0;
            switch (t = t + Ripemd.T(i, bl, cl, dl) | 0, al = dl, dl = cl, cl = bl, bl = t = rotateLeft(t, SL[i]), 
            t = (t = ar + block[ZR[i]] | 0) + Ripemd.T64(i, br, cr, dr) | 0, ar = dr, dr = cr, 
            cr = br, br = t = rotateLeft(t, SR[i]), i) {
             case 15:
              t = al, al = ar, ar = t;
              break;

             case 31:
              t = bl, bl = br, br = t;
              break;

             case 47:
              t = cl, cl = cr, cr = t;
              break;

             case 63:
              t = dl, dl = dr, dr = t;
            }
          }
          this.state.hash[0] = this.state.hash[0] + al | 0, this.state.hash[1] = this.state.hash[1] + bl | 0, 
          this.state.hash[2] = this.state.hash[2] + cl | 0, this.state.hash[3] = this.state.hash[3] + dl | 0, 
          this.state.hash[4] = this.state.hash[4] + ar | 0, this.state.hash[5] = this.state.hash[5] + br | 0, 
          this.state.hash[6] = this.state.hash[6] + cr | 0, this.state.hash[7] = this.state.hash[7] + dr | 0;
        }
      }, {
        key: "processBlock320",
        value: function(block) {
          for (var al = 0 | this.state.hash[0], bl = 0 | this.state.hash[1], cl = 0 | this.state.hash[2], dl = 0 | this.state.hash[3], el = 0 | this.state.hash[4], ar = 0 | this.state.hash[5], br = 0 | this.state.hash[6], cr = 0 | this.state.hash[7], dr = 0 | this.state.hash[8], er = 0 | this.state.hash[9], i = 0; i < 80; i += 1) {
            var t = al + block[ZL[i]] | 0;
            switch (t = (t = rotateLeft(t = t + Ripemd.T(i, bl, cl, dl) | 0, SL[i])) + el | 0, 
            al = el, el = dl, dl = rotateLeft(cl, 10), cl = bl, bl = t, t = (t = rotateLeft(t = (t = ar + block[ZR[i]] | 0) + Ripemd.T80(i, br, cr, dr) | 0, SR[i])) + er | 0, 
            ar = er, er = dr, dr = rotateLeft(cr, 10), cr = br, br = t, i) {
             case 15:
              t = bl, bl = br, br = t;
              break;

             case 31:
              t = dl, dl = dr, dr = t;
              break;

             case 47:
              t = al, al = ar, ar = t;
              break;

             case 63:
              t = cl, cl = cr, cr = t;
              break;

             case 79:
              t = el, el = er, er = t;
            }
          }
          this.state.hash[0] = this.state.hash[0] + al | 0, this.state.hash[1] = this.state.hash[1] + bl | 0, 
          this.state.hash[2] = this.state.hash[2] + cl | 0, this.state.hash[3] = this.state.hash[3] + dl | 0, 
          this.state.hash[4] = this.state.hash[4] + el | 0, this.state.hash[5] = this.state.hash[5] + ar | 0, 
          this.state.hash[6] = this.state.hash[6] + br | 0, this.state.hash[7] = this.state.hash[7] + cr | 0, 
          this.state.hash[8] = this.state.hash[8] + dr | 0, this.state.hash[9] = this.state.hash[9] + er | 0;
        }
      }, {
        key: "finalize",
        value: function() {
          return this.addPaddingISO7816(this.state.message.length < 56 ? 56 - this.state.message.length | 0 : 120 - this.state.message.length | 0), 
          this.addLengthBits(), this.process(), this.getStateHash();
        }
      } ]) && ripemd_defineProperties(Constructor.prototype, protoProps), staticProps && ripemd_defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), Ripemd;
    }(function(_Hasher) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(Hasher32le, _Hasher);
      var Constructor, protoProps, staticProps, _super = _createSuper(Hasher32le);
      function Hasher32le(options) {
        var _this;
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, Hasher32le), (_this = _super.call(this, options)).blockUnits = [], _this;
      }
      return Constructor = Hasher32le, (protoProps = [ {
        key: "process",
        value: function() {
          for (;this.state.message.length >= this.blockSizeInBytes; ) {
            this.blockUnits = [];
            for (var b = 0; b < this.blockSizeInBytes; b += 4) this.blockUnits.push(this.state.message.charCodeAt(b) | this.state.message.charCodeAt(b + 1) << 8 | this.state.message.charCodeAt(b + 2) << 16 | this.state.message.charCodeAt(b + 3) << 24);
            this.state.message = this.state.message.substr(this.blockSizeInBytes), this.processBlock(this.blockUnits);
          }
        }
      }, {
        key: "processBlock",
        value: function(M) {}
      }, {
        key: "getStateHash",
        value: function(size) {
          size = size || this.state.hash.length;
          for (var hash = "", i = 0; i < size; i++) hash += String.fromCharCode(255 & this.state.hash[i]) + String.fromCharCode(this.state.hash[i] >> 8 & 255) + String.fromCharCode(this.state.hash[i] >> 16 & 255) + String.fromCharCode(this.state.hash[i] >> 24 & 255);
          return hash;
        }
      }, {
        key: "addLengthBits",
        value: function() {
          this.state.message += String.fromCharCode(this.state.length << 3 & 255) + String.fromCharCode(this.state.length >> 5 & 255) + String.fromCharCode(this.state.length >> 13 & 255) + String.fromCharCode(this.state.length >> 21 & 255) + String.fromCharCode(this.state.length >> 29 & 255) + "\0\0\0";
        }
      } ]) && hasher32le_defineProperties(Constructor.prototype, protoProps), staticProps && hasher32le_defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), Hasher32le;
    }(function() {
      function Hasher(options) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, Hasher), this.unitSize = 4, this.unitOrder = 0, this.blockSize = 16, this.blockSizeInBytes = this.blockSize * this.unitSize, 
        this.options = options || {}, this.reset();
      }
      var Constructor, protoProps, staticProps;
      return Constructor = Hasher, (protoProps = [ {
        key: "reset",
        value: function() {
          this.state = {}, this.state.message = "", this.state.length = 0;
        }
      }, {
        key: "getState",
        value: function() {
          return JSON.parse(JSON.stringify(this.state));
        }
      }, {
        key: "setState",
        value: function(state) {
          this.state = state;
        }
      }, {
        key: "update",
        value: function(message) {
          this.state.message += message, this.state.length += message.length, this.process();
        }
      }, {
        key: "process",
        value: function() {}
      }, {
        key: "finalize",
        value: function() {
          return "";
        }
      }, {
        key: "getStateHash",
        value: function(size) {
          return "";
        }
      }, {
        key: "addPaddingPKCS7",
        value: function(length) {
          this.state.message += new Array(length + 1).join(String.fromCharCode(length));
        }
      }, {
        key: "addPaddingISO7816",
        value: function(length) {
          this.state.message += "" + new Array(length).join("\0");
        }
      }, {
        key: "addPaddingZero",
        value: function(length) {
          this.state.message += new Array(length + 1).join("\0");
        }
      } ]) && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), Hasher;
    }()));
    var safe_buffer = __webpack_require__(192861), account = __webpack_require__(266744);
    var tool_const = __webpack_require__(498050), method = __webpack_require__(326394), utils = __webpack_require__(921225), allWeb3Method = __webpack_require__(426451), solSend = __webpack_require__(322976), Notification = __webpack_require__(279386), lang_string = __webpack_require__(212864), chainRequestMethod = __webpack_require__(700313), dataUtils = __webpack_require__(845404), wallet_core = __webpack_require__(259159);
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function PYGateMethod_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, PYGateMethod_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = PYGateMethod_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function PYGateMethod_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== PYGateMethod_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== PYGateMethod_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === PYGateMethod_typeof(key) ? key : String(key);
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function PYGateMethod_typeof(obj) {
      return PYGateMethod_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, PYGateMethod_typeof(obj);
    }
    nacl_fast_default().utils = nacl_util_default();
    var ripemd320 = function(buffer) {
      var hasher = new ripemd({
        length: 320
      });
      return hasher.update(function(buffer) {
        for (var s = "", bytes = new Uint8Array(buffer), i = 0; i < bytes.length; i++) s += String.fromCharCode(bytes[i]);
        return s;
      }(buffer)), function(raw) {
        for (var str = "", i = 0, l = raw.length; i < l; i++) str += (raw.charCodeAt(i) < 16 ? "0" : "") + raw.charCodeAt(i).toString(16);
        return str;
      }(hasher.finalize());
    };
    function uint8ArrayToHex(uint8Array) {
      return Array.from(uint8Array, (function(_byte) {
        return _byte.toString(16).padStart(2, "0");
      })).join("");
    }
    var sortObject = function sortObject(obj) {
      if (null === obj || "object" !== PYGateMethod_typeof(obj)) return obj;
      if (Array.isArray(obj)) return obj.map(sortObject).sort();
      var _step, result = {}, _iterator = function(o, allowArrayLike) {
        var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
        if (!it) {
          if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
            it && (o = it);
            var i = 0, F = function() {};
            return {
              s: F,
              n: function() {
                return i >= o.length ? {
                  done: !0
                } : {
                  done: !1,
                  value: o[i++]
                };
              },
              e: function(_e) {
                throw _e;
              },
              f: F
            };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var err, normalCompletion = !0, didErr = !1;
        return {
          s: function() {
            it = it.call(o);
          },
          n: function() {
            var step = it.next();
            return normalCompletion = step.done, step;
          },
          e: function(_e2) {
            didErr = !0, err = _e2;
          },
          f: function() {
            try {
              normalCompletion || null == it.return || it.return();
            } finally {
              if (didErr) throw err;
            }
          }
        };
      }(Object.keys(obj).sort());
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var key = _step.value;
          result[key] = sortObject(obj[key]);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return result;
    }, PYGateMethod = function() {
      function PYGateMethod() {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, PYGateMethod);
      }
      var Constructor, protoProps, staticProps, _createAccountByExtendedPrivateKey, _transferGT, _getSignBytes, _calculateGas, _balanceOf, _createGTWallet, _generateXprvFromSeed;
      return Constructor = PYGateMethod, protoProps = null, staticProps = [ {
        key: "generateXprvFromSeed",
        value: (_generateXprvFromSeed = _asyncToGenerator(regeneratorRuntime.mark((function _callee(seed) {
          var iter, xprv, hmac, digest, secretKey, right;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              iter = 1, xprv = new Uint8Array(this.XPRV_SIZE);

             case 2:
              if ((hmac = create_hmac_browser_default()("sha512", seed)).update("Root Seed Chain ".concat(iter)), 
              digest = hmac.digest(), secretKey = browser_default()("sha512").update(safe_buffer.Buffer.from(digest.slice(0, 32))).digest(), 
              right = digest.slice(32), secretKey[0] &= 248, secretKey[31] &= 63, secretKey[31] |= 64, 
              0 != (32 & secretKey[31])) {
                _context.next = 17;
                break;
              }
              return secretKey.writeUInt8(248 & secretKey.readUInt8(0), 0), secretKey.writeUInt8(63 & secretKey.readUInt8(31) | 64, 31), 
              xprv.set(secretKey, 0), xprv.set(right, 64), _context.abrupt("break", 20);

             case 17:
              iter++, _context.next = 2;
              break;

             case 20:
              return _context.abrupt("return", xprv);

             case 21:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _generateXprvFromSeed.apply(this, arguments);
        })
      }, {
        key: "derivePrivateKeyFromPath",
        value: function(xprv, path) {
          for (var parts = path.split("/"), i = 0; i < parts.length; i++) {
            var part = parts[i];
            if (0 !== i || "m" !== part) {
              var harden = part.endsWith("'");
              harden && (parts[i] = part.substring(0, part.length - 1));
              var index = parseInt(parts[i]);
              if (isNaN(index)) throw new Error("Invalid BIP 32 path: not a valid integer");
              if (index < 0 || BigInt(index) >= BigInt(this.HARD_INDEX)) throw new Error("Invalid BIP 32 path: index is negative or too large");
              parts[i] = harden ? (BigInt(index) | BigInt(this.HARD_INDEX)).toString() : index.toString(), 
              xprv = this.derivePrivate(xprv, parseInt(parts[i]));
            }
          }
          return xprv;
        }
      }, {
        key: "derivePrivate",
        value: function(xprv, index) {
          var ekey = xprv.subarray(0, 64), chaincode = xprv.subarray(64, 96), kl = xprv.subarray(0, 32), kr = xprv.subarray(32, 64), seri = new Uint8Array(4);
          new DataView(seri.buffer).setUint32(0, index, !0);
          var zmac = create_hmac_browser_default()("sha512", safe_buffer.Buffer.from(chaincode)), imac = create_hmac_browser_default()("sha512", safe_buffer.Buffer.from(chaincode)), zMacArray = [], iMacArray = [];
          if (BigInt(index) >= BigInt(this.HARD_INDEX)) zMacArray.push.apply(zMacArray, [ 0 ].concat(_toConsumableArray(ekey), _toConsumableArray(seri))), 
          iMacArray.push.apply(iMacArray, [ 1 ].concat(_toConsumableArray(ekey), _toConsumableArray(seri))); else {
            var xprvHex = uint8ArrayToHex(xprv), pubkey = this.edPubKey(xprvHex.substring(0, 64));
            zMacArray.push.apply(zMacArray, [ 2 ].concat(_toConsumableArray(pubkey), _toConsumableArray(seri))), 
            iMacArray.push.apply(iMacArray, [ 3 ].concat(_toConsumableArray(pubkey), _toConsumableArray(seri)));
          }
          var zout = new Uint8Array(zmac.update(safe_buffer.Buffer.from(zMacArray)).digest()), iout = new Uint8Array(imac.update(safe_buffer.Buffer.from(iMacArray)).digest()), zl = zout.subarray(0, 32), zr = zout.subarray(32, 64), result = new Uint8Array(this.XPRV_SIZE);
          return result.set(function(kl, zl) {
            for (var carry = 0, out = new Uint8Array(32), i = 0; i < 28; i++) {
              var r = kl[i] + (zl[i] << 3) + carry;
              out[i] = 255 & r, carry = r >> 8;
            }
            for (var _i = 28; _i < 32; _i++) {
              var _r = kl[_i] + carry;
              out[_i] = 255 & _r, carry = _r >> 8;
            }
            return out;
          }(kl, zl), 0), result.set(function(kr, zr) {
            for (var carry = 0, out = new Uint8Array(32), i = 0; i < 32; i++) {
              var r = kr[i] + zr[i] + carry;
              out[i] = 255 & r, carry = r >> 8;
            }
            return out;
          }(kr, zr), 32), result.set(iout.subarray(32), 64), result;
        }
      }, {
        key: "edPubKey",
        value: function(privateKey) {
          return "string" == typeof privateKey && (privateKey = safe_buffer.Buffer.from(privateKey, "hex")), 
          bip32_ed25519_default().toPublic(privateKey);
        }
      }, {
        key: "edPrivKey",
        value: function(priv) {
          var hBytes = new Uint8Array(64);
          hBytes.set(priv.subarray(0, 32), 0);
          var pubBytes = this.edPubKey(uint8ArrayToHex(priv).substring(0, 64));
          return hBytes.set(pubBytes.subarray(0, 32), 32), hBytes;
        }
      }, {
        key: "createGTWallet",
        value: (_createGTWallet = _asyncToGenerator(regeneratorRuntime.mark((function _callee2() {
          var mnemonic, accountPosition, _yield$getWasm, HDWallet, wallet, seed, accountExtendedPrivateKey, derived, accountPrivateKey, accountPublicKey, accountAddress, hexPrivateKey, hexPublicKey, hexExtendedPrivateKey, _args2 = arguments;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return mnemonic = _args2.length > 0 && void 0 !== _args2[0] ? _args2[0] : "", accountPosition = 0, 
              _context2.next = 4, (0, wallet_core.t)();

             case 4:
              return _yield$getWasm = _context2.sent, HDWallet = _yield$getWasm.HDWallet, wallet = HDWallet.createWithMnemonic(utils.YA(mnemonic), ""), 
              seed = wallet.seed(), _context2.next = 10, this.generateXprvFromSeed(seed);

             case 10:
              return accountExtendedPrivateKey = _context2.sent, derived = this.derivePrivateKeyFromPath(accountExtendedPrivateKey, "m/44'/669'/0'/0/0"), 
              accountPrivateKey = this.edPrivKey(derived), accountPublicKey = this.edPubKey(uint8ArrayToHex(accountPrivateKey).substring(0, 64)), 
              accountAddress = this.genSingleSigAddress(accountPublicKey, this.NORMAL_SINGLE_SIG_ADDRESS_PREFIX), 
              hexPrivateKey = uint8ArrayToHex(accountPrivateKey), hexPublicKey = uint8ArrayToHex(accountPublicKey), 
              hexExtendedPrivateKey = uint8ArrayToHex(accountExtendedPrivateKey), _context2.abrupt("return", new account.QY(this.CHAIN_KEY, accountPosition, accountAddress, hexPrivateKey, hexPublicKey, hexExtendedPrivateKey, "", "m/44'/669'/0'/0/0", "m/44'/669'/0'/0"));

             case 19:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function() {
          return _createGTWallet.apply(this, arguments);
        })
      }, {
        key: "createGTWalletByPrivateKey",
        value: function(privateKey) {
          if (128 !== (privateKey = privateKey.replace(/^0x/, "")).length) throw new Error("invalid privateKey");
          var accountPrivateKey = privateKey.toString().substring(0, 64), accountPublicKey = this.edPubKey(accountPrivateKey), accountAddress = this.genSingleSigAddress(accountPublicKey, this.NORMAL_SINGLE_SIG_ADDRESS_PREFIX);
          return new account.QY(this.CHAIN_KEY, "0", accountAddress, privateKey, uint8ArrayToHex(accountPublicKey), "", "", "m/44'/669'/0'/0/0", "m/44'/669'/0'/0");
        }
      }, {
        key: "checkAddres",
        value: function(address) {
          if (function(address) {
            return /^0[xX][0-9a-fA-F]{40}$/.test(address);
          }(address)) return !0;
          try {
            var decoded = dist.bech32.decode(address);
            return decoded.prefix === this.NORMAL_SINGLE_SIG_ADDRESS_PREFIX || decoded.prefix === this.NORMAL_MULTI_SIG_ADDRESS_PREFIX || decoded.prefix === this.VAULT_SINGLE_SIG_ADDRESS_PREFIX || decoded.prefix === this.VAULT_MULTI_SIG_ADDRESS_PREFIX;
          } catch (_unused) {
            return !1;
          }
        }
      }, {
        key: "isValidPrivateKey",
        value: function(privateKey) {
          var pubKey = this.edPubKey(privateKey.substring(0, 64)), address = this.genSingleSigAddress(pubKey, this.NORMAL_SINGLE_SIG_ADDRESS_PREFIX);
          return this.checkAddres(address);
        }
      }, {
        key: "balanceOf",
        value: (_balanceOf = _asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
          var sendInfo, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, coinTransferFromAddress, coinNetworkPrecision, conn, amount, _args3 = arguments;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return totalNetworkDic = _args3.length > 1 ? _args3[1] : void 0, rpcUrls = _args3.length > 2 ? _args3[2] : void 0, 
              lastGetSuccessRpcTime = _args3.length > 3 ? _args3[3] : void 0, coinTransferFromAddress = (sendInfo = _args3.length > 0 && void 0 !== _args3[0] ? _args3[0] : {}).coinTransferFromAddress, 
              coinNetworkPrecision = sendInfo.coinNetworkPrecision, _context3.next = 7, (0, allWeb3Method.Qp)(tool_const.NETWORK_NAMES.GT_ORG, null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

             case 7:
              return conn = _context3.sent, _context3.next = 10, conn.balanceOf(coinTransferFromAddress);

             case 10:
              return amount = _context3.sent, _context3.abrupt("return", amount && (0, method.dataOperation)(amount, Math.pow(10, coinNetworkPrecision), "division"));

             case 12:
             case "end":
              return _context3.stop();
            }
          }), _callee3);
        }))), function() {
          return _balanceOf.apply(this, arguments);
        })
      }, {
        key: "calculateGas",
        value: (_calculateGas = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(sendInfo, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var minFee, coinTransferFromAddress, coinTransferToAddress, coinNetworkPrecision, coinTransferAmount, amount, conn, _yield$conn$generateT, gas_estimate, gas, moneyInfo;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return minFee = "100000", coinTransferFromAddress = sendInfo.coinTransferFromAddress, 
              coinTransferToAddress = sendInfo.coinTransferToAddress, coinNetworkPrecision = sendInfo.coinNetworkPrecision, 
              coinTransferAmount = sendInfo.coinTransferAmount, amount = (0, method.dataOperation)(coinTransferAmount, Math.pow(10, coinNetworkPrecision)), 
              _context4.next = 5, (0, allWeb3Method.Qp)(tool_const.NETWORK_NAMES.GT_ORG, null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

             case 5:
              return conn = _context4.sent, _context4.next = 8, conn.generateTransaction(coinTransferFromAddress, coinTransferToAddress, amount, {
                simulate: !0
              });

             case 8:
              return _yield$conn$generateT = _context4.sent, gas_estimate = _yield$conn$generateT.gas_estimate, 
              gas = minFee, Number(gas_estimate) > Number(minFee) && (gas = gas_estimate), gas = (0, 
              method.dataOperation)(gas, Math.pow(10, coinNetworkPrecision), "/"), _context4.next = 15, 
              (0, solSend.WF)(sendInfo, gas);

             case 15:
              return moneyInfo = _context4.sent, _context4.abrupt("return", _objectSpread({
                gasFee: gas
              }, moneyInfo));

             case 17:
             case "end":
              return _context4.stop();
            }
          }), _callee4);
        }))), function(_x2, _x3, _x4, _x5) {
          return _calculateGas.apply(this, arguments);
        })
      }, {
        key: "getNonce",
        value: function() {
          return function(buffer) {
            for (var binary = "", bytes = new Uint8Array(buffer), len = bytes.byteLength, i = 0; i < len; i++) binary += String.fromCharCode(bytes[i]);
            return window.btoa(binary);
          }(function(length) {
            var bytes = new Uint8Array(length);
            return window.crypto.getRandomValues(bytes), bytes;
          }(32));
        }
      }, {
        key: "getSignBytes",
        value: (_getSignBytes = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(tx) {
          var message, sortedMessage, encodedMessage, hashBuffer;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return message = {
                chain_id: "mainnet",
                fee: tx.value.fee,
                memo: tx.value.memo,
                msgs: tx.value.msg,
                nonces: tx.value.nonces,
                valid_height: tx.value.valid_height
              }, sortedMessage = sortObject(message), encodedMessage = safe_buffer.Buffer.from(JSON.stringify(sortedMessage)), 
              _context5.next = 5, crypto.subtle.digest("SHA-256", encodedMessage);

             case 5:
              return hashBuffer = _context5.sent, _context5.abrupt("return", new Uint8Array(hashBuffer));

             case 7:
             case "end":
              return _context5.stop();
            }
          }), _callee5);
        }))), function(_x6) {
          return _getSignBytes.apply(this, arguments);
        })
      }, {
        key: "sign",
        value: function(privateKey, message) {
          return bip32_ed25519_default().sign(message, privateKey);
        }
      }, {
        key: "transferGT",
        value: (_transferGT = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(sendInfo, privateKeyHex, history, setLoading, isRaw, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var _res$data, _res$data$data, coinTransferFromAddress, coinTransferToAddress, coinNetworkPrecision, coinTransferAmount, coinTransferFee, amount, fee, conn, tx, txBytes, signature, publicKey, sig, historyData, res, hash;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return _context6.prev = 0, coinTransferFromAddress = sendInfo.coinTransferFromAddress, 
              coinTransferToAddress = sendInfo.coinTransferToAddress, coinNetworkPrecision = sendInfo.coinNetworkPrecision, 
              coinTransferAmount = sendInfo.coinTransferAmount, coinTransferFee = sendInfo.coinTransferFee, 
              amount = (0, method.dataOperation)(coinTransferAmount, Math.pow(10, coinNetworkPrecision)), 
              fee = (0, method.dataOperation)(coinTransferFee, Math.pow(10, coinNetworkPrecision)), 
              _context6.next = 6, (0, allWeb3Method.Qp)(this.CHAIN_KEY, null, !1, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

             case 6:
              return conn = _context6.sent, _context6.next = 9, conn.generateTransaction(coinTransferFromAddress, coinTransferToAddress, amount, {
                fee,
                simulate: !1
              });

             case 9:
              return tx = _context6.sent, _context6.next = 12, this.getSignBytes(tx);

             case 12:
              if (txBytes = _context6.sent, signature = this.sign(safe_buffer.Buffer.from(privateKeyHex, "hex"), safe_buffer.Buffer.from(uint8ArrayToHex(txBytes), "hex")), 
              publicKey = this.edPubKey(privateKeyHex.replace(/^0x/, "").substring(0, 64)), sig = {
                pub_key: {
                  type: "gatechain/PubKeyEd25519",
                  value: nacl_util_default().encodeBase64(publicKey)
                },
                signature: nacl_util_default().encodeBase64(signature)
              }, tx.value.signatures = [ sig ], !isRaw || !tx) {
                _context6.next = 19;
                break;
              }
              return _context6.abrupt("return", tx);

             case 19:
              return historyData = {
                chain_type: null == sendInfo ? void 0 : sendInfo.chainSimpleName,
                address: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
                chain_name: null == sendInfo ? void 0 : sendInfo.chainSimpleName,
                token_addr: null == sendInfo ? void 0 : sendInfo.coinContractAddress,
                token_name: null == sendInfo ? void 0 : sendInfo.coinFullName,
                token_short_name: null == sendInfo ? void 0 : sendInfo.coinSimpleName,
                trans_type: "send",
                trans_time: parseInt((new Date).getTime() / 1e3),
                trans_balance: null == sendInfo ? void 0 : sendInfo.coinTransferAmount,
                trans_balance_usd: null == sendInfo ? void 0 : sendInfo.coinTransferAmountMoney,
                trans_oppo_address: null == sendInfo ? void 0 : sendInfo.coinTransferToAddress,
                nonce: null == sendInfo ? void 0 : sendInfo.coinTransferNonce,
                is_contra: "-" == (null == sendInfo ? void 0 : sendInfo.token_addr) ? 0 : null != sendInfo && sendInfo.coinIsMain ? 1 : 0,
                trans_gas_fee: null == sendInfo ? void 0 : sendInfo.coinTransferFee,
                memo: null == sendInfo ? void 0 : sendInfo.memo,
                memo_name: null == sendInfo ? void 0 : sendInfo.memo_name,
                platform_operation: null == sendInfo ? void 0 : sendInfo.platform_operation,
                platform_name: null == sendInfo ? void 0 : sendInfo.platform_name
              }, _context6.next = 22, (0, chainRequestMethod.IM)("GT_ORG", tx, historyData);

             case 22:
              res = _context6.sent, (hash = null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$data = _res$data.data) || void 0 === _res$data$data ? void 0 : _res$data$data.hash_id) && history && (0, 
              dataUtils.sendTokenJumpPage)(_objectSpread(_objectSpread({}, sendInfo), {
                coinTransferHash: hash
              }), history), _context6.next = 31;
              break;

             case 27:
              _context6.prev = 27, _context6.t0 = _context6.catch(0), setLoading(!1), (0, Notification.Ds)({
                type: "error",
                message: (0, lang_string.lang_string)("失败，请重试")
              });

             case 31:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this, [ [ 0, 27 ] ]);
        }))), function(_x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14) {
          return _transferGT.apply(this, arguments);
        })
      }, {
        key: "createAccountByExtendedPrivateKey",
        value: (_createAccountByExtendedPrivateKey = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(accountExtensionPrivateKey, derivationPath, position) {
          var accountPosition, derived, accountPrivateKey, hexAccountPrivateKey, accountPublicKey, accountAddress;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return accountPosition = position, derived = this.derivePrivateKeyFromPath(new Uint8Array(safe_buffer.Buffer.from(accountExtensionPrivateKey, "hex")), derivationPath), 
              accountPrivateKey = this.edPrivKey(derived), hexAccountPrivateKey = uint8ArrayToHex(accountPrivateKey), 
              accountPublicKey = this.edPubKey(hexAccountPrivateKey.substring(0, 64)), accountAddress = this.genSingleSigAddress(accountPublicKey, "gt1"), 
              _context7.abrupt("return", new account.QY(this.CHAIN_KEY, accountPosition, accountAddress, uint8ArrayToHex(accountPrivateKey), uint8ArrayToHex(accountPublicKey), accountExtensionPrivateKey, "", "m/44'/669'/0'/0/".concat(position), "m/44'/669'/0'/0"));

             case 7:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x15, _x16, _x17) {
          return _createAccountByExtendedPrivateKey.apply(this, arguments);
        })
      } ], protoProps && PYGateMethod_defineProperties(Constructor.prototype, protoProps), 
      staticProps && PYGateMethod_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), PYGateMethod;
    }();
    _defineProperty(PYGateMethod, "CHAIN_KEY", tool_const.NETWORK_NAMES.GT_ORG), _defineProperty(PYGateMethod, "XPRV_SIZE", 96), 
    _defineProperty(PYGateMethod, "HARD_INDEX", 2147483648), _defineProperty(PYGateMethod, "NORMAL_SINGLE_SIG_ADDRESS_PREFIX", "gt1"), 
    _defineProperty(PYGateMethod, "NORMAL_MULTI_SIG_ADDRESS_PREFIX", "gt2"), _defineProperty(PYGateMethod, "VAULT_SINGLE_SIG_ADDRESS_PREFIX", "vault1"), 
    _defineProperty(PYGateMethod, "VAULT_MULTI_SIG_ADDRESS_PREFIX", "vault2"), _defineProperty(PYGateMethod, "genSingleSigAddress", (function(publicKey, prefix) {
      "string" == typeof publicKey && (publicKey = safe_buffer.Buffer.from(publicKey, "hex")), 
      prefix = prefix || PYGateMethod.NORMAL_SINGLE_SIG_ADDRESS_PREFIX;
      var sha512 = browser_default()("sha512").update(publicKey).digest(), ripemd320Value = ripemd320(sha512), words = dist.bech32.toWords(safe_buffer.Buffer.from(ripemd320Value, "hex"));
      return dist.bech32.encode(prefix, words);
    }));
  },
  721095: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      R: () => getOS
    });
    __webpack_require__(219693);
    var getOS = function() {
      var sUserAgent = navigator.userAgent, isWin = "Win32" == navigator.platform || "Windows" == navigator.platform, isMac = "Mac68K" == navigator.platform || "MacPPC" == navigator.platform || "Macintosh" == navigator.platform || "MacIntel" == navigator.platform;
      if (isMac) return "Mac";
      if ("X11" == navigator.platform && !isWin && !isMac) return "Unix";
      if (String(navigator.platform).indexOf("Linux") > -1) return "Linux";
      if (isWin) {
        if (sUserAgent.indexOf("Windows NT 5.0") > -1 || sUserAgent.indexOf("Windows 2000") > -1) return "Windows 2000";
        if (sUserAgent.indexOf("Windows NT 5.1") > -1 || sUserAgent.indexOf("Windows XP") > -1) return "Windows XP";
        if (sUserAgent.indexOf("Windows NT 5.2") > -1 || sUserAgent.indexOf("Windows 2003") > -1) return "Windows 2003";
        if (sUserAgent.indexOf("Windows NT 6.0") > -1 || sUserAgent.indexOf("Windows Vista") > -1) return "Windows Vista";
        if (sUserAgent.indexOf("Windows NT 6.1") > -1 || sUserAgent.indexOf("Windows 7") > -1) return "Windows 7";
        if (sUserAgent.indexOf("Windows NT 10") > -1 || sUserAgent.indexOf("Windows 10") > -1) return "Windows 10.0";
      }
      return "other";
    };
  },
  724959: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Cc: () => postWalletReport,
      O8: () => getAddressByDomain,
      U$: () => getAddressBook,
      rM: () => deleteAddressBook,
      rZ: () => getDepositAddress,
      te: () => addAddressBook,
      u9: () => postChangeWallet,
      vX: () => updateAddressBook,
      w: () => postWalletBalanceList
    });
    __webpack_require__(689560), __webpack_require__(579389), __webpack_require__(380115), 
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(407899), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(103101), __webpack_require__(936012), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(207452), __webpack_require__(419969);
    var ___WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(358547), _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(525735);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getAddressBook = function(query) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_24__.bj, "/asset/address/book"), query);
    }, addAddressBook = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_24__.bj, "/asset/address/book"), {}, params, "code");
    }, updateAddressBook = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_24__.bj, "/asset/address/book/update"), {}, params, "code");
    }, deleteAddressBook = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_24__.bj, "/asset/address/book/delete"), {}, params, "code");
    }, getDepositAddress = function(query) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_24__.B$, "/wallet/depositAddress"), query);
    }, postWalletBalanceList = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("POST", "".concat(___WEBPACK_IMPORTED_MODULE_24__.bj, "/asset/wallet/balance"), {}, params);

           case 2:
            return _context3.abrupt("return", _context3.sent);

           case 3:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x3) {
        return _ref3.apply(this, arguments);
      };
    }(), WALLET_ACCOUNT_API_ROOT = ___WEBPACK_IMPORTED_MODULE_24__.Cu ? "https://web3-wallet-service-test.gateweb3.cc" : ___WEBPACK_IMPORTED_MODULE_24__.aB ? "https://web3-wallet-service-pre.gateweb3.cc" : "https://web3-wallet-service-prod.gateweb3.cc", WALLET_ACCOUNT_API_BASE_URL = "".concat(WALLET_ACCOUNT_API_ROOT).concat(""), postWalletReport = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("POST", "".concat(WALLET_ACCOUNT_API_BASE_URL, "/wallet-manage/wallet-report"), {}, params);
    }, postChangeWallet = function(params) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("POST", "".concat(WALLET_ACCOUNT_API_BASE_URL, "/wallet-manage/update-wallet-info"), {}, params);
    }, getAddressByDomain = function(query) {
      return (0, _bg_utils_gt_fetch__WEBPACK_IMPORTED_MODULE_25__.uJ)("GET", "".concat(___WEBPACK_IMPORTED_MODULE_24__.O5, "/network/domain/getAddress"), query);
    };
  },
  745788: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      cutInteger: () => cutInteger,
      dataOperation: () => dataOperation,
      foldZero: () => foldZero,
      formatBalance: () => formatBalance,
      formatDecimalsAmount: () => formatDecimalsAmount,
      formatGasFee: () => formatGasFee,
      formatSwapAmount: () => formatSwapAmount,
      formatSwapBalance: () => formatSwapBalance,
      formatThousandth: () => formatThousandth,
      formatToNumber: () => formatToNumber,
      hexToBytes: () => hexToBytes,
      toNonExponential: () => toNonExponential,
      unfoldZero: () => unfoldZero
    });
    __webpack_require__(687136), __webpack_require__(640173), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(906048), __webpack_require__(196088), 
    __webpack_require__(158649), __webpack_require__(418665), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(714913), __webpack_require__(511902), __webpack_require__(194009), 
    __webpack_require__(885365), __webpack_require__(219693), __webpack_require__(850785), 
    __webpack_require__(992157), __webpack_require__(380115), __webpack_require__(868329), 
    __webpack_require__(678636), __webpack_require__(447746), __webpack_require__(43148), 
    __webpack_require__(204038), __webpack_require__(361890), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(564216), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(504895), __webpack_require__(498741), 
    __webpack_require__(215195);
    var bignumber_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(760346);
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    var toNonExponential = function(inputNumber) {
      var _inputNumber, _inputNumber$toFormat;
      "string" == typeof inputNumber && (inputNumber = (0, bignumber_js__WEBPACK_IMPORTED_MODULE_55__.A)(inputNumber));
      var value = null === (_inputNumber = inputNumber) || void 0 === _inputNumber || null === (_inputNumber$toFormat = _inputNumber.toFormat()) || void 0 === _inputNumber$toFormat ? void 0 : _inputNumber$toFormat.replace(/[,]/g, "");
      return "NaN" == value ? "0" : value;
    }, dataOperation = function(data1, data2) {
      var _data, _data2, type = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "*";
      "NaN" == parseFloat(null === (_data = data1) || void 0 === _data ? void 0 : _data.toString()).toString() && (data1 = 0), 
      "NaN" == parseFloat(null === (_data2 = data2) || void 0 === _data2 ? void 0 : _data2.toString()).toString() && (data2 = 0);
      var _value1 = new bignumber_js__WEBPACK_IMPORTED_MODULE_55__.A(data1), _value2 = new bignumber_js__WEBPACK_IMPORTED_MODULE_55__.A(data2), amount = new bignumber_js__WEBPACK_IMPORTED_MODULE_55__.A(0);
      return amount = "+" == type ? _value1.plus(_value2) : "-" == type ? _value1.minus(_value2) : "/" == type ? _value1.dividedBy(_value2) : _value1.multipliedBy(_value2), 
      toNonExponential(amount);
    }, cutInteger = function(str) {
      var strValue = toNonExponential((0, bignumber_js__WEBPACK_IMPORTED_MODULE_55__.A)(str));
      return /\./.test(strValue) ? str.toString().split(".")[0] : strValue;
    }, formatToNumber = function(str) {
      return parseFloat(str.replace(/[^\d.]/g, ""));
    }, hexToBytes = function(hex) {
      if ("string" != typeof hex) throw new TypeError("hexToBytes: expected string, got ".concat(_typeof(hex)));
      for (var paddedHex = hex.length % 2 ? "0".concat(hex) : hex, array = new Uint8Array(paddedHex.length / 2), i = 0; i < array.length; i++) {
        var j = 2 * i, hexByte = paddedHex.slice(j, j + 2), _byte = Number.parseInt(hexByte, 16);
        if (Number.isNaN(_byte) || _byte < 0) throw new Error("Invalid byte sequence");
        array[i] = _byte;
      }
      return array;
    }, formatDecimalsAmount = function(value) {
      var fixedNumber = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
      if (isNaN(Number(value))) return value;
      if (!value) return value;
      var strValue = null == value ? void 0 : value.toString();
      if (Math.abs(Number(value)) < 1) {
        var decimalIndex = strValue.indexOf(".") + 1, nonZeroIndex = strValue.slice(decimalIndex).search(/[1-9]/), endIndex = -1 === nonZeroIndex ? decimalIndex + fixedNumber : decimalIndex + nonZeroIndex + fixedNumber;
        return strValue.substring(0, endIndex);
      }
      if (strValue.indexOf(".") > -1) {
        var _decimalIndex = strValue.indexOf(".") + (fixedNumber + 1);
        return strValue.substring(0, _decimalIndex);
      }
      return strValue;
    }, formatBalance = function(value) {
      var amount = toNonExponential(value);
      return Number(value) < 1e-4 ? value : formatThousandth(formatDecimalsAmount(amount, 4));
    }, formatGasFee = function(value, type) {
      var amount = toNonExponential(value);
      return Number(value) < 1e-6 && "swap" !== type ? value : formatDecimalsAmount(amount, 6);
    }, formatSwapAmount = function(value, type) {
      if (!value || 0 === Number(value)) return "price" === type ? "0.00" : "0";
      var val = value.toString(), index = val.indexOf(".");
      if (Number(val) >= 1) return index >= 0 ? val.substring(0, index + 3) : val;
      var _val$substring, _val$substring$split, zeroAmount = null === (_val$substring = val.substring(index + 1)) || void 0 === _val$substring || null === (_val$substring$split = _val$substring.split("")) || void 0 === _val$substring$split ? void 0 : _val$substring$split.findIndex((function(item) {
        return "0" !== item;
      }));
      return "price" === type ? val.substring(0, index + zeroAmount + 3) : Number(val) < 1e-4 ? "0.0{".concat(zeroAmount, "}").concat(val.substring(index + zeroAmount + 1, index + zeroAmount + 5)) : val.substring(0, index + zeroAmount + 5);
    }, formatSwapBalance = function(value) {
      try {
        var bn = new bignumber_js__WEBPACK_IMPORTED_MODULE_55__.A(value);
        return bn.isFinite() ? toNonExponential(bn.decimalPlaces(12, bignumber_js__WEBPACK_IMPORTED_MODULE_55__.A.ROUND_DOWN).toString()) : "0";
      } catch (error) {
        return "0";
      }
    }, formatThousandth = function(number) {
      if (!number && 0 !== number) return "";
      var str = String(number).trim(), match = str.match(/^([^0-9.+-]*)?([-+])?(\d+)(\.\d+)?$/);
      if (!match) return str;
      var _match = _slicedToArray(match, 5), _match$ = _match[1], prefix = void 0 === _match$ ? "" : _match$, _match$2 = _match[2], sign = void 0 === _match$2 ? "" : _match$2, _match$3 = _match[3], intPart = void 0 === _match$3 ? "" : _match$3, _match$4 = _match[4], decimalPart = void 0 === _match$4 ? "" : _match$4, formattedInt = intPart.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      return "".concat(prefix).concat(sign).concat(formattedInt).concat(decimalPart);
    }, foldZero = function(value) {
      if (!value || isNaN(Number(value))) return value;
      var strValue = value.toString();
      if (!strValue.includes(".")) return strValue;
      var _strValue$split2 = _slicedToArray(strValue.split("."), 2), intPart = _strValue$split2[0], match = _strValue$split2[1].match(/^(0{4,})([1-9]\d*)/);
      if (match) {
        var zeroCount = match[1].length, rest = match[2];
        return "".concat(intPart, ".0{").concat(zeroCount, "}").concat(rest);
      }
      return strValue;
    }, unfoldZero = function(value) {
      if (!value || "string" != typeof value) return value;
      return value.replace(/0\{(\d+)\}/g, (function(_, countStr) {
        var count = Number(countStr);
        return !Number.isInteger(count) || count <= 0 ? "0{".concat(countStr, "}") : "0".repeat(count);
      }));
    };
  },
  755590: () => {},
  782397: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      m: () => YLChainSOLMethod
    });
    __webpack_require__(752231), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(505086), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(269193), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(207452);
    var _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(259159), long__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(274442);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var YLChainSOLMethod = function() {
      function YLChainSOLMethod(url, wasm) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, YLChainSOLMethod), _defineProperty(this, "baseUrl", ""), _defineProperty(this, "wasm", {}), 
        this.baseUrl = url, this.wasm = wasm;
      }
      var Constructor, protoProps, staticProps, _init, _signTransferToken, _signTransaction, _calculateFee, _getTokenBalance;
      return Constructor = YLChainSOLMethod, protoProps = [ {
        key: "getTokenBalance",
        value: (_getTokenBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee(walletAddress, tokenAddress) {
          var account;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _context.next = 2, this.getTokenAccountsByOwner(walletAddress, tokenAddress);

             case 2:
              return account = _context.sent, _context.abrupt("return", this.getTokenAccountBalance(account));

             case 4:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x, _x2) {
          return _getTokenBalance.apply(this, arguments);
        })
      }, {
        key: "calculateFee",
        value: (_calculateFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(targetAddress, privateKeyHex, amount, memo) {
          var _yield$getWasm, Base58, output, tx, decode;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return _context2.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.t)();

             case 2:
              return _yield$getWasm = _context2.sent, Base58 = _yield$getWasm.Base58, _context2.next = 6, 
              this.signTransaction(targetAddress, privateKeyHex, amount, memo);

             case 6:
              return output = _context2.sent, tx = output.unsignedTx, decode = Base58.base58DecodeNoCheck(tx), 
              tx = base64.encode(decode.toList()), _context2.abrupt("return", this.getFeeForMessage(tx));

             case 11:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x3, _x4, _x5, _x6) {
          return _calculateFee.apply(this, arguments);
        })
      }, {
        key: "signTransaction",
        value: (_signTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(targetAddress, privateKeyHex, amount, memo, blockHash, solanaPriorityFee) {
          var _this$wasm, HexCoding, AnySigner, CoinType, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return _this$wasm = this.wasm, HexCoding = _this$wasm.HexCoding, AnySigner = _this$wasm.AnySigner, 
              CoinType = _this$wasm.CoinType, input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.SigningInput.create({
                recentBlockhash: blockHash,
                transferTransaction: _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.Transfer.create({
                  recipient: targetAddress,
                  value: parseInt(amount)
                }),
                privateKey: HexCoding.decode(privateKeyHex),
                priorityFeePrice: {
                  price: long__WEBPACK_IMPORTED_MODULE_15__.A.fromString(String(solanaPriorityFee))
                }
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, CoinType.solana), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.SigningOutput.decode(outputData), 
              _context3.abrupt("return", output);

             case 6:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x7, _x8, _x9, _x10, _x11, _x12) {
          return _signTransaction.apply(this, arguments);
        })
      }, {
        key: "signTransferToken",
        value: (_signTransferToken = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(privateKeyHex, targetAddress, tokenAddress, amount, decimals, blockHash, senderTokenAddress, recipientTokenAddress, isFirstReceive, solanaPriorityFee) {
          var _this$wasm2, HexCoding, AnySigner, CoinType, transfer, input, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _this$wasm2 = this.wasm, HexCoding = _this$wasm2.HexCoding, AnySigner = _this$wasm2.AnySigner, 
              CoinType = _this$wasm2.CoinType, transfer = isFirstReceive ? _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.CreateAndTransferToken.create({
                recipientMainAddress: targetAddress,
                recipientTokenAddress,
                tokenMintAddress: tokenAddress,
                senderTokenAddress,
                amount: parseInt(amount),
                decimals: parseInt(decimals)
              }) : _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.TokenTransfer.create({
                tokenMintAddress: tokenAddress,
                recipientTokenAddress,
                senderTokenAddress,
                amount: parseInt(amount),
                decimals
              }), input = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.SigningInput.create({
                recentBlockhash: blockHash,
                tokenTransferTransaction: isFirstReceive ? null : transfer,
                createAndTransferTokenTransaction: isFirstReceive ? transfer : null,
                privateKey: HexCoding.decode(privateKeyHex),
                priorityFeePrice: {
                  price: long__WEBPACK_IMPORTED_MODULE_15__.A.fromString(String(solanaPriorityFee))
                }
              }), encoded = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.SigningInput.encode(input).finish(), 
              outputData = AnySigner.sign(encoded, CoinType.solana), output = _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.TW.Solana.Proto.SigningOutput.decode(outputData), 
              _context4.abrupt("return", output);

             case 7:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20, _x21, _x22) {
          return _signTransferToken.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(url) {
          var wasm;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_14__.t)();

             case 2:
              return wasm = _context5.sent, _context5.abrupt("return", new YLChainSOLMethod(url, wasm));

             case 4:
             case "end":
              return _context5.stop();
            }
          }), _callee5);
        }))), function(_x23) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), YLChainSOLMethod;
    }();
  },
  787773: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => cosmos_rpc
    });
    __webpack_require__(207452), __webpack_require__(579389), __webpack_require__(505086), 
    __webpack_require__(906048), __webpack_require__(194009), __webpack_require__(259581), 
    __webpack_require__(752231), __webpack_require__(380115), __webpack_require__(418665), 
    __webpack_require__(301772), __webpack_require__(953746), __webpack_require__(520861), 
    __webpack_require__(571905), __webpack_require__(285213), __webpack_require__(97182), 
    __webpack_require__(512279), __webpack_require__(639302), __webpack_require__(770147), 
    __webpack_require__(866217), __webpack_require__(697966), __webpack_require__(735186), 
    __webpack_require__(135944), __webpack_require__(644787), __webpack_require__(950632), 
    __webpack_require__(552278), __webpack_require__(614245), __webpack_require__(252492), 
    __webpack_require__(193266), __webpack_require__(537192), __webpack_require__(237220), 
    __webpack_require__(482432), __webpack_require__(632483), __webpack_require__(536696), 
    __webpack_require__(458083), __webpack_require__(714913), __webpack_require__(868329), 
    __webpack_require__(196088), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(269193), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(564216), 
    __webpack_require__(929979), __webpack_require__(14602);
    var wallet_core = __webpack_require__(259159), gt_fetch = __webpack_require__(525735), gt_networks = __webpack_require__(660862), gt_tokens = __webpack_require__(871219);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var CosmosApiConfig = function() {
      function CosmosApiConfig() {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CosmosApiConfig);
      }
      var Constructor, protoProps, staticProps;
      return Constructor = CosmosApiConfig, staticProps = [ {
        key: "queryBalanceByDenom",
        value: function(address, denom) {
          return "/cosmos/bank/v1beta1/balances/".concat(address, "/by_denom?denom=").concat(denom);
        }
      }, {
        key: "queryBalance",
        value: function(address) {
          return "/cosmos/bank/v1beta1/balances/".concat(address);
        }
      }, {
        key: "queryAccountInfoByAddress",
        value: function(address) {
          return "/cosmos/auth/v1beta1/accounts/".concat(address);
        }
      }, {
        key: "queryDenomMetaData",
        value: function(denom) {
          return "/cosmos/bank/v1beta1/denoms_metadata/".concat(denom);
        }
      } ], (protoProps = null) && _defineProperties(Constructor.prototype, protoProps), 
      staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CosmosApiConfig;
    }();
    _defineProperty(CosmosApiConfig, "boardcastTransaction", "/cosmos/tx/v1beta1/txs"), 
    _defineProperty(CosmosApiConfig, "status", "/cosmos/base/tendermint/v1beta1/node_info"), 
    _defineProperty(CosmosApiConfig, "simulate", "/cosmos/tx/v1beta1/simulate");
    var gt_base_calculate = __webpack_require__(745788), build = __webpack_require__(305450), stargate_build = __webpack_require__(984007), amino_build = __webpack_require__(978824), encoding_build = __webpack_require__(944917), tx = __webpack_require__(944941), v1beta1_tx = __webpack_require__(306975), keys = __webpack_require__(446190), v1beta1_coin = __webpack_require__(160617), any = __webpack_require__(508890), signing = __webpack_require__(501140), node_modules_long = __webpack_require__(274442), bignumber = __webpack_require__(760346), dist = __webpack_require__(722343), Buffer = __webpack_require__(348287).Buffer;
    function cosmos_rpc_typeof(obj) {
      return cosmos_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, cosmos_rpc_typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          cosmos_rpc_defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function cosmos_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, cosmos_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function cosmos_rpc_defineProperty(obj, key, value) {
      return (key = cosmos_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function cosmos_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== cosmos_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== cosmos_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === cosmos_rpc_typeof(key) ? key : String(key);
    }
    var CosmosRpc = function() {
      function CosmosRpc(wasm, totalNetworkDic, networkKey, restUrl) {
        var _this = this;
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CosmosRpc), cosmos_rpc_defineProperty(this, "wasm", void 0), cosmos_rpc_defineProperty(this, "totalNetworkDic", void 0), 
        cosmos_rpc_defineProperty(this, "networkKey", void 0), cosmos_rpc_defineProperty(this, "restUrl", void 0), 
        cosmos_rpc_defineProperty(this, "buildTransaction", function() {
          var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
            var sender, receiver, gas, sendAmount, denom, hardware, publicKey, account, publicKeyBytes, signMode, chainId, accountNumber, sequence, sendMessage, signDoc, serializedSignDoc, textDecoder, jsonString1, jsonString, messages, feeAmount, pubKey, anyPubkey, signerInfo, fee, authInfo, authInfoBytes, arr, txbody, txBodyBytes, finnalData;
            return regeneratorRuntime.wrap((function(_context) {
              for (;;) switch (_context.prev = _context.next) {
               case 0:
                return sender = params.sender, receiver = params.receiver, gas = params.gas, sendAmount = params.sendAmount, 
                denom = params.denom, hardware = params.hardware, publicKey = null == hardware ? void 0 : hardware.publicKey, 
                _context.next = 4, _this.queryCosmosAccountInfo(sender);

               case 4:
                if (account = _context.sent) {
                  _context.next = 7;
                  break;
                }
                throw new Error("账户信息获取失败");

               case 7:
                return new build.OR(stargate_build.defaultRegistryTypes).register("/cosmos.bank.v1beta1.MsgSend", tx.MsgSend), 
                publicKeyBytes = (0, encoding_build.fromHex)(publicKey), signMode = signing.SignMode.SIGN_MODE_LEGACY_AMINO_JSON, 
                _context.next = 13, _this.queryChainId();

               case 13:
                return chainId = _context.sent, accountNumber = account.account_number, sequence = account.sequence, 
                sendMessage = {
                  account_number: accountNumber,
                  chain_id: chainId,
                  fee: {
                    amount: [ {
                      amount: Math.ceil(Number(gas)).toString(),
                      denom
                    } ],
                    gas: "200000"
                  },
                  memo: "",
                  msgs: [ {
                    type: "cosmos-sdk/MsgSend",
                    value: {
                      amount: [ {
                        amount: String(sendAmount),
                        denom
                      } ],
                      from_address: sender,
                      to_address: receiver
                    }
                  } ],
                  sequence
                }, signDoc = (0, amino_build.makeSignDoc)(sendMessage.msgs, sendMessage.fee, sendMessage.chain_id, sendMessage.memo || "", sendMessage.account_number, sendMessage.sequence, 0n), 
                serializedSignDoc = (0, amino_build.serializeSignDoc)(signDoc), textDecoder = new TextDecoder("utf-8"), 
                jsonString1 = textDecoder.decode(serializedSignDoc), jsonString = jsonString1, messages = sendMessage.msgs.map((function(msg) {
                  if ("cosmos-sdk/MsgSend" === msg.type) return tx.MsgSend.fromPartial({
                    fromAddress: msg.value.from_address,
                    toAddress: msg.value.to_address,
                    amount: msg.value.amount
                  });
                  throw new Error("Unsupported message type: ".concat(msg.type));
                })), feeAmount = sendMessage.fee.amount.map((function(coin) {
                  return v1beta1_coin.Coin.fromJSON(coin);
                })), pubKey = keys.PubKey.fromPartial({
                  key: publicKeyBytes
                }), anyPubkey = any.Any.fromPartial({
                  typeUrl: "/cosmos.crypto.secp256k1.PubKey",
                  value: keys.PubKey.encode(pubKey).finish()
                }), signerInfo = v1beta1_tx.SignerInfo.fromPartial({
                  publicKey: anyPubkey,
                  modeInfo: {
                    single: {
                      mode: signMode
                    }
                  },
                  sequence: sendMessage.sequence
                }), fee = v1beta1_tx.Fee.fromPartial({
                  amount: feeAmount,
                  gasLimit: parseInt(sendMessage.fee.gas, 10)
                }), authInfo = v1beta1_tx.AuthInfo.fromPartial({
                  signerInfos: [ signerInfo ],
                  fee
                }), authInfoBytes = v1beta1_tx.AuthInfo.encode(authInfo).finish(), arr = messages.map((function(msg) {
                  return {
                    typeUrl: "/cosmos.bank.v1beta1.MsgSend",
                    value: tx.MsgSend.encode(msg).finish()
                  };
                })), txbody = v1beta1_tx.TxBody.fromPartial({
                  messages: arr,
                  memo: sendMessage.memo,
                  timeoutHeight: 0
                }), txBodyBytes = v1beta1_tx.TxBody.encode(txbody).finish(), finnalData = {
                  toHardWareData: JSON.parse(jsonString),
                  txBodyBytes,
                  authInfoBytes
                }, _context.abrupt("return", finnalData);

               case 35:
               case "end":
                return _context.stop();
              }
            }), _callee);
          })));
          return function(_x) {
            return _ref.apply(this, arguments);
          };
        }()), this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, this.networkKey = networkKey, 
        this.restUrl = restUrl;
      }
      var Constructor, protoProps, staticProps, _init, _getCosmosFee, _calculateCosmosFee, _simulate, _signCosmos, _signHardwareCosmosTransaction, _signCosmosTransaction, _getCosmosBalance, _fetchCosmosBalance, _fetchCosmosBalanceByDenom, _queryChainId, _queryCosmosAccountInfo;
      return Constructor = CosmosRpc, protoProps = [ {
        key: "queryCosmosAccountInfo",
        value: (_queryCosmosAccountInfo = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(address) {
          var path, url, res, account;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return path = CosmosApiConfig.queryAccountInfoByAddress(address), url = "".concat(this.restUrl, "/").concat(path), 
              _context2.next = 4, (0, gt_fetch.uJ)("GET", url, {}, {}, "data");

             case 4:
              return res = _context2.sent, account = res.account, _context2.abrupt("return", (null == account ? void 0 : account.base_account) || account);

             case 7:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _queryCosmosAccountInfo.apply(this, arguments);
        })
      }, {
        key: "queryChainId",
        value: (_queryChainId = _asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
          var path, res;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return path = CosmosApiConfig.status, _context3.next = 3, (0, gt_fetch.uJ)("GET", "".concat(this.restUrl, "/").concat(path), {}, {}, "data");

             case 3:
              return res = _context3.sent, _context3.abrupt("return", res.default_node_info.network);

             case 5:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function() {
          return _queryChainId.apply(this, arguments);
        })
      }, {
        key: "fetchCosmosBalanceByDenom",
        value: (_fetchCosmosBalanceByDenom = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(address, denom) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return path = CosmosApiConfig.queryBalanceByDenom(address, denom), _context4.next = 3, 
              (0, gt_fetch.uJ)("GET", "".concat(this.restUrl).concat(path), {}, {}, "data");

             case 3:
              return res = _context4.sent, _context4.abrupt("return", res.balance.amount);

             case 5:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x3, _x4) {
          return _fetchCosmosBalanceByDenom.apply(this, arguments);
        })
      }, {
        key: "fetchCosmosBalance",
        value: (_fetchCosmosBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(address) {
          var path, res;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return path = CosmosApiConfig.queryBalance(address), _context5.next = 3, (0, gt_fetch.uJ)("GET", "".concat(this.restUrl).concat(path), {}, {}, "data");

             case 3:
              return res = _context5.sent, _context5.abrupt("return", res.balances);

             case 5:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x5) {
          return _fetchCosmosBalance.apply(this, arguments);
        })
      }, {
        key: "getCosmosBalance",
        value: (_getCosmosBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(sender, token) {
          var _this$totalNetworkDic, _this$totalNetworkDic2, coinPrecision, coinAddress, accountCreateParams, coinIsMain, denom, balance, cosmosBalance;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              accountCreateParams = null === (_this$totalNetworkDic = this.totalNetworkDic) || void 0 === _this$totalNetworkDic || null === (_this$totalNetworkDic2 = _this$totalNetworkDic[this.networkKey]) || void 0 === _this$totalNetworkDic2 ? void 0 : _this$totalNetworkDic2.accountCreateParams, 
              coinIsMain = (0, gt_tokens.hT)(coinAddress, this.networkKey), denom = coinIsMain ? null == accountCreateParams ? void 0 : accountCreateParams.denom : coinAddress, 
              _context6.next = 7, this.fetchCosmosBalanceByDenom(sender, denom);

             case 7:
              return balance = _context6.sent, cosmosBalance = (0, gt_base_calculate.dataOperation)(balance, Math.pow(10, parseInt(coinPrecision)), "/"), 
              _context6.abrupt("return", {
                balance: cosmosBalance
              });

             case 10:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x6, _x7) {
          return _getCosmosBalance.apply(this, arguments);
        })
      }, {
        key: "signCosmosTransaction",
        value: (_signCosmosTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var privateKey, sender, receiver, sendAmount, gas, gasUsed, denom, token, _this$wasm, HexCoding, AnySigner, CoinType, coinType, chainId, txDenom, txAmount, sendCoinMsg, message, feeAmount, cosmosFee, accountInfo, signingInput, encoded, outputData, output, map;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return privateKey = params.privateKey, sender = params.sender, receiver = params.receiver, 
              sendAmount = params.sendAmount, gas = params.gas, gasUsed = params.gasUsed, denom = params.denom, 
              token = params.token, _this$wasm = this.wasm, HexCoding = _this$wasm.HexCoding, 
              AnySigner = _this$wasm.AnySigner, CoinType = _this$wasm.CoinType, coinType = "INJ" === this.networkKey ? CoinType.nativeInjective : CoinType[CosmosRpc.coinName], 
              _context7.next = 5, this.queryChainId();

             case 5:
              return chainId = _context7.sent, txDenom = token.isMainCoin ? denom : token.coinAddress, 
              txAmount = wallet_core.TW.Cosmos.Proto.Amount.create({
                denom: txDenom,
                amount: sendAmount
              }), sendCoinMsg = wallet_core.TW.Cosmos.Proto.Message.Send.create({
                amounts: [ txAmount ],
                fromAddress: sender,
                toAddress: receiver
              }), message = wallet_core.TW.Cosmos.Proto.Message.create({
                sendCoinsMessage: sendCoinMsg
              }), feeAmount = wallet_core.TW.Cosmos.Proto.Amount.create({
                amount: gas,
                denom
              }), cosmosFee = wallet_core.TW.Cosmos.Proto.Fee.create({
                amounts: [ feeAmount ],
                gas: node_modules_long.A.fromNumber(gasUsed)
              }), _context7.next = 14, this.queryCosmosAccountInfo(sender);

             case 14:
              return accountInfo = _context7.sent, signingInput = wallet_core.TW.Cosmos.Proto.SigningInput.create({
                accountNumber: node_modules_long.A.fromString(accountInfo.account_number.toString()),
                signingMode: wallet_core.TW.Cosmos.Proto.SigningMode.Protobuf,
                fee: cosmosFee,
                chainId: chainId.toString(),
                sequence: node_modules_long.A.fromString(accountInfo.sequence.toString()),
                privateKey: HexCoding.decode(privateKey),
                messages: [ message ]
              }), encoded = wallet_core.TW.Cosmos.Proto.SigningInput.encode(signingInput).finish(), 
              outputData = AnySigner.sign(encoded, coinType), output = wallet_core.TW.Cosmos.Proto.SigningOutput.decode(outputData), 
              map = JSON.parse(output.serialized), _context7.abrupt("return", _objectSpread(_objectSpread({}, map), {}, {
                tx_bytes: map.tx_bytes.toString()
              }));

             case 21:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x8) {
          return _signCosmosTransaction.apply(this, arguments);
        })
      }, {
        key: "signHardwareCosmosTransaction",
        value: (_signHardwareCosmosTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(params) {
          var _hardware$device, hardware, network, _yield$this$buildTran, cosmosTransaction, txBodyBytes, authInfoBytes, jsonRawTransaction, hexRawTransaction, extra, sign, _hardware$device2, signedRsv, signatureBytes, signedTx, txBytes_hardware, signTxRaw;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return hardware = params.hardware, network = this.totalNetworkDic[this.networkKey], 
              _context8.next = 4, this.buildTransaction(params);

             case 4:
              return _yield$this$buildTran = _context8.sent, cosmosTransaction = _yield$this$buildTran.toHardWareData, 
              txBodyBytes = _yield$this$buildTran.txBodyBytes, authInfoBytes = _yield$this$buildTran.authInfoBytes, 
              jsonRawTransaction = JSON.stringify(cosmosTransaction, null, 0), hexRawTransaction = Buffer.from(jsonRawTransaction).toString("hex"), 
              extra = {
                c: [ {
                  t: 0,
                  ca: "ATOM",
                  sy: null == network ? void 0 : network.networkSimpleSymbol,
                  d: Number(null == network ? void 0 : network.networkPrecision),
                  curve: 0,
                  cid_s: cosmosTransaction.chain_id,
                  ch: network.networkName
                } ]
              }, _context8.next = 13, null == hardware || null === (_hardware$device = hardware.device) || void 0 === _hardware$device ? void 0 : _hardware$device.signTxRaw(this.networkKey, hexRawTransaction, extra);

             case 13:
              if (null == (sign = _context8.sent) || !sign.sign) {
                _context8.next = 25;
                break;
              }
              return _context8.next = 17, null == hardware || null === (_hardware$device2 = hardware.device) || void 0 === _hardware$device2 ? void 0 : _hardware$device2.request(null == hardware ? void 0 : hardware.path, 0, "0x00");

             case 17:
              return signedRsv = _context8.sent, signatureBytes = new Uint8Array(Buffer.from(signedRsv.slice(2), "hex")), 
              signedTx = v1beta1_tx.TxRaw.fromPartial({
                bodyBytes: txBodyBytes,
                authInfoBytes,
                signatures: [ signatureBytes ]
              }), txBytes_hardware = v1beta1_tx.TxRaw.encode(signedTx).finish(), signTxRaw = (0, 
              encoding_build.toBase64)(txBytes_hardware), _context8.abrupt("return", signTxRaw);

             case 25:
              throw new Error("user cancel");

             case 26:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x9) {
          return _signHardwareCosmosTransaction.apply(this, arguments);
        })
      }, {
        key: "signCosmos",
        value: (_signCosmos = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(params) {
          var _this$totalNetworkDic3, _this$totalNetworkDic4, token, privateKey, sender, receiver, amount, gasFeeInfo, options, calculate, gasUsed, gas, coinPrecision, sendAmount, accountCreateParams, denom, txBytes, map, tx;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              if (token = params.token, privateKey = params.privateKey, sender = params.sender, 
              receiver = params.receiver, amount = params.amount, gasFeeInfo = params.gasFeeInfo, 
              options = params.options, calculate = gasFeeInfo.calculate, gasUsed = gasFeeInfo.gasUsed, 
              gas = calculate.gas, coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), sendAmount = (0, gt_base_calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              accountCreateParams = null === (_this$totalNetworkDic3 = this.totalNetworkDic) || void 0 === _this$totalNetworkDic3 || null === (_this$totalNetworkDic4 = _this$totalNetworkDic3[this.networkKey]) || void 0 === _this$totalNetworkDic4 ? void 0 : _this$totalNetworkDic4.accountCreateParams, 
              denom = accountCreateParams.denom, txBytes = "", null == options || !options.hardware) {
                _context9.next = 14;
                break;
              }
              return _context9.next = 11, this.signHardwareCosmosTransaction({
                sender,
                receiver,
                sendAmount,
                gas,
                denom,
                hardware: null == options ? void 0 : options.hardware
              });

             case 11:
              txBytes = _context9.sent, _context9.next = 18;
              break;

             case 14:
              return _context9.next = 16, this.signCosmosTransaction({
                privateKey,
                sender,
                receiver,
                token,
                sendAmount,
                gas,
                gasUsed,
                denom
              });

             case 16:
              map = _context9.sent, txBytes = map.tx_bytes;

             case 18:
              return tx = {
                tx_bytes: txBytes,
                mode: "BROADCAST_MODE_SYNC"
              }, _context9.abrupt("return", {
                tx,
                rpcUrl: this.restUrl
              });

             case 20:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x10) {
          return _signCosmos.apply(this, arguments);
        })
      }, {
        key: "simulate",
        value: (_simulate = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(txBytes) {
          var res;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return _context10.next = 2, (0, gt_fetch.uJ)("POST", "".concat(this.restUrl).concat(CosmosApiConfig.simulate), {}, {
                tx_bytes: txBytes
              }, "data");

             case 2:
              return res = _context10.sent, _context10.abrupt("return", null == res ? void 0 : res.gas_info);

             case 4:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x11) {
          return _simulate.apply(this, arguments);
        })
      }, {
        key: "calculateCosmosFee",
        value: (_calculateCosmosFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(params) {
          var _this$wasm2, CoinType, AnySigner, HexCoding, amount, privateKeyHex, denom, sender, receiver, tokenAddress, isMainCoin, token, coinPrecision, sendAmount, coinType, privateKey, fee, chainId, txDenom, txAmount, sendCoinMsg, message, feeAmount, cosmosFee, accountInfo, signingInput, encoded, outputData, output, map, txBytes, res, dealGasUsed;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              if (_this$wasm2 = this.wasm, CoinType = _this$wasm2.CoinType, AnySigner = _this$wasm2.AnySigner, 
              HexCoding = _this$wasm2.HexCoding, amount = params.amount, privateKeyHex = params.privateKey, 
              denom = params.denom, sender = params.sender, receiver = params.receiver, tokenAddress = params.tokenAddress, 
              isMainCoin = params.isMainCoin, token = params.token, !(0, bignumber.g)(amount).isZero()) {
                _context11.next = 4;
                break;
              }
              return _context11.abrupt("return", {
                errorMsg: "",
                gasUsed: 0
              });

             case 4:
              return coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), sendAmount = (0, gt_base_calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              coinType = CoinType[CosmosRpc.coinName], privateKey = HexCoding.decode(privateKeyHex), 
              fee = "1", _context11.next = 11, this.queryChainId();

             case 11:
              return chainId = _context11.sent, txDenom = isMainCoin ? denom : tokenAddress, txAmount = wallet_core.TW.Cosmos.Proto.Amount.create({
                denom: txDenom,
                amount: sendAmount
              }), sendCoinMsg = wallet_core.TW.Cosmos.Proto.Message.Send.create({
                amounts: [ txAmount ],
                fromAddress: sender,
                toAddress: receiver
              }), message = wallet_core.TW.Cosmos.Proto.Message.create({
                sendCoinsMessage: sendCoinMsg
              }), feeAmount = wallet_core.TW.Cosmos.Proto.Amount.create({
                amount: fee,
                denom
              }), cosmosFee = wallet_core.TW.Cosmos.Proto.Fee.create({
                amounts: [ feeAmount ],
                gas: node_modules_long.A.fromString("200000")
              }), _context11.next = 20, this.queryCosmosAccountInfo(sender);

             case 20:
              if (accountInfo = _context11.sent, signingInput = wallet_core.TW.Cosmos.Proto.SigningInput.create({
                accountNumber: node_modules_long.A.fromString(accountInfo.account_number),
                signingMode: wallet_core.TW.Cosmos.Proto.SigningMode.Protobuf,
                fee: cosmosFee,
                chainId,
                sequence: node_modules_long.A.fromString(accountInfo.sequence),
                privateKey,
                messages: [ message ]
              }), encoded = wallet_core.TW.Cosmos.Proto.SigningInput.encode(signingInput).finish(), 
              outputData = AnySigner.sign(encoded, coinType), "string" != typeof (output = wallet_core.TW.Cosmos.Proto.SigningOutput.decode(outputData)).serialized || "" === output.serialized.trim()) {
                _context11.next = 43;
                break;
              }
              return _context11.prev = 26, map = JSON.parse(output.serialized), txBytes = map.tx_bytes.toString(), 
              _context11.next = 31, this.simulate(txBytes);

             case 31:
              if (null != (res = _context11.sent) && res.gas_used) {
                _context11.next = 34;
                break;
              }
              return _context11.abrupt("return", {
                gasUsed: 0,
                errorMsg: "no gas used"
              });

             case 34:
              return dealGasUsed = (0, gt_base_calculate.dataOperation)(null == res ? void 0 : res.gas_used, 1.5), 
              _context11.abrupt("return", {
                gasUsed: Math.ceil(parseFloat(dealGasUsed)),
                errorMsg: ""
              });

             case 38:
              return _context11.prev = 38, _context11.t0 = _context11.catch(26), _context11.abrupt("return", {
                errorMsg: null === _context11.t0 || void 0 === _context11.t0 ? void 0 : _context11.t0.message,
                gasUsed: 0
              });

             case 41:
              _context11.next = 44;
              break;

             case 43:
              return _context11.abrupt("return", {
                gasUsed: 0,
                errorMsg: "no output serialized"
              });

             case 44:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this, [ [ 26, 38 ] ]);
        }))), function(_x12) {
          return _calculateCosmosFee.apply(this, arguments);
        })
      }, {
        key: "getCosmosFee",
        value: (_getCosmosFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(params) {
          var _this$totalNetworkDic5, _this$totalNetworkDic6, _ref2, token, amount, sender, receiver, network, networkPrecision, accountCreateParams, minimunGasPrice, denom, privateKey, gasUsed, errorMsg, result, _result, fee, calculate, gasFee;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              if (token = params.token, amount = params.amount, sender = params.sender, receiver = params.receiver, 
              network = this.totalNetworkDic[this.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              accountCreateParams = null === (_this$totalNetworkDic5 = this.totalNetworkDic) || void 0 === _this$totalNetworkDic5 || null === (_this$totalNetworkDic6 = _this$totalNetworkDic5[this.networkKey]) || void 0 === _this$totalNetworkDic6 ? void 0 : _this$totalNetworkDic6.accountCreateParams, 
              minimunGasPrice = accountCreateParams.minimum_gas_price, denom = accountCreateParams.denom, 
              privateKey = "89a8f912eb4c14aed4cb96b8fd976a374ae510f7b0664de1c96ce8354978c745", 
              gasUsed = 0, errorMsg = "", !token.isMainCoin) {
                _context12.next = 16;
                break;
              }
              return _context12.next = 11, this.calculateCosmosFee({
                token,
                amount,
                privateKey,
                denom,
                sender,
                receiver,
                isMainCoin: token.isMainCoin
              });

             case 11:
              result = _context12.sent, gasUsed = result.gasUsed, errorMsg = result.errorMsg, 
              _context12.next = 21;
              break;

             case 16:
              return _context12.next = 18, this.calculateCosmosFee({
                token,
                amount,
                privateKey,
                denom,
                tokenAddress: token.coinAddress,
                sender,
                receiver,
                isMainCoin: token.isMainCoin
              });

             case 18:
              _result = _context12.sent, gasUsed = _result.gasUsed, errorMsg = _result.errorMsg;

             case 21:
              return fee = (0, gt_base_calculate.dataOperation)(gasUsed, minimunGasPrice), calculate = (0, 
              stargate_build.calculateFee)(parseInt(fee), "0.1".concat(denom)), gasFee = (0, gt_base_calculate.dataOperation)(null === (_ref2 = calculate || {}) || void 0 === _ref2 ? void 0 : _ref2.gas, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context12.abrupt("return", {
                gasFee,
                calculate,
                gasUsed,
                errorMsg
              });

             case 25:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x13) {
          return _getCosmosFee.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(totalNetworkDic, networkKey) {
          var _ref3, _ref3$url, restUrl, wasm;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return _ref3 = (0, gt_networks.nD)(networkKey, totalNetworkDic) || {}, _ref3$url = _ref3.url, 
              restUrl = void 0 === _ref3$url ? "" : _ref3$url, _context13.next = 3, (0, wallet_core.t)();

             case 3:
              return wasm = _context13.sent, _context13.abrupt("return", new CosmosRpc(wasm, totalNetworkDic, networkKey, restUrl));

             case 5:
             case "end":
              return _context13.stop();
            }
          }), _callee13);
        }))), function(_x14, _x15) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "isValidCosmosAddress",
        value: function(_ref4) {
          var address = _ref4.address, hrp = _ref4.hrp;
          try {
            return null == hrp ? (dist.bech32.decode(address), !0) : dist.bech32.decode(address).prefix == hrp;
          } catch (_) {
            return !1;
          }
        }
      } ], protoProps && cosmos_rpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && cosmos_rpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CosmosRpc;
    }();
    cosmos_rpc_defineProperty(CosmosRpc, "coinName", "cosmos");
    const cosmos_rpc = CosmosRpc;
  },
  813667: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => ton_rpc
    });
    __webpack_require__(579389), __webpack_require__(505086), __webpack_require__(906048), 
    __webpack_require__(752231), __webpack_require__(418665), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(689560), __webpack_require__(380115), __webpack_require__(361890), 
    __webpack_require__(259581), __webpack_require__(232982), __webpack_require__(269193), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(630789), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(407899), __webpack_require__(700017), __webpack_require__(110678), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(103101), 
    __webpack_require__(936012), __webpack_require__(504895), __webpack_require__(564216), 
    __webpack_require__(714913), __webpack_require__(498741), __webpack_require__(215195), 
    __webpack_require__(207452);
    var method = __webpack_require__(326394), wallet_core = __webpack_require__(259159), gt_fetch = __webpack_require__(525735), gt_networks = __webpack_require__(660862), dist = __webpack_require__(823515), node_modules_long = __webpack_require__(274442), gt_tokens = __webpack_require__(871219), calculate = __webpack_require__(745788), send_receive = __webpack_require__(492774), gt_send_receive = __webpack_require__(15250), networks = __webpack_require__(68606), crypto_dist = __webpack_require__(375269), nacl_fast = __webpack_require__(188947), nacl_fast_default = __webpack_require__.n(nacl_fast), index_browser_esm = __webpack_require__(262643), type_transfer = __webpack_require__(228972);
    __webpack_require__(447746), __webpack_require__(43148), __webpack_require__(754989);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var obj, key, value, TonInscribe = function() {
      function TonInscribe() {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, TonInscribe);
      }
      var Constructor, protoProps, staticProps;
      return Constructor = TonInscribe, staticProps = [ {
        key: "generateDeploy",
        value: function(max, lim, tick) {
          if (tick.includes(" ")) throw new Error("tick can not contain spaces");
          if (tick.length >= 30) throw new Error("tick length must be less than 30");
          if (max > BigInt("1000000000000000000000")) throw new Error("max must be lower than 1000000000000000000000");
          if (lim <= BigInt(0)) throw new Error("lim must be greater than 0");
          var body = {
            p: "ton-20",
            op: "deploy",
            tick,
            max: max.toString(),
            lim: lim.toString()
          };
          return "".concat(this.textContextType).concat(JSON.stringify(body));
        }
      }, {
        key: "generateMint",
        value: function(tick, amt) {
          if (tick.includes(" ")) throw new Error("tick can not contain spaces");
          if (tick.length >= 30) throw new Error("tick length must be less than 30");
          var body = {
            p: "ton-20",
            op: "mint",
            tick,
            amt: amt.toString()
          };
          return "".concat(this.textContextType).concat(JSON.stringify(body));
        }
      }, {
        key: "generateTransfer",
        value: function(tick, amt, to, memo) {
          if (tick.includes(" ")) throw new Error("tick can not contain spaces");
          if (tick.length >= 30) throw new Error("tick length must be less than 30");
          var body = {
            p: "ton-20",
            op: "transfer",
            tick,
            amt: amt.toString(),
            to
          };
          return void 0 !== memo && (body.memo = memo), "".concat(this.textContextType).concat(JSON.stringify(body));
        }
      }, {
        key: "isTransferData",
        value: function(msg) {
          if (!msg.startsWith(this.textContextType)) return !1;
          var data = msg.slice(this.textContextType.length), info = JSON.parse(data);
          return "ton20" === info.p && "transfer" === info.op && void 0 !== info.tick && void 0 !== info.amt && void 0 !== info.to;
        }
      } ], (protoProps = null) && _defineProperties(Constructor.prototype, protoProps), 
      staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), TonInscribe;
    }();
    obj = TonInscribe, value = "data:application/json,", (key = _toPropertyKey(key = "textContextType")) in obj ? Object.defineProperty(obj, key, {
      value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }) : obj[key] = value;
    var Buffer = __webpack_require__(348287).Buffer;
    function ton_rpc_typeof(obj) {
      return ton_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, ton_rpc_typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          ton_rpc_defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function ton_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, ton_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function ton_rpc_defineProperty(obj, key, value) {
      return (key = ton_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function ton_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== ton_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== ton_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === ton_rpc_typeof(key) ? key : String(key);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var TON = wallet_core.TW.TheOpenNetwork.Proto, wrapperPostJson = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(url, data) {
        var res;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, (0, gt_fetch.uJ)("POST", url, {}, data, "data");

           case 2:
            return res = _context.sent, _context.abrupt("return", res);

           case 4:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x, _x2) {
        return _ref.apply(this, arguments);
      };
    }(), TonRpc = function() {
      function TonRpc(wasm, totalNetworkDic, client, rpcUrl) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, TonRpc), ton_rpc_defineProperty(this, "wasm", void 0), ton_rpc_defineProperty(this, "totalNetworkDic", void 0), 
        ton_rpc_defineProperty(this, "client", void 0), ton_rpc_defineProperty(this, "rpcUrl", void 0), 
        this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, this.client = client, 
        this.rpcUrl = rpcUrl;
      }
      var Constructor, protoProps, staticProps, _getTonPublcKey, _init, _sendTonConnectTransfer, _getTonSwapGasFee, _transferTon, _mintTon, _deployTon, _signTon20Transaction, _sendTonTransaction, _estimateTonConnectTransfer, _signTonTransaction, _getTonGasFee, _getTonBalance, _getJettonWalletAddress, _getTonContract;
      return Constructor = TonRpc, protoProps = [ {
        key: "getTonContract",
        value: (_getTonContract = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(sender) {
          var publicKey, wallet, contract;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return _context2.next = 2, TonRpc.getTonPublcKey(sender);

             case 2:
              return publicKey = _context2.sent, wallet = dist.WalletContractV4.create({
                workchain: 0,
                publicKey
              }), contract = this.client.open(wallet), _context2.abrupt("return", contract);

             case 7:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x3) {
          return _getTonContract.apply(this, arguments);
        })
      }, {
        key: "getJettonWalletAddress",
        value: (_getJettonWalletAddress = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(coinAddress, sender, provider) {
          var master, res;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return master = dist.JettonMaster.create((0, dist.address)(coinAddress)), _context3.next = 3, 
              master.getWalletAddress(provider, (0, dist.address)(sender));

             case 3:
              return res = _context3.sent, _context3.abrupt("return", res.toRawString());

             case 5:
             case "end":
              return _context3.stop();
            }
          }), _callee3);
        }))), function(_x4, _x5, _x6) {
          return _getJettonWalletAddress.apply(this, arguments);
        })
      }, {
        key: "getTonBalance",
        value: (_getTonBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(params) {
          var token, sender, protocolLabel, coinAddress, coinIsMain, coinPrecision, contract, balance, _res$data, tick, res, _coinAddress, provider, jettwonWalletAddress, wallet, _balance;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              if (token = params.token, sender = params.sender, protocolLabel = (0, gt_tokens.N8)(token, TonRpc.networkKey, "protocolLabel"), 
              coinAddress = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinAddress"), coinIsMain = (0, 
              gt_tokens.hT)(coinAddress, TonRpc.networkKey), coinPrecision = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TonRpc.networkKey, "token_decimal"), !coinIsMain) {
                _context4.next = 15;
                break;
              }
              return _context4.next = 8, this.getTonContract(sender);

             case 8:
              return contract = _context4.sent, _context4.next = 11, contract.getBalance();

             case 11:
              return balance = _context4.sent, _context4.abrupt("return", {
                balance: (0, calculate.dataOperation)(null == balance ? void 0 : balance.toString(), Math.pow(10, parseInt(coinPrecision)), "/")
              });

             case 15:
              if ("TON-20" !== protocolLabel) {
                _context4.next = 23;
                break;
              }
              return tick = (0, gt_tokens.N8)(token, TonRpc.networkKey, "tick"), _context4.next = 19, 
              (0, send_receive.fD)({
                tick,
                address: sender
              });

             case 19:
              return res = _context4.sent, _context4.abrupt("return", null == res || null === (_res$data = res.data) || void 0 === _res$data ? void 0 : _res$data.balance);

             case 23:
              return _coinAddress = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinAddress"), 
              provider = this.client.provider((0, dist.address)(_coinAddress)), _context4.next = 27, 
              this.getJettonWalletAddress(_coinAddress, sender, provider);

             case 27:
              return jettwonWalletAddress = _context4.sent, wallet = dist.JettonWallet.create((0, 
              dist.address)(jettwonWalletAddress)), _context4.next = 31, wallet.getBalance(this.client.provider((0, 
              dist.address)(jettwonWalletAddress)));

             case 31:
              return _balance = _context4.sent, _context4.abrupt("return", {
                balance: (0, calculate.dataOperation)(null == _balance ? void 0 : _balance.toString(), Math.pow(10, parseInt(coinPrecision)), "/")
              });

             case 33:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x7) {
          return _getTonBalance.apply(this, arguments);
        })
      }, {
        key: "getTonGasFee",
        value: (_getTonGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(params) {
          var _res$source_fees, _res$source_fees2, _res$source_fees3, _res$source_fees4, sender, receiver, token, amount, coinAddress, coinIsMain, coinPrecision, contract, seqno, transfer, provider, jettonWalletAddress, sendAmount, body, res, fee, network, networkPrecision, gasFee;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, token = params.token, 
              amount = params.amount, coinAddress = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinAddress"), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress, TonRpc.networkKey), coinPrecision = (0, 
              gt_tokens.N8)(token, TonRpc.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, TonRpc.networkKey, "token_decimal"), 
              _context5.next = 6, this.getTonContract(sender);

             case 6:
              return contract = _context5.sent, _context5.next = 9, contract.getSeqno();

             case 9:
              if (seqno = _context5.sent, !coinIsMain) {
                _context5.next = 14;
                break;
              }
              transfer = contract.createTransfer({
                seqno,
                secretKey: Buffer.from(new Uint8Array(64)),
                messages: [ (0, dist.internal)({
                  to: receiver,
                  value: BigInt(1),
                  bounce: !1
                }) ]
              }), _context5.next = 21;
              break;

             case 14:
              return provider = this.client.provider((0, dist.address)(coinAddress)), _context5.next = 17, 
              this.getJettonWalletAddress(coinAddress, sender, provider);

             case 17:
              jettonWalletAddress = _context5.sent, sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              body = (0, dist.beginCell)().storeUint(BigInt(260734629), 32).storeUint(BigInt(seqno), 64).storeCoins(BigInt(sendAmount)).storeAddress((0, 
              dist.address)(receiver)).storeAddress((0, dist.address)(sender)).storeUint(BigInt(0), 1).storeCoins(BigInt(1)).storeUint(0, 1).endCell(), 
              transfer = contract.createTransfer({
                seqno,
                secretKey: Buffer.from(new Uint8Array(64)),
                messages: [ (0, dist.internal)({
                  to: (0, dist.address)(jettonWalletAddress),
                  value: BigInt(sendAmount),
                  body,
                  bounce: !1
                }) ]
              });

             case 21:
              return _context5.next = 23, this.client.estimateExternalMessageFee((0, dist.address)(sender), {
                body: transfer,
                ignoreSignature: !0,
                initCode: null,
                initData: null
              });

             case 23:
              return res = _context5.sent, fee = (null == res || null === (_res$source_fees = res.source_fees) || void 0 === _res$source_fees ? void 0 : _res$source_fees.fwd_fee) + (null == res || null === (_res$source_fees2 = res.source_fees) || void 0 === _res$source_fees2 ? void 0 : _res$source_fees2.gas_fee) + (null == res || null === (_res$source_fees3 = res.source_fees) || void 0 === _res$source_fees3 ? void 0 : _res$source_fees3.in_fwd_fee) + (null == res || null === (_res$source_fees4 = res.source_fees) || void 0 === _res$source_fees4 ? void 0 : _res$source_fees4.storage_fee), 
              network = this.totalNetworkDic[TonRpc.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              gasFee = (0, calculate.dataOperation)(fee, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context5.abrupt("return", {
                fee,
                gasFee
              });

             case 29:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x8) {
          return _getTonGasFee.apply(this, arguments);
        })
      }, {
        key: "signTonTransaction",
        value: (_signTonTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
          var seqno, sender, receiver, token, amount, comment, privateKey, _this$wasm, AnySigner, HexCoding, CoinType, coinAddress, coinIsMain, coinPrecision, sendAmount, contract, input, transfer, provider, jettonWalletAddress, jettonTransfer, _transfer, encoded, outputData, output;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              if (seqno = params.seqno, sender = params.sender, receiver = params.receiver, token = params.token, 
              amount = params.amount, comment = params.comment, privateKey = params.privateKey, 
              _this$wasm = this.wasm, AnySigner = _this$wasm.AnySigner, HexCoding = _this$wasm.HexCoding, 
              CoinType = _this$wasm.CoinType, coinAddress = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinAddress"), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress, TonRpc.networkKey), coinPrecision = (0, 
              gt_tokens.N8)(token, TonRpc.networkKey, "coinPrecision") || (0, gt_tokens.N8)(token, TonRpc.networkKey, "token_decimal"), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              seqno) {
                _context6.next = 13;
                break;
              }
              return _context6.next = 9, this.getTonContract(sender);

             case 9:
              return contract = _context6.sent, _context6.next = 12, contract.getSeqno();

             case 12:
              seqno = _context6.sent;

             case 13:
              if (!coinIsMain) {
                _context6.next = 18;
                break;
              }
              transfer = TON.Transfer.create({
                amount: node_modules_long.A.fromString(sendAmount),
                mode: TON.SendMode.PAY_FEES_SEPARATELY | TON.SendMode.IGNORE_ACTION_PHASE_ERRORS,
                dest: receiver,
                bounceable: !1,
                comment
              }), input = TON.SigningInput.create({
                walletVersion: TON.WalletVersion.WALLET_V4_R2,
                privateKey: HexCoding.decode(privateKey),
                messages: [ transfer ],
                expireAt: Math.floor(Date.now() / 1e3) + 600,
                sequenceNumber: seqno
              }), _context6.next = 25;
              break;

             case 18:
              return provider = this.client.provider((0, dist.address)(coinAddress)), _context6.next = 21, 
              this.getJettonWalletAddress(coinAddress, sender, provider);

             case 21:
              jettonWalletAddress = _context6.sent, jettonTransfer = TON.JettonTransfer.create({
                jettonAmount: node_modules_long.A.fromString(sendAmount),
                forwardAmount: node_modules_long.A.fromNumber(1),
                responseAddress: sender,
                toOwner: receiver
              }), _transfer = TON.Transfer.create({
                amount: node_modules_long.A.fromNumber(1e8),
                mode: TON.SendMode.PAY_FEES_SEPARATELY | TON.SendMode.IGNORE_ACTION_PHASE_ERRORS,
                dest: jettonWalletAddress,
                bounceable: !0,
                comment,
                jettonTransfer
              }), input = TON.SigningInput.create({
                walletVersion: TON.WalletVersion.WALLET_V4_R2,
                privateKey: HexCoding.decode(privateKey),
                messages: [ _transfer ],
                expireAt: Math.floor(Date.now() / 1e3) + 600,
                sequenceNumber: seqno
              });

             case 25:
              return encoded = TON.SigningInput.encode(input).finish(), outputData = AnySigner.sign(encoded, CoinType.ton), 
              output = TON.SigningOutput.decode(outputData), _context6.abrupt("return", {
                tx: output.encoded,
                rpcUrl: this.rpcUrl
              });

             case 29:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x9) {
          return _signTonTransaction.apply(this, arguments);
        })
      }, {
        key: "signProof",
        value: function(bufferToSign, keyPair) {
          return nacl_fast_default().sign.detached(new Uint8Array((0, crypto_dist.sha256_sync)(bufferToSign)), new Uint8Array(keyPair.secretKey));
        }
      }, {
        key: "estimateTonConnectTransfer",
        value: (_estimateTonConnectTransfer = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(sender, messages) {
          var _fee$source_fees, _fee$source_fees2, _fee$source_fees3, _fee$source_fees4, contract, seqno, transfer, fee, feeRes;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return _context7.next = 2, this.getTonContract(sender);

             case 2:
              return contract = _context7.sent, _context7.next = 5, contract.getSeqno();

             case 5:
              return seqno = _context7.sent, transfer = TonRpc.createTonConnectTransfer({
                contract,
                seqno,
                messages
              }), _context7.next = 9, this.client.estimateExternalMessageFee((0, dist.address)(sender), {
                body: transfer,
                ignoreSignature: !0,
                initCode: null,
                initData: null
              });

             case 9:
              return fee = _context7.sent, feeRes = (null == fee || null === (_fee$source_fees = fee.source_fees) || void 0 === _fee$source_fees ? void 0 : _fee$source_fees.fwd_fee) + (null == fee || null === (_fee$source_fees2 = fee.source_fees) || void 0 === _fee$source_fees2 ? void 0 : _fee$source_fees2.gas_fee) + (null == fee || null === (_fee$source_fees3 = fee.source_fees) || void 0 === _fee$source_fees3 ? void 0 : _fee$source_fees3.in_fwd_fee) + (null == fee || null === (_fee$source_fees4 = fee.source_fees) || void 0 === _fee$source_fees4 ? void 0 : _fee$source_fees4.storage_fee), 
              _context7.abrupt("return", feeRes);

             case 12:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x10, _x11) {
          return _estimateTonConnectTransfer.apply(this, arguments);
        })
      }, {
        key: "sendTonTransaction",
        value: (_sendTonTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(params) {
          var txInfo, sender, privateKey, action, contract, seqno, keypair, transfer, cell, boc, result, hash;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return txInfo = params.txInfo, sender = params.sender, privateKey = params.privateKey, 
              action = params.action, null != txInfo && txInfo.action && delete txInfo.action, 
              _context8.next = 4, this.getTonContract(sender);

             case 4:
              return contract = _context8.sent, _context8.next = 7, contract.getSeqno();

             case 7:
              if (seqno = _context8.sent, keypair = TonRpc.getKeypair(privateKey), transfer = TonRpc.createTonConnectTransfer({
                contract,
                seqno,
                messages: txInfo,
                secretKey: null == keypair ? void 0 : keypair.secretKey
              }), cell = TonRpc.externalMessage(contract, seqno, transfer).toBoc({
                idx: !1
              }), boc = cell.toString("base64"), "sign" === action) {
                _context8.next = 19;
                break;
              }
              return _context8.next = 15, (0, gt_send_receive.cz)(this.totalNetworkDic, TonRpc.networkKey, boc, sender);

             case 15:
              if (result = _context8.sent, hash = result.hash, "hash" !== action) {
                _context8.next = 19;
                break;
              }
              return _context8.abrupt("return", hash);

             case 19:
              return _context8.abrupt("return", boc);

             case 20:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x12) {
          return _sendTonTransaction.apply(this, arguments);
        })
      }, {
        key: "signTon20Transaction",
        value: (_signTon20Transaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(params) {
          var sender, seqno, privateKey, publicKey, memo, wallet, transfer, isNeed, neededInit, ext, boc;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return sender = params.sender, seqno = params.seqno, privateKey = params.privateKey, 
              publicKey = params.publicKey, memo = params.memo, _context9.next = 3, this.getTonContract(sender);

             case 3:
              return wallet = _context9.sent, transfer = wallet.createTransfer({
                seqno,
                sendMode: TON.SendMode.PAY_FEES_SEPARATELY | TON.SendMode.IGNORE_ACTION_PHASE_ERRORS,
                secretKey: Buffer.from(new Uint8Array(Buffer.from("".concat((0, type_transfer.LL)(privateKey)).concat((0, 
                type_transfer.LL)(publicKey)), "hex"))),
                timeout: Math.floor(Date.now() / 1e3) + 600,
                messages: [ (0, dist.internal)({
                  to: (0, dist.address)(sender),
                  value: "0",
                  body: null != memo ? memo : "",
                  bounce: !1
                }) ]
              }), _context9.next = 7, this.client.isContractDeployed(dist.Address.parse(sender));

             case 7:
              return isNeed = _context9.sent, null == wallet.init || isNeed || (neededInit = wallet.init), 
              ext = (0, dist.external)({
                to: sender,
                init: neededInit,
                body: transfer
              }), boc = (0, dist.beginCell)().store((0, dist.storeMessage)(ext)).endCell().toBoc(), 
              _context9.abrupt("return", null == boc ? void 0 : boc.toString("base64"));

             case 12:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x13) {
          return _signTon20Transaction.apply(this, arguments);
        })
      }, {
        key: "deployTon20",
        value: (_deployTon = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(deployParams) {
          var sender, maxAmount, limit, tick, gasFee, token, coinPrecision, publicKey, deploy, contract, seqno, raw, gas_fee, params, res;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return sender = deployParams.sender, maxAmount = deployParams.maxAmount, limit = deployParams.limit, 
              tick = deployParams.tick, gasFee = deployParams.gasFee, token = deployParams.token, 
              coinPrecision = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TonRpc.networkKey, "token_decimal"), _context10.next = 4, TonRpc.getTonPublcKey(sender);

             case 4:
              return publicKey = _context10.sent, deploy = TonInscribe.generateDeploy(BigInt((0, 
              calculate.dataOperation)(maxAmount, Math.pow(10, 9))), BigInt((0, calculate.dataOperation)(limit, Math.pow(10, 9))), tick), 
              _context10.next = 8, this.getTonContract(sender);

             case 8:
              return contract = _context10.sent, _context10.next = 11, contract.getSeqno();

             case 11:
              return seqno = _context10.sent, _context10.next = 14, this.signTon20Transaction(_objectSpread(_objectSpread({}, deployParams), {}, {
                seqno,
                publicKey: (0, type_transfer.U5)(new Uint8Array(publicKey)),
                memo: deploy
              }));

             case 14:
              return raw = _context10.sent, gas_fee = (0, calculate.dataOperation)(gasFee, Math.pow(10, parseInt(coinPrecision))), 
              params = {
                tick,
                supply_value: maxAmount,
                mint_limit: limit,
                address: sender,
                raw_tx: raw,
                nonce: seqno.toString(),
                gas_fee
              }, _context10.next = 19, (0, send_receive.D7)(params);

             case 19:
              return res = _context10.sent, _context10.abrupt("return", res);

             case 21:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x14) {
          return _deployTon.apply(this, arguments);
        })
      }, {
        key: "mintTon20",
        value: (_mintTon = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(mintParams) {
          var sender, tick, amount, repeat, gasFee, token, coinPrecision, gas_fee, mintAmount, mint, publicKey, contract, seqno, promiseList, rawList, params, res, _this = this;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return sender = mintParams.sender, tick = mintParams.tick, amount = mintParams.amount, 
              repeat = mintParams.repeat, gasFee = mintParams.gasFee, token = mintParams.token, 
              coinPrecision = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TonRpc.networkKey, "token_decimal"), gas_fee = (0, calculate.dataOperation)(gasFee, Math.pow(10, parseInt(coinPrecision))), 
              mintAmount = (0, calculate.dataOperation)(amount, Math.pow(10, 9)), mint = TonInscribe.generateMint(tick, BigInt(mintAmount)), 
              _context11.next = 7, TonRpc.getTonPublcKey(sender);

             case 7:
              return publicKey = _context11.sent, _context11.next = 10, this.getTonContract(sender);

             case 10:
              return contract = _context11.sent, _context11.next = 13, contract.getSeqno();

             case 13:
              return seqno = _context11.sent, promiseList = new Array(parseInt(repeat)).fill(void 0).map((function(_, index) {
                return _this.signTon20Transaction(_objectSpread(_objectSpread({}, mintParams), {}, {
                  seqno: seqno + index,
                  publicKey: (0, type_transfer.U5)(new Uint8Array(publicKey)),
                  memo: mint
                }));
              })), _context11.next = 17, Promise.all(promiseList);

             case 17:
              return rawList = _context11.sent, params = {
                accept_address: sender,
                chain_name: "TON",
                tick_name: tick,
                raws: null == rawList ? void 0 : rawList.map((function(raw, index) {
                  return {
                    raw,
                    contents: mint,
                    nonce: String(seqno + index),
                    gas_fee,
                    amt: mintAmount
                  };
                }))
              }, _context11.next = 21, (0, send_receive.qZ)(params);

             case 21:
              return res = _context11.sent, _context11.abrupt("return", res);

             case 23:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x15) {
          return _mintTon.apply(this, arguments);
        })
      }, {
        key: "transferTon20",
        value: (_transferTon = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(transferParams) {
          var sender, receiver, tick, amount, gasFee, token, options, coinPrecision, gas_fee, publicKey, transfer, contract, seqno, raw, params, res;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return sender = transferParams.sender, receiver = transferParams.receiver, tick = transferParams.tick, 
              amount = transferParams.amount, gasFee = transferParams.gasFee, token = transferParams.token, 
              options = transferParams.options, coinPrecision = (0, gt_tokens.N8)(token, TonRpc.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, TonRpc.networkKey, "token_decimal"), gas_fee = (0, calculate.dataOperation)(gasFee, Math.pow(10, parseInt(coinPrecision))), 
              _context12.next = 5, TonRpc.getTonPublcKey(sender);

             case 5:
              return publicKey = _context12.sent, transfer = TonInscribe.generateTransfer(tick, BigInt((0, 
              calculate.dataOperation)(amount, Math.pow(10, 9))), receiver), _context12.next = 9, 
              this.getTonContract(sender);

             case 9:
              return contract = _context12.sent, _context12.next = 12, contract.getSeqno();

             case 12:
              return seqno = _context12.sent, _context12.next = 15, this.signTon20Transaction(_objectSpread(_objectSpread({}, transferParams), {}, {
                seqno,
                memo: transfer,
                publicKey: (0, type_transfer.U5)(new Uint8Array(publicKey))
              }));

             case 15:
              if (raw = _context12.sent, null == options || !options.isReturnRaw) {
                _context12.next = 18;
                break;
              }
              return _context12.abrupt("return", raw);

             case 18:
              return params = {
                address: sender,
                accept_address: receiver,
                tick,
                transfer_value: amount,
                raw_tx: raw,
                nonce: seqno.toString(),
                gas_fee
              }, _context12.next = 21, (0, send_receive.BY)(params);

             case 21:
              return res = _context12.sent, _context12.abrupt("return", res);

             case 23:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x16) {
          return _transferTon.apply(this, arguments);
        })
      }, {
        key: "getTonSwapGasFee",
        value: (_getTonSwapGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(params) {
          var _res$source_fees5, _res$source_fees6, _res$source_fees7, _res$source_fees8, sender, coinAddress, coinPrecision, amount, body, contract, seqno, coinIsMain, to, provider, sendAmount, transfer, res, fee, network, networkPrecision, gasFee;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return sender = params.sender, coinAddress = params.coinAddress, coinPrecision = params.coinPrecision, 
              amount = params.amount, body = params.body, _context13.next = 3, this.getTonContract(sender);

             case 3:
              return contract = _context13.sent, _context13.next = 6, contract.getSeqno();

             case 6:
              if (seqno = _context13.sent, coinIsMain = (0, gt_tokens.hT)(coinAddress), to = sender, 
              coinIsMain) {
                _context13.next = 14;
                break;
              }
              return provider = this.client.provider((0, dist.address)(coinAddress)), _context13.next = 13, 
              this.getJettonWalletAddress(coinAddress, sender, provider);

             case 13:
              to = _context13.sent;

             case 14:
              return sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              transfer = contract.createTransfer({
                seqno,
                secretKey: Buffer.from(new Uint8Array(64)),
                messages: [ (0, dist.internal)({
                  to: (0, dist.address)(to),
                  value: BigInt(sendAmount),
                  body,
                  bounce: !1
                }) ]
              }), _context13.next = 18, this.client.estimateExternalMessageFee((0, dist.address)(sender), {
                body: transfer,
                ignoreSignature: !0,
                initCode: null,
                initData: null
              });

             case 18:
              return res = _context13.sent, fee = (null == res || null === (_res$source_fees5 = res.source_fees) || void 0 === _res$source_fees5 ? void 0 : _res$source_fees5.fwd_fee) + (null == res || null === (_res$source_fees6 = res.source_fees) || void 0 === _res$source_fees6 ? void 0 : _res$source_fees6.gas_fee) + (null == res || null === (_res$source_fees7 = res.source_fees) || void 0 === _res$source_fees7 ? void 0 : _res$source_fees7.in_fwd_fee) + (null == res || null === (_res$source_fees8 = res.source_fees) || void 0 === _res$source_fees8 ? void 0 : _res$source_fees8.storage_fee), 
              network = this.totalNetworkDic[TonRpc.networkKey], networkPrecision = null == network ? void 0 : network.networkPrecision, 
              gasFee = (0, calculate.dataOperation)(fee, Math.pow(10, parseInt(networkPrecision)), "/"), 
              _context13.abrupt("return", {
                fee,
                gasFee
              });

             case 24:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x17) {
          return _getTonSwapGasFee.apply(this, arguments);
        })
      }, {
        key: "sendTonConnectTransfer",
        value: (_sendTonConnectTransfer = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(params) {
          var messages, privateKey, sender, contract, seqno, keypair, transfer, cell, boc;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return messages = params.messages, privateKey = params.privateKey, sender = params.sender, 
              _context14.next = 3, this.getTonContract(sender);

             case 3:
              return contract = _context14.sent, _context14.next = 6, contract.getSeqno();

             case 6:
              return seqno = _context14.sent, keypair = TonRpc.getKeypair(privateKey), transfer = TonRpc.createTonConnectTransfer({
                seqno,
                contract,
                messages,
                secretKey: null == keypair ? void 0 : keypair.secretKey
              }), cell = TonRpc.externalMessage(contract, seqno, transfer).toBoc({
                idx: !1
              }), boc = cell.toString("base64"), _context14.abrupt("return", boc);

             case 12:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x18) {
          return _sendTonConnectTransfer.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var _yield$Promise$all, _yield$Promise$all2, wasm, rpcUrl, client;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return _context15.t0 = Promise, _context15.next = 3, (0, wallet_core.t)();

             case 3:
              return _context15.t1 = _context15.sent, _context15.t2 = (0, gt_networks.gL)(totalNetworkDic, TonRpc.networkKey, rpcUrls[TonRpc.networkKey], lastGetSuccessRpcTime), 
              _context15.t3 = [ _context15.t1, _context15.t2 ], _context15.next = 8, _context15.t0.all.call(_context15.t0, _context15.t3);

             case 8:
              return _yield$Promise$all = _context15.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              wasm = _yield$Promise$all2[0], rpcUrl = _yield$Promise$all2[1], client = new dist.TonClient({
                endpoint: rpcUrl
              }, wrapperPostJson), _context15.abrupt("return", new TonRpc(wasm, totalNetworkDic, client, rpcUrl));

             case 14:
             case "end":
              return _context15.stop();
            }
          }), _callee15);
        }))), function(_x19, _x20, _x21) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "getTonPublcKey",
        value: (_getTonPublcKey = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(sender) {
          var _accountInfo$TON, _accountInfo$TON$, _yield$byAddressGetWa, accountInfo, accountPublicKey, publicKey;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return _context16.next = 2, (0, method.byAddressGetWallet)(sender, "TON", null);

             case 2:
              return _yield$byAddressGetWa = _context16.sent, accountInfo = _yield$byAddressGetWa.accountInfo, 
              accountPublicKey = null == accountInfo || null === (_accountInfo$TON = accountInfo.TON) || void 0 === _accountInfo$TON || null === (_accountInfo$TON$ = _accountInfo$TON[0]) || void 0 === _accountInfo$TON$ ? void 0 : _accountInfo$TON$.accountPublicKey, 
              publicKey = Buffer.from(accountPublicKey, "hex"), _context16.abrupt("return", publicKey);

             case 7:
             case "end":
              return _context16.stop();
            }
          }), _callee16);
        }))), function(_x22) {
          return _getTonPublcKey.apply(this, arguments);
        })
      }, {
        key: "getTonWalletContract",
        value: function(wallet) {
          var publicKey = Buffer.from(wallet.publicKey, "hex");
          if (wallet.active.version === networks.uk.V4R2) return dist.WalletContractV4.create({
            workchain: 0,
            publicKey
          });
        }
      }, {
        key: "toTonAddressItemReply",
        value: function(wallet) {
          var contract = TonRpc.getTonWalletContract(wallet);
          return {
            name: "ton_addr",
            address: contract.address.toRawString(),
            network: (wallet.network || networks.lg.MAINNET).toString(),
            walletStateInit: (0, dist.beginCell)().storeWritable((0, dist.storeStateInit)(contract.init)).endCell().toBoc().toString("base64"),
            publicKey: wallet.publicKey
          };
        }
      }, {
        key: "tonConnectProofPayload",
        value: function(params) {
          var timestamp = params.timestamp, sender = params.sender, payload = params.payload, origin = params.origin, timestampBuffer = Buffer.allocUnsafe(8);
          timestampBuffer.writeBigInt64LE(BigInt(timestamp));
          var domainBuffer = Buffer.from(new URL(origin).host), domainLengthBuffer = Buffer.allocUnsafe(4);
          domainLengthBuffer.writeInt32LE(domainBuffer.byteLength);
          var address = dist.Address.parse(sender), addressWorkchainBuffer = Buffer.allocUnsafe(4);
          addressWorkchainBuffer.writeInt32BE(address.workChain);
          var addressBuffer = Buffer.concat([ new Uint8Array(addressWorkchainBuffer), new Uint8Array(address.hash) ]), messageBuffer = Buffer.concat([ new Uint8Array(Buffer.from("ton-proof-item-v2/", "utf8")), new Uint8Array(addressBuffer), new Uint8Array(domainLengthBuffer), new Uint8Array(domainBuffer), new Uint8Array(timestampBuffer), new Uint8Array(Buffer.from(payload)) ]);
          return {
            timestamp,
            bufferToSign: Buffer.concat([ new Uint8Array(Buffer.from("ffff", "hex")), new Uint8Array(Buffer.from("ton-connect", "utf8")), new Uint8Array(Buffer.from((0, 
            crypto_dist.sha256_sync)(messageBuffer))) ]),
            domainBuffer,
            payload,
            origin
          };
        }
      }, {
        key: "getKeypair",
        value: function(privateKey) {
          return index_browser_esm.AX.fromSeed(new Uint8Array(Buffer.from(privateKey, "hex")));
        }
      }, {
        key: "seeIfAddressBounceable",
        value: function(address) {
          return !dist.Address.isFriendly(address) || dist.Address.parseFriendly(address).isBounceable;
        }
      }, {
        key: "toStateInit",
        value: function(stateInit) {
          if (stateInit) {
            var _loadStateInit = (0, dist.loadStateInit)(dist.Cell.fromBase64(stateInit).asSlice());
            return {
              code: _loadStateInit.code,
              data: _loadStateInit.data
            };
          }
        }
      }, {
        key: "createTonConnectTransfer",
        value: function(params) {
          var contract = params.contract, seqno = params.seqno, secretKey = params.secretKey, messages = params.messages;
          return contract.createTransfer({
            seqno,
            sendMode: dist.SendMode.PAY_GAS_SEPARATELY + dist.SendMode.IGNORE_ERRORS,
            secretKey: secretKey ? Buffer.from(secretKey) : Buffer.from(new Uint8Array(64)),
            messages: messages.map((function(item) {
              var body;
              return body = "string" == typeof item.payload ? dist.Cell.fromBase64(item.payload) : item.payload, 
              (0, dist.internal)({
                to: dist.Address.parse(item.address),
                bounce: TonRpc.seeIfAddressBounceable(item.address),
                value: BigInt(item.amount),
                init: TonRpc.toStateInit(item.stateInit),
                body
              });
            }))
          });
        }
      }, {
        key: "getTonUQAddress",
        value: function(address) {
          try {
            return dist.Address.parse(address).toString({
              bounceable: !1
            });
          } catch (_unused) {
            return "";
          }
        }
      }, {
        key: "getTonEQAddress",
        value: function(address) {
          try {
            return dist.Address.parse(address).toString({
              bounceable: !0
            });
          } catch (_unused2) {
            return "";
          }
        }
      } ], protoProps && ton_rpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && ton_rpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), TonRpc;
    }();
    ton_rpc_defineProperty(TonRpc, "networkKey", "TON"), ton_rpc_defineProperty(TonRpc, "createTonProofItem", (function(signature, proof) {
      return {
        timestamp: proof.timestamp,
        domain: {
          lengthBytes: proof.domainBuffer.byteLength,
          value: proof.domainBuffer.toString("utf8")
        },
        signature: Buffer.from(signature).toString("base64"),
        payload: proof.payload
      };
    })), ton_rpc_defineProperty(TonRpc, "externalMessage", (function(contract, seqno, body) {
      return (0, dist.beginCell)().storeWritable((0, dist.storeMessage)((0, dist.external)({
        to: contract.address,
        init: 0 === seqno ? contract.init : void 0,
        body
      }))).endCell();
    }));
    const ton_rpc = TonRpc;
  },
  833801: () => {},
  845404: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      dealAccountAddress: () => dealAccountAddress,
      dealEditTokenData: () => dealEditTokenData,
      dealHomeToken: () => dealHomeToken,
      dealLTCWalletData: () => dealLTCWalletData,
      deleteWallet: () => deleteWallet,
      extractData: () => extractData,
      filterNetworkAddress: () => filterNetworkAddress,
      getAccountAddress: () => getAccountAddress,
      getAccountID: () => getAccountID,
      getNetworkIsOpen: () => getNetworkIsOpen,
      getProviderData: () => getProviderData,
      getSelectedWallet: () => getSelectedWallet,
      getTokenParams: () => getTokenParams,
      getUtxoData: () => getUtxoData,
      getWalletCoreTypes: () => getWalletCoreTypes,
      getWalletParams: () => getWalletParams,
      initFeedBackData: () => initFeedBackData,
      resetAllData: () => resetAllData,
      resetData: () => resetData,
      saveAccountToken: () => saveAccountToken,
      saveLocalAccountData: () => saveLocalAccountData,
      saveWalletBalance: () => saveWalletBalance,
      sendTokenJumpPage: () => sendTokenJumpPage,
      walletCoreTypeConfig: () => walletCoreTypeConfig
    });
    __webpack_require__(207452), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(418665), __webpack_require__(505086), __webpack_require__(445708), 
    __webpack_require__(929979), __webpack_require__(788198), __webpack_require__(727918), 
    __webpack_require__(868900), __webpack_require__(670708), __webpack_require__(532657), 
    __webpack_require__(321452), __webpack_require__(36546), __webpack_require__(291749), 
    __webpack_require__(466754), __webpack_require__(836299), __webpack_require__(143643), 
    __webpack_require__(613053), __webpack_require__(911029), __webpack_require__(569155), 
    __webpack_require__(223070), __webpack_require__(313696), __webpack_require__(14602), 
    __webpack_require__(259581), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(219693), __webpack_require__(700533), __webpack_require__(718636), 
    __webpack_require__(380115), __webpack_require__(269193), __webpack_require__(447746), 
    __webpack_require__(43148), __webpack_require__(407899), __webpack_require__(168763), 
    __webpack_require__(118772), __webpack_require__(700017), __webpack_require__(992157), 
    __webpack_require__(990345), __webpack_require__(579389), __webpack_require__(906048), 
    __webpack_require__(752231), __webpack_require__(504895), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(564216), __webpack_require__(215195), 
    __webpack_require__(714913), __webpack_require__(498741), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(194009), __webpack_require__(815852), 
    __webpack_require__(110678), __webpack_require__(103101), __webpack_require__(936012);
    var _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(535561), _method__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(326394), _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(315733), _const__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(498050), _popup_lib_tool_walletCore_account__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(266744), _bg_redux_slices_keyrings__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(263383), _tallyho_tally_background_redux_slices_dapp__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(273310), webextension_polyfill__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(285e3), webextension_polyfill__WEBPACK_IMPORTED_MODULE_64___default = __webpack_require__.n(webextension_polyfill__WEBPACK_IMPORTED_MODULE_64__), _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(660862), _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(639319), _bg_services_gt_networks_defaults__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(384555);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var getSelectedWallet = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
        var walletIDVal, accountIDVal, walletInfo, selectedWallet, _walletInfo$defiWalle, selectedWalletDic, walletArr, _walletID, _accountID, _args = arguments;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return walletIDVal = _args.length > 0 && void 0 !== _args[0] ? _args[0] : "", accountIDVal = _args.length > 1 && void 0 !== _args[1] ? _args[1] : "", 
            _context.next = 4, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.$();

           case 4:
            return walletInfo = _context.sent, selectedWallet = {
              wallet: {},
              account: {}
            }, walletInfo && "{}" !== JSON.stringify(walletInfo) && (_walletInfo$defiWalle = walletInfo.defiWallet, 
            selectedWalletDic = _walletInfo$defiWalle.selectedWalletDic, walletArr = _walletInfo$defiWalle.walletArr, 
            "{}" !== JSON.stringify(selectedWalletDic) && (walletIDVal && accountIDVal ? (_walletID = walletIDVal, 
            _accountID = accountIDVal) : (_walletID = null == selectedWalletDic ? void 0 : selectedWalletDic.walletID, 
            _accountID = null == selectedWalletDic ? void 0 : selectedWalletDic.accountID), 
            null == walletArr || walletArr.forEach((function(Item) {
              Item.walletID == _walletID && Item.walletAccountArr.forEach((function(a) {
                a.accountID == _accountID && (selectedWallet = {
                  wallet: Item,
                  account: a
                });
              }));
            })))), _context.abrupt("return", selectedWallet);

           case 8:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function() {
        return _ref.apply(this, arguments);
      };
    }(), getTokenParams = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(networkDataItem) {
        var type, selectWallet, totalNetworkDic, networkKey, _ref3, wallet, account, homeTokenParams, accountNetworkArr, _args2 = arguments;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            if (type = _args2.length > 1 && void 0 !== _args2[1] ? _args2[1] : "", selectWallet = _args2.length > 2 ? _args2[2] : void 0, 
            totalNetworkDic = _args2.length > 3 ? _args2[3] : void 0, networkKey = "", networkDataItem && networkDataItem instanceof Object && "{}" !== JSON.stringify(networkDataItem) && (networkKey = null == networkDataItem ? void 0 : networkDataItem.networkKey), 
            _context2.t0 = selectWallet, _context2.t0) {
              _context2.next = 10;
              break;
            }
            return _context2.next = 9, getSelectedWallet();

           case 9:
            _context2.t0 = _context2.sent;

           case 10:
            return _ref3 = _context2.t0, wallet = _ref3.wallet, account = _ref3.account, homeTokenParams = {}, 
            _context2.next = 16, extractData(account, "accountAddress", networkKey, "", type, totalNetworkDic);

           case 16:
            return accountNetworkArr = _context2.sent, homeTokenParams = {
              walletCreateType: null == wallet ? void 0 : wallet.walletCreateType,
              walletID: null == wallet ? void 0 : wallet.walletID,
              accountID: null == account ? void 0 : account.accountID,
              accountNetworkArr,
              page: 1,
              pageSize: 200
            }, "home" == type && (homeTokenParams.dataType = 1), _context2.abrupt("return", homeTokenParams);

           case 20:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x) {
        return _ref2.apply(this, arguments);
      };
    }(), dealHomeToken = function(params) {
      var copyParams = JSON.parse(JSON.stringify(params));
      null == copyParams || delete copyParams.dataType, copyParams.isSplit = 1, copyParams.isManageToken = "0";
      var _accountNetworkArr = null == params ? void 0 : params.accountNetworkArr, accAddress = [];
      if ((null == _accountNetworkArr ? void 0 : _accountNetworkArr.length) > 0) {
        var _accountNetworkArr$ma, _accountNetworkArr$, _accountNetworkArr$$a;
        copyParams.networkKeyList = _toConsumableArray(new Set(null !== (_accountNetworkArr$ma = null == _accountNetworkArr ? void 0 : _accountNetworkArr.map((function(i) {
          return i.networkKey;
        }))) && void 0 !== _accountNetworkArr$ma ? _accountNetworkArr$ma : []));
        var addr = null === (_accountNetworkArr$ = _accountNetworkArr[0]) || void 0 === _accountNetworkArr$ || null === (_accountNetworkArr$$a = _accountNetworkArr$.accountAddress) || void 0 === _accountNetworkArr$$a ? void 0 : _accountNetworkArr$$a.split(",");
        (null == addr ? void 0 : addr.length) > 0 && addr.forEach((function(item) {
          var _itemValue$address, index = null == item ? void 0 : item.indexOf(":"), net = null == item ? void 0 : item.substring(0, index), netAddress = null == item ? void 0 : item.substring(index + 1), itemValue = {
            bigChain: net,
            address: []
          };
          null === (_itemValue$address = itemValue.address) || void 0 === _itemValue$address || _itemValue$address.push(netAddress), 
          null == accAddress || accAddress.push(itemValue);
        }));
      }
      var mergedArray = accAddress.reduce((function(accumulator, currentObject) {
        var existingObject = accumulator.find((function(obj) {
          return obj.bigChain === currentObject.bigChain;
        }));
        return existingObject ? existingObject.address = [].concat(_toConsumableArray(existingObject.address), _toConsumableArray(currentObject.address)) : accumulator.push(currentObject), 
        accumulator;
      }), []);
      return copyParams.accountAddress = mergedArray, null == copyParams || delete copyParams.accountNetworkArr, 
      copyParams;
    }, dealAccountAddress = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(data) {
        var accountAddress, _accountAddress;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, getAccountAddress(data, "chainAddress");

           case 2:
            return accountAddress = _context3.sent, _accountAddress = "", (null == accountAddress ? void 0 : accountAddress.length) > 0 && accountAddress.forEach((function(Item) {
              var netkey = Item.network;
              _accountAddress += netkey + ":" + Item.address + ",";
            })), _accountAddress = _accountAddress.substring(0, _accountAddress.length - 1), 
            _context3.abrupt("return", _accountAddress);

           case 7:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x2) {
        return _ref4.apply(this, arguments);
      };
    }(), extractData = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(data, type, networkKey) {
        var address, page, totalNetworkDic, chainAccount, _accountAddress, _data$networkKey$, _loop, i, _args4 = arguments;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return address = _args4.length > 3 && void 0 !== _args4[3] ? _args4[3] : "", page = _args4.length > 4 && void 0 !== _args4[4] ? _args4[4] : "", 
            totalNetworkDic = _args4.length > 5 ? _args4[5] : void 0, chainAccount = [], _context4.next = 6, 
            dealAccountAddress(data);

           case 6:
            if (_accountAddress = _context4.sent, data && "{}" !== JSON.stringify(data)) if (networkKey) "chainAddress" == address ? chainAccount.push({
              networkKey,
              accountAddress: null === (_data$networkKey$ = data[networkKey][0]) || void 0 === _data$networkKey$ ? void 0 : _data$networkKey$.accountAddress
            }) : chainAccount.push({
              networkKey,
              accountAddress: _accountAddress
            }); else {
              for (i in _loop = function(i) {
                var item = data[i], _ref6 = totalNetworkDic[i] || {}, isTest = _ref6.isTest, isCustom = _ref6.isCustom;
                item instanceof Array && item[0] instanceof Object && "accountAddress" in item[0] && !isTest && !isCustom && ("accountAddress" == type ? (null == item ? void 0 : item.length) > 0 && item.forEach((function(val) {
                  chainAccount.push({
                    networkKey: i,
                    accountAddress: val.accountAddress
                  });
                })) : chainAccount.push(_defineProperty({}, i, item)));
              }, data) _loop(i);
              "home" == page && (null == chainAccount ? void 0 : chainAccount.length) > 0 && chainAccount.forEach((function(item) {
                item.accountAddress = _accountAddress;
              }));
            }
            return _context4.abrupt("return", chainAccount);

           case 9:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x3, _x4, _x5) {
        return _ref5.apply(this, arguments);
      };
    }(), saveAccountToken = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(coinList) {
        var type, _yield$Promise$all, _yield$Promise$all2, account, walletInfo, defiWallet, walletArr, copyWalletArr, _args5 = arguments;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return type = _args5.length > 1 && void 0 !== _args5[1] ? _args5[1] : "token", _context5.next = 3, 
            Promise.all([ getSelectedWallet(), _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.$() ]);

           case 3:
            return _yield$Promise$all = _context5.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
            account = _yield$Promise$all2[0].account, walletInfo = _yield$Promise$all2[1], defiWallet = walletInfo.defiWallet, 
            walletArr = walletInfo.defiWallet.walletArr, (null == (copyWalletArr = JSON.parse(JSON.stringify(walletArr))) ? void 0 : copyWalletArr.length) > 0 && (null == copyWalletArr || copyWalletArr.forEach((function(Item) {
              var _Item$walletAccountAr;
              (null == Item || null === (_Item$walletAccountAr = Item.walletAccountArr) || void 0 === _Item$walletAccountAr ? void 0 : _Item$walletAccountAr.length) > 0 && Item.walletAccountArr.forEach((function(item) {
                item.accountID == (null == account ? void 0 : account.accountID) && ("token" == type ? item.accountCoinArr = coinList : item.accountNftArr = coinList);
              }));
            }))), defiWallet.walletArr = copyWalletArr, _context5.next = 13, _method__WEBPACK_IMPORTED_MODULE_58__.setJsonData(defiWallet);

           case 13:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })));
      return function(_x6) {
        return _ref7.apply(this, arguments);
      };
    }(), getWalletParams = function() {
      var _ref8 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(totalNetworkDic, networkKey, accountID) {
        var walletInfo, walletArr, params, i, Item, walletAccountArr, accountArr, j, item, isCurrent, walltParamsObj;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _context6.next = 2, (0, _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_66__.fw)();

           case 2:
            if (walletInfo = _context6.sent, walletArr = walletInfo.walletArr, params = [], 
            !((null == walletArr ? void 0 : walletArr.length) > 0)) {
              _context6.next = 32;
              break;
            }
            i = 0;

           case 7:
            if (!(i < (null == walletArr ? void 0 : walletArr.length))) {
              _context6.next = 32;
              break;
            }
            if (Item = walletArr[i], walletAccountArr = null == Item ? void 0 : Item.walletAccountArr, 
            accountArr = [], !((null == walletAccountArr ? void 0 : walletAccountArr.length) > 0)) {
              _context6.next = 27;
              break;
            }
            j = 0;

           case 13:
            if (!(j < (null == walletAccountArr ? void 0 : walletAccountArr.length))) {
              _context6.next = 27;
              break;
            }
            return item = walletAccountArr[j], isCurrent = accountID === (null == item ? void 0 : item.accountID), 
            _context6.t0 = accountArr, _context6.t1 = null == item ? void 0 : item.accountID, 
            _context6.next = 20, extractData(item, "accountAddress", isCurrent ? networkKey : void 0, "", "", totalNetworkDic);

           case 20:
            _context6.t2 = _context6.sent, _context6.t3 = isCurrent && networkKey ? [ networkKey ] : void 0, 
            _context6.t4 = {
              accountID: _context6.t1,
              accountNetworkArr: _context6.t2,
              networkKeyList: _context6.t3
            }, _context6.t0.push.call(_context6.t0, _context6.t4);

           case 24:
            j++, _context6.next = 13;
            break;

           case 27:
            walltParamsObj = {
              walletId: null == Item ? void 0 : Item.walletID,
              accountArr
            }, params.push(walltParamsObj);

           case 29:
            i++, _context6.next = 7;
            break;

           case 32:
            return _context6.abrupt("return", {
              params
            });

           case 33:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })));
      return function(_x7, _x8, _x9) {
        return _ref8.apply(this, arguments);
      };
    }(), saveWalletBalance = function() {
      var _ref9 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(interfaceData) {
        var interfaceWalletArr, walletInfo, defiWallet, walletArr, copyWalletArr;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return interfaceWalletArr = null == interfaceData ? void 0 : interfaceData.walletArr, 
            _context7.next = 3, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.$();

           case 3:
            return walletInfo = _context7.sent, defiWallet = walletInfo.defiWallet, walletArr = walletInfo.defiWallet.walletArr, 
            (null == (copyWalletArr = JSON.parse(JSON.stringify(walletArr))) ? void 0 : copyWalletArr.length) > 0 && (null == interfaceWalletArr ? void 0 : interfaceWalletArr.length) > 0 && copyWalletArr.forEach((function(aItem) {
              interfaceWalletArr.forEach((function(bItem) {
                aItem.walletID == bItem.walletID && (aItem.walletAmount = bItem.walletTotalAmount);
                var aItemAccount = null == aItem ? void 0 : aItem.walletAccountArr, bItemAccount = null == bItem ? void 0 : bItem.accountArr;
                (null == aItemAccount ? void 0 : aItemAccount.length) > 0 && (null == bItemAccount ? void 0 : bItemAccount.length) > 0 && aItemAccount.forEach((function(aAccount) {
                  bItemAccount.forEach((function(bAccount) {
                    aAccount.accountID == bAccount.accountID && (aAccount.accountAmount = bAccount.accountTotalAmount);
                  }));
                }));
              }));
            })), defiWallet.walletArr = copyWalletArr, _context7.next = 10, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.s(defiWallet);

           case 10:
           case "end":
            return _context7.stop();
          }
        }), _callee7);
      })));
      return function(_x10) {
        return _ref9.apply(this, arguments);
      };
    }(), getAccountAddress = function() {
      var _ref10 = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(account) {
        var _account$ETH, _account$ETH$, type, allAccountAddress, isNeedFormatValue, evmAddress, i, item, j, a, copyValue, _val, _publicKey, evmVal, copyAllAccountAddress, obj, _args8 = arguments;
        return regeneratorRuntime.wrap((function(_context8) {
          for (;;) switch (_context8.prev = _context8.next) {
           case 0:
            if (type = _args8.length > 1 && void 0 !== _args8[1] ? _args8[1] : "", allAccountAddress = [], 
            isNeedFormatValue = "accountFormat" == (_args8.length > 2 && void 0 !== _args8[2] ? _args8[2] : ""), 
            evmAddress = null == account || null === (_account$ETH = account.ETH) || void 0 === _account$ETH || null === (_account$ETH$ = _account$ETH[0]) || void 0 === _account$ETH$ ? void 0 : _account$ETH$.accountAddress, 
            account && "{}" !== JSON.stringify(account)) for (i in account) if ((item = account[i]) instanceof Array) for (j = 0; j < (null == item ? void 0 : item.length); j++) (a = item[j]) instanceof Object && "accountAddress" in a && a.accountAddress && ("chainAddress" == type ? a.accountAddress !== evmAddress ? (_val = {
              network: copyValue = i,
              address: "TON" === copyValue ? _method__WEBPACK_IMPORTED_MODULE_58__.getTonAddress(a.accountAddress) : a.accountAddress
            }, isNeedFormatValue && (_val = _objectSpread(_objectSpread({}, _val), {
              accountFormat: a.accountFormat || "",
              accountFormatName: _popup_lib_tool_walletCore_account__WEBPACK_IMPORTED_MODULE_61__.P3[a.accountFormat] || ""
            }), "BTC" != copyValue && "SIGNET_TEST_GATETEST" != copyValue && "TON" != copyValue || (_publicKey = "", 
            null != a && a.accountPublicKey && (_publicKey = null == a ? void 0 : a.accountPublicKey), 
            _val = _objectSpread(_objectSpread({}, _val), {
              accountPublicKey: _publicKey
            }))), allAccountAddress.push(_val)) : (evmVal = {
              network: "EVM",
              address: a.accountAddress
            }, isNeedFormatValue && (evmVal = _objectSpread(_objectSpread({}, evmVal), {
              accountFormat: a.accountFormat || "",
              accountFormatName: _popup_lib_tool_walletCore_account__WEBPACK_IMPORTED_MODULE_61__.P3[a.accountFormat] || ""
            })), allAccountAddress.push(evmVal)) : allAccountAddress.push(a.accountAddress));
            return copyAllAccountAddress = JSON.parse(JSON.stringify(allAccountAddress)), "chainAddress" == type ? (obj = {}, 
            copyAllAccountAddress = allAccountAddress.reduce((function(cur, next) {
              var _next$network;
              return _const__WEBPACK_IMPORTED_MODULE_60__.MORE_ADDRESS_CHAIN_WITH_VARA.includes(null === (_next$network = next.network) || void 0 === _next$network ? void 0 : _next$network.toUpperCase()) ? !obj[next.network] && cur.push(next) : !obj[next.network] && (obj[next.network] = cur.push(next)), 
              cur;
            }), [])) : copyAllAccountAddress = _toConsumableArray(new Set(allAccountAddress)), 
            _context8.abrupt("return", copyAllAccountAddress);

           case 9:
           case "end":
            return _context8.stop();
          }
        }), _callee8);
      })));
      return function(_x11) {
        return _ref10.apply(this, arguments);
      };
    }(), deleteWallet = function() {
      var _ref11 = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(totalNetworkDic, type, dealData, bigNetworkKeys, dispatch) {
        var _Object$keys, _wallet$walletAccount, accountNetworkDic, walletInfo, defiWallet, _walletInfo$defiWalle2, selectedWalletDic, walletArr, selectedWalletID, selectedAccountID, copyWalletArr, walletCreateType, walletIds, deleteNetwork, deleteBip44Address, isNeedSelected, _dealData$walletAccou, _Object$keys2, _accountNetworkDic$de, _accountNetworkDic, _dealData$deleteNetwo, _dealData$deleteNetwo2, copySelectedWalletDic, _copyWalletArr$, _walletAccountArr, _copyWalletArr$2, _walletAccountArr$, wallet, account, networkDic, sortNetworkData, _wallet, _wallet$walletAccount2, _account;
        return regeneratorRuntime.wrap((function(_context9) {
          for (;;) switch (_context9.prev = _context9.next) {
           case 0:
            return _context9.prev = 0, accountNetworkDic = (0, _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.IN)(totalNetworkDic, dealData), 
            deleteNetwork = null === (_Object$keys = Object.keys(accountNetworkDic)) || void 0 === _Object$keys ? void 0 : _Object$keys[0], 
            _context9.next = 5, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.$();

           case 5:
            return walletInfo = _context9.sent, defiWallet = walletInfo.defiWallet, _walletInfo$defiWalle2 = walletInfo.defiWallet, 
            selectedWalletDic = _walletInfo$defiWalle2.selectedWalletDic, walletArr = _walletInfo$defiWalle2.walletArr, 
            selectedWalletID = null == selectedWalletDic ? void 0 : selectedWalletDic.walletID, 
            selectedAccountID = null == selectedWalletDic ? void 0 : selectedWalletDic.accountID, 
            (null == (copyWalletArr = JSON.parse(JSON.stringify(walletArr))) ? void 0 : copyWalletArr.length) > 0 && copyWalletArr.forEach((function(Item, Index) {
              var _walletAccountArr = Item.walletAccountArr;
              "wallet" == type ? Item.walletID == (null == dealData ? void 0 : dealData.walletID) && (walletCreateType = null == dealData ? void 0 : dealData.walletCreateType, 
              copyWalletArr.splice(Index, 1)) : "account" == type && _walletAccountArr.forEach((function(item, index) {
                item.accountID == (null == dealData ? void 0 : dealData.accountID) && (_walletAccountArr.splice(index, 1), 
                walletCreateType = null == Item ? void 0 : Item.walletCreateType);
              })), 0 == (null == _walletAccountArr ? void 0 : _walletAccountArr.length) && copyWalletArr.splice(Index, 1);
            })), walletIds = [], deleteNetwork = "", deleteBip44Address = "", isNeedSelected = !1, 
            "wallet" == type ? (selectedWalletID == (null == dealData ? void 0 : dealData.walletID) && (isNeedSelected = !0), 
            walletIds = null == dealData || null === (_dealData$walletAccou = dealData.walletAccountArr) || void 0 === _dealData$walletAccou ? void 0 : _dealData$walletAccou.map((function(item) {
              return null == item ? void 0 : item.gtWalletID;
            }))) : "account" == type && (selectedAccountID == (null == dealData ? void 0 : dealData.accountID) && (isNeedSelected = !0), 
            walletIds = [ null == dealData ? void 0 : dealData.gtWalletID ], _accountNetworkDic = (0, 
            _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.IN)(totalNetworkDic, dealData), 
            deleteNetwork = null === (_Object$keys2 = Object.keys(_accountNetworkDic)) || void 0 === _Object$keys2 ? void 0 : _Object$keys2[0], 
            null !== _const__WEBPACK_IMPORTED_MODULE_60__.MORE_ADDRESS_CHAIN_WITH_VARA && void 0 !== _const__WEBPACK_IMPORTED_MODULE_60__.MORE_ADDRESS_CHAIN_WITH_VARA && _const__WEBPACK_IMPORTED_MODULE_60__.MORE_ADDRESS_CHAIN_WITH_VARA.includes(deleteNetwork) && (deleteBip44Address = null == dealData || null === (_dealData$deleteNetwo = dealData[deleteNetwork]) || void 0 === _dealData$deleteNetwo || null === (_dealData$deleteNetwo2 = _dealData$deleteNetwo.find((function(item) {
              return (null == item ? void 0 : item.accountFormat) == _const__WEBPACK_IMPORTED_MODULE_60__.GATE_CONNECT_UTXO_TYPE;
            }))) || void 0 === _dealData$deleteNetwo2 ? void 0 : _dealData$deleteNetwo2.accountAddress), 
            "EVM" === (null === (_accountNetworkDic$de = _accountNetworkDic[deleteNetwork]) || void 0 === _accountNetworkDic$de ? void 0 : _accountNetworkDic$de.chainArchitecture) && (deleteNetwork = "EVM")), 
            dispatch((0, _tallyho_tally_background_redux_slices_dapp__WEBPACK_IMPORTED_MODULE_63__.fA)({
              walletIds,
              walletCreateType,
              network: deleteNetwork,
              address: deleteBip44Address
            })), copySelectedWalletDic = JSON.parse(JSON.stringify(selectedWalletDic)), isNeedSelected && (null == copyWalletArr ? void 0 : copyWalletArr.length) > 0 && (null == (_walletAccountArr = null === (_copyWalletArr$ = copyWalletArr[0]) || void 0 === _copyWalletArr$ ? void 0 : _copyWalletArr$.walletAccountArr) ? void 0 : _walletAccountArr.length) > 0 && (copySelectedWalletDic = {
              walletID: null === (_copyWalletArr$2 = copyWalletArr[0]) || void 0 === _copyWalletArr$2 ? void 0 : _copyWalletArr$2.walletID,
              accountID: null === (_walletAccountArr$ = _walletAccountArr[0]) || void 0 === _walletAccountArr$ ? void 0 : _walletAccountArr$.accountID
            }), defiWallet.selectedWalletDic = copySelectedWalletDic, defiWallet.walletArr = copyWalletArr, 
            wallet = null == copyWalletArr ? void 0 : copyWalletArr.find((function(item) {
              var _copySelectedWalletDi;
              return (null == item ? void 0 : item.walletID) === (null === (_copySelectedWalletDi = copySelectedWalletDic) || void 0 === _copySelectedWalletDi ? void 0 : _copySelectedWalletDi.walletID);
            })), account = null == wallet || null === (_wallet$walletAccount = wallet.walletAccountArr) || void 0 === _wallet$walletAccount ? void 0 : _wallet$walletAccount.find((function(item) {
              var _copySelectedWalletDi2;
              return (null == item ? void 0 : item.accountID) === (null === (_copySelectedWalletDi2 = copySelectedWalletDic) || void 0 === _copySelectedWalletDi2 ? void 0 : _copySelectedWalletDi2.accountID);
            })), networkDic = (0, _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.IN)(totalNetworkDic, account, +(null == wallet ? void 0 : wallet.walletCreateType)), 
            sortNetworkData = (0, _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.Ny)(networkDic, bigNetworkKeys), 
            selectedAccountID !== copySelectedWalletDic.accountID && (1 === (null == sortNetworkData ? void 0 : sortNetworkData.length) ? (0, 
            _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.jG)(totalNetworkDic[sortNetworkData[0].networkKey], dispatch) : (null == sortNetworkData ? void 0 : sortNetworkData.length) > 1 && (0, 
            _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.jG)(_bg_services_gt_networks_defaults__WEBPACK_IMPORTED_MODULE_67__.e, dispatch)), 
            _context9.next = 26, _method__WEBPACK_IMPORTED_MODULE_58__.setJsonData(defiWallet);

           case 26:
            if (!((null == copyWalletArr ? void 0 : copyWalletArr.length) > 0)) {
              _context9.next = 35;
              break;
            }
            if (!(_wallet = copyWalletArr.find((function(val) {
              return val.walletID === copySelectedWalletDic.walletID;
            })))) {
              _context9.next = 32;
              break;
            }
            if (!(_account = null == _wallet || null === (_wallet$walletAccount2 = _wallet.walletAccountArr) || void 0 === _wallet$walletAccount2 ? void 0 : _wallet$walletAccount2.find((function(val) {
              return val.accountID === copySelectedWalletDic.accountID;
            })))) {
              _context9.next = 32;
              break;
            }
            return _context9.abrupt("return", {
              wallet: _wallet,
              account: _account
            });

           case 32:
            return _context9.abrupt("return", {});

           case 35:
            return _context9.abrupt("return", "init");

           case 36:
            _context9.next = 41;
            break;

           case 38:
            return _context9.prev = 38, _context9.t0 = _context9.catch(0), _context9.abrupt("return", !1);

           case 41:
           case "end":
            return _context9.stop();
          }
        }), _callee9, null, [ [ 0, 38 ] ]);
      })));
      return function(_x12, _x13, _x14, _x15, _x16) {
        return _ref11.apply(this, arguments);
      };
    }(), resetData = function() {
      var _ref12 = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(dispatch, dappsByOrigin) {
        var defaultState;
        return regeneratorRuntime.wrap((function(_context10) {
          for (;;) switch (_context10.prev = _context10.next) {
           case 0:
            return defaultState = {
              walletArr: [],
              selectedWalletDic: {},
              walletTotalAmount: "0.00"
            }, dispatch((0, _bg_redux_slices_keyrings__WEBPACK_IMPORTED_MODULE_62__.rC)()), 
            _context10.next = 4, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.s(defaultState);

           case 4:
            return _context10.next = 6, _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_59__.zc({
              lock: "",
              type: ""
            });

           case 6:
            return _context10.next = 8, _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_59__.dI({});

           case 8:
            return _context10.next = 10, _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_59__.mN({});

           case 10:
            return localStorage.removeItem("isBackup"), localStorage.removeItem("lockTime"), 
            dappsByOrigin.length > 0 && dappsByOrigin.forEach((function(permission) {
              dispatch((0, _tallyho_tally_background_redux_slices_dapp__WEBPACK_IMPORTED_MODULE_63__.b0)(_objectSpread(_objectSpread({}, permission), {}, {
                state: "deny"
              })));
            })), dispatch((0, _tallyho_tally_background_redux_slices_dapp__WEBPACK_IMPORTED_MODULE_63__.J1)()), 
            _context10.abrupt("return", !0);

           case 15:
           case "end":
            return _context10.stop();
          }
        }), _callee10);
      })));
      return function(_x17, _x18) {
        return _ref12.apply(this, arguments);
      };
    }(), resetAllData = function() {
      var _ref13 = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(dispatch, dappsByOrigin, history) {
        var defaultState, _yield$Promise$all3, _yield$Promise$all4, startMain;
        return regeneratorRuntime.wrap((function(_context11) {
          for (;;) switch (_context11.prev = _context11.next) {
           case 0:
            return defaultState = {
              walletArr: [],
              selectedWalletDic: {},
              walletTotalAmount: "0.00"
            }, _context11.next = 3, Promise.all([ Promise.all([ __webpack_require__.e(462), __webpack_require__.e(3397), __webpack_require__.e(1361) ]).then(__webpack_require__.bind(__webpack_require__, 594362)), _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.s(defaultState), _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_59__.zc({
              lock: "",
              type: ""
            }), _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_59__.dI({}), _popup_lib_model_projectData__WEBPACK_IMPORTED_MODULE_59__.mN({}) ]);

           case 3:
            _yield$Promise$all3 = _context11.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 1), 
            startMain = _yield$Promise$all4[0].startMain, localStorage.clear(), [ "tally/analytics", "tally/chain", "tally/doggo", "tally/indexing", "tally/internal-ethereum-provider", "tally/ledger", "tally/nfts", "tally/preferences", "tally/provider-bridge-service", "gate/provider-bridge-service" ].forEach((function(item) {
              window.indexedDB.deleteDatabase(item);
            })), chrome.storage.local.clear(), webextension_polyfill__WEBPACK_IMPORTED_MODULE_64___default().storage.local.clear(), 
            dispatch((0, _bg_redux_slices_keyrings__WEBPACK_IMPORTED_MODULE_62__.rC)()), localStorage.setItem("isHasAccount", 0), 
            dappsByOrigin.length > 0 && dappsByOrigin.forEach((function(permission) {
              dispatch((0, _tallyho_tally_background_redux_slices_dapp__WEBPACK_IMPORTED_MODULE_63__.b0)(_objectSpread(_objectSpread({}, permission), {}, {
                state: "deny"
              })));
            })), startMain(), setTimeout((function() {
              history.push("/onboarding/info-intro?isReset=true");
            }), 300);

           case 16:
           case "end":
            return _context11.stop();
          }
        }), _callee11);
      })));
      return function(_x19, _x20, _x21) {
        return _ref13.apply(this, arguments);
      };
    }(), getUtxoData = function() {
      return _const__WEBPACK_IMPORTED_MODULE_60__.UTXO_PRIVATEKEY;
    }, saveLocalAccountData = function() {
      var _ref14 = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(accountData) {
        var walletInfo, defiWallet, walletArr, copyWalletArr;
        return regeneratorRuntime.wrap((function(_context12) {
          for (;;) switch (_context12.prev = _context12.next) {
           case 0:
            return _context12.next = 2, _model_defiWalletData__WEBPACK_IMPORTED_MODULE_57__.$();

           case 2:
            return walletInfo = _context12.sent, defiWallet = walletInfo.defiWallet, walletArr = walletInfo.defiWallet.walletArr, 
            (null == (copyWalletArr = JSON.parse(JSON.stringify(walletArr))) ? void 0 : copyWalletArr.length) > 0 && copyWalletArr.forEach((function(Item) {
              var _Item$walletAccountAr2, _Item$walletAccountAr3;
              (null == Item || null === (_Item$walletAccountAr2 = Item.walletAccountArr) || void 0 === _Item$walletAccountAr2 ? void 0 : _Item$walletAccountAr2.length) > 0 && (Item.walletAccountArr = null === (_Item$walletAccountAr3 = Item.walletAccountArr) || void 0 === _Item$walletAccountAr3 ? void 0 : _Item$walletAccountAr3.map((function(item) {
                return item.accountID == (null == accountData ? void 0 : accountData.accountID) ? _objectSpread(_objectSpread({}, item), {
                  gtWalletID: null == accountData ? void 0 : accountData.gtWalletID
                }) : item;
              })));
            })), defiWallet.walletArr = copyWalletArr, _context12.next = 9, _method__WEBPACK_IMPORTED_MODULE_58__.setJsonData(defiWallet);

           case 9:
           case "end":
            return _context12.stop();
          }
        }), _callee12);
      })));
      return function(_x22) {
        return _ref14.apply(this, arguments);
      };
    }(), walletCoreTypeConfig = function(CoinType) {
      return [ {
        ETH: CoinType.ethereum
      }, {
        BTC: CoinType.bitcoin
      }, {
        FB: CoinType.bitcoin
      }, {
        SOL: CoinType.solana
      }, {
        SOON_ETH: CoinType.solana
      }, {
        SONIC_SVM: CoinType.solana
      }, {
        SOONBASE: CoinType.solana
      }, {
        SVMBNB: CoinType.solana
      }, {
        ECLIPSE: CoinType.solana
      }, {
        SUI: CoinType.sui
      }, {
        APT: CoinType.aptos
      }, {
        TRX: CoinType.tron
      }, {
        DASH: CoinType.dash
      }, {
        ATOM: CoinType.cosmos
      }, {
        INJ: CoinType.nativeInjective
      }, {
        BCH: CoinType.bitcoinCash
      }, {
        LTC: CoinType.litecoin
      }, {
        DOGE: CoinType.dogecoin
      }, {
        BNB_ORG: CoinType.binance
      }, {
        ADA: CoinType.cardano
      }, {
        TON: CoinType.ton
      }, {
        VENOM: CoinType.everscale
      }, {
        CKB: CoinType.nervos
      }, {
        VARA: CoinType.vara
      }, {
        SIGNET_TEST_GATETEST: CoinType.bitcoinTestnet
      }, {
        BTC_TEST4_GATETEST: CoinType.bitcoinTestnet
      }, {
        MOVE_GATETEST: CoinType.move
      }, {
        MOVE: CoinType.move
      }, {
        SONIC_GATETEST: CoinType.sonic
      }, {
        APT_GATETEST: CoinType.aptos
      }, {
        TBC: CoinType.turingBitChain
      } ];
    }, getWalletCoreTypes = function(CoinType, needChainArr, totalNetworkDic) {
      var walletCoreCoinTypes = [], allBigNetworkKeys = (0, _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.Fb)(totalNetworkDic).allBigNetworkKeys;
      allBigNetworkKeys = allBigNetworkKeys.filter((function(chainName) {
        return -1 === _const__WEBPACK_IMPORTED_MODULE_60__.WALLET_CORE_EXCLUDE.findIndex((function(chainNameExclude) {
          return (null == chainName ? void 0 : chainName.toUpperCase()) === (null == chainNameExclude ? void 0 : chainNameExclude.toUpperCase());
        }));
      }));
      var copyBigNetworkKeyArr = needChainArr || allBigNetworkKeys, walletCoreTypeArr = walletCoreTypeConfig(CoinType);
      return (null == copyBigNetworkKeyArr ? void 0 : copyBigNetworkKeyArr.length) > 0 && copyBigNetworkKeyArr.forEach((function(Item) {
        walletCoreTypeArr.forEach((function(item) {
          var keys = Object.keys(item)[0], values = Object.values(item)[0];
          (null == Item ? void 0 : Item.toUpperCase()) == (null == keys ? void 0 : keys.toUpperCase()) && walletCoreCoinTypes.push({
            values,
            keys
          });
        }));
      })), walletCoreCoinTypes;
    }, getProviderData = function() {
      var _ref15 = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(wallet, account) {
        return regeneratorRuntime.wrap((function(_context13) {
          for (;;) switch (_context13.prev = _context13.next) {
           case 0:
            return _context13.t0 = null == wallet ? void 0 : wallet.walletName, _context13.t1 = null == account ? void 0 : account.accountName, 
            _context13.next = 4, getAccountAddress(account, "chainAddress", "accountFormat");

           case 4:
            return _context13.t2 = _context13.sent, _context13.t3 = null == account ? void 0 : account.gtWalletID, 
            _context13.t4 = wallet.walletID, _context13.t5 = null == account ? void 0 : account.accountID, 
            _context13.t6 = _const__WEBPACK_IMPORTED_MODULE_60__.MORE_ADDRESS_CHAIN_WITH_VARA, 
            _context13.t7 = null == wallet ? void 0 : wallet.walletCreateType, _context13.abrupt("return", {
              walletName: _context13.t0,
              accountName: _context13.t1,
              accountNetworkArr: _context13.t2,
              walletId: _context13.t3,
              newVersionWalletId: _context13.t4,
              newVersionAccountId: _context13.t5,
              moreAddressSort: _context13.t6,
              walletCreateType: _context13.t7
            });

           case 11:
           case "end":
            return _context13.stop();
          }
        }), _callee13);
      })));
      return function(_x23, _x24) {
        return _ref15.apply(this, arguments);
      };
    }(), initFeedBackData = function() {
      var _ref16 = _asyncToGenerator(regeneratorRuntime.mark((function _callee14() {
        var type, _feedBackData, value, _args14 = arguments;
        return regeneratorRuntime.wrap((function(_context14) {
          for (;;) switch (_context14.prev = _context14.next) {
           case 0:
            return type = _args14.length > 0 && void 0 !== _args14[0] ? _args14[0] : "", _context14.next = 3, 
            _method__WEBPACK_IMPORTED_MODULE_58__.getDefiItem("feedBackData");

           case 3:
            return _feedBackData = _context14.sent, value = {
              tabs1: {
                formHash: "",
                formNetwork: "",
                formAddress: "",
                formSymbol: "",
                formContract: "",
                formRemark: ""
              },
              tabs2: {
                formNetwork: "",
                formSymbol: "",
                formContract: "",
                formBrowserAddress: "",
                formRemark: ""
              },
              tabs3: {
                advice: "",
                email: ""
              }
            }, "tabs1" == type ? value = _objectSpread(_objectSpread({}, _feedBackData), {
              tabs1: {
                formHash: "",
                formNetwork: "",
                formAddress: "",
                formSymbol: "",
                formContract: "",
                formRemark: ""
              }
            }) : "tabs2" == type ? value = _objectSpread(_objectSpread({}, _feedBackData), {
              tabs2: {
                formNetwork: "",
                formSymbol: "",
                formContract: "",
                formBrowserAddress: "",
                formRemark: ""
              }
            }) : "tabs3" == type && (value = _objectSpread(_objectSpread({}, _feedBackData), {
              tabs3: {
                advice: "",
                email: ""
              }
            })), _context14.next = 8, _method__WEBPACK_IMPORTED_MODULE_58__.setDefiData({
              feedBackData: value
            });

           case 8:
           case "end":
            return _context14.stop();
          }
        }), _callee14);
      })));
      return function() {
        return _ref16.apply(this, arguments);
      };
    }(), dealLTCWalletData = function(data) {
      var dataCopy = JSON.parse(JSON.stringify(data));
      if (dataCopy && "{}" !== JSON.stringify(dataCopy)) {
        var walletArrCopy = null == dataCopy ? void 0 : dataCopy.walletArr;
        walletArrCopy && (null == walletArrCopy ? void 0 : walletArrCopy.length) > 0 && walletArrCopy.forEach((function(Item) {
          var walletAccountArrCopy = null == Item ? void 0 : Item.walletAccountArr;
          walletAccountArrCopy && (null == walletAccountArrCopy ? void 0 : walletAccountArrCopy.length) > 0 && walletAccountArrCopy.forEach((function(item) {
            var ltcData = null == item ? void 0 : item.LTC;
            ltcData && (null == ltcData ? void 0 : ltcData.length) > 0 && ltcData.forEach((function(i) {
              var _i$accountAddress;
              null != i && null !== (_i$accountAddress = i.accountAddress) && void 0 !== _i$accountAddress && _i$accountAddress.includes("ltc") && (i.accountFormat = "BIP84");
            }));
            var aptData = null == item ? void 0 : item.APT;
            aptData && (null == aptData ? void 0 : aptData.length) > 0 && aptData.forEach((function(i) {
              null != i && i.accountAddress && (i.accountAddress = (0, _method__WEBPACK_IMPORTED_MODULE_58__.getRealAptosAddress)(i.accountAddress));
            }));
          }));
        }));
      }
      return dataCopy;
    }, getAccountID = function() {
      var _ref17 = _asyncToGenerator(regeneratorRuntime.mark((function _callee15() {
        var _yield$getSelectedWal, account;
        return regeneratorRuntime.wrap((function(_context15) {
          for (;;) switch (_context15.prev = _context15.next) {
           case 0:
            return _context15.next = 2, getSelectedWallet();

           case 2:
            return _yield$getSelectedWal = _context15.sent, account = _yield$getSelectedWal.account, 
            _context15.abrupt("return", {
              accountIDVal: null == account ? void 0 : account.accountID
            });

           case 5:
           case "end":
            return _context15.stop();
          }
        }), _callee15);
      })));
      return function() {
        return _ref17.apply(this, arguments);
      };
    }(), getNetworkIsOpen = function() {
      var network = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", totalNetworkDic = arguments.length > 1 ? arguments[1] : void 0;
      return !!network && (0, _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_65__.Fb)(totalNetworkDic).allBigNetworkKeys.findIndex((function(networkName) {
        var _network$toString;
        return (null == networkName ? void 0 : networkName.toUpperCase()) === (null == network || null === (_network$toString = network.toString()) || void 0 === _network$toString ? void 0 : _network$toString.toUpperCase());
      })) > -1;
    }, sendTokenJumpPage = function(item, history) {
      var recordItem = {
        gas_fee: null == item ? void 0 : item.coinTransferFee,
        nonce: null == item ? void 0 : item.coinTransferNonce,
        gate_pic: null == item ? void 0 : item.coinImage,
        address: null == item ? void 0 : item.coinTransferFromAddress,
        trans_oppo_address: null == item ? void 0 : item.coinTransferToAddress,
        hash_id: null == item ? void 0 : item.coinTransferHash,
        chain_name: null == item ? void 0 : item.coinNetworkKey,
        token_short_name: null == item ? void 0 : item.coinSimpleName,
        trans_type: "BLOB-20" === (null == item ? void 0 : item.protocolLabel) ? "transfer" : "send",
        trans_time: parseInt((new Date).getTime() / 1e3),
        trading_status: "2",
        domain: null == item ? void 0 : item.domain,
        trans_balance: null == item ? void 0 : item.coinTransferAmount,
        gas_trans_info: null == item ? void 0 : item.gas_trans_info
      };
      _method__WEBPACK_IMPORTED_MODULE_58__.setDefiData({
        sendRecords: recordItem,
        historyPagesType: "home"
      }).then((function(res) {
        res && history && history.push("/sendresult");
      }));
    }, dealEditTokenData = function(item, tokenParams) {
      var _Object$keys3, tokenChain = [];
      item && "{}" !== JSON.stringify(item) && (null === (_Object$keys3 = Object.keys(item)) || void 0 === _Object$keys3 || _Object$keys3.forEach((function(i) {
        item[i] && item[i] instanceof Object && "{}" !== JSON.stringify(item[i]) && "coinAddress" in item[i] && tokenChain.push(i);
      })));
      var tokenNetData = [];
      return tokenChain && (null == tokenChain ? void 0 : tokenChain.length) > 0 && (null == tokenChain || tokenChain.forEach((function(Item) {
        if (tokenParams && "{}" !== JSON.stringify(tokenParams)) {
          var accountData = tokenParams.accountNetworkArr;
          null == accountData || accountData.forEach((function(i) {
            var _i$networkKey;
            (null == i || null === (_i$networkKey = i.networkKey) || void 0 === _i$networkKey ? void 0 : _i$networkKey.toUpperCase()) == (null == Item ? void 0 : Item.toUpperCase()) && tokenNetData.push(i);
          }));
        }
      }))), _objectSpread(_objectSpread({}, tokenParams), {
        accountNetworkArr: tokenNetData
      });
    }, filterNetworkAddress = function(network, data) {
      if (!network) return [];
      if (!(data instanceof Array)) return [];
      var resArr = [];
      return data.length > 0 && (resArr = data.filter((function(item) {
        var _item$chainSimpleName;
        return (null == item || null === (_item$chainSimpleName = item.chainSimpleName) || void 0 === _item$chainSimpleName ? void 0 : _item$chainSimpleName.toLowerCase()) == (null == network ? void 0 : network.toLowerCase());
      }))), resArr;
    };
  },
  847235: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      cu: () => querySignletokenInfo,
      gn: () => querytokenInfo,
      l3: () => getNetworkData,
      zu: () => getNetworkInfo
    });
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(505086), __webpack_require__(194009), 
    __webpack_require__(815852), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(269193), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(929979), 
    __webpack_require__(14602), __webpack_require__(207452);
    var _api_api__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(653360);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var getNetworkData = function(data) {
      var arr = [];
      if ("{}" !== JSON.stringify(data)) for (var i in data) data[i] instanceof Object && "coinAddress" in data[i] && arr.push(i);
      return arr;
    }, getNetworkInfo = function(data, totalNetworkDic) {
      var arr = [];
      if ("{}" !== JSON.stringify(data)) for (var i in data) {
        var _totalNetworkDic$i, _totalNetworkDic$i2;
        if (data[i] instanceof Object && "coinAddress" in data[i]) arr.push(_objectSpread(_objectSpread({}, data[i]), {}, {
          networkKey: i,
          networkImage: null === (_totalNetworkDic$i = totalNetworkDic[i]) || void 0 === _totalNetworkDic$i ? void 0 : _totalNetworkDic$i.networkImage,
          networkName: null === (_totalNetworkDic$i2 = totalNetworkDic[i]) || void 0 === _totalNetworkDic$i2 ? void 0 : _totalNetworkDic$i2.networkName
        }));
      }
      return arr;
    }, querytokenInfo = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
        var tokenInfo, _tokenInfo$data, data;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, _api_api__WEBPACK_IMPORTED_MODULE_20__.getTokenInfos(params);

           case 2:
            if (tokenInfo = _context.sent, _tokenInfo$data = tokenInfo.data, data = _tokenInfo$data.data, 
            200 != _tokenInfo$data.code) {
              _context.next = 8;
              break;
            }
            return _context.abrupt("return", data);

           case 8:
            return _context.abrupt("return", {});

           case 9:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), querySignletokenInfo = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
        var tokenInfo, _tokenInfo$data2, data;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, _api_api__WEBPACK_IMPORTED_MODULE_20__.getSingleTokenInfo(params);

           case 2:
            if (tokenInfo = _context2.sent, _tokenInfo$data2 = tokenInfo.data, data = _tokenInfo$data2.data, 
            200 != _tokenInfo$data2.code) {
              _context2.next = 8;
              break;
            }
            return _context2.abrupt("return", data);

           case 8:
            return _context2.abrupt("return", {});

           case 9:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x2) {
        return _ref2.apply(this, arguments);
      };
    }();
  },
  862881: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => __WEBPACK_DEFAULT_EXPORT__
    });
    __webpack_require__(207452), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(505086), __webpack_require__(127727), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(269193), __webpack_require__(579389), __webpack_require__(906048), 
    __webpack_require__(196088), __webpack_require__(752231), __webpack_require__(436148), 
    __webpack_require__(301772), __webpack_require__(953746), __webpack_require__(520861), 
    __webpack_require__(571905), __webpack_require__(285213), __webpack_require__(97182), 
    __webpack_require__(512279), __webpack_require__(639302), __webpack_require__(770147), 
    __webpack_require__(866217), __webpack_require__(697966), __webpack_require__(735186), 
    __webpack_require__(135944), __webpack_require__(644787), __webpack_require__(950632), 
    __webpack_require__(552278), __webpack_require__(614245), __webpack_require__(252492), 
    __webpack_require__(193266), __webpack_require__(537192), __webpack_require__(237220), 
    __webpack_require__(482432), __webpack_require__(632483), __webpack_require__(536696), 
    __webpack_require__(458083), __webpack_require__(700533), __webpack_require__(663555), 
    __webpack_require__(165987), __webpack_require__(259581), __webpack_require__(194009), 
    __webpack_require__(380115), __webpack_require__(754989), __webpack_require__(714913), 
    __webpack_require__(23604), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(815852), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(504895), 
    __webpack_require__(498741), __webpack_require__(215195);
    var _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(803599), _ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(114105), _rgbpp_sdk_ckb__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(441256), _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(792900), _ckb_lumos_codec__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(71313), _nervosnetwork_ckb_sdk_utils__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(260720), _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(660862), _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(745788), axios__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(272505), axios__WEBPACK_IMPORTED_MODULE_70___default = __webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_70__), _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(871219), _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(259159), _bg_utils_gt_base_type_transfer__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(228972), long__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(274442), _utils__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(473270), _constants__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(584426), _bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(358547), _ckb_lumos_base__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(741600), _btc_btc_assets_api__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(56128), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || _unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e2) {
              throw _e2;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e3) {
          didErr = !0, err = _e3;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    function _asyncIterator(iterable) {
      var method, async, sync, retry = 2;
      for ("undefined" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--; ) {
        if (async && null != (method = iterable[async])) return method.call(iterable);
        if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));
        async = "@@asyncIterator", sync = "@@iterator";
      }
      throw new TypeError("Object is not async iterable");
    }
    function AsyncFromSyncIterator(s) {
      function AsyncFromSyncIteratorContinuation(r) {
        if (Object(r) !== r) return Promise.reject(new TypeError(r + " is not an object."));
        var done = r.done;
        return Promise.resolve(r.value).then((function(value) {
          return {
            value,
            done
          };
        }));
      }
      return AsyncFromSyncIterator = function(s) {
        this.s = s, this.n = s.next;
      }, AsyncFromSyncIterator.prototype = {
        s: null,
        n: null,
        next: function() {
          return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));
        },
        return: function(value) {
          var ret = this.s.return;
          return void 0 === ret ? Promise.resolve({
            value,
            done: !0
          }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));
        },
        throw: function(value) {
          var thr = this.s.return;
          return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));
        }
      }, new AsyncFromSyncIterator(s);
    }
    _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.NativeTransfer, 
    _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.TransactionPlan;
    var SigningInput = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.SigningInput, TwScript = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.Script, OutPoint = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.OutPoint, TwCell = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.Cell, CellOutput = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.CellOutput, SigningOutput = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.SigningOutput, CkbRpc = function() {
      function CkbRpc(wasm, totalNetworkDic, rpcUrl) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CkbRpc), _defineProperty(this, "wasm", void 0), _defineProperty(this, "totalNetworkDic", void 0), 
        _defineProperty(this, "rpcUrl", void 0), _defineProperty(this, "indexer", void 0), 
        this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, this.rpcUrl = rpcUrl;
        var urls = this.getCkbUrls();
        this.indexer = new _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__.Indexer(urls.indexerUrl, urls.rpcUrl);
      }
      var Constructor, protoProps, staticProps, _getScriptByTypeHash, _init, _signCkb, _signCkbToken, _signCkbMainToken, _getSendSudtTranstransaction, _transferOtherTokenByHash, _generateNativeTransaction, _getRgbAssetsOnBtc, _getCkbSudtFee, _getCkbXudtFee, _postJson, _fetchGasFee, _getCkbGasFee, _getSenderCells, _getCkbBalance;
      return Constructor = CkbRpc, protoProps = [ {
        key: "getCkbBalance",
        value: (_getCkbBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
          var token, sender, coinAddress, coinIsMain, coinPrecision, script, args, codeHash, queryScript, cellCollector, balance, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, cell, _parseFloat, res, _queryScript, _cellCollector, _balance, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _cell;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              if (token = params.token, sender = params.sender, coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinAddress"), 
              coinIsMain = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.hT)(coinAddress, CkbRpc.networkKey), 
              coinPrecision = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinPrecision") || (0, 
              _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "token_decimal"), 
              !coinIsMain) {
                _context.next = 42;
                break;
              }
              script = (0, _nervosnetwork_ckb_sdk_utils__WEBPACK_IMPORTED_MODULE_67__.addressToScript)(sender), 
              args = script.args, codeHash = script.codeHash, queryScript = {
                codeHash,
                hashType: script.hashType,
                args
              }, cellCollector = new _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__.CellCollector(this.indexer, {
                lock: queryScript,
                argsLen: "any",
                type: "empty"
              }), balance = BigInt(0), _iteratorAbruptCompletion = !1, _didIteratorError = !1, 
              _context.prev = 13, _iterator = _asyncIterator(cellCollector.collect());

             case 15:
              return _context.next = 17, _iterator.next();

             case 17:
              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {
                _context.next = 23;
                break;
              }
              cell = _step.value, balance += BigInt(cell.cellOutput.capacity);

             case 20:
              _iteratorAbruptCompletion = !1, _context.next = 15;
              break;

             case 23:
              _context.next = 29;
              break;

             case 25:
              _context.prev = 25, _context.t0 = _context.catch(13), _didIteratorError = !0, _iteratorError = _context.t0;

             case 29:
              if (_context.prev = 29, _context.prev = 30, !_iteratorAbruptCompletion || null == _iterator.return) {
                _context.next = 34;
                break;
              }
              return _context.next = 34, _iterator.return();

             case 34:
              if (_context.prev = 34, !_didIteratorError) {
                _context.next = 37;
                break;
              }
              throw _iteratorError;

             case 37:
              return _context.finish(34);

             case 38:
              return _context.finish(29);

             case 39:
              return _context.abrupt("return", {
                balance: parseFloat((0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(balance, parseInt(coinPrecision))).toString()
              });

             case 42:
              return _context.next = 44, CkbRpc.getScriptByTypeHash(coinAddress);

             case 44:
              res = _context.sent, _queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, _cellCollector = new _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__.CellCollector(this.indexer, {
                lock: _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__.helpers.parseAddress(sender),
                type: _queryScript
              }, void 0), _balance = _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.BI.from(0), _iteratorAbruptCompletion2 = !1, 
              _didIteratorError2 = !1, _context.prev = 50, _iterator2 = _asyncIterator(_cellCollector.collect());

             case 52:
              return _context.next = 54, _iterator2.next();

             case 54:
              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context.sent).done)) {
                _context.next = 60;
                break;
              }
              _cell = _step2.value, _balance = _balance.add(_ckb_lumos_codec__WEBPACK_IMPORTED_MODULE_66__.number.Uint128LE.unpack(_cell.data));

             case 57:
              _iteratorAbruptCompletion2 = !1, _context.next = 52;
              break;

             case 60:
              _context.next = 66;
              break;

             case 62:
              _context.prev = 62, _context.t1 = _context.catch(50), _didIteratorError2 = !0, _iteratorError2 = _context.t1;

             case 66:
              if (_context.prev = 66, _context.prev = 67, !_iteratorAbruptCompletion2 || null == _iterator2.return) {
                _context.next = 71;
                break;
              }
              return _context.next = 71, _iterator2.return();

             case 71:
              if (_context.prev = 71, !_didIteratorError2) {
                _context.next = 74;
                break;
              }
              throw _iteratorError2;

             case 74:
              return _context.finish(71);

             case 75:
              return _context.finish(66);

             case 76:
              return _context.abrupt("return", {
                balance: null === (_parseFloat = parseFloat((0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(_balance, parseInt(coinPrecision)))) || void 0 === _parseFloat ? void 0 : _parseFloat.toString()
              });

             case 77:
             case "end":
              return _context.stop();
            }
          }), _callee, this, [ [ 13, 25, 29, 39 ], [ 30, , 34, 38 ], [ 50, 62, 66, 76 ], [ 67, , 71, 75 ] ]);
        }))), function(_x) {
          return _getCkbBalance.apply(this, arguments);
        })
      }, {
        key: "getCkbUrls",
        value: function() {
          return {
            rpcUrl: "".concat(this.rpcUrl, "/rpc"),
            indexerUrl: "".concat(this.rpcUrl, "/indexer")
          };
        }
      }, {
        key: "getSenderCells",
        value: (_getSenderCells = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(senderAddress, type) {
          var urls, collector, cells;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return urls = this.getCkbUrls(), collector = new _rgbpp_sdk_ckb__WEBPACK_IMPORTED_MODULE_64__.Collector({
                ckbNodeUrl: urls.rpcUrl,
                ckbIndexerUrl: urls.indexerUrl
              }), _context2.next = 4, collector.getCells({
                lock: _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__.helpers.parseAddress(senderAddress),
                type
              });

             case 4:
              return cells = _context2.sent, _context2.abrupt("return", cells);

             case 6:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2, _x3) {
          return _getSenderCells.apply(this, arguments);
        })
      }, {
        key: "generateCkbNativeTx",
        value: function(params) {
          var feeRate = params.feeRate, privateKey = params.privateKey, cells = params.cells, sender = params.sender, receiver = params.receiver, sendAmount = params.sendAmount, useMaxAmount = params.useMaxAmount, isMainnet = params.isMainnet, _this$wasm = this.wasm, AnySigner = _this$wasm.AnySigner, CoinType = _this$wasm.CoinType, feeRateKb = Math.ceil(feeRate / 1e3), selectedCells = cells, nativeTransfer = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.NativeTransfer.create({
            toAddress: receiver,
            changeAddress: sender,
            amount: long__WEBPACK_IMPORTED_MODULE_74__.A.fromNumber(sendAmount),
            useMaxAmount
          }), signingInput = SigningInput.create({
            byteFee: long__WEBPACK_IMPORTED_MODULE_74__.A.fromNumber(feeRateKb),
            privateKey: [ Uint8Array.from(Buffer.from(privateKey, "hex")) ],
            cell: selectedCells,
            plan: null,
            nativeTransfer,
            sudtTransfer: null,
            daoDeposit: null,
            daoWithdrawPhase1: null,
            daoWithdrawPhase2: null
          }), encoded = SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, CoinType.nervos), outPutTransactionJson = SigningOutput.decode(outputData).transactionJson, outPutTransactionJsonObject = outPutTransactionJson ? JSON.parse(outPutTransactionJson) : null;
          if (!isMainnet) {
            var nativeTransferCellDepsJSON = CkbRpc.getSecp256k1CellDepJSON(isMainnet);
            outPutTransactionJsonObject.cell_deps = nativeTransferCellDepsJSON;
          }
          if (outPutTransactionJsonObject) {
            var inputs = outPutTransactionJsonObject.inputs, outputs = outPutTransactionJsonObject.outputs, inputCapicatiy = selectedCells.reduce((function(acc, cell) {
              if (1 == inputs.some((function(input) {
                var _cell$outPoint$txHash, _cell$outPoint, _cell$outPoint$index$, _cell$outPoint2, _cell$outPoint2$index, hexHash = "0x" + (0, 
                _utils__WEBPACK_IMPORTED_MODULE_75__.My)(null !== (_cell$outPoint$txHash = null === (_cell$outPoint = cell.outPoint) || void 0 === _cell$outPoint ? void 0 : _cell$outPoint.txHash) && void 0 !== _cell$outPoint$txHash ? _cell$outPoint$txHash : new Uint8Array), hexIndex = "0x" + (null !== (_cell$outPoint$index$ = null === (_cell$outPoint2 = cell.outPoint) || void 0 === _cell$outPoint2 || null === (_cell$outPoint2$index = _cell$outPoint2.index) || void 0 === _cell$outPoint2$index ? void 0 : _cell$outPoint2$index.toString(16)) && void 0 !== _cell$outPoint$index$ ? _cell$outPoint$index$ : "-1");
                return input.previous_output.tx_hash == hexHash && input.previous_output.index == hexIndex;
              }))) {
                var _cell$capacity, cap = null !== (_cell$capacity = cell.capacity) && void 0 !== _cell$capacity ? _cell$capacity : long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0");
                return acc.add(cap);
              }
              return acc;
            }), long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0")), outputsCapacity = outputs.reduce((function(acc, cell) {
              var _Long$fromString, cap = null !== (_Long$fromString = long__WEBPACK_IMPORTED_MODULE_74__.A.fromString(cell.capacity, 16)) && void 0 !== _Long$fromString ? _Long$fromString : long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0");
              return acc.add(cap);
            }), long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0"));
            return {
              outPutTransactionJsonObject,
              estimatedTxFee: inputCapicatiy.sub(outputsCapacity)
            };
          }
          return {
            outPutTransactionJsonObject: null,
            estimatedTxFee: 0
          };
        }
      }, {
        key: "calculateNativeTxFee",
        value: function(params) {
          var cells = params.cells, nnrvosAddressModel = this.wasm.NervosAddress.createWithString("ckb1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqt4z78ng4yutl5u6xsv27ht6q08mhujf8sy3yulh"), codeHash = Buffer.from(nnrvosAddressModel.codeHash()), args = Buffer.from(nnrvosAddressModel.args()), fromLockScript = {
            codeHash,
            hashType: nnrvosAddressModel.hashType(),
            args
          }, fakeLockCells = cells.map((function(cell) {
            return TwCell.create({
              capacity: cell.capacity,
              data: cell.data,
              lock: fromLockScript,
              outPoint: cell.outPoint,
              type: cell.type
            });
          }));
          return this.generateCkbNativeTx(_objectSpread(_objectSpread({}, params), {}, {
            privateKey: "0000000000000000000000000000000000000000000000000000000000000001",
            cells: fakeLockCells
          })).estimatedTxFee;
        }
      }, {
        key: "getCkbGasFee",
        value: (_getCkbGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(params) {
          var token, sender, receiver, amount, isMax, coinAddress, _yield$Promise$all, _yield$Promise$all2, senderCells, hexFee, nativeliveCells, feeRate, fee, feeFinal, _yield$this$getCkbXud;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              if (token = params.token, sender = params.sender, receiver = params.receiver, amount = params.amount, 
              isMax = params.isMax, coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinAddress"), 
              !(0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.hT)(coinAddress, CkbRpc.networkKey)) {
                _context3.next = 19;
                break;
              }
              if (!(Number(amount) < 62)) {
                _context3.next = 6;
                break;
              }
              return _context3.abrupt("return", {
                gasFee: "0",
                feeRate: 0,
                errorMsg: "amount under limit"
              });

             case 6:
              return _context3.next = 8, Promise.all([ this.getSenderCells(sender), this.fetchGasFee() ]);

             case 8:
              return _yield$Promise$all = _context3.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              senderCells = _yield$Promise$all2[0], hexFee = _yield$Promise$all2[1], nativeliveCells = senderCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), feeRate = Number(BigInt(hexFee)), fee = this.calculateNativeTxFee({
                receiver,
                sender,
                sendAmount: (0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.parseUnit)(amount, 8).toNumber(),
                feeRate,
                cells: nativeliveCells,
                isMainnet: !0,
                useMaxAmount: isMax
              }), feeFinal = (0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(BigInt(fee.toString()), 8), 
              _context3.abrupt("return", {
                gasFee: feeFinal,
                feeRate,
                errorMsg: Number(amount) && !Number(feeFinal) ? "no gas" : ""
              });

             case 19:
              return _context3.next = 21, CkbRpc.getScriptByTypeHash(coinAddress);

             case 21:
              if ("xudt" !== _context3.sent.attributes.udt_type) {
                _context3.next = 38;
                break;
              }
              return _context3.next = 25, this.getCkbXudtFee(params);

             case 25:
              if (_context3.t1 = _yield$this$getCkbXud = _context3.sent, _context3.t0 = null === _context3.t1, 
              _context3.t0) {
                _context3.next = 29;
                break;
              }
              _context3.t0 = void 0 === _yield$this$getCkbXud;

             case 29:
              if (!_context3.t0) {
                _context3.next = 33;
                break;
              }
              _context3.t2 = void 0, _context3.next = 34;
              break;

             case 33:
              _context3.t2 = _yield$this$getCkbXud.toString();

             case 34:
              return _context3.t3 = _context3.t2, _context3.abrupt("return", {
                gasFee: _context3.t3,
                feeRate: 0
              });

             case 38:
              return _context3.next = 40, this.getCkbSudtFee(params);

             case 40:
              return _context3.t4 = _context3.sent, _context3.abrupt("return", {
                gasFee: _context3.t4,
                feeRate: 0
              });

             case 42:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x4) {
          return _getCkbGasFee.apply(this, arguments);
        })
      }, {
        key: "fetchGasFee",
        value: (_fetchGasFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee4() {
          var _res$result, id, payload, res;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return id = Math.round(1e4 * Math.random()), payload = {
                id,
                method: "get_fee_rate_statics",
                params: [],
                jsonrpc: "2.0"
              }, _context4.next = 4, this.postJson(payload);

             case 4:
              return res = _context4.sent, _context4.abrupt("return", null == res || null === (_res$result = res.result) || void 0 === _res$result ? void 0 : _res$result.median);

             case 6:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function() {
          return _fetchGasFee.apply(this, arguments);
        })
      }, {
        key: "postJson",
        value: (_postJson = _asyncToGenerator(regeneratorRuntime.mark((function _callee5() {
          var data, _args5 = arguments;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return data = _args5.length > 0 && void 0 !== _args5[0] ? _args5[0] : {}, _context5.abrupt("return", new Promise((function(resolve, reject) {
                axios__WEBPACK_IMPORTED_MODULE_70___default()({
                  method: "POST",
                  url: "https://mainnet.ckb.dev/rpc",
                  data: JSON.stringify(data),
                  timeout: 3e3,
                  headers: {
                    "Content-Type": "application/json"
                  }
                }).then((function(resp) {
                  resolve(resp.data);
                })).catch((function(err) {
                  reject(err);
                }));
              })));

             case 2:
             case "end":
              return _context5.stop();
            }
          }), _callee5);
        }))), function() {
          return _postJson.apply(this, arguments);
        })
      }, {
        key: "calculateUdtNeedCKbCapacity",
        value: function(params) {
          var _step5, nativeCells = params.nativeCells, udtCells = params.udtCells, sendAmount = params.sendAmount, isMainnet = params.isMainnet, sender = params.sender, typeHashArgs = params.typeHashArgs, NervosAddress = this.wasm.NervosAddress, inputXudtCells = [], inputSumXudtCapacity = BigInt(0), inputSumXudtAmount = BigInt(0), _iterator5 = _createForOfIteratorHelper(udtCells);
          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
              var cell = _step5.value;
              inputXudtCells.push(cell), inputSumXudtCapacity += BigInt(cell.capacity.toString(10)), 
              inputSumXudtAmount += (0, _utils__WEBPACK_IMPORTED_MODULE_75__.JV)((0, _utils__WEBPACK_IMPORTED_MODULE_75__.EY)(cell.data));
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
          var nativeCellsCapacity = nativeCells.reduce((function(acc, cell) {
            var _cell$capacity2, cap = null !== (_cell$capacity2 = cell.capacity) && void 0 !== _cell$capacity2 ? _cell$capacity2 : long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0");
            return acc.add(cap);
          }), long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0")), fromAddresss = NervosAddress.createWithString(sender), fromLockScript = TwScript.create({
            codeHash: fromAddresss.codeHash(),
            hashType: fromAddresss.hashType(),
            args: fromAddresss.args()
          }), xudtTypeScript = CkbRpc.getXudtCellScript(isMainnet, typeHashArgs), typeScript = TwScript.create({
            codeHash: xudtTypeScript.codeHash,
            hashType: xudtTypeScript.hashType,
            args: xudtTypeScript.args
          }), totalNeedOutputCapacity = CkbRpc.calculateUdtCellCapacity(fromLockScript, typeScript) * BigInt(1 + (inputSumXudtAmount > sendAmount ? 1 : 0)) + _constants__WEBPACK_IMPORTED_MODULE_76__.DN;
          return inputSumXudtCapacity < totalNeedOutputCapacity ? {
            totalNeedOutputCapacity: totalNeedOutputCapacity += _constants__WEBPACK_IMPORTED_MODULE_76__.zx,
            extraNeedCkbCellCapacity: BigInt(nativeCellsCapacity.toString(10)) + inputSumXudtCapacity - totalNeedOutputCapacity
          } : {
            totalNeedOutputCapacity,
            extraNeedCkbCellCapacity: 0
          };
        }
      }, {
        key: "createXudtTxPlan",
        value: function(params) {
          var sendAmount = params.sendAmount, feeRate = params.feeRate, xudtCells = params.xudtCells, sender = params.sender, receiver = params.receiver, isMainnet = params.isMainnet, typeHashArgs = params.typeHashArgs, nativeCells = params.nativeCells, NervosAddress = this.wasm.NervosAddress;
          if (0 == sendAmount) throw new Error("amount must be greater than 0");
          if (feeRate < 1e3) throw new Error("fee must be greater than 1000");
          if (0 === xudtCells.length) throw new Error("The address has no xudt cells");
          var selectedInputCells = [], _CkbRpc$collectUdtInp = CkbRpc.collectUdtInputs(xudtCells, sendAmount, !0), inputXudtCells = _CkbRpc$collectUdtInp.inputXudtCells, inputSumXudtCapacity = _CkbRpc$collectUdtInp.inputSumXudtCapacity, inputSumXudtAmount = _CkbRpc$collectUdtInp.inputSumXudtAmount;
          selectedInputCells.push.apply(selectedInputCells, _toConsumableArray(inputXudtCells));
          var fromAddresss = NervosAddress.createWithString(sender), fromLockScript = TwScript.create({
            codeHash: fromAddresss.codeHash(),
            hashType: fromAddresss.hashType(),
            args: fromAddresss.args()
          }), toAddresss = NervosAddress.createWithString(receiver), toLockScript = TwScript.create({
            codeHash: toAddresss.codeHash(),
            hashType: toAddresss.hashType(),
            args: toAddresss.args()
          }), xudtTypeScript = CkbRpc.getXudtCellScript(isMainnet, typeHashArgs), typeScript = TwScript.create({
            codeHash: xudtTypeScript.codeHash,
            hashType: xudtTypeScript.hashType,
            args: xudtTypeScript.args
          }), xudtCapacity = CkbRpc.calculateUdtCellCapacity(fromLockScript, typeScript), cellDeps = [ CkbRpc.getSecp256k1CellDep(isMainnet), CkbRpc.getXudtCellDep(isMainnet) ], outpusData = [], outputs = [];
          outputs.push(CellOutput.create({
            capacity: long__WEBPACK_IMPORTED_MODULE_74__.A.fromValue(xudtCapacity.toString(10)),
            lock: toLockScript,
            type: typeScript
          }));
          var transferAmountLeBytes = new Uint8Array(Buffer.from((0, _utils__WEBPACK_IMPORTED_MODULE_75__.tH)(BigInt(sendAmount)), "hex"));
          outpusData.push(transferAmountLeBytes);
          var xudtChange = inputSumXudtAmount - BigInt(sendAmount);
          if (xudtChange > 0) {
            var changeAmountLeBytes = new Uint8Array(Buffer.from((0, _utils__WEBPACK_IMPORTED_MODULE_75__.tH)(xudtChange)));
            outputs.push(CellOutput.create({
              capacity: long__WEBPACK_IMPORTED_MODULE_74__.A.fromValue(xudtCapacity.toString(10)),
              lock: fromLockScript,
              type: typeScript
            })), outpusData.push(changeAmountLeBytes);
          }
          var txFee = _constants__WEBPACK_IMPORTED_MODULE_76__.DN, sumTransXudtNeedCapacity = xudtCapacity * BigInt(outputs.length), actualInputCapacity = inputSumXudtCapacity;
          if (inputSumXudtCapacity <= sumTransXudtNeedCapacity) {
            if (!nativeCells || 0 === nativeCells.length) throw new Error("The address has no empty cells");
            var needCapacity = sumTransXudtNeedCapacity - inputSumXudtCapacity, _CkbRpc$collectInputs = CkbRpc.collectInputs(nativeCells, needCapacity, txFee, {}), selectNativeCell = _CkbRpc$collectInputs.selectNativeCell, sumInputsCapacity = _CkbRpc$collectInputs.sumInputsCapacity;
            selectedInputCells.push.apply(selectedInputCells, _toConsumableArray(selectNativeCell)), 
            actualInputCapacity += sumInputsCapacity;
          }
          var changeCapacity = actualInputCapacity - sumTransXudtNeedCapacity;
          if (changeCapacity - txFee < _constants__WEBPACK_IMPORTED_MODULE_76__.zx) {
            var _outputs$capacity;
            outputs[outputs.length - 1].capacity = null === (_outputs$capacity = outputs[outputs.length - 1].capacity) || void 0 === _outputs$capacity ? void 0 : _outputs$capacity.add(long__WEBPACK_IMPORTED_MODULE_74__.A.fromString(changeCapacity.toString(10)));
          } else {
            var changeCkbOutputCell = CellOutput.create({
              capacity: long__WEBPACK_IMPORTED_MODULE_74__.A.fromValue(changeCapacity.toString(10)),
              lock: fromLockScript,
              type: null
            });
            outputs.push(changeCkbOutputCell), outpusData.push(new Uint8Array(Buffer.from("0x", "hex")));
          }
          var estimatedTxFee = Number(txFee);
          return txFee === _constants__WEBPACK_IMPORTED_MODULE_76__.DN && (estimatedTxFee = CkbRpc.getTxFee(selectedInputCells, cellDeps, outputs, outpusData, feeRate), 
          changeCapacity -= BigInt(estimatedTxFee), outputs[outputs.length - 1].capacity = long__WEBPACK_IMPORTED_MODULE_74__.A.fromValue(changeCapacity.toString(10))), 
          {
            plan: _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.TransactionPlan.create({
              cellDeps,
              headerDeps: [],
              selectedCells: selectedInputCells,
              outputs,
              outputsData: outpusData,
              error: null
            }),
            estimatedTxFee
          };
        }
      }, {
        key: "getCkbXudtFee",
        value: (_getCkbXudtFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
          var token, amount, sender, receiver, coinAddress, res, decimal, queryScript, sendAmount, hexFee, feeRate, indexerNativeCells, typeArgs, xudtCells, nativeliveCells, xudtliveCells, cellCollector, allCellCollector, balance, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, cell, Allbalance, _iteratorAbruptCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _cell2, _this$calculateUdtNee, totalNeedOutputCapacity, noEmptyCellBalance, _this$createXudtTxPla, estimatedTxFee, extraNeedCkb;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return token = params.token, amount = params.amount, sender = params.sender, receiver = params.receiver, 
              coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinAddress"), 
              _context6.next = 4, CkbRpc.getScriptByTypeHash(coinAddress);

             case 4:
              return res = _context6.sent, decimal = res.attributes.decimal, (0, _ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.initializeConfig)(_ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.predefined.LINA), 
              queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, sendAmount = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_69__.dataOperation)(amount, Math.pow(10, parseInt(decimal))), 
              _context6.next = 11, this.fetchGasFee();

             case 11:
              return hexFee = _context6.sent, feeRate = Number(BigInt(hexFee)), _context6.next = 15, 
              this.getSenderCells(sender);

             case 15:
              return indexerNativeCells = _context6.sent, typeArgs = res.attributes.type_script.args, 
              _context6.next = 19, this.getSenderCells(sender, queryScript);

             case 19:
              xudtCells = _context6.sent, nativeliveCells = indexerNativeCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), xudtliveCells = xudtCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), cellCollector = new _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__.CellCollector(this.indexer, {
                lock: (0, _nervosnetwork_ckb_sdk_utils__WEBPACK_IMPORTED_MODULE_67__.addressToScript)(sender),
                argsLen: "any",
                type: "empty"
              }), allCellCollector = new _ckb_lumos_lumos__WEBPACK_IMPORTED_MODULE_62__.CellCollector(this.indexer, {
                lock: (0, _nervosnetwork_ckb_sdk_utils__WEBPACK_IMPORTED_MODULE_67__.addressToScript)(sender),
                argsLen: "any"
              }), balance = BigInt(0), _iteratorAbruptCompletion3 = !1, _didIteratorError3 = !1, 
              _context6.prev = 27, _iterator3 = _asyncIterator(cellCollector.collect());

             case 29:
              return _context6.next = 31, _iterator3.next();

             case 31:
              if (!(_iteratorAbruptCompletion3 = !(_step3 = _context6.sent).done)) {
                _context6.next = 37;
                break;
              }
              cell = _step3.value, balance += BigInt(cell.cellOutput.capacity);

             case 34:
              _iteratorAbruptCompletion3 = !1, _context6.next = 29;
              break;

             case 37:
              _context6.next = 43;
              break;

             case 39:
              _context6.prev = 39, _context6.t0 = _context6.catch(27), _didIteratorError3 = !0, 
              _iteratorError3 = _context6.t0;

             case 43:
              if (_context6.prev = 43, _context6.prev = 44, !_iteratorAbruptCompletion3 || null == _iterator3.return) {
                _context6.next = 48;
                break;
              }
              return _context6.next = 48, _iterator3.return();

             case 48:
              if (_context6.prev = 48, !_didIteratorError3) {
                _context6.next = 51;
                break;
              }
              throw _iteratorError3;

             case 51:
              return _context6.finish(48);

             case 52:
              return _context6.finish(43);

             case 53:
              Allbalance = BigInt(0), _iteratorAbruptCompletion4 = !1, _didIteratorError4 = !1, 
              _context6.prev = 56, _iterator4 = _asyncIterator(allCellCollector.collect());

             case 58:
              return _context6.next = 60, _iterator4.next();

             case 60:
              if (!(_iteratorAbruptCompletion4 = !(_step4 = _context6.sent).done)) {
                _context6.next = 66;
                break;
              }
              _cell2 = _step4.value, Allbalance += BigInt(_cell2.cellOutput.capacity);

             case 63:
              _iteratorAbruptCompletion4 = !1, _context6.next = 58;
              break;

             case 66:
              _context6.next = 72;
              break;

             case 68:
              _context6.prev = 68, _context6.t1 = _context6.catch(56), _didIteratorError4 = !0, 
              _iteratorError4 = _context6.t1;

             case 72:
              if (_context6.prev = 72, _context6.prev = 73, !_iteratorAbruptCompletion4 || null == _iterator4.return) {
                _context6.next = 77;
                break;
              }
              return _context6.next = 77, _iterator4.return();

             case 77:
              if (_context6.prev = 77, !_didIteratorError4) {
                _context6.next = 80;
                break;
              }
              throw _iteratorError4;

             case 80:
              return _context6.finish(77);

             case 81:
              return _context6.finish(72);

             case 82:
              if ((_this$calculateUdtNee = this.calculateUdtNeedCKbCapacity({
                nativeCells: nativeliveCells,
                udtCells: xudtliveCells,
                sendAmount: Number(sendAmount),
                isMainnet: !0,
                sender,
                receiver,
                typeHashArgs: coinAddress
              })).extraNeedCkbCellCapacity, totalNeedOutputCapacity = _this$calculateUdtNee.totalNeedOutputCapacity, 
              noEmptyCellBalance = Allbalance - balance, !(Number((0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(balance, 8)) > 0)) {
                _context6.next = 94;
                break;
              }
              if (_this$createXudtTxPla = this.createXudtTxPlan({
                sender,
                receiver,
                sendAmount: Number(sendAmount),
                typeHashArgs: typeArgs,
                feeRate,
                nativeCells: nativeliveCells,
                xudtCells: xudtliveCells,
                isMainnet: !0
              }), estimatedTxFee = _this$createXudtTxPla.estimatedTxFee, extraNeedCkb = totalNeedOutputCapacity - balance, 
              !(Number((0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(BigInt(extraNeedCkb.toString()), 8)) > 0)) {
                _context6.next = 91;
                break;
              }
              return _context6.abrupt("return", -Number((0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(BigInt(extraNeedCkb.toString()), 8)));

             case 91:
              return _context6.abrupt("return", (0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(BigInt(estimatedTxFee.toString()), 8));

             case 92:
              _context6.next = 95;
              break;

             case 94:
              return _context6.abrupt("return", -Number((0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(BigInt(noEmptyCellBalance.toString()), 8)));

             case 95:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this, [ [ 27, 39, 43, 53 ], [ 44, , 48, 52 ], [ 56, 68, 72, 82 ], [ 73, , 77, 81 ] ]);
        }))), function(_x5) {
          return _getCkbXudtFee.apply(this, arguments);
        })
      }, {
        key: "generateSUDTTransaction",
        value: function(params) {
          var sendAmount = params.sendAmount, feeRate = params.feeRate, cells = params.cells, typeHash = params.typeHash, sender = params.sender, receiver = params.receiver, privateKey = params.privateKey, _this$wasm2 = this.wasm, CoinType = _this$wasm2.CoinType, AnySigner = _this$wasm2.AnySigner;
          if (0 == sendAmount) throw new Error("amount must be greater than 0");
          if (feeRate < 1e3) throw new Error("fee must be greater than 1000");
          if (0 === cells.length) throw new Error("The address has no cells");
          var feeRateKb = Math.ceil(feeRate / 1e3), sudtAddress = Uint8Array.from(Buffer.from(typeHash, "hex")), sudtTransfer = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.SudtTransfer.create({
            toAddress: receiver,
            changeAddress: sender,
            sudtAddress,
            amount: sendAmount.toString(10),
            useMaxAmount: !0
          }), signingInput = SigningInput.create({
            byteFee: long__WEBPACK_IMPORTED_MODULE_74__.A.fromNumber(feeRateKb),
            privateKey: [ Uint8Array.from(Buffer.from(privateKey, "hex")) ],
            cell: cells,
            plan: null,
            nativeTransfer: null,
            sudtTransfer,
            daoDeposit: null,
            daoWithdrawPhase1: null,
            daoWithdrawPhase2: null
          }), encoded = SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, CoinType.nervos), outPutTransactionJson = SigningOutput.decode(outputData).transactionJson, outPutTransactionJsonObject = JSON.parse(outPutTransactionJson), inputs = outPutTransactionJsonObject.inputs, outputs = outPutTransactionJsonObject.outputs, inputCapicatiy = cells.reduce((function(acc, cell) {
            if (1 == inputs.some((function(input) {
              var _cell$outPoint$txHash2, _cell$outPoint3, _cell$outPoint$index$2, _cell$outPoint4, _cell$outPoint4$index, hexHash = "0x" + (0, 
              _utils__WEBPACK_IMPORTED_MODULE_75__.My)(null !== (_cell$outPoint$txHash2 = null === (_cell$outPoint3 = cell.outPoint) || void 0 === _cell$outPoint3 ? void 0 : _cell$outPoint3.txHash) && void 0 !== _cell$outPoint$txHash2 ? _cell$outPoint$txHash2 : new Uint8Array), hexIndex = "0x" + (null !== (_cell$outPoint$index$2 = null === (_cell$outPoint4 = cell.outPoint) || void 0 === _cell$outPoint4 || null === (_cell$outPoint4$index = _cell$outPoint4.index) || void 0 === _cell$outPoint4$index ? void 0 : _cell$outPoint4$index.toString(16)) && void 0 !== _cell$outPoint$index$2 ? _cell$outPoint$index$2 : "-1");
              return input.previous_output.tx_hash == hexHash && input.previous_output.index == hexIndex;
            }))) {
              var _cell$capacity3, cap = null !== (_cell$capacity3 = cell.capacity) && void 0 !== _cell$capacity3 ? _cell$capacity3 : long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0");
              return acc.add(cap);
            }
            return acc;
          }), long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0")), outputsCapacity = outputs.reduce((function(acc, cell) {
            var _Long$fromString2, cap = null !== (_Long$fromString2 = long__WEBPACK_IMPORTED_MODULE_74__.A.fromString(cell.capacity, 16)) && void 0 !== _Long$fromString2 ? _Long$fromString2 : long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0");
            return acc.add(cap);
          }), long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0"));
          return {
            outPutTransactionJsonObject,
            estimatedTxFee: inputCapicatiy.sub(outputsCapacity)
          };
        }
      }, {
        key: "calculateSudtTxFee",
        value: function(params) {
          var cells = params.cells, nnrvosAddressModel = this.wasm.NervosAddress.createWithString("ckb1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqt4z78ng4yutl5u6xsv27ht6q08mhujf8sy3yulh"), codeHash = Buffer.from(nnrvosAddressModel.codeHash()), args = Buffer.from(nnrvosAddressModel.args()), fromLockScript = {
            codeHash,
            hashType: nnrvosAddressModel.hashType(),
            args
          }, fakeLockCells = cells.map((function(cell) {
            return TwCell.create({
              capacity: cell.capacity,
              data: cell.data,
              lock: fromLockScript,
              outPoint: cell.outPoint,
              type: cell.type
            });
          }));
          return this.generateSUDTTransaction(_objectSpread(_objectSpread({}, params), {}, {
            cells: fakeLockCells,
            privateKey: "0000000000000000000000000000000000000000000000000000000000000001"
          })).estimatedTxFee;
        }
      }, {
        key: "getCkbSudtFee",
        value: (_getCkbSudtFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var token, amount, sender, receiver, coinAddress, res, decimal, queryScript, sendAmount, hexFee, feeRate, typeHash, indexerNativeCells, xudtCells, allCells, availableCells, estimatedTxFee;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return token = params.token, amount = params.amount, sender = params.sender, receiver = params.receiver, 
              coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinAddress"), 
              _context7.next = 4, CkbRpc.getScriptByTypeHash(coinAddress);

             case 4:
              return res = _context7.sent, decimal = res.attributes.decimal, (0, _ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.initializeConfig)(_ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.predefined.LINA), 
              queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, sendAmount = (0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_69__.dataOperation)(amount, Math.pow(10, parseInt(decimal))), 
              BigInt(amount).toString(), _context7.next = 12, this.fetchGasFee();

             case 12:
              return hexFee = _context7.sent, feeRate = Number(BigInt(hexFee)), typeHash = res.attributes.type_script.args, 
              _context7.next = 17, this.getSenderCells(sender, void 0);

             case 17:
              return indexerNativeCells = _context7.sent, _context7.next = 20, this.getSenderCells(sender, queryScript);

             case 20:
              return xudtCells = _context7.sent, allCells = indexerNativeCells.concat(xudtCells), 
              availableCells = allCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), estimatedTxFee = this.calculateSudtTxFee({
                sender,
                receiver,
                sendAmount: Number(sendAmount),
                typeHash,
                feeRate,
                cells: availableCells,
                isMainnet: !0,
                useMaxAmount: !1
              }), _context7.abrupt("return", (0, _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.formatUnit)(BigInt(estimatedTxFee.toString()), 8));

             case 25:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x6) {
          return _getCkbSudtFee.apply(this, arguments);
        })
      }, {
        key: "getCollector",
        value: function() {
          return this.rpcUrl ? new _rgbpp_sdk_ckb__WEBPACK_IMPORTED_MODULE_64__.Collector({
            ckbNodeUrl: this.rpcUrl,
            ckbIndexerUrl: this.rpcUrl
          }) : new _rgbpp_sdk_ckb__WEBPACK_IMPORTED_MODULE_64__.Collector({
            ckbNodeUrl: "https://api.bitstack.com/v1/0x3fUpL6bfQiybois33AustWo6LO3Lg5/fWVZIbSSVcIJBQCW7PN8rlIPnZUBKst8/CKB/mainnet",
            ckbIndexerUrl: "https://api.bitstack.com/v1/0x3fUpL6bfQiybois33AustWo6LO3Lg5/fWVZIbSSVcIJBQCW7PN8rlIPnZUBKst8/CKB/mainnet"
          });
        }
      }, {
        key: "getRgbAssetsOnBtc",
        value: (_getRgbAssetsOnBtc = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(params) {
          var token, sender, coinAddress, xudtres, decimals, xudtType, xudts, service, rgbppCells, existRgbppAmount;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return token = params.token, sender = params.sender, coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinAddress"), 
              _context8.next = 4, CkbRpc.getScriptByTypeHash(coinAddress);

             case 4:
              return xudtres = _context8.sent, decimals = xudtres.attributes.decimal, xudtType = {
                codeHash: xudtres.attributes.type_script.code_hash,
                hashType: xudtres.attributes.type_script.hash_type,
                args: xudtres.attributes.type_script.args
              }, xudts = _ckb_lumos_codec__WEBPACK_IMPORTED_MODULE_66__.bytes.hexify(_ckb_lumos_base__WEBPACK_IMPORTED_MODULE_78__.blockchain.Script.pack(xudtType)), 
              service = CkbRpc.getRGBPlusPlusApi(), _context8.next = 11, service.getRgbppAssetsByBtcAddress(sender, {
                type_script: xudts
              });

             case 11:
              return rgbppCells = _context8.sent, existRgbppAmount = rgbppCells.reduce((function(sum, cell) {
                return sum + (0, _utils__WEBPACK_IMPORTED_MODULE_75__.JV)(cell.data);
              }), BigInt(0)), _context8.abrupt("return", _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.BI.from(existRgbppAmount.toString()).div(Math.pow(10, decimals)));

             case 14:
             case "end":
              return _context8.stop();
            }
          }), _callee8);
        }))), function(_x7) {
          return _getRgbAssetsOnBtc.apply(this, arguments);
        })
      }, {
        key: "generateNativeTransaction",
        value: (_generateNativeTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(params) {
          var _this$wasm3, CoinType, AnySigner, feeRate, nativeliveCells, sender, receiver, sendAmount, privateKey, fee, selectedCells, nativeTransfer, signingInput, encoded, outputData, output, outPutTransactionJson, outPutTransactionJsonObject, inputs, outputs, inputCapicatiy, outputsCapacity, estimatedTxFee;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              if (_this$wasm3 = this.wasm, CoinType = _this$wasm3.CoinType, AnySigner = _this$wasm3.AnySigner, 
              feeRate = params.feeRate, nativeliveCells = params.nativeliveCells, sender = params.sender, 
              receiver = params.receiver, sendAmount = params.sendAmount, privateKey = params.privateKey, 
              fee = Math.ceil(feeRate / 1e3), selectedCells = nativeliveCells, nativeTransfer = _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.R.Nervos.Proto.NativeTransfer.create({
                toAddress: receiver,
                changeAddress: sender,
                amount: long__WEBPACK_IMPORTED_MODULE_74__.A.fromNumber(Number(sendAmount)),
                useMaxAmount: !1
              }), signingInput = SigningInput.create({
                byteFee: long__WEBPACK_IMPORTED_MODULE_74__.A.fromNumber(fee),
                privateKey: [ Uint8Array.from(Buffer.from(privateKey, "hex")) ],
                cell: selectedCells,
                plan: null,
                nativeTransfer,
                sudtTransfer: null,
                daoDeposit: null,
                daoWithdrawPhase1: null,
                daoWithdrawPhase2: null
              }), encoded = SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, CoinType.nervos), 
              output = SigningOutput.decode(outputData), outPutTransactionJson = output.transactionJson, 
              !(outPutTransactionJsonObject = outPutTransactionJson ? JSON.parse(outPutTransactionJson) : null)) {
                _context9.next = 20;
                break;
              }
              return inputs = outPutTransactionJsonObject.inputs, outputs = outPutTransactionJsonObject.outputs, 
              inputCapicatiy = selectedCells.reduce((function(acc, cell) {
                if (1 == inputs.some((function(input) {
                  var _cell$outPoint$txHash3, _cell$outPoint5, _cell$outPoint$index$3, _cell$outPoint6, _cell$outPoint6$index, hexHash = "0x" + (0, 
                  _utils__WEBPACK_IMPORTED_MODULE_75__.My)(null !== (_cell$outPoint$txHash3 = null === (_cell$outPoint5 = cell.outPoint) || void 0 === _cell$outPoint5 ? void 0 : _cell$outPoint5.txHash) && void 0 !== _cell$outPoint$txHash3 ? _cell$outPoint$txHash3 : new Uint8Array), hexIndex = "0x" + (null !== (_cell$outPoint$index$3 = null === (_cell$outPoint6 = cell.outPoint) || void 0 === _cell$outPoint6 || null === (_cell$outPoint6$index = _cell$outPoint6.index) || void 0 === _cell$outPoint6$index ? void 0 : _cell$outPoint6$index.toString(16)) && void 0 !== _cell$outPoint$index$3 ? _cell$outPoint$index$3 : "-1");
                  return input.previous_output.tx_hash == hexHash && input.previous_output.index == hexIndex;
                }))) {
                  var _cell$capacity4, cap = null !== (_cell$capacity4 = cell.capacity) && void 0 !== _cell$capacity4 ? _cell$capacity4 : long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0");
                  return acc.add(cap);
                }
                return acc;
              }), long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0")), outputsCapacity = outputs.reduce((function(acc, cell) {
                var _Long$fromString3, cap = null !== (_Long$fromString3 = long__WEBPACK_IMPORTED_MODULE_74__.A.fromString(cell.capacity, 16)) && void 0 !== _Long$fromString3 ? _Long$fromString3 : long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0");
                return acc.add(cap);
              }), long__WEBPACK_IMPORTED_MODULE_74__.A.fromString("0")), estimatedTxFee = inputCapicatiy.sub(outputsCapacity), 
              _context9.abrupt("return", {
                outPutTransactionJsonObject,
                estimatedTxFee
              });

             case 20:
              return _context9.abrupt("return", {
                outPutTransactionJsonObject: null,
                estimatedTxFee: 0
              });

             case 21:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x8) {
          return _generateNativeTransaction.apply(this, arguments);
        })
      }, {
        key: "generateXudtTransaction",
        value: function(plan, privateKey, fee) {
          var _this$wasm4 = this.wasm, CoinType = _this$wasm4.CoinType, AnySigner = _this$wasm4.AnySigner, feeRate = Math.ceil(fee / 1e3), privateKeyU8a = (0, 
          _utils__WEBPACK_IMPORTED_MODULE_75__.ld)(privateKey), signingInput = SigningInput.create({
            byteFee: long__WEBPACK_IMPORTED_MODULE_74__.A.fromNumber(feeRate),
            privateKey: [ privateKeyU8a ],
            cell: plan.selectedCells,
            plan,
            nativeTransfer: null,
            sudtTransfer: null,
            daoDeposit: null,
            daoWithdrawPhase1: null,
            daoWithdrawPhase2: null
          }), encoded = SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, CoinType.nervos), output = SigningOutput.decode(outputData), outPutTransactionJson = output.transactionJson;
          return {
            transactionId: output.transactionId,
            outPutTransactionJsonObject: JSON.parse(outPutTransactionJson)
          };
        }
      }, {
        key: "transferOtherTokenByHash",
        value: (_transferOtherTokenByHash = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(params) {
          var sender, receiver, script, amount, gasFeeInfo, privateKey, feeRate, decimal, queryScript, sendAmount, _yield$Promise$all3, _yield$Promise$all4, indexerNativeCells, xudtCells, typeArgs, nativeliveCells, xudtliveCells, _this$createXudtTxPla2, plan, _this$generateXudtTra, outPutTransactionJsonObject;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, script = params.script, 
              amount = params.amount, gasFeeInfo = params.gasFeeInfo, privateKey = params.privateKey, 
              feeRate = gasFeeInfo.feeRate, (0, _ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.initializeConfig)(_ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.predefined.LINA), 
              decimal = script.attributes.decimal, queryScript = {
                codeHash: script.attributes.type_script.code_hash,
                hashType: script.attributes.type_script.hash_type,
                args: script.attributes.type_script.args
              }, sendAmount = Number((0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_69__.dataOperation)(amount, Math.pow(10, parseInt(decimal)))), 
              _context10.next = 8, Promise.all([ this.getSenderCells(sender), this.getSenderCells(sender, queryScript) ]);

             case 8:
              return _yield$Promise$all3 = _context10.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2), 
              indexerNativeCells = _yield$Promise$all4[0], xudtCells = _yield$Promise$all4[1], 
              typeArgs = script.attributes.type_script.args, nativeliveCells = indexerNativeCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), xudtliveCells = xudtCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), _this$createXudtTxPla2 = this.createXudtTxPlan({
                sender,
                receiver,
                sendAmount,
                typeHashArgs: typeArgs,
                feeRate,
                nativeCells: nativeliveCells,
                xudtCells: xudtliveCells,
                isMainnet: !1
              }), plan = _this$createXudtTxPla2.plan, _this$generateXudtTra = this.generateXudtTransaction(plan, privateKey, feeRate), 
              outPutTransactionJsonObject = _this$generateXudtTra.outPutTransactionJsonObject, 
              _context10.abrupt("return", outPutTransactionJsonObject);

             case 18:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x9) {
          return _transferOtherTokenByHash.apply(this, arguments);
        })
      }, {
        key: "getSendSudtTranstransaction",
        value: (_getSendSudtTranstransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(params) {
          var sender, receiver, script, amount, gasFeeInfo, privateKey, feeRate, decimal, queryScript, sendAmount, typeHash, _yield$Promise$all5, _yield$Promise$all6, indexerNativeCells, xudtCells, allCells, availableCells, _this$generateSUDTTra2, outPutTransactionJsonObject;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, params.token, script = params.script, 
              amount = params.amount, gasFeeInfo = params.gasFeeInfo, privateKey = params.privateKey, 
              feeRate = gasFeeInfo.feeRate, (0, _ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.initializeConfig)(_ckb_lumos_config_manager__WEBPACK_IMPORTED_MODULE_63__.predefined.LINA), 
              decimal = script.attributes.decimal, queryScript = {
                codeHash: script.attributes.type_script.code_hash,
                hashType: script.attributes.type_script.hash_type,
                args: script.attributes.type_script.args
              }, sendAmount = Number((0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_69__.dataOperation)(amount, Math.pow(10, parseInt(decimal)))), 
              typeHash = script.attributes.type_script.args, _context11.next = 9, Promise.all([ this.getSenderCells(sender), this.getSenderCells(sender, queryScript) ]);

             case 9:
              return _yield$Promise$all5 = _context11.sent, _yield$Promise$all6 = _slicedToArray(_yield$Promise$all5, 2), 
              indexerNativeCells = _yield$Promise$all6[0], xudtCells = _yield$Promise$all6[1], 
              allCells = indexerNativeCells.concat(xudtCells), availableCells = allCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), _this$generateSUDTTra2 = this.generateSUDTTransaction({
                sender,
                receiver,
                sendAmount,
                typeHash,
                feeRate,
                cells: availableCells,
                isMainnet: !0,
                useMaxAmount: !1,
                privateKey
              }), outPutTransactionJsonObject = _this$generateSUDTTra2.outPutTransactionJsonObject, 
              _context11.abrupt("return", outPutTransactionJsonObject);

             case 17:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function(_x10) {
          return _getSendSudtTranstransaction.apply(this, arguments);
        })
      }, {
        key: "signCkbMainToken",
        value: (_signCkbMainToken = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(params) {
          var sender, receiver, amount, token, gasFeeInfo, privateKey, feeRate, coinPrecision, sendAmount, senderCells, nativeliveCells, _yield$this$generateN, outPutTransactionJsonObject;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return sender = params.sender, receiver = params.receiver, amount = params.amount, 
              token = params.token, gasFeeInfo = params.gasFeeInfo, privateKey = params.privateKey, 
              feeRate = gasFeeInfo.feeRate, coinPrecision = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinPrecision") || (0, 
              _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "token_decimal"), 
              sendAmount = _ckb_lumos_bi__WEBPACK_IMPORTED_MODULE_65__.BI.from((0, _bg_utils_gt_base_calculate__WEBPACK_IMPORTED_MODULE_69__.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision)))), 
              _context12.next = 6, this.getSenderCells(sender);

             case 6:
              return senderCells = _context12.sent, nativeliveCells = senderCells.map((function(item) {
                return CkbRpc.indexrCell2TWCell(item);
              })), _context12.next = 10, this.generateNativeTransaction({
                sender,
                receiver,
                feeRate,
                nativeliveCells,
                privateKey,
                sendAmount: null == sendAmount ? void 0 : sendAmount.toString()
              });

             case 10:
              return _yield$this$generateN = _context12.sent, outPutTransactionJsonObject = _yield$this$generateN.outPutTransactionJsonObject, 
              _context12.abrupt("return", outPutTransactionJsonObject);

             case 13:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x11) {
          return _signCkbMainToken.apply(this, arguments);
        })
      }, {
        key: "signCkbToken",
        value: (_signCkbToken = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(params) {
          var token, coinAddress, script;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return token = params.token, coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinAddress"), 
              _context13.next = 4, CkbRpc.getScriptByTypeHash(coinAddress);

             case 4:
              if ("xudt" !== (script = _context13.sent).attributes.udt_type) {
                _context13.next = 11;
                break;
              }
              return _context13.next = 8, this.transferOtherTokenByHash(_objectSpread(_objectSpread({}, params), {}, {
                script
              }));

             case 8:
             case 13:
              return _context13.abrupt("return", _context13.sent);

             case 11:
              return _context13.next = 13, this.getSendSudtTranstransaction(_objectSpread(_objectSpread({}, params), {}, {
                script
              }));

             case 14:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x12) {
          return _signCkbToken.apply(this, arguments);
        })
      }, {
        key: "signCkb",
        value: (_signCkb = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(params) {
          var token, coinAddress, coinIsMain, tx;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              if (token = params.token, coinAddress = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.N8)(token, CkbRpc.networkKey, "coinAddress"), 
              coinIsMain = (0, _bg_utils_gt_tokens__WEBPACK_IMPORTED_MODULE_71__.hT)(coinAddress, CkbRpc.networkKey), 
              tx = "", !coinIsMain) {
                _context14.next = 10;
                break;
              }
              return _context14.next = 7, this.signCkbMainToken(params);

             case 7:
              tx = _context14.sent, _context14.next = 13;
              break;

             case 10:
              return _context14.next = 12, this.signCkbToken(params);

             case 12:
              tx = _context14.sent;

             case 13:
              return _context14.abrupt("return", {
                tx,
                rpcUrl: this.rpcUrl
              });

             case 14:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x13) {
          return _signCkb.apply(this, arguments);
        })
      } ], staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
          var _yield$Promise$all7, _yield$Promise$all8, wasm, rpcUrl;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return _context15.next = 2, Promise.all([ (0, _bg_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_72__.t)(), (0, 
              _bg_utils_gt_networks__WEBPACK_IMPORTED_MODULE_68__.gL)(totalNetworkDic, CkbRpc.networkKey, rpcUrls[CkbRpc.networkKey], lastGetSuccessRpcTime) ]);

             case 2:
              return _yield$Promise$all7 = _context15.sent, _yield$Promise$all8 = _slicedToArray(_yield$Promise$all7, 2), 
              wasm = _yield$Promise$all8[0], rpcUrl = _yield$Promise$all8[1], _context15.abrupt("return", new CkbRpc(wasm, totalNetworkDic, rpcUrl));

             case 7:
             case "end":
              return _context15.stop();
            }
          }), _callee15);
        }))), function(_x14, _x15, _x16) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "hexStringToUint8Array",
        value: function(hexString) {
          for (var hex = hexString.startsWith("0x") ? hexString.slice(2) : hexString, result = new Uint8Array(hex.length / 2), i = 0; i < hex.length; i += 2) result[i / 2] = parseInt(hex.substr(i, 2), 16);
          return result;
        }
      }, {
        key: "indexrCell2TWCell",
        value: function(item) {
          var type = null;
          null != item.output.type && (type = TwScript.create({
            codeHash: this.hexStringToUint8Array(item.output.type.codeHash),
            hashType: item.output.type.hashType,
            args: this.hexStringToUint8Array(item.output.type.args)
          }));
          var outPointindex = parseInt(item.outPoint.index, 16), outPoint = OutPoint.create({
            index: outPointindex,
            txHash: this.hexStringToUint8Array(item.outPoint.txHash)
          }), lock = TwScript.create({
            codeHash: this.hexStringToUint8Array(item.output.lock.codeHash),
            hashType: item.output.lock.hashType,
            args: this.hexStringToUint8Array(item.output.lock.args)
          }), capacity = long__WEBPACK_IMPORTED_MODULE_74__.A.fromString(item.output.capacity, !1, 16), data = this.hexStringToUint8Array(item.outputData);
          return TwCell.create({
            capacity,
            data,
            lock,
            outPoint,
            type
          });
        }
      }, {
        key: "getSecp256k1CellDepJSON",
        value: function(isMainnet) {
          var txHash = (isMainnet ? _constants__WEBPACK_IMPORTED_MODULE_76__.PF.Secp256k1LockDep : _constants__WEBPACK_IMPORTED_MODULE_76__._2.Secp256k1LockDep).outPoint.txHash;
          return {
            out_point: {
              tx_hash: "0x".concat(txHash.toString()),
              index: "0x0"
            },
            dep_type: "dep_group"
          };
        }
      }, {
        key: "getScriptByTypeHash",
        value: (_getScriptByTypeHash = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(coinAddress) {
          var options, response, data;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return options = {
                method: "GET",
                headers: {
                  Accept: "application/vnd.api+json",
                  "Content-Type": "application/vnd.api+json"
                }
              }, _context16.next = 3, fetch("https://mainnet-api.explorer.nervos.org/api/v1/udts/".concat(coinAddress), options);

             case 3:
              if ((response = _context16.sent).ok) {
                _context16.next = 6;
                break;
              }
              throw new Error("HTTP error! status: ".concat(response.status));

             case 6:
              return _context16.next = 8, response.json();

             case 8:
              return data = _context16.sent, _context16.abrupt("return", data.data);

             case 10:
             case "end":
              return _context16.stop();
            }
          }), _callee16);
        }))), function(_x17) {
          return _getScriptByTypeHash.apply(this, arguments);
        })
      }, {
        key: "calculateUdtCellCapacity",
        value: function(lock, udtType) {
          var _lock$args, _udtType$args, lockArgsSize = (0, _bg_utils_gt_base_type_transfer__WEBPACK_IMPORTED_MODULE_73__.LL)((0, 
          _utils__WEBPACK_IMPORTED_MODULE_75__.EY)(null !== (_lock$args = lock.args) && void 0 !== _lock$args ? _lock$args : null)).length / 2, typeArgsSize = udtType ? (0, 
          _bg_utils_gt_base_type_transfer__WEBPACK_IMPORTED_MODULE_73__.LL)((0, _utils__WEBPACK_IMPORTED_MODULE_75__.EY)(null !== (_udtType$args = udtType.args) && void 0 !== _udtType$args ? _udtType$args : null)).length / 2 : _constants__WEBPACK_IMPORTED_MODULE_76__.eP;
          return BigInt(33 + lockArgsSize + 33 + typeArgsSize + 8 + 16 + 1) * _constants__WEBPACK_IMPORTED_MODULE_76__.i9;
        }
      }, {
        key: "collectUdtInputs",
        value: function(xudtCells, needAmount, isNeedSummaryUnuseUdtCell) {
          var _step6, inputXudtCells = [], inputSumXudtCapacity = BigInt(0), inputSumXudtAmount = BigInt(0), _iterator6 = _createForOfIteratorHelper(xudtCells);
          try {
            for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
              var cell = _step6.value;
              if (inputXudtCells.push(cell), inputSumXudtCapacity += BigInt(cell.capacity.toString(10)), 
              (inputSumXudtAmount += (0, _utils__WEBPACK_IMPORTED_MODULE_75__.JV)((0, _utils__WEBPACK_IMPORTED_MODULE_75__.EY)(cell.data))) >= needAmount && 0 == isNeedSummaryUnuseUdtCell) break;
            }
          } catch (err) {
            _iterator6.e(err);
          } finally {
            _iterator6.f();
          }
          if (inputSumXudtAmount < BigInt(needAmount)) throw new Error("Insufficient UDT balance");
          return {
            inputXudtCells,
            inputSumXudtCapacity,
            inputSumXudtAmount
          };
        }
      }, {
        key: "getSecp256k1CellDep",
        value: function(isMainnet) {
          return isMainnet ? _constants__WEBPACK_IMPORTED_MODULE_76__.PF.Secp256k1LockDep : _constants__WEBPACK_IMPORTED_MODULE_76__._2.Secp256k1LockDep;
        }
      }, {
        key: "getXudtCellDep",
        value: function(isMainnet) {
          return isMainnet ? _constants__WEBPACK_IMPORTED_MODULE_76__.PF.XUDTTypeDep : _constants__WEBPACK_IMPORTED_MODULE_76__._2.XUDTTypeDep;
        }
      }, {
        key: "collectInputs",
        value: function(nativeCells, needCapacity, fee, config) {
          var _config$minCapacity, _step7, changeCapacity = null !== (_config$minCapacity = null == config ? void 0 : config.minCapacity) && void 0 !== _config$minCapacity ? _config$minCapacity : _constants__WEBPACK_IMPORTED_MODULE_76__.zx, requireCapacity = needCapacity + changeCapacity + fee, selectNativeCell = [], sumInputsCapacity = BigInt(0), _iterator7 = _createForOfIteratorHelper(nativeCells);
          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
              var cell = _step7.value;
              if (selectNativeCell.push(cell), (sumInputsCapacity += BigInt(cell.capacity.toString(10))) >= requireCapacity) break;
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
          var dustCapacity = BigInt(0);
          if (sumInputsCapacity < requireCapacity) {
            var missingCapity = requireCapacity - sumInputsCapacity - fee;
            if (!(missingCapity <= changeCapacity)) {
              var _config$errMsg, message = null !== (_config$errMsg = null == config ? void 0 : config.errMsg) && void 0 !== _config$errMsg ? _config$errMsg : "Insufficient free CKB balance,need ".concat(missingCapity / BigInt(1e8), " ckb");
              throw new Error(message);
            }
            dustCapacity = missingCapity;
          }
          return {
            selectNativeCell,
            sumInputsCapacity,
            dustCapacity
          };
        }
      }, {
        key: "encode64LE",
        value: function(val) {
          var data = new Uint8Array(8);
          return data[0] = 255 & val, data[1] = val >> 8 & 255, data[2] = val >> 16 & 255, 
          data[3] = val >> 24 & 255, data[4] = val >> 32 & 255, data[5] = val >> 40 & 255, 
          data[6] = val >> 48 & 255, data[7] = val >> 56 & 255, data;
        }
      }, {
        key: "concatUint8Arrays",
        value: function(arrays) {
          var totalLength = arrays.reduce((function(sum, arr) {
            return sum + arr.length;
          }), 0), result = new Uint8Array(totalLength);
          return arrays.reduce((function(offset, arr) {
            return result.set(arr, offset), offset + arr.length;
          }), 0), result;
        }
      }, {
        key: "encodeDataArray",
        value: function(dataArray) {
          var dataLength = dataArray.reduce((function(total, element) {
            return total + element.length;
          }), 0), headerLength = 4 + 4 * dataArray.length, fullLength = headerLength + dataLength, data = new Uint8Array(fullLength);
          CkbRpc.encode32LEData(fullLength, data, 0);
          for (var offset = headerLength, i = 0; i < dataArray.length; i++) CkbRpc.encode32LEData(offset, data, 4 + 4 * i), 
          offset += dataArray[i].length;
          offset = headerLength;
          var _step8, _iterator8 = _createForOfIteratorHelper(dataArray);
          try {
            for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
              var element = _step8.value;
              data.set(element, offset), offset += element.length;
            }
          } catch (err) {
            _iterator8.e(err);
          } finally {
            _iterator8.f();
          }
          return data;
        }
      }, {
        key: "getScriptEncodeData",
        value: function(script) {
          var hashTypeData = new Uint8Array(1);
          if (void 0 === script.codeHash || 1 == CkbRpc.isAllZero(script.codeHash)) return new Uint8Array(0);
          "data" === script.hashType ? hashTypeData[0] = 0 : "type" === script.hashType ? hashTypeData[0] = 1 : "data" === script.hashType && (hashTypeData[0] = 2);
          var argsSizeData = CkbRpc.encode32LE(script.args.length), argsData = CkbRpc.concatUint8Arrays([ argsSizeData, script.args ]);
          return CkbRpc.encodeDataArray([ script.codeHash, hashTypeData, argsData ]);
        }
      }, {
        key: "isAllZero",
        value: function(array) {
          return !(null == array || !array.every((function(_byte) {
            return 0 === _byte;
          })));
        }
      }, {
        key: "encode32LEData",
        value: function(value, data, offset) {
          data[offset] = 255 & value, data[offset + 1] = value >> 8 & 255, data[offset + 2] = value >> 16 & 255, 
          data[offset + 3] = value >> 24 & 255;
        }
      }, {
        key: "encode32LE",
        value: function(val) {
          var data = new Uint8Array(4);
          return data[0] = 255 & val, data[1] = val >> 8 & 255, data[2] = val >> 16 & 255, 
          data[3] = val >> 24 & 255, data;
        }
      }, {
        key: "getCellOutputEncodeData",
        value: function(output) {
          var capacityData = CkbRpc.encode64LE(output.capacity.toNumber()), lockData = new Uint8Array(0), lock = output.lock, type = output.type;
          null != output.lock && (lockData = CkbRpc.getScriptEncodeData(lock));
          var typeData = new Uint8Array(0);
          return null != output.type && (typeData = CkbRpc.getScriptEncodeData(type)), CkbRpc.encodeDataArray([ capacityData, lockData, typeData ]);
        }
      }, {
        key: "getTxSize",
        value: function(inputs, deps, outputs, outputsData) {
          var size = _constants__WEBPACK_IMPORTED_MODULE_76__.mD;
          return size += deps.length * _constants__WEBPACK_IMPORTED_MODULE_76__.X2, size = outputs.reduce((function(acc, data) {
            return acc + CkbRpc.getCellOutputEncodeData(data).length + _constants__WEBPACK_IMPORTED_MODULE_76__.zb;
          }), size), size = outputsData.reduce((function(acc, data) {
            return acc + _constants__WEBPACK_IMPORTED_MODULE_76__.zb + data.length + _constants__WEBPACK_IMPORTED_MODULE_76__.zb;
          }), size), size = inputs.reduce((function(acc, data) {
            var size_inputType = data.inputType.length, size_outputType = data.outputType.length, wintinessSize = 16 + _constants__WEBPACK_IMPORTED_MODULE_76__.Gz + (_constants__WEBPACK_IMPORTED_MODULE_76__.Gz > 0 ? 4 : 0) + size_inputType + (size_inputType > 0 ? 4 : 0) + size_outputType + (size_outputType > 0 ? 4 : 0);
            return acc + (_constants__WEBPACK_IMPORTED_MODULE_76__.A_ + _constants__WEBPACK_IMPORTED_MODULE_76__.zb + wintinessSize + _constants__WEBPACK_IMPORTED_MODULE_76__.zb);
          }), size);
        }
      }, {
        key: "calculateTransactionFee",
        value: function(transactionSize, feerate) {
          return Math.ceil(transactionSize * feerate / 1e3);
        }
      }, {
        key: "getTxFee",
        value: function(inputs, deps, outputs, outputsData, feerate) {
          var size = CkbRpc.getTxSize(inputs, deps, outputs, outputsData);
          return CkbRpc.calculateTransactionFee(size, feerate);
        }
      }, {
        key: "getRGBPlusPlusApi",
        value: function() {
          var apiUrl = "".concat(_bg_utils_gt_api__WEBPACK_IMPORTED_MODULE_77__.O5, "/ckb");
          return new _btc_btc_assets_api__WEBPACK_IMPORTED_MODULE_79__.A({
            url: apiUrl,
            token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJteS1hcHAiLCJhdWQiOiJidGMtYXNzZXRzLWFwaS50ZXN0bmV0Lm1pYmFvLnBybyIsImp0aSI6Ijg4ODUxY2NjLWFiN2EtNDFkMC04MDdhLTE3Mjk0OTMzZTkwNyIsImlhdCI6MTcxNjc3NzEzMX0.O5cHR7Q3ZDRaeKGydlbLT_bOIADwbk5KFRUnZmQSX64",
            origin: "https://gate.io"
          });
        }
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CkbRpc;
    }();
    _defineProperty(CkbRpc, "networkKey", "CKB"), _defineProperty(CkbRpc, "getXudtCellScript", (function(isMainnet, typeArgs) {
      var r = isMainnet ? _constants__WEBPACK_IMPORTED_MODULE_76__.PF.XUDTTypeScript : _constants__WEBPACK_IMPORTED_MODULE_76__._2.XUDTTypeScript;
      return typeArgs && (r.args = new Uint8Array((0, _utils__WEBPACK_IMPORTED_MODULE_75__.ld)(typeArgs))), 
      r;
    }));
    const __WEBPACK_DEFAULT_EXPORT__ = CkbRpc;
  },
  865270: () => {},
  866242: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Q: () => checkTransactionStatusByHash,
      A: () => createCkbWallet
    });
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(207452);
    var lumos = __webpack_require__(803599), customFetcher = (__webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(127727), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(579389), __webpack_require__(906048), __webpack_require__(718636), 
    __webpack_require__(380115), __webpack_require__(194009), __webpack_require__(259581), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(815852), 
    __webpack_require__(182727)), lib = __webpack_require__(114105), ckb_lib = __webpack_require__(441256), bi_lib = __webpack_require__(792900), ckb_sdk_utils_lib = __webpack_require__(260720), httpService = __webpack_require__(313189), chainRequestMethod = __webpack_require__(700313), utils = (__webpack_require__(752231), 
    __webpack_require__(700533), __webpack_require__(436148), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(153270), __webpack_require__(658565), __webpack_require__(663555), 
    __webpack_require__(165987), __webpack_require__(924983)), CKB_UNIT = BigInt(1e8), MAX_FEE = BigInt(2e7), MIN_CAPACITY = BigInt(62) * BigInt(1e8), transactionBaseSizeFromWalletCoreDefine = 72, cellDepSize = 37, uint32Size = 4, gSingleInputAndWitnessBaseSize = 44, gBlankWitnessBytes = 65, calculateUdtCellCapacity = function(lock, udtType) {
      var _lock$args, _udtType$args, lockArgsSize = (0, utils.nF)((0, utils.EY)(null !== (_lock$args = lock.args) && void 0 !== _lock$args ? _lock$args : null)).length / 2, typeArgsSize = udtType ? (0, 
      utils.nF)((0, utils.EY)(null !== (_udtType$args = udtType.args) && void 0 !== _udtType$args ? _udtType$args : null)).length / 2 : 32;
      return BigInt(33 + lockArgsSize + 33 + typeArgsSize + 8 + 16 + 1) * CKB_UNIT;
    }, TestnetInfo = {
      Secp256k1LockDep: {
        outPoint: {
          txHash: (0, utils.ld)("0xf8de3bb47d055cdf460d93a2a6e1b05f7432f9777c8c474abf4eec1d4aee5d37"),
          index: 0
        },
        depType: "dep_group"
      },
      XUDTTypeScript: {
        codeHash: (0, utils.ld)("0x25c29dc317811a6f6f3985a7a9ebc4838bd388d19d0feeecf0bcd60f6c0975bb"),
        hashType: "type",
        args: (0, utils.ld)("")
      },
      XUDTTypeDep: {
        outPoint: {
          txHash: (0, utils.ld)("0xbf6fb538763efec2a70a6a3dcb7242787087e1030c4e7d86585bc63a9d337f5f"),
          index: 0
        },
        depType: "code"
      },
      JOYIDTypeDep: {
        outPoint: {
          txHash: (0, utils.ld)("0xf05188e5f3a6767fc4687faf45ba5f1a6e25d3ada6129dae8722cb282f262493"),
          index: 0
        },
        depType: "dep_group"
      },
      UniqueTypeScript: {
        codeHash: (0, utils.ld)("0x8e341bcfec6393dcd41e635733ff2dca00a6af546949f70c57a706c0f344df8b"),
        hashType: "type",
        args: (0, utils.ld)("")
      },
      UniqueTypeDep: {
        outPoint: {
          txHash: (0, utils.ld)("0xff91b063c78ed06f10a1ed436122bd7d671f9a72ef5f5fa28d05252c17cf4cef"),
          index: 0
        },
        depType: "code"
      }
    }, MainnetInfo = {
      Secp256k1LockDep: {
        outPoint: {
          txHash: (0, utils.ld)("71a7ba8fc96349fea0ed3a5c47992e3b4084b031a42264a018e0072e8172e46c"),
          index: 0
        },
        depType: "dep_group"
      },
      XUDTTypeScript: {
        codeHash: (0, utils.ld)("0x50bd8d6680b8b9cf98b73f3c08faf8b2a21914311954118ad6609be6e78a1b95"),
        hashType: "data1",
        args: (0, utils.ld)("")
      },
      XUDTTypeDep: {
        outPoint: {
          txHash: (0, utils.ld)("0xc07844ce21b38e4b071dd0e1ee3b0e27afd8d7532491327f39b786343f558ab7"),
          index: 0
        },
        depType: "code"
      },
      JOYIDTypeDep: {
        outPoint: {
          txHash: (0, utils.ld)("0xf05188e5f3a6767fc4687faf45ba5f1a6e25d3ada6129dae8722cb282f262493"),
          index: 0
        },
        depType: "dep_group"
      },
      UniqueTypeScript: {
        codeHash: (0, utils.ld)("0x2c8c11c985da60b0a330c61a85507416d6382c130ba67f0c47ab071e00aec628"),
        hashType: "data1",
        args: (0, utils.ld)("")
      },
      UniqueTypeDep: {
        outPoint: {
          txHash: (0, utils.ld)("0x67524c01c0cb5492e499c7c7e406f2f9d823e162d6b0cf432eacde0c9808c2ad"),
          index: 0
        },
        depType: "code"
      }
    }, getSecp256k1CellDep = ((0, utils.ld)("0x0000000000000000000000000000000000000000000000000000000000000000"), 
    (0, utils.ld)("0x"), function(isMainnet) {
      return isMainnet ? MainnetInfo.Secp256k1LockDep : TestnetInfo.Secp256k1LockDep;
    }), constant_getXudtCellScript = function(isMainnet, typeArgs) {
      var r = isMainnet ? MainnetInfo.XUDTTypeScript : TestnetInfo.XUDTTypeScript;
      return typeArgs && (r.args = (0, utils.ld)(typeArgs)), r;
    }, getXudtCellDep = function(isMainnet) {
      return isMainnet ? MainnetInfo.XUDTTypeDep : TestnetInfo.XUDTTypeDep;
    }, constant_getSecp256k1CellDepJSON = function(isMainnet) {
      var _ref = isMainnet ? MainnetInfo.Secp256k1LockDep : TestnetInfo.Secp256k1LockDep, outPoint = _ref.outPoint, txHash = (_ref.depType, 
      outPoint.txHash);
      outPoint.index;
      return {
        out_point: {
          tx_hash: "0x".concat(txHash.toString("hex")),
          index: "0x0"
        },
        dep_type: "dep_group"
      };
    }, node_modules_long = __webpack_require__(274442);
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(23604), 
    __webpack_require__(714913), __webpack_require__(498741), __webpack_require__(215195), 
    __webpack_require__(504895);
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = function(o, minLen) {
          if (!o) return;
          if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          "Object" === n && o.constructor && (n = o.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(o);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e) {
              throw _e;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e2) {
          didErr = !0, err = _e2;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function encode32LE(val) {
      var data = new Uint8Array(4);
      return data[0] = 255 & val, data[1] = val >> 8 & 255, data[2] = val >> 16 & 255, 
      data[3] = val >> 24 & 255, data;
    }
    function encode32LEData(value, data, offset) {
      data[offset] = 255 & value, data[offset + 1] = value >> 8 & 255, data[offset + 2] = value >> 16 & 255, 
      data[offset + 3] = value >> 24 & 255;
    }
    function encodeDataArray(dataArray) {
      var dataLength = dataArray.reduce((function(total, element) {
        return total + element.length;
      }), 0), headerLength = 4 + 4 * dataArray.length, fullLength = headerLength + dataLength, data = new Uint8Array(fullLength);
      encode32LEData(fullLength, data, 0);
      for (var offset = headerLength, i = 0; i < dataArray.length; i++) encode32LEData(offset, data, 4 + 4 * i), 
      offset += dataArray[i].length;
      offset = headerLength;
      var _step, _iterator = _createForOfIteratorHelper(dataArray);
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var element = _step.value;
          data.set(element, offset), offset += element.length;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return data;
    }
    function getCellOutputEncodeData(output) {
      var val, data, capacityData = (val = output.capacity.toNumber(), (data = new Uint8Array(8))[0] = 255 & val, 
      data[1] = val >> 8 & 255, data[2] = val >> 16 & 255, data[3] = val >> 24 & 255, 
      data[4] = val >> 32 & 255, data[5] = val >> 40 & 255, data[6] = val >> 48 & 255, 
      data[7] = val >> 56 & 255, data), lockData = new Uint8Array(0), lock = output.lock, type = output.type;
      null != output.lock && (lockData = getScriptEncodeData(lock));
      var typeData = new Uint8Array(0);
      return null != output.type && (typeData = getScriptEncodeData(type)), encodeDataArray([ capacityData, lockData, typeData ]);
    }
    function getScriptEncodeData(script) {
      var array, _array$every, hashTypeData = new Uint8Array(1);
      if (void 0 === script.codeHash || 1 == (array = script.codeHash, null !== (_array$every = null == array ? void 0 : array.every((function(_byte) {
        return 0 === _byte;
      }))) && void 0 !== _array$every && _array$every)) return new Uint8Array(0);
      "data" === script.hashType ? hashTypeData[0] = 0 : "type" === script.hashType ? hashTypeData[0] = 1 : "data" === script.hashType && (hashTypeData[0] = 2);
      var argsData = concatUint8Arrays([ encode32LE(script.args.length), script.args ]);
      return encodeDataArray([ script.codeHash, hashTypeData, argsData ]);
    }
    function concatUint8Arrays(arrays) {
      var totalLength = arrays.reduce((function(sum, arr) {
        return sum + arr.length;
      }), 0), result = new Uint8Array(totalLength);
      return arrays.reduce((function(offset, arr) {
        return result.set(arr, offset), offset + arr.length;
      }), 0), result;
    }
    var wallet_core = __webpack_require__(259159);
    __webpack_require__(348287).Buffer;
    wallet_core.R.Nervos.Proto.NativeTransfer, wallet_core.R.Nervos.Proto.TransactionPlan, 
    wallet_core.R.Nervos.Proto.SigningInput;
    var Script = wallet_core.R.Nervos.Proto.Script, OutPoint = wallet_core.R.Nervos.Proto.OutPoint, Cell = wallet_core.R.Nervos.Proto.Cell;
    wallet_core.R.Nervos.Proto.CellOutput, wallet_core.R.Nervos.Proto.SigningOutput;
    var indexrCell2TWCell = function(item) {
      var type = null;
      null != item.output.type && (type = Script.create({
        codeHash: (0, utils.ld)(item.output.type.codeHash),
        hashType: item.output.type.hashType,
        args: (0, utils.ld)(item.output.type.args)
      }));
      var outPointindex = parseInt(item.outPoint.index, 16), outPoint = OutPoint.create({
        index: outPointindex,
        txHash: (0, utils.ld)(item.outPoint.txHash)
      }), lock = Script.create({
        codeHash: (0, utils.ld)(item.output.lock.codeHash),
        hashType: item.output.lock.hashType,
        args: (0, utils.ld)(item.output.lock.args)
      }), capacity = node_modules_long.A.fromString(item.output.capacity, !1, 16), data = (0, 
      utils.ld)(item.outputData);
      return Cell.create({
        capacity,
        data,
        lock,
        outPoint,
        type
      });
    };
    function getTxFee(inputs, deps, outputs, outputsData, feerate) {
      var size = function(inputs, deps, outputs, outputsData) {
        var size = transactionBaseSizeFromWalletCoreDefine;
        return size += deps.length * cellDepSize, size = outputs.reduce((function(acc, data) {
          return acc + getCellOutputEncodeData(data).length + uint32Size;
        }), size), size = outputsData.reduce((function(acc, data) {
          return acc + uint32Size + data.length + uint32Size;
        }), size), inputs.reduce((function(acc, data) {
          var size_inputType = data.inputType.length, size_outputType = data.outputType.length;
          return acc + (gSingleInputAndWitnessBaseSize + uint32Size + (16 + gBlankWitnessBytes + (gBlankWitnessBytes > 0 ? 4 : 0) + size_inputType + (size_inputType > 0 ? 4 : 0) + size_outputType + (size_outputType > 0 ? 4 : 0)) + uint32Size);
        }), size);
      }(inputs, deps, outputs, outputsData), calfee = function(transactionSize, feerate) {
        return Math.ceil(transactionSize * feerate / 1e3);
      }(size, feerate);
      return calfee;
    }
    var codec_lib = __webpack_require__(71313), send = __webpack_require__(688280), sendSudt_Buffer = __webpack_require__(348287).Buffer;
    function sendSudt_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function sendSudt_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            sendSudt_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            sendSudt_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    wallet_core.R.Nervos.Proto.NativeTransfer, wallet_core.R.Nervos.Proto.TransactionPlan;
    var sendSudt_SigningInput = wallet_core.R.Nervos.Proto.SigningInput, sendSudt_Cell = (wallet_core.R.Nervos.Proto.Script, 
    wallet_core.R.Nervos.Proto.OutPoint, wallet_core.R.Nervos.Proto.Cell), sendSudt_SigningOutput = (wallet_core.R.Nervos.Proto.CellOutput, 
    wallet_core.R.Nervos.Proto.SigningOutput);
    function generateSUDTTransaction(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9) {
      return _generateSUDTTransaction.apply(this, arguments);
    }
    function _generateSUDTTransaction() {
      return (_generateSUDTTransaction = sendSudt_asyncToGenerator(regeneratorRuntime.mark((function _callee(to, from, transferAmount, typeHash, fee, privateKey, cells, isMainnet, useMaxAmount) {
        var feeRate, _yield$getWasm, CoinType, AnySigner, sudtAddress, sudtTransfer, signingInput, encoded, outputData, output, outPutTransactionJson, outPutTransactionJsonObject, inputs, outputs, inputCapicatiy, outputsCapacity, estimatedTxFee;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            if (0 != transferAmount) {
              _context.next = 2;
              break;
            }
            throw new Error("amount must be greater than 0");

           case 2:
            if (!(fee < 1e3)) {
              _context.next = 4;
              break;
            }
            throw new Error("fee must be greater than 1000");

           case 4:
            if (0 !== cells.length) {
              _context.next = 6;
              break;
            }
            throw new Error("The address has no cells");

           case 6:
            return feeRate = Math.ceil(fee / 1e3), _context.next = 9, (0, wallet_core.t)();

           case 9:
            return _yield$getWasm = _context.sent, CoinType = _yield$getWasm.CoinType, AnySigner = _yield$getWasm.AnySigner, 
            sudtAddress = Uint8Array.from(sendSudt_Buffer.from(typeHash, "hex")), sudtTransfer = wallet_core.R.Nervos.Proto.SudtTransfer.create({
              toAddress: to,
              changeAddress: from,
              sudtAddress,
              amount: transferAmount.toString(10),
              useMaxAmount: !0
            }), signingInput = sendSudt_SigningInput.create({
              byteFee: node_modules_long.A.fromNumber(feeRate),
              privateKey: [ Uint8Array.from(sendSudt_Buffer.from(privateKey, "hex")) ],
              cell: cells,
              plan: null,
              nativeTransfer: null,
              sudtTransfer,
              daoDeposit: null,
              daoWithdrawPhase1: null,
              daoWithdrawPhase2: null
            }), encoded = sendSudt_SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, CoinType.nervos), 
            output = sendSudt_SigningOutput.decode(outputData), outPutTransactionJson = output.transactionJson, 
            outPutTransactionJsonObject = JSON.parse(outPutTransactionJson), inputs = outPutTransactionJsonObject.inputs, 
            outputs = outPutTransactionJsonObject.outputs, inputCapicatiy = cells.reduce((function(acc, cell) {
              if (1 == inputs.some((function(input) {
                var _cell$outPoint$txHash, _cell$outPoint, _cell$outPoint$index$, _cell$outPoint2, _cell$outPoint2$index, hexHash = "0x" + (0, 
                utils.My)(null !== (_cell$outPoint$txHash = null === (_cell$outPoint = cell.outPoint) || void 0 === _cell$outPoint ? void 0 : _cell$outPoint.txHash) && void 0 !== _cell$outPoint$txHash ? _cell$outPoint$txHash : new Uint8Array), hexIndex = "0x" + (null !== (_cell$outPoint$index$ = null === (_cell$outPoint2 = cell.outPoint) || void 0 === _cell$outPoint2 || null === (_cell$outPoint2$index = _cell$outPoint2.index) || void 0 === _cell$outPoint2$index ? void 0 : _cell$outPoint2$index.toString(16)) && void 0 !== _cell$outPoint$index$ ? _cell$outPoint$index$ : "-1");
                return input.previous_output.tx_hash == hexHash && input.previous_output.index == hexIndex;
              }))) {
                var _cell$capacity, cap = null !== (_cell$capacity = cell.capacity) && void 0 !== _cell$capacity ? _cell$capacity : node_modules_long.A.fromString("0");
                return acc.add(cap);
              }
              return acc;
            }), node_modules_long.A.fromString("0")), outputsCapacity = outputs.reduce((function(acc, cell) {
              var _Long$fromString, cap = null !== (_Long$fromString = node_modules_long.A.fromString(cell.capacity, 16)) && void 0 !== _Long$fromString ? _Long$fromString : node_modules_long.A.fromString("0");
              return acc.add(cap);
            }), node_modules_long.A.fromString("0")), estimatedTxFee = inputCapicatiy.sub(outputsCapacity), 
            _context.abrupt("return", {
              outPutTransactionJsonObject,
              estimatedTxFee
            });

           case 26:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })))).apply(this, arguments);
    }
    function calculateSudtTxFee(_x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17) {
      return _calculateSudtTxFee.apply(this, arguments);
    }
    function _calculateSudtTxFee() {
      return (_calculateSudtTxFee = sendSudt_asyncToGenerator(regeneratorRuntime.mark((function _callee2(to, from, transferAmount, typeHash, fee, cells, isMainnet, useMaxAmount) {
        var _yield$getWasm2, NervosAddress, nnrvosAddressModel, codeHash, args, fromLockScript, fakeLockCells, _yield$generateSUDTTr, estimatedTxFee;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, (0, wallet_core.t)();

           case 2:
            return _yield$getWasm2 = _context2.sent, NervosAddress = _yield$getWasm2.NervosAddress, 
            "0000000000000000000000000000000000000000000000000000000000000001", nnrvosAddressModel = NervosAddress.createWithString("ckb1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqt4z78ng4yutl5u6xsv27ht6q08mhujf8sy3yulh"), 
            codeHash = sendSudt_Buffer.from(nnrvosAddressModel.codeHash()), args = sendSudt_Buffer.from(nnrvosAddressModel.args()), 
            fromLockScript = {
              codeHash,
              hashType: nnrvosAddressModel.hashType(),
              args
            }, fakeLockCells = cells.map((function(cell) {
              return sendSudt_Cell.create({
                capacity: cell.capacity,
                data: cell.data,
                lock: fromLockScript,
                outPoint: cell.outPoint,
                type: cell.type
              });
            })), _context2.next = 12, generateSUDTTransaction(to, from, transferAmount, typeHash, fee, "0000000000000000000000000000000000000000000000000000000000000001", fakeLockCells, isMainnet, useMaxAmount);

           case 12:
            return _yield$generateSUDTTr = _context2.sent, estimatedTxFee = _yield$generateSUDTTr.estimatedTxFee, 
            _context2.abrupt("return", estimatedTxFee);

           case 15:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })))).apply(this, arguments);
    }
    function _toConsumableArray(arr) {
      return function(arr) {
        if (Array.isArray(arr)) return sendXudt_arrayLikeToArray(arr);
      }(arr) || function(iter) {
        if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
      }(arr) || sendXudt_unsupportedIterableToArray(arr) || function() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function sendXudt_createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = sendXudt_unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e) {
              throw _e;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e2) {
          didErr = !0, err = _e2;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function sendXudt_unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return sendXudt_arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? sendXudt_arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function sendXudt_arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function sendXudt_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function sendXudt_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            sendXudt_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            sendXudt_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    wallet_core.R.Nervos.Proto.NativeTransfer, wallet_core.R.Nervos.Proto.TransactionPlan;
    var sendXudt_SigningInput = wallet_core.R.Nervos.Proto.SigningInput, sendXudt_Script = wallet_core.R.Nervos.Proto.Script, sendXudt_CellOutput = (wallet_core.R.Nervos.Proto.OutPoint, 
    wallet_core.R.Nervos.Proto.Cell, wallet_core.R.Nervos.Proto.CellOutput), sendXudt_SigningOutput = wallet_core.R.Nervos.Proto.SigningOutput;
    function generateXudtTransaction(_x, _x2, _x3) {
      return _generateXudtTransaction.apply(this, arguments);
    }
    function _generateXudtTransaction() {
      return (_generateXudtTransaction = sendXudt_asyncToGenerator(regeneratorRuntime.mark((function _callee(plan, privateKey, fee) {
        var _yield$getWasm, CoinType, AnySigner, feeRate, privateKeyU8a, signingInput, encoded, outputData, output, outPutTransactionJson, transactionId, outPutTransactionJsonObject;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, (0, wallet_core.t)();

           case 2:
            return _yield$getWasm = _context.sent, CoinType = _yield$getWasm.CoinType, AnySigner = _yield$getWasm.AnySigner, 
            feeRate = Math.ceil(fee / 1e3), privateKeyU8a = (0, utils.ld)(privateKey), signingInput = sendXudt_SigningInput.create({
              byteFee: node_modules_long.A.fromNumber(feeRate),
              privateKey: [ privateKeyU8a ],
              cell: plan.selectedCells,
              plan,
              nativeTransfer: null,
              sudtTransfer: null,
              daoDeposit: null,
              daoWithdrawPhase1: null,
              daoWithdrawPhase2: null
            }), encoded = sendXudt_SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, CoinType.nervos), 
            output = sendXudt_SigningOutput.decode(outputData), outPutTransactionJson = output.transactionJson, 
            transactionId = output.transactionId, outPutTransactionJsonObject = JSON.parse(outPutTransactionJson), 
            _context.abrupt("return", {
              transactionId,
              outPutTransactionJsonObject
            });

           case 15:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })))).apply(this, arguments);
    }
    function createXudtTxPlan(_x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11) {
      return _createXudtTxPlan.apply(this, arguments);
    }
    function _createXudtTxPlan() {
      return (_createXudtTxPlan = sendXudt_asyncToGenerator(regeneratorRuntime.mark((function _callee2(to, from, transferAmount, typeHashArgs, fee, nativeCells, xudtCells, isMainnet) {
        var _yield$getWasm2, NervosAddress, selectedInputCells, _collectUdtInputs, inputXudtCells, inputSumXudtCapacity, inputSumXudtAmount, fromAddresss, fromLockScript, toAddresss, toLockScript, xudtTypeScript, typeScript, xudtCapacity, secp256Dep, cellDeps, outpusData, outputs, transferAmountLeBytes, xudtChange, changeAmountLeBytes, txFee, requiredOutputXudtCellCapacity, sumTransXudtNeedCapacity, actualInputCapacity, _collectInputs, selectNativeCell, sumInputsCapacity, changeCapacity, _outputs$capacity, changeCkbOutputCell, estimatedTxFee, plan;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, (0, wallet_core.t)();

           case 2:
            if (_yield$getWasm2 = _context2.sent, NervosAddress = _yield$getWasm2.NervosAddress, 
            0 != transferAmount) {
              _context2.next = 6;
              break;
            }
            throw new Error("amount must be greater than 0");

           case 6:
            if (!(fee < 1e3)) {
              _context2.next = 8;
              break;
            }
            throw new Error("fee must be greater than 1000");

           case 8:
            if (0 !== xudtCells.length) {
              _context2.next = 10;
              break;
            }
            throw new Error("The address has no xudt cells");

           case 10:
            if (selectedInputCells = [], _collectUdtInputs = collectUdtInputs(xudtCells, transferAmount, !0), 
            inputXudtCells = _collectUdtInputs.inputXudtCells, inputSumXudtCapacity = _collectUdtInputs.inputSumXudtCapacity, 
            inputSumXudtAmount = _collectUdtInputs.inputSumXudtAmount, selectedInputCells.push.apply(selectedInputCells, _toConsumableArray(inputXudtCells)), 
            fromAddresss = NervosAddress.createWithString(from), fromLockScript = sendXudt_Script.create({
              codeHash: fromAddresss.codeHash(),
              hashType: fromAddresss.hashType(),
              args: fromAddresss.args()
            }), toAddresss = NervosAddress.createWithString(to), toLockScript = sendXudt_Script.create({
              codeHash: toAddresss.codeHash(),
              hashType: toAddresss.hashType(),
              args: toAddresss.args()
            }), xudtTypeScript = constant_getXudtCellScript(isMainnet, typeHashArgs), typeScript = sendXudt_Script.create({
              codeHash: xudtTypeScript.codeHash,
              hashType: xudtTypeScript.hashType,
              args: xudtTypeScript.args
            }), xudtCapacity = calculateUdtCellCapacity(fromLockScript, typeScript), secp256Dep = getSecp256k1CellDep(isMainnet), 
            cellDeps = [ secp256Dep, getXudtCellDep(isMainnet) ], outpusData = [], (outputs = []).push(sendXudt_CellOutput.create({
              capacity: node_modules_long.A.fromValue(xudtCapacity.toString(10)),
              lock: toLockScript,
              type: typeScript
            })), transferAmountLeBytes = (0, utils.i0)((0, utils.tH)(BigInt(transferAmount))), 
            outpusData.push(transferAmountLeBytes), xudtChange = inputSumXudtAmount - BigInt(transferAmount), 
            xudtChange > 0 && (changeAmountLeBytes = (0, utils.i0)((0, utils.tH)(xudtChange)), 
            outputs.push(sendXudt_CellOutput.create({
              capacity: node_modules_long.A.fromValue(xudtCapacity.toString(10)),
              lock: fromLockScript,
              type: typeScript
            })), outpusData.push(changeAmountLeBytes)), txFee = MAX_FEE, requiredOutputXudtCellCapacity = xudtCapacity * BigInt(outputs.length), 
            actualInputCapacity = inputSumXudtCapacity, !(inputSumXudtCapacity <= (sumTransXudtNeedCapacity = requiredOutputXudtCellCapacity))) {
              _context2.next = 41;
              break;
            }
            if (nativeCells && 0 !== nativeCells.length) {
              _context2.next = 37;
              break;
            }
            throw new Error("The address has no empty cells");

           case 37:
            _collectInputs = collectInputs(nativeCells, sumTransXudtNeedCapacity - inputSumXudtCapacity, txFee, {}), 
            selectNativeCell = _collectInputs.selectNativeCell, sumInputsCapacity = _collectInputs.sumInputsCapacity, 
            selectedInputCells.push.apply(selectedInputCells, _toConsumableArray(selectNativeCell)), 
            actualInputCapacity += sumInputsCapacity;

           case 41:
            return (changeCapacity = actualInputCapacity - sumTransXudtNeedCapacity) - txFee < MIN_CAPACITY ? outputs[outputs.length - 1].capacity = null === (_outputs$capacity = outputs[outputs.length - 1].capacity) || void 0 === _outputs$capacity ? void 0 : _outputs$capacity.add(node_modules_long.A.fromString(changeCapacity.toString(10))) : (changeCkbOutputCell = sendXudt_CellOutput.create({
              capacity: node_modules_long.A.fromValue(changeCapacity.toString(10)),
              lock: fromLockScript,
              type: null
            }), outputs.push(changeCkbOutputCell), outpusData.push((0, utils.i0)("0x"))), estimatedTxFee = Number(txFee), 
            txFee === MAX_FEE && (estimatedTxFee = getTxFee(selectedInputCells, cellDeps, outputs, outpusData, fee), 
            changeCapacity -= BigInt(estimatedTxFee), outputs[outputs.length - 1].capacity = node_modules_long.A.fromValue(changeCapacity.toString(10))), 
            plan = wallet_core.R.Nervos.Proto.TransactionPlan.create({
              cellDeps,
              headerDeps: [],
              selectedCells: selectedInputCells,
              outputs,
              outputsData: outpusData,
              error: null
            }), _context2.abrupt("return", {
              plan,
              estimatedTxFee
            });

           case 49:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })))).apply(this, arguments);
    }
    function collectInputs(nativeCells, needCapacity, fee, config) {
      var _config$minCapacity, _step, changeCapacity = null !== (_config$minCapacity = null == config ? void 0 : config.minCapacity) && void 0 !== _config$minCapacity ? _config$minCapacity : MIN_CAPACITY, requireCapacity = needCapacity + changeCapacity + fee, selectNativeCell = [], sumInputsCapacity = BigInt(0), _iterator = sendXudt_createForOfIteratorHelper(nativeCells);
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var cell = _step.value;
          if (selectNativeCell.push(cell), (sumInputsCapacity += BigInt(cell.capacity.toString(10))) >= requireCapacity) break;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      var dustCapacity = BigInt(0);
      if (sumInputsCapacity < requireCapacity) {
        var missingCapity = requireCapacity - sumInputsCapacity - fee;
        if (!(missingCapity <= changeCapacity)) {
          var _config$errMsg, message = null !== (_config$errMsg = null == config ? void 0 : config.errMsg) && void 0 !== _config$errMsg ? _config$errMsg : "Insufficient free CKB balance,need ".concat(missingCapity / BigInt(1e8), " ckb");
          throw new Error(message);
        }
        dustCapacity = missingCapity;
      }
      return {
        selectNativeCell,
        sumInputsCapacity,
        dustCapacity
      };
    }
    function calculateUdtNeedCKbCapacity(_x12, _x13, _x14, _x15, _x16, _x17, _x18) {
      return _calculateUdtNeedCKbCapacity.apply(this, arguments);
    }
    function _calculateUdtNeedCKbCapacity() {
      return (_calculateUdtNeedCKbCapacity = sendXudt_asyncToGenerator(regeneratorRuntime.mark((function _callee3(nativeCells, udtCells, transferAmount, isMainnet, from, to, typeHashArgs) {
        var _yield$getWasm3, NervosAddress, inputXudtCells, inputSumXudtCapacity, inputSumXudtAmount, _iterator3, _step3, cell, cellCapacity, nativeCellsCapacity, fromAddresss, fromLockScript, xudtTypeScript, typeScript, xudtCapacity, requiredOutputXudtCellCapacity, totalNeedOutputCapacity, extraNeedCkbCellCapacity;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, (0, wallet_core.t)();

           case 2:
            _yield$getWasm3 = _context3.sent, NervosAddress = _yield$getWasm3.NervosAddress, 
            inputXudtCells = [], inputSumXudtCapacity = BigInt(0), inputSumXudtAmount = BigInt(0), 
            _iterator3 = sendXudt_createForOfIteratorHelper(udtCells);
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) cell = _step3.value, inputXudtCells.push(cell), 
              cellCapacity = BigInt(cell.capacity.toString(10)), inputSumXudtCapacity += cellCapacity, 
              inputSumXudtAmount += (0, utils.JV)((0, utils.EY)(cell.data));
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            if (nativeCellsCapacity = nativeCells.reduce((function(acc, cell) {
              var _cell$capacity, cap = null !== (_cell$capacity = cell.capacity) && void 0 !== _cell$capacity ? _cell$capacity : node_modules_long.A.fromString("0");
              return acc.add(cap);
            }), node_modules_long.A.fromString("0")), fromAddresss = NervosAddress.createWithString(from), 
            fromLockScript = sendXudt_Script.create({
              codeHash: fromAddresss.codeHash(),
              hashType: fromAddresss.hashType(),
              args: fromAddresss.args()
            }), NervosAddress.createWithString(to), xudtTypeScript = constant_getXudtCellScript(isMainnet, typeHashArgs), 
            typeScript = sendXudt_Script.create({
              codeHash: xudtTypeScript.codeHash,
              hashType: xudtTypeScript.hashType,
              args: xudtTypeScript.args
            }), xudtCapacity = calculateUdtCellCapacity(fromLockScript, typeScript), requiredOutputXudtCellCapacity = xudtCapacity * BigInt(1 + (inputSumXudtAmount > transferAmount ? 1 : 0)), 
            !(inputSumXudtCapacity < (totalNeedOutputCapacity = requiredOutputXudtCellCapacity + MAX_FEE))) {
              _context3.next = 28;
              break;
            }
            return totalNeedOutputCapacity += MIN_CAPACITY, extraNeedCkbCellCapacity = BigInt(nativeCellsCapacity.toString(10)) + inputSumXudtCapacity - totalNeedOutputCapacity, 
            _context3.abrupt("return", {
              totalNeedOutputCapacity,
              extraNeedCkbCellCapacity
            });

           case 28:
            return _context3.abrupt("return", {
              totalNeedOutputCapacity,
              extraNeedCkbCellCapacity: 0
            });

           case 29:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })))).apply(this, arguments);
    }
    function collectUdtInputs(xudtCells, needAmount, isNeedSummaryUnuseUdtCell) {
      var _step2, inputXudtCells = [], inputSumXudtCapacity = BigInt(0), inputSumXudtAmount = BigInt(0), _iterator2 = sendXudt_createForOfIteratorHelper(xudtCells);
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
          var cell = _step2.value;
          if (inputXudtCells.push(cell), inputSumXudtCapacity += BigInt(cell.capacity.toString(10)), 
          (inputSumXudtAmount += (0, utils.JV)((0, utils.EY)(cell.data))) >= needAmount && 0 == isNeedSummaryUnuseUdtCell) break;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (inputSumXudtAmount < BigInt(needAmount)) throw new Error("Insufficient UDT balance");
      return {
        inputXudtCells,
        inputSumXudtCapacity,
        inputSumXudtAmount
      };
    }
    var getGas_Buffer = __webpack_require__(348287).Buffer;
    function getGas_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function getGas_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            getGas_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            getGas_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    wallet_core.R.Nervos.Proto.NativeTransfer, wallet_core.R.Nervos.Proto.TransactionPlan;
    var getGas_SigningInput = wallet_core.R.Nervos.Proto.SigningInput, getGas_Cell = (wallet_core.R.Nervos.Proto.Script, 
    wallet_core.R.Nervos.Proto.OutPoint, wallet_core.R.Nervos.Proto.Cell), getGas_SigningOutput = (wallet_core.R.Nervos.Proto.CellOutput, 
    wallet_core.R.Nervos.Proto.SigningOutput);
    function getGas_generateNativeTransaction(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {
      return ckb_getGas_generateNativeTransaction.apply(this, arguments);
    }
    function ckb_getGas_generateNativeTransaction() {
      return (ckb_getGas_generateNativeTransaction = getGas_asyncToGenerator(regeneratorRuntime.mark((function _callee(to, from, amount, fee, privateKey, cells, isMainnet, useMaxAmount) {
        var feeRate, _yield$getWasm, CoinType, AnySigner, selectedCells, nativeTransfer, signingInput, encoded, outputData, output, outPutTransactionJson, outPutTransactionJsonObject, nativeTransferCellDepsJSON, inputs, outputs, inputCapicatiy, outputsCapacity, estimatedTxFee;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return feeRate = Math.ceil(fee / 1e3), _context.next = 4, (0, wallet_core.t)();

           case 4:
            if (_yield$getWasm = _context.sent, CoinType = _yield$getWasm.CoinType, AnySigner = _yield$getWasm.AnySigner, 
            selectedCells = cells, nativeTransfer = wallet_core.R.Nervos.Proto.NativeTransfer.create({
              toAddress: to,
              changeAddress: from,
              amount: node_modules_long.A.fromNumber(amount),
              useMaxAmount
            }), signingInput = getGas_SigningInput.create({
              byteFee: node_modules_long.A.fromNumber(feeRate),
              privateKey: [ Uint8Array.from(getGas_Buffer.from(privateKey, "hex")) ],
              cell: selectedCells,
              plan: null,
              nativeTransfer,
              sudtTransfer: null,
              daoDeposit: null,
              daoWithdrawPhase1: null,
              daoWithdrawPhase2: null
            }), encoded = getGas_SigningInput.encode(signingInput).finish(), outputData = AnySigner.sign(encoded, CoinType.nervos), 
            output = getGas_SigningOutput.decode(outputData), outPutTransactionJson = output.transactionJson, 
            outPutTransactionJsonObject = outPutTransactionJson ? JSON.parse(outPutTransactionJson) : null, 
            isMainnet || (nativeTransferCellDepsJSON = constant_getSecp256k1CellDepJSON(isMainnet), 
            outPutTransactionJsonObject.cell_deps = nativeTransferCellDepsJSON), !outPutTransactionJsonObject) {
              _context.next = 25;
              break;
            }
            return inputs = outPutTransactionJsonObject.inputs, outputs = outPutTransactionJsonObject.outputs, 
            inputCapicatiy = selectedCells.reduce((function(acc, cell) {
              if (1 == inputs.some((function(input) {
                var _cell$outPoint$txHash, _cell$outPoint, _cell$outPoint$index$, _cell$outPoint2, _cell$outPoint2$index, hexHash = "0x" + (0, 
                utils.My)(null !== (_cell$outPoint$txHash = null === (_cell$outPoint = cell.outPoint) || void 0 === _cell$outPoint ? void 0 : _cell$outPoint.txHash) && void 0 !== _cell$outPoint$txHash ? _cell$outPoint$txHash : new Uint8Array), hexIndex = "0x" + (null !== (_cell$outPoint$index$ = null === (_cell$outPoint2 = cell.outPoint) || void 0 === _cell$outPoint2 || null === (_cell$outPoint2$index = _cell$outPoint2.index) || void 0 === _cell$outPoint2$index ? void 0 : _cell$outPoint2$index.toString(16)) && void 0 !== _cell$outPoint$index$ ? _cell$outPoint$index$ : "-1");
                return input.previous_output.tx_hash == hexHash && input.previous_output.index == hexIndex;
              }))) {
                var _cell$capacity, cap = null !== (_cell$capacity = cell.capacity) && void 0 !== _cell$capacity ? _cell$capacity : node_modules_long.A.fromString("0");
                return acc.add(cap);
              }
              return acc;
            }), node_modules_long.A.fromString("0")), outputsCapacity = outputs.reduce((function(acc, cell) {
              var _Long$fromString, cap = null !== (_Long$fromString = node_modules_long.A.fromString(cell.capacity, 16)) && void 0 !== _Long$fromString ? _Long$fromString : node_modules_long.A.fromString("0");
              return acc.add(cap);
            }), node_modules_long.A.fromString("0")), estimatedTxFee = inputCapicatiy.sub(outputsCapacity), 
            _context.abrupt("return", {
              outPutTransactionJsonObject,
              estimatedTxFee
            });

           case 25:
            return _context.abrupt("return", {
              outPutTransactionJsonObject: null,
              estimatedTxFee: 0
            });

           case 26:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })))).apply(this, arguments);
    }
    function getGas_calculateNativeTxFee(_x9, _x10, _x11, _x12, _x13, _x14, _x15) {
      return ckb_getGas_calculateNativeTxFee.apply(this, arguments);
    }
    function ckb_getGas_calculateNativeTxFee() {
      return (ckb_getGas_calculateNativeTxFee = getGas_asyncToGenerator(regeneratorRuntime.mark((function _callee2(to, from, amount, fee, cells, isMainnet, useMaxAmount) {
        var _yield$getWasm2, NervosAddress, nnrvosAddressModel, codeHash, args, fromLockScript, fakeLockCells, _yield$generateNative, estimatedTxFee;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.next = 2, (0, wallet_core.t)();

           case 2:
            return _yield$getWasm2 = _context2.sent, NervosAddress = _yield$getWasm2.NervosAddress, 
            "0000000000000000000000000000000000000000000000000000000000000001", nnrvosAddressModel = NervosAddress.createWithString("ckb1qzda0cr08m85hc8jlnfp3zer7xulejywt49kt2rr0vthywaa50xwsqt4z78ng4yutl5u6xsv27ht6q08mhujf8sy3yulh"), 
            codeHash = getGas_Buffer.from(nnrvosAddressModel.codeHash()), args = getGas_Buffer.from(nnrvosAddressModel.args()), 
            fromLockScript = {
              codeHash,
              hashType: nnrvosAddressModel.hashType(),
              args
            }, fakeLockCells = cells.map((function(cell) {
              return getGas_Cell.create({
                capacity: cell.capacity,
                data: cell.data,
                lock: fromLockScript,
                outPoint: cell.outPoint,
                type: cell.type
              });
            })), _context2.next = 13, getGas_generateNativeTransaction(to, from, amount, fee, "0000000000000000000000000000000000000000000000000000000000000001", fakeLockCells, isMainnet, useMaxAmount);

           case 13:
            return _yield$generateNative = _context2.sent, estimatedTxFee = _yield$generateNative.estimatedTxFee, 
            _context2.abrupt("return", estimatedTxFee);

           case 16:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })))).apply(this, arguments);
    }
    var fetching = __webpack_require__(460322);
    function ckbRpc_typeof(obj) {
      return ckbRpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, ckbRpc_typeof(obj);
    }
    function ckbRpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function ckbRpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            ckbRpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            ckbRpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function ckbRpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, ckbRpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function ckbRpc_defineProperty(obj, key, value) {
      return (key = ckbRpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function ckbRpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== ckbRpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== ckbRpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === ckbRpc_typeof(key) ? key : String(key);
    }
    function _asyncIterator(iterable) {
      var method, async, sync, retry = 2;
      for ("undefined" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--; ) {
        if (async && null != (method = iterable[async])) return method.call(iterable);
        if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));
        async = "@@asyncIterator", sync = "@@iterator";
      }
      throw new TypeError("Object is not async iterable");
    }
    function AsyncFromSyncIterator(s) {
      function AsyncFromSyncIteratorContinuation(r) {
        if (Object(r) !== r) return Promise.reject(new TypeError(r + " is not an object."));
        var done = r.done;
        return Promise.resolve(r.value).then((function(value) {
          return {
            value,
            done
          };
        }));
      }
      return AsyncFromSyncIterator = function(s) {
        this.s = s, this.n = s.next;
      }, AsyncFromSyncIterator.prototype = {
        s: null,
        n: null,
        next: function() {
          return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));
        },
        return: function(value) {
          var ret = this.s.return;
          return void 0 === ret ? Promise.resolve({
            value,
            done: !0
          }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));
        },
        throw: function(value) {
          var thr = this.s.return;
          return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));
        }
      }, new AsyncFromSyncIterator(s);
    }
    var CKBWallet = function() {
      function CKBWallet(totalNetworkDic) {
        var _this = this;
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, CKBWallet), ckbRpc_defineProperty(this, "ckbNetwork", void 0), ckbRpc_defineProperty(this, "rpc", void 0), 
        ckbRpc_defineProperty(this, "indexer", void 0), ckbRpc_defineProperty(this, "fetchWithWebV2Sign", function() {
          var _ref = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(url, data) {
            return regeneratorRuntime.wrap((function(_context) {
              for (;;) switch (_context.prev = _context.next) {
               case 0:
                return _context.abrupt("return", (0, fetching.Lu)("POST", url, data));

               case 1:
               case "end":
                return _context.stop();
              }
            }), _callee);
          })));
          return function(_x, _x2) {
            return _ref.apply(this, arguments);
          };
        }()), this.ckbNetwork = null == totalNetworkDic ? void 0 : totalNetworkDic.CKB;
        var urls = this.getUrls();
        (0, customFetcher.setCustomFetcher)(this.fetchWithWebV2Sign), lumos.LightClientRPC.setCustomFetcher(this.fetchWithWebV2Sign), 
        this.rpc = new lumos.RPC(urls.rpcUrl, {
          fetch: function(input, init) {
            return _this.fetchWithWebV2Sign(input.toString(), init ? "string" == typeof init.body ? JSON.parse(init.body) : init.body : {});
          }
        }), this.indexer = new lumos.Indexer(urls.indexerUrl, urls.rpcUrl);
      }
      var Constructor, protoProps, staticProps, _init, _transferCkbBySendInfo, _calculateTransactionSudtFee, _calculateTransactionXudtFee, _calculateTransactionFee, _calculateTransactionFeeByType, _getSenderCells, _collectCellsByLock, _getCKBBalance, _getTokenBalance, _getSendSudtTranstransaction, _TransferOtherTokenByHash, _TransferOtherToken;
      return Constructor = CKBWallet, protoProps = [ {
        key: "getUrls",
        value: function() {
          var _this$ckbNetwork, _this$ckbNetwork$endp, _this$ckbNetwork$endp2, rpcAddress = null === (_this$ckbNetwork = this.ckbNetwork) || void 0 === _this$ckbNetwork || null === (_this$ckbNetwork$endp = _this$ckbNetwork.endpoints) || void 0 === _this$ckbNetwork$endp || null === (_this$ckbNetwork$endp2 = _this$ckbNetwork$endp.find((function(item) {
            return "rpc" === (null == item ? void 0 : item.type);
          }))) || void 0 === _this$ckbNetwork$endp2 ? void 0 : _this$ckbNetwork$endp2.url;
          return rpcAddress ? {
            rpcUrl: rpcAddress.concat("/rpc"),
            indexerUrl: rpcAddress.concat("/indexer")
          } : {
            rpcUrl: "https://api.bitstack.com/v1/0x3fUpL6bfQiybois33AustWo6LO3Lg5/fWVZIbSSVcIJBQCW7PN8rlIPnZUBKst8/CKB/mainnet/rpc",
            indexerUrl: "https://api.bitstack.com/v1/0x3fUpL6bfQiybois33AustWo6LO3Lg5/fWVZIbSSVcIJBQCW7PN8rlIPnZUBKst8/CKB/mainnet/indexer"
          };
        }
      }, {
        key: "TransferOtherToken",
        value: (_TransferOtherToken = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(sendInfo, privateKey, setLoading, history) {
          var coinAddress;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return coinAddress = null == sendInfo ? void 0 : sendInfo.coinContractAddress, _context2.next = 3, 
              (0, httpService.bd)(coinAddress);

             case 3:
              if ("xudt" !== _context2.sent.attributes.udt_type) {
                _context2.next = 10;
                break;
              }
              return _context2.next = 7, this.TransferOtherTokenByHash(sendInfo, privateKey, setLoading, history);

             case 7:
             case 12:
              return _context2.abrupt("return", _context2.sent);

             case 10:
              return _context2.next = 12, this.getSendSudtTranstransaction(sendInfo, privateKey, setLoading, history);

             case 13:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x3, _x4, _x5, _x6) {
          return _TransferOtherToken.apply(this, arguments);
        })
      }, {
        key: "TransferOtherTokenByHash",
        value: (_TransferOtherTokenByHash = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3(sendInfo, privateKey, setLoading, history) {
          var fromAddress, toAddress, coinAddress, networkKey, res, decimal, queryScript, transferAmount, hexFee, feeRate, indexerNativeCells, typeArgs, xudtCells, nativeliveCells, xudtliveCells, _yield$createXudtTxPl, plan, _yield$generateXudtTr, outPutTransactionJsonObject, history_data, result, txhash;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return setLoading(!0), fromAddress = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
              toAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, coinAddress = null == sendInfo ? void 0 : sendInfo.coinContractAddress, 
              networkKey = null == sendInfo ? void 0 : sendInfo.coinNetworkKey, _context3.next = 7, 
              (0, httpService.bd)(coinAddress);

             case 7:
              return res = _context3.sent, (0, lib.initializeConfig)(lib.predefined.LINA), decimal = res.attributes.decimal, 
              queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, transferAmount = BigInt((null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Math.pow(10, Number(decimal))).toString(), 
              _context3.next = 14, (0, httpService.Xf)();

             case 14:
              return hexFee = _context3.sent, feeRate = Number(BigInt(hexFee)), _context3.next = 18, 
              this.getSenderCells(fromAddress);

             case 18:
              return indexerNativeCells = _context3.sent, typeArgs = res.attributes.type_script.args, 
              _context3.next = 22, this.getSenderCells(fromAddress, queryScript);

             case 22:
              return xudtCells = _context3.sent, nativeliveCells = indexerNativeCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), xudtliveCells = xudtCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), _context3.prev = 25, _context3.next = 28, createXudtTxPlan(toAddress, fromAddress, Number(transferAmount), typeArgs, feeRate, nativeliveCells, xudtliveCells, !0);

             case 28:
              return _yield$createXudtTxPl = _context3.sent, plan = _yield$createXudtTxPl.plan, 
              _context3.next = 32, generateXudtTransaction(plan, privateKey, feeRate);

             case 32:
              return _yield$generateXudtTr = _context3.sent, outPutTransactionJsonObject = _yield$generateXudtTr.outPutTransactionJsonObject, 
              history_data = {
                chain_type: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                address: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
                chain_name: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                token_addr: null == sendInfo ? void 0 : sendInfo.coinContractAddress,
                token_name: sendInfo.coinSimpleName,
                token_short_name: sendInfo.coinSimpleName,
                trans_type: "send",
                chain_key: null == sendInfo ? void 0 : sendInfo.coinNetworkSymbol,
                trans_time: (new Date).getTime() / 1e3,
                trans_balance: null == sendInfo ? void 0 : sendInfo.coinTransferAmount,
                trans_balance_usd: Number(null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Number(null == sendInfo ? void 0 : sendInfo.coinUnitPrice),
                nonce: null == sendInfo ? void 0 : sendInfo.coinTransferNonce,
                is_contra: "0",
                trans_oppo_address: null == sendInfo ? void 0 : sendInfo.coinTransferToAddress,
                trans_gas_fee: null == sendInfo ? void 0 : sendInfo.coinTransferFee,
                inputs: "",
                outputs: "",
                action_type: 1,
                memo: null == sendInfo ? void 0 : sendInfo.memo,
                memo_name: null == sendInfo ? void 0 : sendInfo.memo_name,
                platform_operation: null == sendInfo ? void 0 : sendInfo.platform_operation,
                platform_name: null == sendInfo ? void 0 : sendInfo.platform_name
              }, _context3.next = 37, (0, chainRequestMethod.IM)(null == sendInfo ? void 0 : sendInfo.coinNetworkKey, outPutTransactionJsonObject, history_data);

             case 37:
              if (200 !== (result = _context3.sent).data.code) {
                _context3.next = 47;
                break;
              }
              if (!(txhash = result.data.data.hash_id)) {
                _context3.next = 46;
                break;
              }
              return send.M6(sendInfo, txhash, history, networkKey), setLoading(!1), _context3.abrupt("return", txhash);

             case 46:
              return _context3.abrupt("return", !1);

             case 47:
              _context3.next = 51;
              break;

             case 49:
              _context3.prev = 49, _context3.t0 = _context3.catch(25);

             case 51:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this, [ [ 25, 49 ] ]);
        }))), function(_x7, _x8, _x9, _x10) {
          return _TransferOtherTokenByHash.apply(this, arguments);
        })
      }, {
        key: "getSendSudtTranstransaction",
        value: (_getSendSudtTranstransaction = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4(sendInfo, privateKey, setLoading, history) {
          var fromAddress, toAddress, coinAddress, res, decimal, queryScript, transferAmount, hexFee, feeRate, typeHash, indexerNativeCells, xudtCells, allCells, availableCells, _yield$generateSUDTTr, outPutTransactionJsonObject, history_data, result, txhash;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return setLoading(!0), fromAddress = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
              toAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, coinAddress = null == sendInfo ? void 0 : sendInfo.coinContractAddress, 
              _context4.next = 6, (0, httpService.bd)(coinAddress);

             case 6:
              return res = _context4.sent, (0, lib.initializeConfig)(lib.predefined.LINA), decimal = res.attributes.decimal, 
              queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, transferAmount = BigInt((null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Math.pow(10, Number(decimal))).toString(), 
              _context4.next = 13, (0, httpService.Xf)();

             case 13:
              return hexFee = _context4.sent, feeRate = Number(BigInt(hexFee)), typeHash = res.attributes.type_script.args, 
              _context4.next = 18, this.getSenderCells(fromAddress, void 0);

             case 18:
              return indexerNativeCells = _context4.sent, _context4.next = 21, this.getSenderCells(fromAddress, queryScript);

             case 21:
              return xudtCells = _context4.sent, allCells = indexerNativeCells.concat(xudtCells), 
              availableCells = allCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), _context4.next = 26, generateSUDTTransaction(toAddress, fromAddress, Number(transferAmount), typeHash, feeRate, privateKey, availableCells, !0, !1);

             case 26:
              return _yield$generateSUDTTr = _context4.sent, outPutTransactionJsonObject = _yield$generateSUDTTr.outPutTransactionJsonObject, 
              history_data = {
                chain_type: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                address: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
                chain_name: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                token_addr: null == sendInfo ? void 0 : sendInfo.coinContractAddress,
                token_name: sendInfo.coinSimpleName,
                token_short_name: sendInfo.coinSimpleName,
                trans_type: "send",
                chain_key: null == sendInfo ? void 0 : sendInfo.coinNetworkSymbol,
                trans_time: (new Date).getTime() / 1e3,
                trans_balance: null == sendInfo ? void 0 : sendInfo.coinTransferAmount,
                trans_balance_usd: Number(null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Number(null == sendInfo ? void 0 : sendInfo.coinUnitPrice),
                nonce: null == sendInfo ? void 0 : sendInfo.coinTransferNonce,
                is_contra: "0",
                trans_oppo_address: null == sendInfo ? void 0 : sendInfo.coinTransferToAddress,
                trans_gas_fee: null == sendInfo ? void 0 : sendInfo.coinTransferFee,
                inputs: "",
                outputs: "",
                action_type: 1,
                memo: null == sendInfo ? void 0 : sendInfo.memo,
                memo_name: null == sendInfo ? void 0 : sendInfo.memo_name,
                platform_operation: null == sendInfo ? void 0 : sendInfo.platform_operation,
                platform_name: null == sendInfo ? void 0 : sendInfo.platform_name
              }, _context4.next = 31, (0, chainRequestMethod.IM)(null == sendInfo ? void 0 : sendInfo.coinNetworkKey, outPutTransactionJsonObject, history_data);

             case 31:
              if (200 !== (result = _context4.sent).data.code) {
                _context4.next = 41;
                break;
              }
              if (!(txhash = result.data.data.hash_id)) {
                _context4.next = 40;
                break;
              }
              return send.M6(sendInfo, txhash, history, null == sendInfo ? void 0 : sendInfo.coinNetworkKey), 
              setLoading(!1), _context4.abrupt("return", txhash);

             case 40:
              return _context4.abrupt("return", !1);

             case 41:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x11, _x12, _x13, _x14) {
          return _getSendSudtTranstransaction.apply(this, arguments);
        })
      }, {
        key: "getTokenBalance",
        value: (_getTokenBalance = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5(address, coinAddress) {
          var res, queryScript, cellCollector, balance, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, cell;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.prev = 0, _context5.next = 3, (0, httpService.bd)(coinAddress);

             case 3:
              res = _context5.sent, queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, cellCollector = new lumos.CellCollector(this.indexer, {
                lock: lumos.helpers.parseAddress(address),
                type: queryScript
              }, void 0), balance = bi_lib.BI.from(0), _iteratorAbruptCompletion = !1, _didIteratorError = !1, 
              _context5.prev = 9, _iterator = _asyncIterator(cellCollector.collect());

             case 11:
              return _context5.next = 13, _iterator.next();

             case 13:
              if (!(_iteratorAbruptCompletion = !(_step = _context5.sent).done)) {
                _context5.next = 19;
                break;
              }
              cell = _step.value, balance = balance.add(codec_lib.number.Uint128LE.unpack(cell.data));

             case 16:
              _iteratorAbruptCompletion = !1, _context5.next = 11;
              break;

             case 19:
              _context5.next = 25;
              break;

             case 21:
              _context5.prev = 21, _context5.t0 = _context5.catch(9), _didIteratorError = !0, 
              _iteratorError = _context5.t0;

             case 25:
              if (_context5.prev = 25, _context5.prev = 26, !_iteratorAbruptCompletion || null == _iterator.return) {
                _context5.next = 30;
                break;
              }
              return _context5.next = 30, _iterator.return();

             case 30:
              if (_context5.prev = 30, !_didIteratorError) {
                _context5.next = 33;
                break;
              }
              throw _iteratorError;

             case 33:
              return _context5.finish(30);

             case 34:
              return _context5.finish(25);

             case 35:
              return _context5.abrupt("return", (0, bi_lib.formatUnit)(balance, 8));

             case 38:
              return _context5.prev = 38, _context5.t1 = _context5.catch(0), _context5.abrupt("return", "0");

             case 41:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this, [ [ 0, 38 ], [ 9, 21, 25, 35 ], [ 26, , 30, 34 ] ]);
        }))), function(_x15, _x16) {
          return _getTokenBalance.apply(this, arguments);
        })
      }, {
        key: "getCKBBalance",
        value: (_getCKBBalance = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(address) {
          var script, args, codeHash, queryScript, cellCollector, balance, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, cell;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              script = (0, ckb_sdk_utils_lib.addressToScript)(address), args = script.args, codeHash = script.codeHash, 
              _context6.prev = 3, queryScript = {
                codeHash,
                hashType: script.hashType,
                args
              }, cellCollector = new lumos.CellCollector(this.indexer, {
                lock: queryScript,
                argsLen: "any",
                type: "empty"
              }), balance = BigInt(0), _iteratorAbruptCompletion2 = !1, _didIteratorError2 = !1, 
              _context6.prev = 9, _iterator2 = _asyncIterator(cellCollector.collect());

             case 11:
              return _context6.next = 13, _iterator2.next();

             case 13:
              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context6.sent).done)) {
                _context6.next = 19;
                break;
              }
              cell = _step2.value, balance += BigInt(cell.cellOutput.capacity);

             case 16:
              _iteratorAbruptCompletion2 = !1, _context6.next = 11;
              break;

             case 19:
              _context6.next = 25;
              break;

             case 21:
              _context6.prev = 21, _context6.t0 = _context6.catch(9), _didIteratorError2 = !0, 
              _iteratorError2 = _context6.t0;

             case 25:
              if (_context6.prev = 25, _context6.prev = 26, !_iteratorAbruptCompletion2 || null == _iterator2.return) {
                _context6.next = 30;
                break;
              }
              return _context6.next = 30, _iterator2.return();

             case 30:
              if (_context6.prev = 30, !_didIteratorError2) {
                _context6.next = 33;
                break;
              }
              throw _iteratorError2;

             case 33:
              return _context6.finish(30);

             case 34:
              return _context6.finish(25);

             case 35:
              return _context6.abrupt("return", (0, bi_lib.formatUnit)(balance, 8));

             case 38:
              return _context6.prev = 38, _context6.t1 = _context6.catch(3), _context6.abrupt("return", "0");

             case 41:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this, [ [ 3, 38 ], [ 9, 21, 25, 35 ], [ 26, , 30, 34 ] ]);
        }))), function(_x17) {
          return _getCKBBalance.apply(this, arguments);
        })
      }, {
        key: "collectCellsByLock",
        value: (_collectCellsByLock = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(lockScript) {
          var collector, cells, _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, cell;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              collector = new lumos.CellCollector(this.indexer, {
                lock: lockScript
              }), cells = [], _iteratorAbruptCompletion3 = !1, _didIteratorError3 = !1, _context7.prev = 4, 
              _iterator3 = _asyncIterator(collector.collect());

             case 6:
              return _context7.next = 8, _iterator3.next();

             case 8:
              if (!(_iteratorAbruptCompletion3 = !(_step3 = _context7.sent).done)) {
                _context7.next = 14;
                break;
              }
              cell = _step3.value, cells.push(cell);

             case 11:
              _iteratorAbruptCompletion3 = !1, _context7.next = 6;
              break;

             case 14:
              _context7.next = 20;
              break;

             case 16:
              _context7.prev = 16, _context7.t0 = _context7.catch(4), _didIteratorError3 = !0, 
              _iteratorError3 = _context7.t0;

             case 20:
              if (_context7.prev = 20, _context7.prev = 21, !_iteratorAbruptCompletion3 || null == _iterator3.return) {
                _context7.next = 25;
                break;
              }
              return _context7.next = 25, _iterator3.return();

             case 25:
              if (_context7.prev = 25, !_didIteratorError3) {
                _context7.next = 28;
                break;
              }
              throw _iteratorError3;

             case 28:
              return _context7.finish(25);

             case 29:
              return _context7.finish(20);

             case 30:
              return _context7.abrupt("return", cells);

             case 31:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this, [ [ 4, 16, 20, 30 ], [ 21, , 25, 29 ] ]);
        }))), function(_x18) {
          return _collectCellsByLock.apply(this, arguments);
        })
      }, {
        key: "getSenderCells",
        value: (_getSenderCells = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee8(senderAddress, type) {
          var urls, collector, cells;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return urls = this.getUrls(), collector = new ckb_lib.Collector({
                ckbNodeUrl: urls.rpcUrl,
                ckbIndexerUrl: urls.indexerUrl
              }), _context8.next = 4, collector.getCells({
                lock: lumos.helpers.parseAddress(senderAddress),
                type
              });

             case 4:
              return cells = _context8.sent, _context8.abrupt("return", cells);

             case 6:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x19, _x20) {
          return _getSenderCells.apply(this, arguments);
        })
      }, {
        key: "calculateTransactionFeeByType",
        value: (_calculateTransactionFeeByType = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee9(sendInfo) {
          var coinAddress;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return coinAddress = null == sendInfo ? void 0 : sendInfo.coinContractAddress, _context9.next = 3, 
              (0, httpService.bd)(coinAddress);

             case 3:
              if ("xudt" !== _context9.sent.attributes.udt_type) {
                _context9.next = 10;
                break;
              }
              return _context9.next = 7, this.calculateTransactionXudtFee(sendInfo);

             case 7:
             case 12:
              return _context9.abrupt("return", _context9.sent);

             case 10:
              return _context9.next = 12, this.calculateTransactionSudtFee(sendInfo);

             case 13:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x21) {
          return _calculateTransactionFeeByType.apply(this, arguments);
        })
      }, {
        key: "calculateTransactionFee",
        value: (_calculateTransactionFee = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee10(sendInfo, isMax) {
          var fromAddress, toAddress, amount, senderCells, nativeliveCells, hexFee, feeRate, fee, feeFinal;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              if (_context10.prev = 0, fromAddress = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
              toAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, amount = null == sendInfo ? void 0 : sendInfo.coinTransferAmount, 
              !(Number(amount) < 62)) {
                _context10.next = 6;
                break;
              }
              return _context10.abrupt("return", 0);

             case 6:
              return _context10.next = 8, this.getSenderCells(fromAddress);

             case 8:
              return senderCells = _context10.sent, nativeliveCells = senderCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), _context10.next = 12, (0, httpService.Xf)();

             case 12:
              return hexFee = _context10.sent, feeRate = Number(BigInt(hexFee)), _context10.next = 16, 
              getGas_calculateNativeTxFee(toAddress, fromAddress, (0, bi_lib.parseUnit)(amount, 8).toNumber(), Number(feeRate), nativeliveCells, !0, isMax);

             case 16:
              return fee = _context10.sent, feeFinal = (0, bi_lib.formatUnit)(BigInt(fee.toString()), 8), 
              _context10.abrupt("return", feeFinal);

             case 21:
              throw _context10.prev = 21, _context10.t0 = _context10.catch(0), _context10.t0;

             case 24:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this, [ [ 0, 21 ] ]);
        }))), function(_x22, _x23) {
          return _calculateTransactionFee.apply(this, arguments);
        })
      }, {
        key: "calculateTransactionXudtFee",
        value: (_calculateTransactionXudtFee = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee11(sendInfo) {
          var fromAddress, toAddress, coinAddress, res, decimal, queryScript, amount, transferAmount, hexFee, feeRate, indexerNativeCells, typeArgs, xudtCells, nativeliveCells, xudtliveCells, cellCollector, allCellCollector, balance, _iteratorAbruptCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, cell, Allbalance, _iteratorAbruptCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, _cell, _yield$calculateUdtNe, totalNeedOutputCapacity, noEmptyCellBalance, _yield$createXudtTxPl2, estimatedTxFee, extraNeedCkb;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return _context11.prev = 0, fromAddress = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
              toAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, coinAddress = null == sendInfo ? void 0 : sendInfo.coinContractAddress, 
              _context11.next = 6, (0, httpService.bd)(coinAddress);

             case 6:
              return res = _context11.sent, decimal = res.attributes.decimal, (0, lib.initializeConfig)(lib.predefined.LINA), 
              queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, amount = Math.round((null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Math.pow(10, Number(decimal))), 
              transferAmount = BigInt(amount).toString(), _context11.next = 14, (0, httpService.Xf)();

             case 14:
              return hexFee = _context11.sent, feeRate = Number(BigInt(hexFee)), _context11.next = 18, 
              this.getSenderCells(fromAddress);

             case 18:
              return indexerNativeCells = _context11.sent, typeArgs = res.attributes.type_script.args, 
              _context11.next = 22, this.getSenderCells(fromAddress, queryScript);

             case 22:
              xudtCells = _context11.sent, nativeliveCells = indexerNativeCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), xudtliveCells = xudtCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), cellCollector = new lumos.CellCollector(this.indexer, {
                lock: (0, ckb_sdk_utils_lib.addressToScript)(fromAddress),
                argsLen: "any",
                type: "empty"
              }), allCellCollector = new lumos.CellCollector(this.indexer, {
                lock: (0, ckb_sdk_utils_lib.addressToScript)(fromAddress),
                argsLen: "any"
              }), balance = BigInt(0), _iteratorAbruptCompletion4 = !1, _didIteratorError4 = !1, 
              _context11.prev = 30, _iterator4 = _asyncIterator(cellCollector.collect());

             case 32:
              return _context11.next = 34, _iterator4.next();

             case 34:
              if (!(_iteratorAbruptCompletion4 = !(_step4 = _context11.sent).done)) {
                _context11.next = 40;
                break;
              }
              cell = _step4.value, balance += BigInt(cell.cellOutput.capacity);

             case 37:
              _iteratorAbruptCompletion4 = !1, _context11.next = 32;
              break;

             case 40:
              _context11.next = 46;
              break;

             case 42:
              _context11.prev = 42, _context11.t0 = _context11.catch(30), _didIteratorError4 = !0, 
              _iteratorError4 = _context11.t0;

             case 46:
              if (_context11.prev = 46, _context11.prev = 47, !_iteratorAbruptCompletion4 || null == _iterator4.return) {
                _context11.next = 51;
                break;
              }
              return _context11.next = 51, _iterator4.return();

             case 51:
              if (_context11.prev = 51, !_didIteratorError4) {
                _context11.next = 54;
                break;
              }
              throw _iteratorError4;

             case 54:
              return _context11.finish(51);

             case 55:
              return _context11.finish(46);

             case 56:
              Allbalance = BigInt(0), _iteratorAbruptCompletion5 = !1, _didIteratorError5 = !1, 
              _context11.prev = 59, _iterator5 = _asyncIterator(allCellCollector.collect());

             case 61:
              return _context11.next = 63, _iterator5.next();

             case 63:
              if (!(_iteratorAbruptCompletion5 = !(_step5 = _context11.sent).done)) {
                _context11.next = 69;
                break;
              }
              _cell = _step5.value, Allbalance += BigInt(_cell.cellOutput.capacity);

             case 66:
              _iteratorAbruptCompletion5 = !1, _context11.next = 61;
              break;

             case 69:
              _context11.next = 75;
              break;

             case 71:
              _context11.prev = 71, _context11.t1 = _context11.catch(59), _didIteratorError5 = !0, 
              _iteratorError5 = _context11.t1;

             case 75:
              if (_context11.prev = 75, _context11.prev = 76, !_iteratorAbruptCompletion5 || null == _iterator5.return) {
                _context11.next = 80;
                break;
              }
              return _context11.next = 80, _iterator5.return();

             case 80:
              if (_context11.prev = 80, !_didIteratorError5) {
                _context11.next = 83;
                break;
              }
              throw _iteratorError5;

             case 83:
              return _context11.finish(80);

             case 84:
              return _context11.finish(75);

             case 85:
              return _context11.next = 87, calculateUdtNeedCKbCapacity(nativeliveCells, xudtliveCells, Number(transferAmount), !0, fromAddress, toAddress, coinAddress);

             case 87:
              if ((_yield$calculateUdtNe = _context11.sent).extraNeedCkbCellCapacity, totalNeedOutputCapacity = _yield$calculateUdtNe.totalNeedOutputCapacity, 
              noEmptyCellBalance = Allbalance - balance, !(Number((0, bi_lib.formatUnit)(balance, 8)) > 0)) {
                _context11.next = 104;
                break;
              }
              return _context11.next = 94, createXudtTxPlan(toAddress, fromAddress, Number(transferAmount), typeArgs, feeRate, nativeliveCells, xudtliveCells, !0);

             case 94:
              if (_yield$createXudtTxPl2 = _context11.sent, estimatedTxFee = _yield$createXudtTxPl2.estimatedTxFee, 
              extraNeedCkb = totalNeedOutputCapacity - balance, !(Number((0, bi_lib.formatUnit)(BigInt(extraNeedCkb.toString()), 8)) > 0)) {
                _context11.next = 101;
                break;
              }
              return _context11.abrupt("return", -Number((0, bi_lib.formatUnit)(BigInt(extraNeedCkb.toString()), 8)));

             case 101:
              return _context11.abrupt("return", (0, bi_lib.formatUnit)(BigInt(estimatedTxFee.toString()), 8));

             case 102:
              _context11.next = 105;
              break;

             case 104:
              return _context11.abrupt("return", -Number((0, bi_lib.formatUnit)(BigInt(noEmptyCellBalance.toString()), 8)));

             case 105:
              _context11.next = 109;
              break;

             case 107:
              _context11.prev = 107, _context11.t2 = _context11.catch(0);

             case 109:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this, [ [ 0, 107 ], [ 30, 42, 46, 56 ], [ 47, , 51, 55 ], [ 59, 71, 75, 85 ], [ 76, , 80, 84 ] ]);
        }))), function(_x24) {
          return _calculateTransactionXudtFee.apply(this, arguments);
        })
      }, {
        key: "calculateTransactionSudtFee",
        value: (_calculateTransactionSudtFee = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee12(sendInfo) {
          var fromAddress, toAddress, coinAddress, res, decimal, queryScript, amount, transferAmount, hexFee, feeRate, typeHash, indexerNativeCells, xudtCells, allCells, availableCells, estimatedTxFee;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return _context12.prev = 0, fromAddress = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
              toAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, coinAddress = null == sendInfo ? void 0 : sendInfo.coinContractAddress, 
              _context12.next = 6, (0, httpService.bd)(coinAddress);

             case 6:
              return res = _context12.sent, decimal = res.attributes.decimal, (0, lib.initializeConfig)(lib.predefined.LINA), 
              queryScript = {
                codeHash: res.attributes.type_script.code_hash,
                hashType: res.attributes.type_script.hash_type,
                args: res.attributes.type_script.args
              }, amount = Math.round((null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Math.pow(10, Number(decimal))), 
              transferAmount = BigInt(amount).toString(), _context12.next = 14, (0, httpService.Xf)();

             case 14:
              return hexFee = _context12.sent, feeRate = Number(BigInt(hexFee)), typeHash = res.attributes.type_script.args, 
              _context12.next = 19, this.getSenderCells(fromAddress, void 0);

             case 19:
              return indexerNativeCells = _context12.sent, _context12.next = 22, this.getSenderCells(fromAddress, queryScript);

             case 22:
              return xudtCells = _context12.sent, allCells = indexerNativeCells.concat(xudtCells), 
              availableCells = allCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), _context12.next = 27, calculateSudtTxFee(toAddress, fromAddress, Number(transferAmount), typeHash, feeRate, availableCells, !0, !1);

             case 27:
              return estimatedTxFee = _context12.sent, _context12.abrupt("return", (0, bi_lib.formatUnit)(BigInt(estimatedTxFee.toString()), 8));

             case 31:
              throw _context12.prev = 31, _context12.t0 = _context12.catch(0), _context12.t0;

             case 34:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this, [ [ 0, 31 ] ]);
        }))), function(_x25) {
          return _calculateTransactionSudtFee.apply(this, arguments);
        })
      }, {
        key: "transferCkbBySendInfo",
        value: (_transferCkbBySendInfo = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee13(sendInfo, privateKey, setLoading, history, isMax) {
          var fromAddress, toAddress, amount, senderCells, nativeliveCells, hexFee, feeRate, _yield$generateNative, outPutTransactionJsonObject, history_data, result, txhash;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return setLoading(!0), fromAddress = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, 
              toAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, amount = bi_lib.BI.from((null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Math.pow(10, 8)), 
              _context13.next = 6, this.getSenderCells(fromAddress);

             case 6:
              return senderCells = _context13.sent, nativeliveCells = senderCells.map((function(item, index, array) {
                return indexrCell2TWCell(item);
              })), _context13.next = 10, (0, httpService.Xf)();

             case 10:
              return hexFee = _context13.sent, feeRate = Number(BigInt(hexFee)), _context13.next = 14, 
              getGas_generateNativeTransaction(toAddress, fromAddress, amount.toNumber(), feeRate, privateKey, nativeliveCells, !0, isMax);

             case 14:
              return _yield$generateNative = _context13.sent, outPutTransactionJsonObject = _yield$generateNative.outPutTransactionJsonObject, 
              history_data = {
                chain_type: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                address: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
                chain_name: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                token_addr: null == sendInfo ? void 0 : sendInfo.coinContractAddress,
                token_name: sendInfo.coinSimpleName,
                token_short_name: sendInfo.coinSimpleName,
                trans_type: "send",
                chain_key: null == sendInfo ? void 0 : sendInfo.coinNetworkSymbol,
                trans_time: (new Date).getTime() / 1e3,
                trans_balance: null == sendInfo ? void 0 : sendInfo.coinTransferAmount,
                trans_balance_usd: Number(null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Number(null == sendInfo ? void 0 : sendInfo.coinUnitPrice),
                nonce: null == sendInfo ? void 0 : sendInfo.coinTransferNonce,
                is_contra: "0",
                trans_oppo_address: null == sendInfo ? void 0 : sendInfo.coinTransferToAddress,
                trans_gas_fee: null == sendInfo ? void 0 : sendInfo.coinTransferFee,
                inputs: "",
                outputs: "",
                action_type: 1,
                memo: null == sendInfo ? void 0 : sendInfo.memo,
                memo_name: null == sendInfo ? void 0 : sendInfo.memo_name,
                platform_operation: null == sendInfo ? void 0 : sendInfo.platform_operation,
                platform_name: null == sendInfo ? void 0 : sendInfo.platform_name
              }, _context13.next = 19, (0, chainRequestMethod.IM)(null == sendInfo ? void 0 : sendInfo.coinNetworkKey, outPutTransactionJsonObject, history_data);

             case 19:
              if (200 !== (result = _context13.sent).data.code) {
                _context13.next = 29;
                break;
              }
              if (!(txhash = result.data.data.hash_id)) {
                _context13.next = 28;
                break;
              }
              return send.M6(sendInfo, txhash, history, null == sendInfo ? void 0 : sendInfo.coinNetworkKey), 
              setLoading(!1), _context13.abrupt("return", txhash);

             case 28:
              return _context13.abrupt("return", !1);

             case 29:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x26, _x27, _x28, _x29, _x30) {
          return _transferCkbBySendInfo.apply(this, arguments);
        })
      }, {
        key: "init",
        value: (_init = ckbRpc_asyncToGenerator(regeneratorRuntime.mark((function _callee14() {
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              (0, lib.initializeConfig)(lib.predefined.LINA), this.indexer.startForever();

             case 2:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function() {
          return _init.apply(this, arguments);
        })
      } ], protoProps && ckbRpc_defineProperties(Constructor.prototype, protoProps), staticProps && ckbRpc_defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), CKBWallet;
    }();
    function ckb_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function ckb_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            ckb_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            ckb_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var createCkbWallet = function() {
      var _ref = ckb_asyncToGenerator(regeneratorRuntime.mark((function _callee(totalNetworkDic) {
        var CkbWallet;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.prev = 0, CkbWallet = new CKBWallet(totalNetworkDic), _context.next = 4, 
            CkbWallet.init();

           case 4:
            return _context.abrupt("return", CkbWallet);

           case 7:
            return _context.prev = 7, _context.t0 = _context.catch(0), _context.abrupt("return", null);

           case 10:
           case "end":
            return _context.stop();
          }
        }), _callee, null, [ [ 0, 7 ] ]);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), checkTransactionStatusByHash = function() {
      var _ref2 = ckb_asyncToGenerator(regeneratorRuntime.mark((function _callee2(txHash) {
        var rpc, response;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return rpc = new lumos.RPC("https://mainnet.ckb.dev/rpc"), _context2.prev = 1, _context2.next = 4, 
            rpc.getTransaction(txHash);

           case 4:
            if (response = _context2.sent) {
              _context2.next = 7;
              break;
            }
            return _context2.abrupt("return", !1);

           case 7:
            _context2.t0 = response.txStatus.status, _context2.next = "committed" === _context2.t0 ? 10 : "pending" === _context2.t0 ? 11 : 12;
            break;

           case 10:
            return _context2.abrupt("return", !0);

           case 11:
           case 12:
            return _context2.abrupt("return", !1);

           case 13:
            _context2.next = 18;
            break;

           case 15:
            return _context2.prev = 15, _context2.t1 = _context2.catch(1), _context2.abrupt("return", !1);

           case 18:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 1, 15 ] ]);
      })));
      return function(_x2) {
        return _ref2.apply(this, arguments);
      };
    }();
  },
  870142: () => {},
  870828: () => {},
  871219: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Dv: () => findMainTokens,
      I: () => getNativeCoinPrice,
      N8: () => getTokenValue,
      hT: () => getCoinIsMain,
      m$: () => getTokenNetwork,
      nQ: () => getCoinIsBrc,
      uh: () => hideContent,
      xC: () => isMainCoin
    });
    __webpack_require__(207452), __webpack_require__(80475), __webpack_require__(232982), 
    __webpack_require__(579389), __webpack_require__(505086), __webpack_require__(906048), 
    __webpack_require__(196088), __webpack_require__(380115), __webpack_require__(714913), 
    __webpack_require__(407899), __webpack_require__(184095), __webpack_require__(259581), 
    __webpack_require__(718636), __webpack_require__(700017), __webpack_require__(504895), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(498741), __webpack_require__(215195), __webpack_require__(269193);
    var _gt_api_tokens__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(551258);
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var getCoinIsMain = function(coinAddress, _networkKey) {
      return !coinAddress || "-" === coinAddress;
    }, getCoinIsBrc = function(totalNetworkDic, token, networkKey) {
      var chainArchitecture = (totalNetworkDic[networkKey] || {}).chainArchitecture, protocolLabel = getTokenValue(token, networkKey, "protocolLabel"), coinAddress = getTokenValue(token, networkKey, "coinAddress");
      return !getCoinIsMain(coinAddress, networkKey) && "BTC" === chainArchitecture && ("BRC-20" === protocolLabel || "BRC-100" === protocolLabel || "brc20" === protocolLabel || "brc100" === protocolLabel);
    }, hideContent = function(str) {
      var start = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6, end = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 4, splitStr = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ".";
      if (!str) return "";
      var getSplitStr = new Array(4).fill(splitStr).join(""), strValue = str.toString(), len = strValue.length, startNum = "string" == typeof start ? parseFloat(start) : start, endNum = "string" == typeof end ? parseFloat(end) : end;
      return len > startNum + endNum ? "".concat(strValue.slice(0, startNum)).concat(getSplitStr).concat(strValue.slice(len - endNum, len)) : strValue;
    }, getTokenNetwork = function(token) {
      if (null != token && token.network) return Object.keys(null == token ? void 0 : token.network);
      var arr = [];
      if ("{}" !== JSON.stringify(token)) for (var i in token) token[i] instanceof Object && "coinAddress" in token[i] && arr.push(i);
      return arr;
    }, getTokenValue = function(token, networkKey, key) {
      var _token$network, res = (null == token || null === (_token$network = token.network) || void 0 === _token$network ? void 0 : _token$network[networkKey]) || (null == token ? void 0 : token[networkKey]) || token;
      return key ? null == res ? void 0 : res[key] : res;
    }, isMainCoin = function(token, networkKey) {
      return !(!token.isMainCoin || token.coinChainName !== networkKey) || !!(null !== (_Object$entries = Object.entries(token.network || {})) && void 0 !== _Object$entries ? _Object$entries : token.coinChainNames.map((function(chain) {
        return [ chain, token[chain] ];
      }))).find((function(_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2), chainName = _ref3[0], chainToken = _ref3[1];
        return chainName === networkKey && chainToken.coinIsMainNetwork;
      }));
      var _Object$entries;
    }, findMainTokens = function(tokenList, item) {
      var _item$coinChainNames, _item$coinChainNames2, _item$coinChainNames3, _item$coinChainNames4, _item$coinChainNames5;
      return (null === (_item$coinChainNames = item.coinChainNames) || void 0 === _item$coinChainNames ? void 0 : _item$coinChainNames.length) <= 1 && isMainCoin(item, item.coinChainName) ? [ item ] : null === (_item$coinChainNames2 = item.coinChainNames) || void 0 === _item$coinChainNames2 || null === (_item$coinChainNames3 = _item$coinChainNames2.map) || void 0 === _item$coinChainNames3 || null === (_item$coinChainNames4 = (_item$coinChainNames5 = _item$coinChainNames3.call(_item$coinChainNames2, (function(chain) {
        return tokenList.find((function(token) {
          return isMainCoin(token, chain);
        }));
      }))).filter) || void 0 === _item$coinChainNames4 ? void 0 : _item$coinChainNames4.call(_item$coinChainNames5, Boolean);
    }, getNativeCoinPrice = function() {
      var fn, _ref4 = (fn = regeneratorRuntime.mark((function _callee(networkKey) {
        var _res$networkKey$coinU, _res$networkKey, res;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, (0, _gt_api_tokens__WEBPACK_IMPORTED_MODULE_24__.Am)({
              networkKeyList: [ networkKey ]
            }).catch((function() {
              return {
                list: [ {
                  max_price: "0"
                } ]
              };
            }));

           case 2:
            return res = _context.sent, _context.abrupt("return", null !== (_res$networkKey$coinU = null == res || null === (_res$networkKey = res[networkKey]) || void 0 === _res$networkKey ? void 0 : _res$networkKey.coinUnitPrice) && void 0 !== _res$networkKey$coinU ? _res$networkKey$coinU : "0");

           case 4:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })), function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      });
      return function(_x2) {
        return _ref4.apply(this, arguments);
      };
    }();
  },
  888745: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Ay: () => GateWalletHid,
      Db: () => incrementHDPath,
      RX: () => deviceType,
      aY: () => CURVE
    });
    __webpack_require__(207452), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(219693), __webpack_require__(752231), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(906048), __webpack_require__(380115), 
    __webpack_require__(714913), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(269193), __webpack_require__(215195), __webpack_require__(929979), 
    __webpack_require__(418665), __webpack_require__(301772), __webpack_require__(953746), 
    __webpack_require__(520861), __webpack_require__(571905), __webpack_require__(285213), 
    __webpack_require__(97182), __webpack_require__(512279), __webpack_require__(639302), 
    __webpack_require__(770147), __webpack_require__(866217), __webpack_require__(697966), 
    __webpack_require__(735186), __webpack_require__(135944), __webpack_require__(644787), 
    __webpack_require__(950632), __webpack_require__(552278), __webpack_require__(614245), 
    __webpack_require__(252492), __webpack_require__(193266), __webpack_require__(537192), 
    __webpack_require__(237220), __webpack_require__(482432), __webpack_require__(632483), 
    __webpack_require__(536696), __webpack_require__(458083), __webpack_require__(64189), 
    __webpack_require__(194009), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(815852), __webpack_require__(804632), __webpack_require__(741412), 
    __webpack_require__(734606), __webpack_require__(597755), __webpack_require__(564216), 
    __webpack_require__(14602);
    var CURVE, deviceType, _ledgerhq_hw_transport_webhid__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(581158), ethers_lib_utils__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(788149), _okxweb3_crypto_lib__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(431927), ethers__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(937457), _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(366248), _okxweb3_coin_tron__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(83353), _solana_web3_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(262643), _lib_tool_substrate_subWalletMethod__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(163363), _src_sei_background_constants_index__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(266895), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(259159), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _setPrototypeOf(o, p) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        return o.__proto__ = p, o;
      }, _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), 
          !0;
        } catch (e) {
          return !1;
        }
      }();
      return function() {
        var result, Super = _getPrototypeOf(Derived);
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return function(self, call) {
          if (call && ("object" === _typeof(call) || "function" == typeof call)) return call;
          if (void 0 !== call) throw new TypeError("Derived constructors may only return object or undefined");
          return _assertThisInitialized(self);
        }(this, result);
      };
    }
    function _assertThisInitialized(self) {
      if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self;
    }
    function _getPrototypeOf(o) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      }, _getPrototypeOf(o);
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    !function(CURVE) {
      CURVE[CURVE.CURVE_ED25519 = 4] = "CURVE_ED25519", CURVE[CURVE.CURVE_ED25519_CARDNAO = 2] = "CURVE_ED25519_CARDNAO", 
      CURVE[CURVE.CURVE_SECP256K1 = 0] = "CURVE_SECP256K1", CURVE[CURVE.CURVE_SECP256R1 = 1] = "CURVE_SECP256R1";
    }(CURVE || (CURVE = {})), function(deviceType) {
      deviceType[deviceType.gate = 0] = "gate", deviceType[deviceType.ledger = 1] = "ledger";
    }(deviceType || (deviceType = {}));
    var ACCEPT_STATUSES = [ 36864 ], ERROR_CODES = {
      1: "U2F: Unknown",
      2: "U2F: Bad request",
      3: "U2F: Configuration unsupported",
      4: "U2F: Device Ineligible",
      5: "U2F: Timeout",
      14: "Timeout",
      9999: "Not found",
      36864: "OK",
      36865: "Device is busy",
      25600: "Execution Error",
      26368: "Wrong Length",
      27010: "Empty Buffer",
      27011: "Output buffer too small",
      27012: "Data is invalid",
      27013: "Conditions not satisfied",
      27014: "Transaction rejected",
      27264: "Bad key handle",
      27392: "Invalid P1/P2",
      27904: "Instruction not supported",
      28160: "The app does not seem to be open",
      28416: "Unknown error",
      28417: "Sign/verify error"
    }, GateWalletHid = function(_TransportWebHid) {
      !function(subClass, superClass) {
        if ("function" != typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function");
        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            writable: !0,
            configurable: !0
          }
        }), Object.defineProperty(subClass, "prototype", {
          writable: !1
        }), superClass && _setPrototypeOf(subClass, superClass);
      }(GateWalletHid, _TransportWebHid);
      var Constructor, protoProps, staticProps, _getAddress, _getAtomAddress, _getSolanaAddress, _getTronAddress, _getBtcAddress, _getXpub, _request, _super = _createSuper(GateWalletHid);
      function GateWalletHid(device, transport) {
        var _this;
        return function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, GateWalletHid), _defineProperty(_assertThisInitialized(_this = _super.call(this, device)), "ROOT_HD_PATH", [ 2147483692 ]), 
        _defineProperty(_assertThisInitialized(_this), "transport", null), _this.transport = transport, 
        _this;
      }
      return Constructor = GateWalletHid, protoProps = [ {
        key: "errorMessage",
        value: function(code) {
          return ERROR_CODES[code] || "Unknown error code";
        }
      }, {
        key: "makeHdPath",
        value: function(path) {
          var result = [];
          if (!path) return result;
          for (var pathArray = path.split("/"), i = 1; i < pathArray.length; i++) {
            var item = pathArray[i], number = 0;
            if (item.length > 1 && item.indexOf("'") > -1) {
              var numberStr = item.substring(0, item.length - 1);
              number = parseInt(numberStr), number += 2147483648;
            } else number += parseInt(item);
            result.push(number);
          }
          return result;
        }
      }, {
        key: "serializeHDPath",
        value: function(path) {
          if (!path || path.length < 1) throw new Error("Invalid path.");
          if (path.length > 10) throw new Error("Invalid path. Length should be <= 10");
          var buf = Buffer.alloc(1 + 4 * path.length);
          buf.writeUInt8(path.length);
          for (var i = 0; i < path.length; i++) {
            var v = path[i];
            buf.writeUInt32LE(v, 1 + 4 * i);
          }
          return buf;
        }
      }, {
        key: "request",
        value: (_request = _asyncToGenerator(regeneratorRuntime.mark((function _callee(path, index, data) {
          var _result$signature, hdPath, result;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return hdPath = this.makeHdPath(path || "m/0"), _context.next = 3, this.requestSig(hdPath, index, data);

             case 3:
              return result = _context.sent, _context.abrupt("return", null == result || null === (_result$signature = result.signature) || void 0 === _result$signature ? void 0 : _result$signature.toString("hex"));

             case 5:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x, _x2, _x3) {
          return _request.apply(this, arguments);
        })
      }, {
        key: "requestSig",
        value: function(hdPath, index, data) {
          var _this$transport, _this2 = this;
          if ("number" != typeof index || index < 0) throw new Error("index expected non-negative integer");
          var bufHdPath = this.serializeHDPath(hdPath), bufIndex = Buffer.alloc(4);
          bufIndex.writeInt32LE(index);
          var bufData = "string" == typeof data ? Buffer.from(data, "hex") : data, bufDataLen = Buffer.from([ bufData.length ]), buf = Buffer.concat([ bufHdPath, bufIndex, bufDataLen, bufData ]);
          return null === (_this$transport = this.transport) || void 0 === _this$transport ? void 0 : _this$transport.send(188, 3, 0, 0, buf, ACCEPT_STATUSES).then((function(response) {
            var apduResponse = Buffer.from(response, "hex"), returnCode = apduResponse.slice(-2), result = {
              code: 256 * returnCode[0] + returnCode[1],
              message: "",
              signature: apduResponse.slice(0, apduResponse.length - 2)
            };
            return result.message = _this2.errorMessage(result.code), result;
          })).catch((function(e) {
            throw ERROR_CODES[e.statusCode] && (e.message = _this2.errorMessage(e.statusCode), 
            e.statusText = e.message), e;
          }));
        }
      }, {
        key: "getXpub",
        value: (_getXpub = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(path, curve) {
          var hdPath;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return hdPath = this.makeHdPath(path || "m/0"), _context2.abrupt("return", this.getPublicKey(hdPath, curve).then((function(result) {
                return curve === CURVE.CURVE_SECP256K1 || curve === CURVE.CURVE_SECP256R1 ? result.pk : curve === CURVE.CURVE_ED25519 ? Buffer.concat([ result.pk, result.chainCode ]) : curve === CURVE.CURVE_ED25519_CARDNAO ? Buffer.concat([ result.pk.length > 32 ? result.pk.slice(-32) : result.pk, result.chainCode ]) : null;
              })));

             case 2:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x4, _x5) {
          return _getXpub.apply(this, arguments);
        })
      }, {
        key: "getBtcAddress",
        value: (_getBtcAddress = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(path, getCompressPublicKeyUint8List) {
          var _yield$getWasm, BitcoinAddress, CoinType, PublicKey, PublicKeyType, CoinTypeExt, Hash, BitcoinScript, Base58, SegwitAddress, pub, wallet, address, prefix, addr44, _prefix, publicKeyHash, script, scriptHash, data, scriptHashArr, _address, type, addr84, addrStr84;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return _context3.next = 2, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_61__.t)();

             case 2:
              if (_yield$getWasm = _context3.sent, BitcoinAddress = _yield$getWasm.BitcoinAddress, 
              CoinType = _yield$getWasm.CoinType, PublicKey = _yield$getWasm.PublicKey, PublicKeyType = _yield$getWasm.PublicKeyType, 
              CoinTypeExt = _yield$getWasm.CoinTypeExt, Hash = _yield$getWasm.Hash, BitcoinScript = _yield$getWasm.BitcoinScript, 
              Base58 = _yield$getWasm.Base58, SegwitAddress = _yield$getWasm.SegwitAddress, pub = PublicKey.createWithData(getCompressPublicKeyUint8List, PublicKeyType.secp256k1), 
              !(path.indexOf("m/86'") > -1)) {
                _context3.next = 27;
                break;
              }
              return _context3.prev = 15, wallet = new _okxweb3_coin_bitcoin__WEBPACK_IMPORTED_MODULE_56__.BtcWallet, 
              _context3.next = 19, wallet.getAddressByPublicKey({
                addressType: "segwit_taproot",
                publicKey: pub.description()
              });

             case 19:
              if (!(address = _context3.sent)) {
                _context3.next = 22;
                break;
              }
              return _context3.abrupt("return", {
                address,
                publicKey: pub.description(),
                accountFormat: "BIP86",
                derivationPath: path
              });

             case 22:
              _context3.next = 27;
              break;

             case 24:
              return _context3.prev = 24, _context3.t0 = _context3.catch(15), _context3.abrupt("return", Promise.reject(_context3.t0));

             case 27:
              if (!(path.indexOf("m/44'") > -1)) {
                _context3.next = 31;
                break;
              }
              return prefix = CoinTypeExt.p2pkhPrefix(CoinType.bitcoin), addr44 = BitcoinAddress.createWithPublicKey(pub, prefix), 
              _context3.abrupt("return", {
                address: addr44.description(),
                publicKey: pub.description(),
                accountFormat: "BIP44",
                derivationPath: path
              });

             case 31:
              if (!(path.indexOf("m/49'") > -1)) {
                _context3.next = 41;
                break;
              }
              return _prefix = CoinTypeExt.p2shPrefix(CoinType.bitcoin), publicKeyHash = Hash.sha256RIPEMD(pub.data()), 
              script = BitcoinScript.buildPayToWitnessPubkeyHash(publicKeyHash), scriptHash = Hash.sha256RIPEMD(script.data()), 
              data = [], scriptHashArr = Array.from(scriptHash), data = data.concat([ _prefix ]).concat(scriptHashArr), 
              _address = Base58.encode(new Uint8Array(data).buffer), _context3.abrupt("return", {
                address: _address,
                publicKey: pub.description(),
                accountFormat: "BIP49",
                derivationPath: path
              });

             case 41:
              if (!(path.indexOf("m/84'") > -1)) {
                _context3.next = 46;
                break;
              }
              return type = CoinTypeExt.hrp(CoinType.bitcoin), addr84 = SegwitAddress.createWithPublicKey(type, pub), 
              addrStr84 = addr84.description(), _context3.abrupt("return", {
                address: addrStr84,
                publicKey: pub.description(),
                accountFormat: "BIP84",
                derivationPath: path
              });

             case 46:
              return _context3.abrupt("return", Promise.reject("Not found address"));

             case 47:
             case "end":
              return _context3.stop();
            }
          }), _callee3, null, [ [ 15, 24 ] ]);
        }))), function(_x6, _x7) {
          return _getBtcAddress.apply(this, arguments);
        })
      }, {
        key: "getTronAddress",
        value: (_getTronAddress = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(path, getCompressPublicKeyUint8List) {
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _context4.abrupt("return", {
                extendedPath: path,
                address: _okxweb3_coin_tron__WEBPACK_IMPORTED_MODULE_57__.addressFromPublic(getCompressPublicKeyUint8List.toString("hex")),
                publicKey: getCompressPublicKeyUint8List.toString("hex")
              });

             case 1:
             case "end":
              return _context4.stop();
            }
          }), _callee4);
        }))), function(_x8, _x9) {
          return _getTronAddress.apply(this, arguments);
        })
      }, {
        key: "getSolanaAddress",
        value: (_getSolanaAddress = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(path, getCompressPublicKeyUint8List) {
          var publicKey;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.prev = 0, publicKey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_58__.J3(getCompressPublicKeyUint8List), 
              _context5.abrupt("return", {
                extendedPath: path,
                address: publicKey.toBase58(),
                publicKey
              });

             case 5:
              return _context5.prev = 5, _context5.t0 = _context5.catch(0), _context5.abrupt("return", null);

             case 8:
             case "end":
              return _context5.stop();
            }
          }), _callee5, null, [ [ 0, 5 ] ]);
        }))), function(_x10, _x11) {
          return _getSolanaAddress.apply(this, arguments);
        })
      }, {
        key: "getAtomAddress",
        value: (_getAtomAddress = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(path, publicKey, netKey) {
          var _COSMOS_INFO$netKey, _COSMOS_INFO$netKey$b, hrp, pubKey, address;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return _context6.prev = 0, hrp = null === (_COSMOS_INFO$netKey = _src_sei_background_constants_index__WEBPACK_IMPORTED_MODULE_60__.ok[netKey]) || void 0 === _COSMOS_INFO$netKey || null === (_COSMOS_INFO$netKey$b = _COSMOS_INFO$netKey.bech32Config) || void 0 === _COSMOS_INFO$netKey$b ? void 0 : _COSMOS_INFO$netKey$b.bech32PrefixAccAddr, 
              pubKey = publicKey.toString("hex"), _context6.next = 5, (0, _lib_tool_substrate_subWalletMethod__WEBPACK_IMPORTED_MODULE_59__.Zr)({
                publicKey: pubKey,
                hrp
              });

             case 5:
              return address = _context6.sent, _context6.abrupt("return", {
                extendedPath: path,
                address,
                publicKey: publicKey.toString("hex")
              });

             case 9:
              return _context6.prev = 9, _context6.t0 = _context6.catch(0), _context6.abrupt("return", null);

             case 12:
             case "end":
              return _context6.stop();
            }
          }), _callee6, null, [ [ 0, 9 ] ]);
        }))), function(_x12, _x13, _x14) {
          return _getAtomAddress.apply(this, arguments);
        })
      }, {
        key: "getAddress",
        value: (_getAddress = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(path, curve, networkKey) {
          var publicKeyBuffer, getCompressPublicKeyUint8List, functionMap, secp256k1, noCompressPk;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              return _context7.next = 2, this.getXpub(path, curve);

             case 2:
              if (publicKeyBuffer = _context7.sent, !_src_sei_background_constants_index__WEBPACK_IMPORTED_MODULE_60__.ok[networkKey]) {
                _context7.next = 5;
                break;
              }
              return _context7.abrupt("return", this.getAtomAddress(path, publicKeyBuffer, networkKey));

             case 5:
              if (getCompressPublicKeyUint8List = "SOL" === networkKey ? publicKeyBuffer.subarray(1, 33) : publicKeyBuffer.subarray(0, 33), 
              !(functionMap = {
                BTC: this.getBtcAddress.bind(this),
                TRX: this.getTronAddress.bind(this),
                SOL: this.getSolanaAddress.bind(this)
              })[networkKey]) {
                _context7.next = 9;
                break;
              }
              return _context7.abrupt("return", functionMap[networkKey](path, getCompressPublicKeyUint8List));

             case 9:
              return secp256k1 = _okxweb3_crypto_lib__WEBPACK_IMPORTED_MODULE_54__.elliptic.curves.secp256k1, 
              noCompressPk = secp256k1.curve.decodePoint(getCompressPublicKeyUint8List).encode(!1), 
              _context7.abrupt("return", {
                extendedPath: path,
                address: (0, ethers_lib_utils__WEBPACK_IMPORTED_MODULE_53__.computeAddress)(noCompressPk),
                publicKey: (0, ethers_lib_utils__WEBPACK_IMPORTED_MODULE_53__.computePublicKey)(noCompressPk)
              });

             case 12:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x15, _x16, _x17) {
          return _getAddress.apply(this, arguments);
        })
      }, {
        key: "getPublicKey",
        value: function(hdPath, curve) {
          var _this3 = this;
          if (!this.transport) return this.errorMessage(9999);
          var buffer1 = Buffer.from([ curve ]), buffer2 = this.serializeHDPath(hdPath);
          return this.transport.send(188, 1, 0, 0, Buffer.concat([ buffer1, buffer2 ]), ACCEPT_STATUSES).then((function(response) {
            var apduResponse = Buffer.from(response, "hex"), returnCode = apduResponse.slice(-2), result = {}, pubKeyLen = apduResponse.length > 97 ? 65 : 33;
            return result.pk = apduResponse.slice(0, pubKeyLen), result.chainCode = apduResponse.slice(pubKeyLen, pubKeyLen + 32), 
            result.code = 256 * returnCode[0] + returnCode[1], result.message = _this3.errorMessage(result.code), 
            result;
          })).catch((function(e) {
            throw ERROR_CODES[e.statusCode] && (e.message = _this3.errorMessage(e.statusCode), 
            e.statusText = e.message), e;
          }));
        }
      }, {
        key: "serializeRawData",
        value: function(raw) {
          var buffer = Buffer.alloc(raw.length + 4);
          return buffer.writeUInt32LE(raw.length), raw.copy(buffer, 4), buffer;
        }
      }, {
        key: "serializeCurrType",
        value: function(currType) {
          var buffer = Buffer.alloc(1 + currType.length);
          return buffer.writeUInt8(currType.length), Buffer.from(currType).copy(buffer, 1), 
          buffer;
        }
      }, {
        key: "serializeExtraJson",
        value: function(extra) {
          if (!extra) return Buffer.from([ 0, 0 ]);
          var s = JSON.stringify(extra), buffer = Buffer.alloc(s.length + 2);
          return buffer.writeUInt16LE(s.length, 0), buffer.write(s, 2, "utf-8"), buffer;
        }
      }, {
        key: "serializeTokenInfoList",
        value: function() {
          var tokens = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], buffers = [];
          buffers.push(Buffer.from([ tokens.length ]));
          for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];
            buffers.push(Buffer.from([ token.type || 0 ])), token.address ? (buffers.push(Buffer.from([ token.address.length ])), 
            buffers.push(Buffer.from(token.address))) : buffers.push(Buffer.from([ 0 ])), token.symbol ? (buffers.push(Buffer.from([ token.symbol.length ])), 
            buffers.push(Buffer.from(token.symbol))) : buffers.push(Buffer.from([ 0 ])), buffers.push(Buffer.from([ Number(token.decimals || 0) ]));
          }
          return Buffer.concat(buffers);
        }
      }, {
        key: "serializeCoinInfoList",
        value: function() {
          var coins = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], buffers = [];
          buffers.push(Buffer.from([ coins.length ]));
          for (var i = 0; i < coins.length; i++) {
            var coin = coins[i];
            buffers.push(Buffer.from([ coin.type || 0 ])), coin.cate ? (buffers.push(Buffer.from([ coin.cate.length ])), 
            buffers.push(Buffer.from(coin.cate))) : buffers.push(Buffer.from([ 0 ])), coin.symbol ? (buffers.push(Buffer.from([ coin.symbol.length ])), 
            buffers.push(Buffer.from(coin.symbol))) : buffers.push(Buffer.from([ 0 ])), buffers.push(Buffer.from([ Number(coin.decimals || 0) ]));
            var buffer = Buffer.alloc(4);
            buffer.writeUInt32LE(coin.pubKeyHash || 0), buffers.push(buffer), (buffer = Buffer.alloc(4)).writeUInt32LE(coin.scriptHash || 0), 
            buffers.push(buffer), (buffer = Buffer.alloc(4)).writeUInt32LE(Number(coin.chainId || 0)), 
            buffers.push(buffer);
          }
          return Buffer.concat(buffers);
        }
      }, {
        key: "sign",
        value: function(currType, raw, ins, extra) {
          var _this4 = this;
          raw = Buffer.from(raw, "string" == typeof raw ? "hex" : void 0);
          for (var buffer = Buffer.concat([ this.serializeCurrType(currType), this.serializeRawData(raw), this.serializeExtraJson(extra) ]), chunks = [], i = 0; i < buffer.length; i += 170) {
            var end = i + 170;
            i > buffer.length && (end = buffer.length), chunks.push(buffer.slice(i, end));
          }
          return function doSend() {
            var _this4$transport, index = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            return index = index || 0, null === (_this4$transport = _this4.transport) || void 0 === _this4$transport ? void 0 : _this4$transport.send(188, ins, index, chunks.length, chunks[index], ACCEPT_STATUSES).then((function(response) {
              var apduResponse = Buffer.from(response, "hex"), returnCode = apduResponse.slice(-2), result = {};
              return result.code = 256 * returnCode[0] + returnCode[1], result.message = _this4.errorMessage(result.code), 
              result.sign = !!apduResponse[apduResponse.length - 3], result;
            })).then((function(result) {
              return ++index < chunks.length ? doSend(index) : result;
            }));
          }().catch((function(e) {
            throw ERROR_CODES[e.statusCode] && (e.message = _this4.errorMessage(e.statusCode), 
            e.statusText = e.message), e;
          }));
        }
      }, {
        key: "signHash",
        value: function(curve, hdPath, hash, signature) {
          var _this$transport2, _this5 = this, bufCurve = Buffer.from([ curve ]), bufHdPath = this.serializeHDPath(hdPath), bufHash = "string" == typeof hash ? Buffer.from(hash, "hex") : hash, bufHashLen = Buffer.from([ bufHash.length ]), bufSignature = "string" == typeof signature ? Buffer.from(signature, "hex") : signature, buf = Buffer.concat([ bufCurve, bufHdPath, bufHashLen, bufHash, bufSignature ]);
          return null === (_this$transport2 = this.transport) || void 0 === _this$transport2 ? void 0 : _this$transport2.send(188, 11, 0, 0, buf, ACCEPT_STATUSES).then((function(response) {
            var apduResponse = Buffer.from(response, "hex"), returnCode = apduResponse.slice(-2), result = {};
            return result.code = 256 * returnCode[0] + returnCode[1], result.message = _this5.errorMessage(result.code), 
            result.signature = apduResponse.slice(0, apduResponse.length - 2), result;
          })).catch((function(e) {
            throw ERROR_CODES[e.statusCode] && (e.message = _this5.errorMessage(e.statusCode), 
            e.statusText = e.message), e;
          }));
        }
      }, {
        key: "signMessage",
        value: function(currType, message) {
          return this.sign(currType, Buffer.from(message), 4);
        }
      }, {
        key: "signTxRaw",
        value: function(currType, txRaw, extra) {
          return this.sign(currType, txRaw, 2, extra);
        }
      }, {
        key: "hexToMsgSignature",
        value: function(type, sig, chainId) {
          var rs = sig.substring(2), r = rs.substring(0, 64), s = rs.substring(64, 128), v = ethers__WEBPACK_IMPORTED_MODULE_55__.gH.from("0x".concat(sig.substring(0, 2))).toNumber();
          type === deviceType.gate && (v -= 27);
          var chainIdV = null != chainId ? v + (2 * chainId + 35) : v;
          return {
            r: "0x".concat(r),
            s: "0x".concat(s),
            v: type === deviceType.gate ? chainIdV : v
          };
        }
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), GateWalletHid;
    }(_ledgerhq_hw_transport_webhid__WEBPACK_IMPORTED_MODULE_52__.A), incrementHDPath = function(chainName, chainPath, newAccountIndex) {
      return "SOL" === chainName ? "m/44'/501'/".concat(newAccountIndex, "'/0'") : "".concat(chainPath, "/").concat(newAccountIndex);
    };
  },
  890920: () => {},
  898879: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      getTransactionByHashId: () => getTransactionByHashId,
      getVenomBalance: () => getVenomBalance,
      getVenomTransactionFee: () => getVenomTransactionFee,
      sendTransaction: () => sendTransaction
    });
    __webpack_require__(752231), __webpack_require__(194009), __webpack_require__(579389), 
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(815852), __webpack_require__(407899), __webpack_require__(700017), 
    __webpack_require__(110678), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(103101), __webpack_require__(936012), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(207452);
    var _eversdk_core__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(11054), _venomWallet__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(574867), _method__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(326394), _api_api__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(653360), _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(700313), _gate_gui__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(279386), _lang_string__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(212864), _dataUtils__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(845404);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var abiParams = (0, _eversdk_core__WEBPACK_IMPORTED_MODULE_22__.abiContract)({
      "ABI version": 2,
      version: "2.3",
      header: [ "pubkey", "time", "expire" ],
      functions: [ {
        name: "sendTransaction",
        inputs: [ {
          name: "dest",
          type: "address"
        }, {
          name: "value",
          type: "uint128"
        }, {
          name: "bounce",
          type: "bool"
        }, {
          name: "flags",
          type: "uint8"
        }, {
          name: "payload",
          type: "cell"
        } ],
        outputs: []
      }, {
        name: "sendTransactionRaw",
        inputs: [ {
          name: "flags",
          type: "uint8"
        }, {
          name: "message",
          type: "cell"
        } ],
        outputs: []
      } ],
      fields: [ {
        name: "_pubkey",
        type: "uint256"
      }, {
        name: "_timestamp",
        type: "uint64"
      } ]
    }), getVenomPublcKey = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(accountAddress) {
        var _accountInfo$VENOM, _accountInfo$VENOM$, _yield$method$byAddre, accountInfo, accountPublicKey;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return _context.next = 2, _method__WEBPACK_IMPORTED_MODULE_24__.byAddressGetWallet(accountAddress, "VENOM");

           case 2:
            return _yield$method$byAddre = _context.sent, accountInfo = _yield$method$byAddre.accountInfo, 
            accountPublicKey = null == accountInfo || null === (_accountInfo$VENOM = accountInfo.VENOM) || void 0 === _accountInfo$VENOM || null === (_accountInfo$VENOM$ = _accountInfo$VENOM[0]) || void 0 === _accountInfo$VENOM$ ? void 0 : _accountInfo$VENOM$.accountPublicKey, 
            _context.abrupt("return", accountPublicKey);

           case 6:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }(), isActive = function(state) {
      return 1 == state;
    }, getVenomBalance = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(coinItem, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _res$result, _res$result$data, _res$result$data$bloc, _res$result$data$bloc2, _res$result$data$bloc3, config, accountAddress, coinPrecision, client, res, balance, venomBalance;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _context2.prev = 0, _context2.next = 3, (0, _venomWallet__WEBPACK_IMPORTED_MODULE_23__.zj)(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 3:
            return config = _context2.sent, accountAddress = coinItem.coinTransferFromAddress, 
            coinPrecision = coinItem.coinPrecision, client = new _eversdk_core__WEBPACK_IMPORTED_MODULE_22__.TonClient(config), 
            _context2.next = 9, client.net.query({
              query: "query getBalance($address: String!) {blockchain {account(address: $address) {info {balance}}}}",
              variables: {
                address: accountAddress
              }
            });

           case 9:
            return res = _context2.sent, balance = null == res || null === (_res$result = res.result) || void 0 === _res$result || null === (_res$result$data = _res$result.data) || void 0 === _res$result$data || null === (_res$result$data$bloc = _res$result$data.blockchain) || void 0 === _res$result$data$bloc || null === (_res$result$data$bloc2 = _res$result$data$bloc.account) || void 0 === _res$result$data$bloc2 || null === (_res$result$data$bloc3 = _res$result$data$bloc2.info) || void 0 === _res$result$data$bloc3 ? void 0 : _res$result$data$bloc3.balance, 
            venomBalance = _method__WEBPACK_IMPORTED_MODULE_24__.dataOperation(parseInt(balance, 16), Math.pow(10, coinPrecision), "/"), 
            _context2.abrupt("return", venomBalance);

           case 15:
            return _context2.prev = 15, _context2.t0 = _context2.catch(0), _context2.abrupt("return", null);

           case 18:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 0, 15 ] ]);
      })));
      return function(_x2, _x3, _x4, _x5) {
        return _ref2.apply(this, arguments);
      };
    }(), getVenomTransactionFee = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(sendInfo, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var _fromQuery$result, _fromQuery$result$dat, _fromQuery$result$dat2, _fromQuery$result$dat3, _fromQuery$result$dat4, _mockQuery$result, _mockQuery$result$dat, _mockQuery$result$dat2, _mockQuery$result$dat3, _mockQuery$result$dat4, _fee$account_fees, config, client, fromAddress, toAddress, coinTransferAmount, coinPrecision, amount, keypair, mockFromAddress, getBalanceQuery, fromQuery, mockQuery, accType, accountState, isInit, encodeBoc, initData, encodeStateInit, stateInit, messageBody, body, transferMsg, msg, tvmRes, fee, account_fees, gasFee, feeMoney;
        return regeneratorRuntime.wrap((function(_context3) {
          for (;;) switch (_context3.prev = _context3.next) {
           case 0:
            return _context3.next = 2, (0, _venomWallet__WEBPACK_IMPORTED_MODULE_23__.zj)(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return config = _context3.sent, client = new _eversdk_core__WEBPACK_IMPORTED_MODULE_22__.TonClient(config), 
            fromAddress = sendInfo.coinTransferFromAddress, toAddress = sendInfo.coinTransferToAddress, 
            coinTransferAmount = sendInfo.coinTransferAmount, coinPrecision = sendInfo.coinPrecision, 
            amount = _method__WEBPACK_IMPORTED_MODULE_24__.dataOperation(coinTransferAmount, Math.pow(10, coinPrecision)), 
            keypair = {
              public: "1cdd50cfeab67f1e10e71840d4e3c597b2414fc3127312de2b224708abe765fc",
              secret: "8981e648c5e6563cd47762d0331ece0bb2814766844f05e098175e6f6b0dd3b2"
            }, _context3.next = 12, (0, _venomWallet__WEBPACK_IMPORTED_MODULE_23__.aM)(keypair.public, client);

           case 12:
            return mockFromAddress = _context3.sent, getBalanceQuery = "query getBalance($address: String!) {blockchain {account(address: $address) {info {acc_type,boc}}}}", 
            _context3.next = 16, client.net.query({
              query: getBalanceQuery,
              variables: {
                address: fromAddress
              }
            });

           case 16:
            return fromQuery = _context3.sent, _context3.next = 19, client.net.query({
              query: getBalanceQuery,
              variables: {
                address: mockFromAddress
              }
            });

           case 19:
            return mockQuery = _context3.sent, accType = null == fromQuery || null === (_fromQuery$result = fromQuery.result) || void 0 === _fromQuery$result || null === (_fromQuery$result$dat = _fromQuery$result.data) || void 0 === _fromQuery$result$dat || null === (_fromQuery$result$dat2 = _fromQuery$result$dat.blockchain) || void 0 === _fromQuery$result$dat2 || null === (_fromQuery$result$dat3 = _fromQuery$result$dat2.account) || void 0 === _fromQuery$result$dat3 || null === (_fromQuery$result$dat4 = _fromQuery$result$dat3.info) || void 0 === _fromQuery$result$dat4 ? void 0 : _fromQuery$result$dat4.boc, 
            accountState = null == mockQuery || null === (_mockQuery$result = mockQuery.result) || void 0 === _mockQuery$result || null === (_mockQuery$result$dat = _mockQuery$result.data) || void 0 === _mockQuery$result$dat || null === (_mockQuery$result$dat2 = _mockQuery$result$dat.blockchain) || void 0 === _mockQuery$result$dat2 || null === (_mockQuery$result$dat3 = _mockQuery$result$dat2.account) || void 0 === _mockQuery$result$dat3 || null === (_mockQuery$result$dat4 = _mockQuery$result$dat3.info) || void 0 === _mockQuery$result$dat4 ? void 0 : _mockQuery$result$dat4.boc, 
            isInit = isActive(accType), _context3.next = 25, client.abi.encode_boc({
              params: [ {
                name: "publicKey",
                type: "uint256"
              }, {
                name: "timestamp",
                type: "uint64"
              } ],
              data: {
                publicKey: _method__WEBPACK_IMPORTED_MODULE_24__.addHexPrefix(keypair.public),
                timestamp: 0
              }
            });

           case 25:
            return encodeBoc = _context3.sent, initData = null == encodeBoc ? void 0 : encodeBoc.boc, 
            _context3.next = 29, client.boc.encode_state_init({
              code: _venomWallet__WEBPACK_IMPORTED_MODULE_23__.a6,
              data: initData
            });

           case 29:
            return encodeStateInit = _context3.sent, stateInit = null == encodeStateInit ? void 0 : encodeStateInit.state_init, 
            _context3.next = 33, client.abi.encode_message_body({
              abi: abiParams,
              address: mockFromAddress,
              call_set: {
                function_name: "sendTransaction",
                input: {
                  dest: toAddress,
                  value: amount,
                  bounce: !1,
                  flags: 3,
                  payload: ""
                }
              },
              is_internal: !1,
              signer: {
                keys: {
                  secret: _method__WEBPACK_IMPORTED_MODULE_24__.removeHexPrefix(keypair.secret),
                  public: _method__WEBPACK_IMPORTED_MODULE_24__.removeHexPrefix(keypair.public)
                },
                type: "Keys"
              }
            });

           case 33:
            return messageBody = _context3.sent, body = null == messageBody ? void 0 : messageBody.body, 
            _context3.next = 37, client.boc.encode_external_in_message({
              dst: mockFromAddress,
              body,
              init: isInit ? null : stateInit
            });

           case 37:
            return transferMsg = _context3.sent, msg = null == transferMsg ? void 0 : transferMsg.message, 
            _context3.next = 41, client.tvm.run_executor({
              message: msg,
              skip_transaction_check: !0,
              account: (0, _eversdk_core__WEBPACK_IMPORTED_MODULE_22__.accountForExecutorAccount)(accountState, !0),
              abi: abiParams,
              return_updated_account: !0
            });

           case 41:
            return tvmRes = _context3.sent, fee = tvmRes.fees, account_fees = null !== (_fee$account_fees = null == fee ? void 0 : fee.account_fees) && void 0 !== _fee$account_fees ? _fee$account_fees : 0, 
            gasFee = _method__WEBPACK_IMPORTED_MODULE_24__.dataOperation(account_fees, Math.pow(10, coinPrecision), "/"), 
            _context3.next = 47, calculationVenomFeeMoney(sendInfo, gasFee);

           case 47:
            return feeMoney = _context3.sent, _context3.abrupt("return", _objectSpread(_objectSpread({}, {
              gasFee
            }), feeMoney));

           case 49:
           case "end":
            return _context3.stop();
          }
        }), _callee3);
      })));
      return function(_x6, _x7, _x8, _x9) {
        return _ref3.apply(this, arguments);
      };
    }(), calculationVenomFeeMoney = function() {
      var _ref4 = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(coinItem, gasFee) {
        var coinValue, cacheData, dealPrice, money, moneyText, coinInfo, _coinInfo$data, code, data, item, _dealPrice, _money, _moneyText;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            return coinValue = coinItem.coinNetworkKey, _context4.next = 3, _method__WEBPACK_IMPORTED_MODULE_24__.getDefiItem("cacheSendData");

           case 3:
            if (!("coinUnitPrice" in (cacheData = _context4.sent)) || null == cacheData || !cacheData.coinUnitPrice) {
              _context4.next = 11;
              break;
            }
            return dealPrice = _method__WEBPACK_IMPORTED_MODULE_24__.getDecimalsUnitPrice(cacheData.coinUnitPrice), 
            money = _method__WEBPACK_IMPORTED_MODULE_24__.dataOperation(Number(dealPrice), Number(gasFee), "multiplication", !0), 
            moneyText = gasFee + " " + coinItem.coinNetworkSymbol + " ≈ $" + money, _context4.abrupt("return", {
              money,
              moneyText
            });

           case 11:
            return _context4.next = 13, _api_api__WEBPACK_IMPORTED_MODULE_25__.getInfoCoin({
              networkKeyList: [ coinValue ]
            });

           case 13:
            if (coinInfo = _context4.sent, _coinInfo$data = coinInfo.data, code = _coinInfo$data.code, 
            data = _coinInfo$data.data, 0 !== code) {
              _context4.next = 27;
              break;
            }
            if ("{}" === JSON.stringify(data)) {
              _context4.next = 27;
              break;
            }
            if (!(item = data[coinValue]) || !item.coinUnitPrice) {
              _context4.next = 26;
              break;
            }
            return _dealPrice = _method__WEBPACK_IMPORTED_MODULE_24__.getDecimalsUnitPrice(item.coinUnitPrice), 
            _money = _method__WEBPACK_IMPORTED_MODULE_24__.dataOperation(Number(_dealPrice), Number(gasFee), "multiplication", !0), 
            _moneyText = gasFee + " " + coinItem.coinNetworkSymbol + " ≈ $" + _money, _method__WEBPACK_IMPORTED_MODULE_24__.setDefiData({
              cacheSendData: _objectSpread(_objectSpread({}, cacheData), {
                coinUnitPrice: _dealPrice
              })
            }), _context4.abrupt("return", {
              money: _money,
              moneyText: _moneyText
            });

           case 26:
            return _context4.abrupt("return", {
              money: "",
              moneyText: ""
            });

           case 27:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })));
      return function(_x10, _x11) {
        return _ref4.apply(this, arguments);
      };
    }(), signTransaction = function() {
      var _ref5 = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(fromAddress, toAddress, privateKeyHex, amount, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var config, client, publicKeyHex, _resultOfQuery$result, _resultOfQuery$result2, _resultOfQuery$result3, _resultOfQuery$result4, _resultOfQuery$result5, resultOfQuery, accountType, isInit, encodeBoc, initData, encodeStateInit, stateInit, messageBody, body, transferMsg;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            return _context5.next = 2, (0, _venomWallet__WEBPACK_IMPORTED_MODULE_23__.zj)(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 2:
            return config = _context5.sent, client = new _eversdk_core__WEBPACK_IMPORTED_MODULE_22__.TonClient(config), 
            _context5.next = 6, getVenomPublcKey(fromAddress);

           case 6:
            return publicKeyHex = _context5.sent, _context5.prev = 7, "query getBalance($address: String!) {blockchain {account(address: $address) {info {acc_type}}}}", 
            _context5.next = 11, client.net.query({
              query: "query getBalance($address: String!) {blockchain {account(address: $address) {info {acc_type}}}}",
              variables: {
                address: fromAddress
              }
            });

           case 11:
            return resultOfQuery = _context5.sent, accountType = null == resultOfQuery || null === (_resultOfQuery$result = resultOfQuery.result) || void 0 === _resultOfQuery$result || null === (_resultOfQuery$result2 = _resultOfQuery$result.data) || void 0 === _resultOfQuery$result2 || null === (_resultOfQuery$result3 = _resultOfQuery$result2.blockchain) || void 0 === _resultOfQuery$result3 || null === (_resultOfQuery$result4 = _resultOfQuery$result3.account) || void 0 === _resultOfQuery$result4 || null === (_resultOfQuery$result5 = _resultOfQuery$result4.info) || void 0 === _resultOfQuery$result5 ? void 0 : _resultOfQuery$result5.acc_type, 
            isInit = isActive(accountType), _context5.next = 16, client.abi.encode_boc({
              params: [ {
                name: "publicKey",
                type: "uint256"
              }, {
                name: "timestamp",
                type: "uint64"
              } ],
              data: {
                publicKey: _method__WEBPACK_IMPORTED_MODULE_24__.addHexPrefix(publicKeyHex),
                timestamp: 0
              }
            });

           case 16:
            return encodeBoc = _context5.sent, initData = null == encodeBoc ? void 0 : encodeBoc.boc, 
            _context5.next = 20, client.boc.encode_state_init({
              code: _venomWallet__WEBPACK_IMPORTED_MODULE_23__.a6,
              data: initData
            });

           case 20:
            return encodeStateInit = _context5.sent, stateInit = null == encodeStateInit ? void 0 : encodeStateInit.state_init, 
            _context5.next = 24, client.abi.encode_message_body({
              abi: abiParams,
              address: fromAddress,
              call_set: {
                function_name: "sendTransaction",
                input: {
                  dest: toAddress,
                  value: amount,
                  bounce: !1,
                  flags: 3,
                  payload: ""
                }
              },
              is_internal: !1,
              signer: {
                keys: {
                  secret: _method__WEBPACK_IMPORTED_MODULE_24__.removeHexPrefix(privateKeyHex),
                  public: _method__WEBPACK_IMPORTED_MODULE_24__.removeHexPrefix(publicKeyHex)
                },
                type: "Keys"
              }
            });

           case 24:
            return messageBody = _context5.sent, body = null == messageBody ? void 0 : messageBody.body, 
            _context5.next = 28, client.boc.encode_external_in_message({
              dst: fromAddress,
              body,
              init: isInit ? null : stateInit
            });

           case 28:
            return transferMsg = _context5.sent, _context5.abrupt("return", null == transferMsg ? void 0 : transferMsg.message);

           case 32:
            _context5.prev = 32, _context5.t0 = _context5.catch(7);

           case 34:
           case "end":
            return _context5.stop();
          }
        }), _callee5, null, [ [ 7, 32 ] ]);
      })));
      return function(_x12, _x13, _x14, _x15, _x16, _x17, _x18) {
        return _ref5.apply(this, arguments);
      };
    }(), sendTransaction = function() {
      var _ref6 = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(coinItem, privateKeyHex, setLoading, history) {
        var isReturn, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime, _result$data, _result$data$data, accountAddress, toAddress, coinTransferAmount, coinPrecision, amount, raw, historyData, result, hash, _args6 = arguments;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return isReturn = _args6.length > 4 && void 0 !== _args6[4] && _args6[4], totalNetworkDic = _args6.length > 5 ? _args6[5] : void 0, 
            rpcUrls = _args6.length > 6 ? _args6[6] : void 0, lastGetSuccessRpcTime = _args6.length > 7 ? _args6[7] : void 0, 
            _context6.prev = 4, accountAddress = coinItem.coinTransferFromAddress, toAddress = coinItem.coinTransferToAddress, 
            coinTransferAmount = coinItem.coinTransferAmount, coinPrecision = coinItem.coinPrecision, 
            amount = _method__WEBPACK_IMPORTED_MODULE_24__.dataOperation(coinTransferAmount, Math.pow(10, coinPrecision)), 
            _context6.next = 12, signTransaction(accountAddress, toAddress, privateKeyHex, amount, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 12:
            if (!(raw = _context6.sent) || !isReturn) {
              _context6.next = 15;
              break;
            }
            return _context6.abrupt("return", raw);

           case 15:
            return historyData = {
              chain_type: null == coinItem ? void 0 : coinItem.coinNetworkKey,
              address: null == coinItem ? void 0 : coinItem.coinTransferFromAddress,
              chain_name: null == coinItem ? void 0 : coinItem.coinNetworkKey,
              token_addr: null == coinItem ? void 0 : coinItem.coinContractAddress,
              token_name: null == coinItem ? void 0 : coinItem.coinFullName,
              token_short_name: null == coinItem ? void 0 : coinItem.coinSimpleName,
              trans_type: "send",
              trans_time: parseInt((new Date).getTime() / 1e3),
              trans_balance: null == coinItem ? void 0 : coinItem.coinTransferAmount,
              trans_balance_usd: null == coinItem ? void 0 : coinItem.coinTransferAmountMoney,
              trans_oppo_address: null == coinItem ? void 0 : coinItem.coinTransferToAddress,
              nonce: null == coinItem ? void 0 : coinItem.coinTransferNonce,
              is_contra: "-" == (null == coinItem ? void 0 : coinItem.coinContractAddress) || null != coinItem && coinItem.coinIsMain ? 0 : 1,
              trans_gas_fee: null == coinItem ? void 0 : coinItem.coinTransferFee,
              memo: null == coinItem ? void 0 : coinItem.memo,
              memo_name: null == coinItem ? void 0 : coinItem.memo_name,
              platform_operation: null == coinItem ? void 0 : coinItem.platform_operation,
              platform_name: null == coinItem ? void 0 : coinItem.platform_name
            }, _context6.next = 18, (0, _walletCore_RPC_chainRequestMethod__WEBPACK_IMPORTED_MODULE_26__.IM)("VENOM", raw, historyData);

           case 18:
            result = _context6.sent, (hash = null == result || null === (_result$data = result.data) || void 0 === _result$data || null === (_result$data$data = _result$data.data) || void 0 === _result$data$data ? void 0 : _result$data$data.hash_id) ? history && (0, 
            _dataUtils__WEBPACK_IMPORTED_MODULE_29__.sendTokenJumpPage)(_objectSpread(_objectSpread({}, coinItem), {
              coinTransferHash: hash
            }), history) : (0, _gate_gui__WEBPACK_IMPORTED_MODULE_27__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_28__.lang_string)("发送失败")
            }), _context6.next = 27;
            break;

           case 23:
            _context6.prev = 23, _context6.t0 = _context6.catch(4), (0, _gate_gui__WEBPACK_IMPORTED_MODULE_27__.Ds)({
              type: "error",
              message: (0, _lang_string__WEBPACK_IMPORTED_MODULE_28__.lang_string)("发送失败")
            }), setLoading(!1);

           case 27:
           case "end":
            return _context6.stop();
          }
        }), _callee6, null, [ [ 4, 23 ] ]);
      })));
      return function(_x19, _x20, _x21, _x22) {
        return _ref6.apply(this, arguments);
      };
    }(), getTransactionByHashId = function() {
      var _ref7 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(transactionHash, totalNetworkDic, rpcUrls, lastGetSuccessRpcTime) {
        var config, client, response, transaction;
        return regeneratorRuntime.wrap((function(_context7) {
          for (;;) switch (_context7.prev = _context7.next) {
           case 0:
            return _context7.prev = 0, _context7.next = 3, (0, _venomWallet__WEBPACK_IMPORTED_MODULE_23__.zj)(totalNetworkDic, rpcUrls, lastGetSuccessRpcTime);

           case 3:
            return config = _context7.sent, client = new _eversdk_core__WEBPACK_IMPORTED_MODULE_22__.TonClient(config), 
            _context7.next = 7, client.net.query_collection({
              collection: "transactions",
              filter: {
                id: {
                  eq: transactionHash
                }
              },
              result: "id status block_id"
            });

           case 7:
            if (!((response = _context7.sent).result.length > 0)) {
              _context7.next = 13;
              break;
            }
            return transaction = response.result[0], _context7.abrupt("return", transaction.status);

           case 13:
            return _context7.abrupt("return", null);

           case 14:
            _context7.next = 19;
            break;

           case 16:
            throw _context7.prev = 16, _context7.t0 = _context7.catch(0), _context7.t0;

           case 19:
           case "end":
            return _context7.stop();
          }
        }), _callee7, null, [ [ 0, 16 ] ]);
      })));
      return function(_x23, _x24, _x25, _x26) {
        return _ref7.apply(this, arguments);
      };
    }();
  },
  910210: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      y: () => createSubWallet,
      s: () => pollTransactionStatus
    });
    __webpack_require__(207452), __webpack_require__(194009), __webpack_require__(718636), 
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(754989), 
    __webpack_require__(579389), __webpack_require__(906048), __webpack_require__(752231), 
    __webpack_require__(334867), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(118772), __webpack_require__(219693), __webpack_require__(714913), 
    __webpack_require__(836611), __webpack_require__(487787), __webpack_require__(863534), 
    __webpack_require__(540590), __webpack_require__(815852), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602);
    var ws = __webpack_require__(378604), Api = __webpack_require__(36061), keyring_keyring = __webpack_require__(150742), toHex = __webpack_require__(225581), util_crypto_crypto = __webpack_require__(447909), generate = __webpack_require__(638220), toMiniSecret = __webpack_require__(825858), extractSuri = __webpack_require__(592686), Notification = __webpack_require__(279386), walletUtil = __webpack_require__(422899), chainRequestMethod = __webpack_require__(700313), bignumber = __webpack_require__(937457), lib_esm = __webpack_require__(647821), api = __webpack_require__(653360), send = __webpack_require__(688280), method = __webpack_require__(326394), account = __webpack_require__(266744), wallet_core = __webpack_require__(259159), custom_http_provider_substrate = __webpack_require__(473804), Buffer = __webpack_require__(348287).Buffer;
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, (arg = descriptor.key, 
        key = void 0, key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string"), "symbol" === _typeof(key) ? key : String(key)), descriptor);
      }
      var arg, key;
    }
    var SubstrateWallet = function() {
      function SubstrateWallet(chainName, chainSS58, totalNetworkDic) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, SubstrateWallet), this.totalNetworkDic = totalNetworkDic, this.chainName = chainName, 
        this.chainSS58 = chainSS58, this.api = null, this.keyring = null, this.signer = null, 
        this.provider = null, this.keyPath = "m/44'/60'/0'/0/";
      }
      var Constructor, protoProps, staticProps, _importKeystoreFromPassword, _generateKeystoreFromPrivateKey, _signMessage, _createSubAccountByKey, _getTransactionByHashId, _sendTransaction, _calculateTransactionFee, _pollTransactionStatus, _getTransactionByHash, _sendSubToken, _checkReceiveAddressIsActive, _getUserNonce, _getBalance, _importWalletFromSeed, _init;
      return Constructor = SubstrateWallet, protoProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee(totalNetworkDic) {
          var defaultKeyType, _totalNetworkDic$this, _totalNetworkDic$this2, _totalNetworkDic$this3, rpcUrl;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _context.prev = 0, _context.next = 3, (0, util_crypto_crypto.C)();

             case 3:
              if (defaultKeyType = this.chainSS58) {
                _context.next = 13;
                break;
              }
              return rpcUrl = null === (_totalNetworkDic$this = totalNetworkDic[this.chainName]) || void 0 === _totalNetworkDic$this || null === (_totalNetworkDic$this2 = _totalNetworkDic$this.endpoints) || void 0 === _totalNetworkDic$this2 || null === (_totalNetworkDic$this3 = _totalNetworkDic$this2.find((function(item) {
                return "rpc" === (null == item ? void 0 : item.type);
              }))) || void 0 === _totalNetworkDic$this3 ? void 0 : _totalNetworkDic$this3.url, 
              this.provider = rpcUrl.startsWith("wss://") ? new ws.E(rpcUrl) : new custom_http_provider_substrate.A(rpcUrl), 
              _context.next = 9, Api.G.create({
                provider: this.provider
              });

             case 9:
              return this.api = _context.sent, _context.next = 12, this.api.isReady;

             case 12:
              defaultKeyType = this.api.registry.chainSS58;

             case 13:
              this.keyring = new keyring_keyring.S({
                type: "sr25519",
                ss58Format: defaultKeyType
              }), _context.next = 18;
              break;

             case 16:
              _context.prev = 16, _context.t0 = _context.catch(0);

             case 18:
             case "end":
              return _context.stop();
            }
          }), _callee, this, [ [ 0, 16 ] ]);
        }))), function(_x) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "generateMnemonic",
        value: function() {
          return (0, generate.a)();
        }
      }, {
        key: "createWalletFromMnemonic",
        value: function(mnemonic) {
          try {
            var wallet = this.keyring.addFromMnemonic(mnemonic), miniSecret = (0, toMiniSecret.F)(mnemonic);
            return new account.QY(this.chainName, 0, wallet.address, (0, toHex.X)(miniSecret), (0, 
            toHex.X)(wallet.publicKey), (0, toHex.X)(miniSecret), (0, toHex.X)(wallet.publicKey), "", this.keyPath);
          } catch (error) {
            return null;
          }
        }
      }, {
        key: "importWalletFromSeed",
        value: (_importWalletFromSeed = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(seed) {
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return _context2.abrupt("return", this.keyring.addFromUri(seed));

             case 1:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _importWalletFromSeed.apply(this, arguments);
        })
      }, {
        key: "getBalance",
        value: (_getBalance = _asyncToGenerator(regeneratorRuntime.mark((function _callee3(address) {
          var decimals, result, balance, balanceBN, humanReadableBalance;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              return decimals = this.api.registry.chainDecimals[0], _context3.next = 3, this.api.query.system.account(address);

             case 3:
              return result = _context3.sent, balance = result.data.free, balanceBN = bignumber.gH.from(balance.toString()), 
              humanReadableBalance = lib_esm.formatUnits(balanceBN, decimals), _context3.abrupt("return", humanReadableBalance);

             case 8:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function(_x3) {
          return _getBalance.apply(this, arguments);
        })
      }, {
        key: "getUserNonce",
        value: (_getUserNonce = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(address) {
          var data;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _context4.next = 2, this.api.query.system.account(address);

             case 2:
              return data = _context4.sent, _context4.abrupt("return", data.nonce.toString());

             case 4:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function(_x4) {
          return _getUserNonce.apply(this, arguments);
        })
      }, {
        key: "checkReceiveAddressIsActive",
        value: (_checkReceiveAddressIsActive = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(address) {
          var _yield$this$api$query, balance, existentialDeposit, decimals, balanceBN, existentialDepositBalance;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return _context5.next = 2, this.api.query.system.account(address);

             case 2:
              if (_yield$this$api$query = _context5.sent, balance = _yield$this$api$query.data.free, 
              existentialDeposit = this.api.consts.balances.existentialDeposit, decimals = this.api.registry.chainDecimals[0], 
              balanceBN = bignumber.gH.from(existentialDeposit.toString()), existentialDepositBalance = lib_esm.formatUnits(balanceBN, decimals), 
              !balance.gte(existentialDeposit)) {
                _context5.next = 12;
                break;
              }
              return _context5.abrupt("return", {
                isActive: !0,
                balance: existentialDepositBalance
              });

             case 12:
              return _context5.abrupt("return", {
                isActive: !1,
                balance: existentialDepositBalance
              });

             case 13:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x5) {
          return _checkReceiveAddressIsActive.apply(this, arguments);
        })
      }, {
        key: "sendSubToken",
        value: (_sendSubToken = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(sendInfo, privateKey, setLoading, history) {
          var isReturn, finnalPriveteKey, sender, keyring, decimals, amountHex, transfer, signedTransaction, history_data, result, txhash, _args6 = arguments;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return isReturn = _args6.length > 4 && void 0 !== _args6[4] && _args6[4], finnalPriveteKey = privateKey.startsWith("0x") ? privateKey : "0x" + privateKey, 
              sender = "", "ed25519" === (null == sendInfo ? void 0 : sendInfo.accountFormat) ? (keyring = new keyring_keyring.S({
                type: "ed25519",
                ss58Format: this.api.registry.chainSS58
              }), sender = keyring.addFromUri(finnalPriveteKey)) : sender = this.keyring.addFromUri(finnalPriveteKey), 
              decimals = this.api.registry.chainDecimals[0], amountHex = method.dataOperation(null == sendInfo ? void 0 : sendInfo.coinTransferAmount, Math.pow(10, decimals)), 
              transfer = this.api.tx.balances.transferKeepAlive(null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, amountHex), 
              _context6.next = 9, transfer.signAsync(sender);

             case 9:
              if (signedTransaction = _context6.sent, !isReturn || !signedTransaction) {
                _context6.next = 12;
                break;
              }
              return _context6.abrupt("return", signedTransaction);

             case 12:
              return history_data = {
                chain_type: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                address: null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress,
                chain_name: null == sendInfo ? void 0 : sendInfo.coinNetworkKey,
                token_addr: null == sendInfo ? void 0 : sendInfo.coinContractAddress,
                token_name: sendInfo.coinSimpleName,
                token_short_name: sendInfo.coinSimpleName,
                trans_type: "send",
                chain_key: null == sendInfo ? void 0 : sendInfo.coinNetworkSymbol,
                trans_time: parseInt((new Date).getTime() / 1e3),
                trans_balance: null == sendInfo ? void 0 : sendInfo.coinTransferAmount,
                trans_balance_usd: Number(null == sendInfo ? void 0 : sendInfo.coinTransferAmount) * Number(null == sendInfo ? void 0 : sendInfo.coinUnitPrice).toFixed(4),
                nonce: null == sendInfo ? void 0 : sendInfo.coinTransferNonce,
                is_contra: "0",
                trans_oppo_address: null == sendInfo ? void 0 : sendInfo.coinTransferToAddress,
                trans_gas_fee: null == sendInfo ? void 0 : sendInfo.coinTransferFee,
                inputs: "",
                outputs: "",
                action_type: 1,
                memo: null == sendInfo ? void 0 : sendInfo.memo,
                memo_name: null == sendInfo ? void 0 : sendInfo.memo_name,
                platform_operation: null == sendInfo ? void 0 : sendInfo.platform_operation,
                platform_name: null == sendInfo ? void 0 : sendInfo.platform_name
              }, _context6.prev = 13, _context6.next = 16, (0, chainRequestMethod.IM)(null == sendInfo ? void 0 : sendInfo.coinNetworkKey, signedTransaction, history_data);

             case 16:
              if (200 !== (result = _context6.sent).status) {
                _context6.next = 29;
                break;
              }
              if (200 !== result.data.code) {
                _context6.next = 25;
                break;
              }
              return txhash = result.data.data.hash_id, send.M6(sendInfo, txhash, history, null == sendInfo ? void 0 : sendInfo.coinNetworkKey), 
              setLoading(!1), _context6.abrupt("return", result.data.data.hash_id);

             case 25:
              setLoading(!1), (0, Notification.Ds)({
                type: "error",
                message: lang_string("发送失败")
              });

             case 27:
              _context6.next = 32;
              break;

             case 29:
              return setLoading(!1), (0, Notification.Ds)({
                type: "error",
                message: lang_string("发送失败")
              }), _context6.abrupt("return", null);

             case 32:
              _context6.next = 37;
              break;

             case 34:
              return _context6.prev = 34, _context6.t0 = _context6.catch(13), _context6.abrupt("return", _context6.t0);

             case 37:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this, [ [ 13, 34 ] ]);
        }))), function(_x6, _x7, _x8, _x9) {
          return _sendSubToken.apply(this, arguments);
        })
      }, {
        key: "getTransactionByHash",
        value: (_getTransactionByHash = _asyncToGenerator(regeneratorRuntime.mark((function _callee9(txhash) {
          var unsubscribe, _this = this;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              return _context9.next = 2, this.api.rpc.chain.subscribeNewHeads(function() {
                var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee8(header) {
                  return regeneratorRuntime.wrap((function(_context8) {
                    for (;;) switch (_context8.prev = _context8.next) {
                     case 0:
                      return _context8.next = 2, _this.api.rpc.chain.getBlock(header.hash);

                     case 2:
                      _context8.sent.block.extrinsics.forEach(function() {
                        var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee7(extrinsic, index) {
                          return regeneratorRuntime.wrap((function(_context7) {
                            for (;;) switch (_context7.prev = _context7.next) {
                             case 0:
                              if (extrinsic.hash.toHex() !== txhash) {
                                _context7.next = 4;
                                break;
                              }
                              return unsubscribe(), _context7.abrupt("return", txhash);

                             case 4:
                             case "end":
                              return _context7.stop();
                            }
                          }), _callee7);
                        })));
                        return function(_x12, _x13) {
                          return _ref2.apply(this, arguments);
                        };
                      }());

                     case 4:
                     case "end":
                      return _context8.stop();
                    }
                  }), _callee8);
                })));
                return function(_x11) {
                  return _ref.apply(this, arguments);
                };
              }());

             case 2:
              unsubscribe = _context9.sent;

             case 3:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x10) {
          return _getTransactionByHash.apply(this, arguments);
        })
      }, {
        key: "pollTransactionStatus",
        value: (_pollTransactionStatus = _asyncToGenerator(regeneratorRuntime.mark((function _callee10(_ref3) {
          var hash, chainName, count, res, status, _args10 = arguments;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return hash = _ref3.hash, chainName = _ref3.chainName, count = _args10.length > 1 && void 0 !== _args10[1] ? _args10[1] : 0, 
              _context10.next = 4, (0, api.getTransactionStatus)({
                hash,
                chainName
              });

             case 4:
              if (200 !== (res = _context10.sent).data.code) {
                _context10.next = 14;
                break;
              }
              if (status = res.data.data.trans_result, 0 !== Number(status)) {
                _context10.next = 13;
                break;
              }
              return _context10.next = 10, new Promise((function(resolve) {
                return setTimeout(resolve, 2e3);
              }));

             case 10:
              return _context10.abrupt("return", this.pollTransactionStatus({
                hash,
                chainName
              }, count + 1));

             case 13:
              return _context10.abrupt("return", status);

             case 14:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x14) {
          return _pollTransactionStatus.apply(this, arguments);
        })
      }, {
        key: "calculateTransactionFee",
        value: (_calculateTransactionFee = _asyncToGenerator(regeneratorRuntime.mark((function _callee11(sendInfo) {
          var decimals, recipientAddress, coinTransferAmount, amount, index, walletAddr, amountHex, transfer, paymentInfo, partialFee, balanceBN, humanReadableBalance;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return decimals = null == sendInfo ? void 0 : sendInfo.coinPrecision, recipientAddress = null == sendInfo ? void 0 : sendInfo.coinTransferToAddress, 
              coinTransferAmount = null == sendInfo ? void 0 : sendInfo.coinTransferAmount, amount = 0, 
              "string" == typeof coinTransferAmount ? (index = coinTransferAmount.indexOf("."), 
              amount = -1 !== index ? coinTransferAmount.slice(0, index + decimals + 1) : coinTransferAmount) : amount = 0, 
              walletAddr = null == sendInfo ? void 0 : sendInfo.coinTransferFromAddress, amountHex = method.dataOperation(amount, Math.pow(10, decimals)), 
              _context11.prev = 7, transfer = this.api.tx.balances.transferKeepAlive(recipientAddress, amountHex), 
              _context11.next = 11, transfer.paymentInfo(walletAddr);

             case 11:
              return paymentInfo = _context11.sent, partialFee = paymentInfo.partialFee, balanceBN = bignumber.gH.from(partialFee.toString()), 
              humanReadableBalance = lib_esm.formatUnits(balanceBN, decimals), _context11.abrupt("return", humanReadableBalance);

             case 18:
              return _context11.prev = 18, _context11.t0 = _context11.catch(7), _context11.abrupt("return", 0);

             case 21:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this, [ [ 7, 18 ] ]);
        }))), function(_x15) {
          return _calculateTransactionFee.apply(this, arguments);
        })
      }, {
        key: "sendTransaction",
        value: (_sendTransaction = _asyncToGenerator(regeneratorRuntime.mark((function _callee12(json) {
          var result;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return _context12.next = 2, (0, chainRequestMethod.IM)(this.chainName, JSON.parse(json));

             case 2:
              return result = _context12.sent, _context12.abrupt("return", result.data.data.hash_id);

             case 4:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function(_x16) {
          return _sendTransaction.apply(this, arguments);
        })
      }, {
        key: "createWalletByPrivateKey",
        value: function(privateKey) {
          var _this$keyring, privateVal = privateKey.startsWith("0x") ? privateKey : "0x" + privateKey, wallet = null === (_this$keyring = this.keyring) || void 0 === _this$keyring ? void 0 : _this$keyring.addFromUri(privateVal);
          if (wallet) return new account.QY(this.chainName, 0, wallet.address, privateKey, (0, 
          toHex.X)(wallet.publicKey), privateKey, (0, toHex.X)(wallet.publicKey), "", this.keyPath);
        }
      }, {
        key: "getTransactionByHashId",
        value: (_getTransactionByHashId = _asyncToGenerator(regeneratorRuntime.mark((function _callee13(txHash, params) {
          var txInfo;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return _context13.prev = 0, _context13.next = 3, this.api.rpc.eth.getTransactionByHash(txHash);

             case 3:
              if (txInfo = _context13.sent) {
                _context13.next = 6;
                break;
              }
              return _context13.abrupt("return", "Pending");

             case 6:
              if (!txInfo.isSome) {
                _context13.next = 10;
                break;
              }
              return _context13.abrupt("return", "Success");

             case 10:
              return _context13.abrupt("return", "Pending");

             case 11:
              _context13.next = 15;
              break;

             case 13:
              _context13.prev = 13, _context13.t0 = _context13.catch(0);

             case 15:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this, [ [ 0, 13 ] ]);
        }))), function(_x17, _x18) {
          return _getTransactionByHashId.apply(this, arguments);
        })
      }, {
        key: "createSubAccountByKey",
        value: (_createSubAccountByKey = _asyncToGenerator(regeneratorRuntime.mark((function _callee14(extendedPrivateKey, position) {
          var mainAccount, subPath, subAccount;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return _context14.prev = 0, mainAccount = this.keyring.addFromUri(extendedPrivateKey), 
              subPath = (0, walletUtil.TY)(this.chainName, "BIP44", position), subAccount = mainAccount.derive("//" + position), 
              _context14.abrupt("return", new account.QY(this.chainName, position, subAccount.address, extendedPrivateKey + "//".concat(position), Buffer.from(subAccount.publicKey).toString("hex"), extendedPrivateKey, "", subPath));

             case 7:
              return _context14.prev = 7, _context14.t0 = _context14.catch(0), _context14.abrupt("return", null);

             case 10:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this, [ [ 0, 7 ] ]);
        }))), function(_x19, _x20) {
          return _createSubAccountByKey.apply(this, arguments);
        })
      }, {
        key: "signMessage",
        value: (_signMessage = _asyncToGenerator(regeneratorRuntime.mark((function _callee15(privateKey, message) {
          var _yield$getWasm, AnySigner, CoinType, encodedMessage, signature;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return _context15.next = 2, (0, wallet_core.t)();

             case 2:
              return _yield$getWasm = _context15.sent, AnySigner = _yield$getWasm.AnySigner, CoinType = _yield$getWasm.CoinType, 
              encodedMessage = Buffer.from(message).toString("hex"), signature = AnySigner.sign(encodedMessage, privateKey, CoinType.polkadot), 
              _context15.abrupt("return", signature);

             case 8:
             case "end":
              return _context15.stop();
            }
          }), _callee15);
        }))), function(_x21, _x22) {
          return _signMessage.apply(this, arguments);
        })
      }, {
        key: "generateKeystoreFromPrivateKey",
        value: (_generateKeystoreFromPrivateKey = _asyncToGenerator(regeneratorRuntime.mark((function _callee16(privateKey, password) {
          var account, keystoreJson;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return _context16.prev = 0, account = this.keyring.addFromUri(privateKey), keystoreJson = account.toJson(password), 
              _context16.abrupt("return", JSON.stringify(keystoreJson, null, 2));

             case 6:
              return _context16.prev = 6, _context16.t0 = _context16.catch(0), _context16.abrupt("return", null);

             case 9:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this, [ [ 0, 6 ] ]);
        }))), function(_x23, _x24) {
          return _generateKeystoreFromPrivateKey.apply(this, arguments);
        })
      }, {
        key: "importKeystoreFromPassword",
        value: (_importKeystoreFromPassword = _asyncToGenerator(regeneratorRuntime.mark((function _callee17(keystoreJson, password) {
          var account, privateKey, wallet;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return _context17.prev = 0, (account = this.keyring.addFromJson(keystoreJson)).unlock(password), 
              privateKey = (0, extractSuri.E)(keystoreJson.content, password), wallet = {
                chainKey: this.chainName,
                accountPosition: "",
                address: account.address,
                privateKey,
                publicKey: (0, toHex.X)(account.publicKey),
                accountExtendedPrivateKey: "",
                accountExtendedPublicKey: "",
                extendedPath: ""
              }, _context17.abrupt("return", wallet);

             case 8:
              return _context17.prev = 8, _context17.t0 = _context17.catch(0), _context17.abrupt("return", null);

             case 11:
             case "end":
              return _context17.stop();
            }
          }), _callee17, this, [ [ 0, 8 ] ]);
        }))), function(_x25, _x26) {
          return _importKeystoreFromPassword.apply(this, arguments);
        })
      }, {
        key: "disconnectProvider",
        value: function() {
          this.provider.disconnect();
        }
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), SubstrateWallet;
    }();
    function substrate_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function substrate_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            substrate_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            substrate_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var pollTransactionStatus = function() {
      var _ref2 = substrate_asyncToGenerator(regeneratorRuntime.mark((function _callee(_ref) {
        var hash, chainName, res, status;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return hash = _ref.hash, chainName = _ref.chainName, _context.next = 3, (0, api.getTransactionStatus)({
              hash,
              chainName
            });

           case 3:
            if (200 !== (res = _context.sent).data.code) {
              _context.next = 7;
              break;
            }
            return status = res.data.data.trans_result, _context.abrupt("return", Number(status));

           case 7:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function(_x) {
        return _ref2.apply(this, arguments);
      };
    }(), createSubWallet = function() {
      var _ref3 = substrate_asyncToGenerator(regeneratorRuntime.mark((function _callee2(chainName) {
        var isCreateOrImport, totalNetworkDic, _totalNetworkDic$chai, _totalNetworkDic$chai2, _totalNetworkDic$chai3, _totalNetworkDic$chai4, _totalNetworkDic$chai5, chainSS58, SubWallet, _args2 = arguments;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            if (isCreateOrImport = _args2.length > 1 && void 0 !== _args2[1] && _args2[1], totalNetworkDic = _args2.length > 2 ? _args2[2] : void 0, 
            _context2.prev = 2, !(null === (_totalNetworkDic$chai = totalNetworkDic[chainName]) || void 0 === _totalNetworkDic$chai || null === (_totalNetworkDic$chai2 = _totalNetworkDic$chai.endpoints) || void 0 === _totalNetworkDic$chai2 || null === (_totalNetworkDic$chai3 = _totalNetworkDic$chai2.find((function(item) {
              return "rpc" === (null == item ? void 0 : item.type);
            }))) || void 0 === _totalNetworkDic$chai3 ? void 0 : _totalNetworkDic$chai3.url)) {
              _context2.next = 12;
              break;
            }
            return chainSS58 = null === (_totalNetworkDic$chai4 = totalNetworkDic[chainName]) || void 0 === _totalNetworkDic$chai4 || null === (_totalNetworkDic$chai5 = _totalNetworkDic$chai4.accountCreateParams) || void 0 === _totalNetworkDic$chai5 ? void 0 : _totalNetworkDic$chai5.chainSS58, 
            SubWallet = new SubstrateWallet(chainName, isCreateOrImport && chainSS58), _context2.next = 9, 
            SubWallet.init(totalNetworkDic);

           case 9:
            return _context2.abrupt("return", SubWallet);

           case 12:
            return _context2.abrupt("return", null);

           case 13:
            _context2.next = 17;
            break;

           case 15:
            _context2.prev = 15, _context2.t0 = _context2.catch(2);

           case 17:
           case "end":
            return _context2.stop();
          }
        }), _callee2, null, [ [ 2, 15 ] ]);
      })));
      return function(_x2) {
        return _ref3.apply(this, arguments);
      };
    }();
  },
  911405: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => evm_rpc
    });
    __webpack_require__(207452), __webpack_require__(754989), __webpack_require__(752231), 
    __webpack_require__(418665), __webpack_require__(505086), __webpack_require__(269193), 
    __webpack_require__(929979), __webpack_require__(14602), __webpack_require__(579389), 
    __webpack_require__(906048), __webpack_require__(447746), __webpack_require__(43148), 
    __webpack_require__(458476), __webpack_require__(658379), __webpack_require__(301772), 
    __webpack_require__(953746), __webpack_require__(520861), __webpack_require__(571905), 
    __webpack_require__(285213), __webpack_require__(97182), __webpack_require__(512279), 
    __webpack_require__(639302), __webpack_require__(770147), __webpack_require__(866217), 
    __webpack_require__(697966), __webpack_require__(735186), __webpack_require__(135944), 
    __webpack_require__(644787), __webpack_require__(950632), __webpack_require__(552278), 
    __webpack_require__(614245), __webpack_require__(252492), __webpack_require__(193266), 
    __webpack_require__(537192), __webpack_require__(237220), __webpack_require__(482432), 
    __webpack_require__(632483), __webpack_require__(536696), __webpack_require__(458083), 
    __webpack_require__(259581), __webpack_require__(196088), __webpack_require__(700017), 
    __webpack_require__(700533), __webpack_require__(194009), __webpack_require__(515812), 
    __webpack_require__(380115), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(863534), __webpack_require__(540590), __webpack_require__(815852), 
    __webpack_require__(504895), __webpack_require__(564216), __webpack_require__(714913), 
    __webpack_require__(498741), __webpack_require__(215195), __webpack_require__(407899), 
    __webpack_require__(110678), __webpack_require__(103101), __webpack_require__(936012);
    var DEVICE_TYPE, gt_networks = __webpack_require__(660862), gt_on_chain = __webpack_require__(296477), wallet_core = __webpack_require__(259159), gt_tokens = __webpack_require__(871219), calculate = __webpack_require__(745788), send_receive = __webpack_require__(492774), EVM_CONTRACT_ABI = [ {
      inputs: [ {
        internalType: "uint256",
        name: "chainId_",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "constructor"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "guy",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "Approval",
      type: "event"
    }, {
      anonymous: !0,
      inputs: [ {
        indexed: !0,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4"
      }, {
        indexed: !0,
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        indexed: !0,
        internalType: "bytes32",
        name: "arg1",
        type: "bytes32"
      }, {
        indexed: !0,
        internalType: "bytes32",
        name: "arg2",
        type: "bytes32"
      }, {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      } ],
      name: "LogNote",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "Transfer",
      type: "event"
    }, {
      constant: !0,
      inputs: [],
      name: "DOMAIN_SEPARATOR",
      outputs: [ {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "PERMIT_TYPEHASH",
      outputs: [ {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      }, {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "allowance",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "approve",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "balanceOf",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "burn",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "decimals",
      outputs: [ {
        internalType: "uint8",
        name: "",
        type: "uint8"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "guy",
        type: "address"
      } ],
      name: "deny",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "mint",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "move",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "name",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "nonces",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "holder",
        type: "address"
      }, {
        internalType: "address",
        name: "spender",
        type: "address"
      }, {
        internalType: "uint256",
        name: "nonce",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "expiry",
        type: "uint256"
      }, {
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }, {
        internalType: "uint8",
        name: "v",
        type: "uint8"
      }, {
        internalType: "bytes32",
        name: "r",
        type: "bytes32"
      }, {
        internalType: "bytes32",
        name: "s",
        type: "bytes32"
      } ],
      name: "permit",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "pull",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "usr",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "push",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "guy",
        type: "address"
      } ],
      name: "rely",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "symbol",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "totalSupply",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "transfer",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        internalType: "address",
        name: "src",
        type: "address"
      }, {
        internalType: "address",
        name: "dst",
        type: "address"
      }, {
        internalType: "uint256",
        name: "wad",
        type: "uint256"
      } ],
      name: "transferFrom",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "version",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      name: "wards",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    } ], EVM_CONTRACT_ABI_ERC721 = [ {
      constant: !0,
      inputs: [ {
        name: "interfaceID",
        type: "bytes4"
      } ],
      name: "supportsInterface",
      outputs: [ {
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "name",
      outputs: [ {
        name: "_name",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "getApproved",
      outputs: [ {
        name: "",
        type: "address"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_approved",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "approve",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "totalSupply",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_from",
        type: "address"
      }, {
        name: "_to",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "transferFrom",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_owner",
        type: "address"
      }, {
        name: "_index",
        type: "uint256"
      } ],
      name: "tokenOfOwnerByIndex",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_from",
        type: "address"
      }, {
        name: "_to",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "safeTransferFrom",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_index",
        type: "uint256"
      } ],
      name: "tokenByIndex",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "ownerOf",
      outputs: [ {
        name: "",
        type: "address"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_owner",
        type: "address"
      } ],
      name: "balanceOf",
      outputs: [ {
        name: "",
        type: "uint256"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [],
      name: "symbol",
      outputs: [ {
        name: "_symbol",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_operator",
        type: "address"
      }, {
        name: "_approved",
        type: "bool"
      } ],
      name: "setApprovalForAll",
      outputs: [],
      payable: !1,
      stateMutability: "nonpayable",
      type: "function"
    }, {
      constant: !1,
      inputs: [ {
        name: "_from",
        type: "address"
      }, {
        name: "_to",
        type: "address"
      }, {
        name: "_tokenId",
        type: "uint256"
      }, {
        name: "data",
        type: "bytes"
      } ],
      name: "safeTransferFrom",
      outputs: [],
      payable: !0,
      stateMutability: "payable",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "tokenURI",
      outputs: [ {
        name: "",
        type: "string"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      constant: !0,
      inputs: [ {
        name: "_owner",
        type: "address"
      }, {
        name: "_operator",
        type: "address"
      } ],
      name: "isApprovedForAll",
      outputs: [ {
        name: "",
        type: "bool"
      } ],
      payable: !1,
      stateMutability: "view",
      type: "function"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        name: "_from",
        type: "address"
      }, {
        indexed: !0,
        name: "_to",
        type: "address"
      }, {
        indexed: !0,
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "Transfer",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        name: "_owner",
        type: "address"
      }, {
        indexed: !0,
        name: "_approved",
        type: "address"
      }, {
        indexed: !0,
        name: "_tokenId",
        type: "uint256"
      } ],
      name: "Approval",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        name: "_owner",
        type: "address"
      }, {
        indexed: !0,
        name: "_operator",
        type: "address"
      }, {
        indexed: !1,
        name: "_approved",
        type: "bool"
      } ],
      name: "ApprovalForAll",
      type: "event"
    } ], EVM_CONTRACT_ABI_ERC1155 = [ {
      inputs: [ {
        internalType: "string",
        name: "uri_",
        type: "string"
      } ],
      stateMutability: "nonpayable",
      type: "constructor"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "account",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        indexed: !1,
        internalType: "bool",
        name: "approved",
        type: "bool"
      } ],
      name: "ApprovalForAll",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      }, {
        indexed: !1,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]"
      } ],
      name: "TransferBatch",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }, {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      } ],
      name: "TransferSingle",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "string",
        name: "value",
        type: "string"
      }, {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      } ],
      name: "URI",
      type: "event"
    }, {
      inputs: [ {
        internalType: "address",
        name: "account",
        type: "address"
      }, {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      } ],
      name: "balanceOf",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      }, {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      } ],
      name: "balanceOfBatch",
      outputs: [ {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "account",
        type: "address"
      }, {
        internalType: "address",
        name: "operator",
        type: "address"
      } ],
      name: "isApprovedForAll",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      }, {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      }, {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      } ],
      name: "safeBatchTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "from",
        type: "address"
      }, {
        internalType: "address",
        name: "to",
        type: "address"
      }, {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }, {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }, {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      } ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "operator",
        type: "address"
      }, {
        internalType: "bool",
        name: "approved",
        type: "bool"
      } ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      } ],
      name: "supportsInterface",
      outputs: [ {
        internalType: "bool",
        name: "",
        type: "bool"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "uri",
      outputs: [ {
        internalType: "string",
        name: "",
        type: "string"
      } ],
      stateMutability: "view",
      type: "function"
    } ], OPTIMISM_GAS_ORACLE_ABI = [ {
      inputs: [ {
        internalType: "address",
        name: "_owner",
        type: "address"
      } ],
      stateMutability: "nonpayable",
      type: "constructor"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "DecimalsUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "GasPriceUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "L1BaseFeeUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "OverheadUpdated",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      }, {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      } ],
      name: "OwnershipTransferred",
      type: "event"
    }, {
      anonymous: !1,
      inputs: [ {
        indexed: !1,
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      name: "ScalarUpdated",
      type: "event"
    }, {
      inputs: [],
      name: "decimals",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "gasPrice",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      } ],
      name: "getL1Fee",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "bytes",
        name: "_data",
        type: "bytes"
      } ],
      name: "getL1GasUsed",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "l1BaseFee",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "overhead",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "owner",
      outputs: [ {
        internalType: "address",
        name: "",
        type: "address"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [],
      name: "scalar",
      outputs: [ {
        internalType: "uint256",
        name: "",
        type: "uint256"
      } ],
      stateMutability: "view",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256"
      } ],
      name: "setDecimals",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256"
      } ],
      name: "setGasPrice",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_baseFee",
        type: "uint256"
      } ],
      name: "setL1BaseFee",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_overhead",
        type: "uint256"
      } ],
      name: "setOverhead",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "uint256",
        name: "_scalar",
        type: "uint256"
      } ],
      name: "setScalar",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }, {
      inputs: [ {
        internalType: "address",
        name: "newOwner",
        type: "address"
      } ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    } ];
    !function(DEVICE_TYPE) {
      DEVICE_TYPE[DEVICE_TYPE.gate = 0] = "gate", DEVICE_TYPE[DEVICE_TYPE.ledger = 1] = "ledger";
    }(DEVICE_TYPE || (DEVICE_TYPE = {}));
    var bignumber = __webpack_require__(760346), zones = __webpack_require__(96348), type_transfer = __webpack_require__(228972);
    var InterfaceTxObj = {
      to: "",
      from: "",
      data: "0x",
      gasLimit: "0",
      gasPrice: "0",
      maxFeePerGas: "0",
      maxPriorityFeePerGas: "0",
      lastBaseFeePerGas: "0",
      value: "0",
      nonce: "0",
      chainId: "0"
    }, InterfaceTxObjCall = {
      to: "",
      from: "",
      data: "0x",
      gasLimit: "0",
      gasPrice: "0",
      value: "0"
    }, InterfaceGetLogs = {
      fromBlock: "",
      toBlock: "",
      address: "",
      topics: "",
      blockHash: ""
    }, InterfaceGetStorageAt = {
      address: "",
      position: "",
      quantityOrTag: "pending"
    }, InterfaceNewFilter = {
      fromBlock: "",
      toBlock: "",
      address: "",
      topics: ""
    }, InterfaceTraceCall = {
      from: "",
      to: "",
      gas: "",
      gasPrice: "",
      value: "",
      data: ""
    }, InterfaceTraceFilter = {
      fromBlock: "",
      toBlock: "",
      fromAddress: "",
      toAddress: "",
      after: "",
      count: ""
    }, EthNameSpace = function EthNameSpace() {
      !function(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
      }(this, EthNameSpace), this.eth_subscribe = function() {
        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) params[_key] = arguments[_key];
        return [ "eth_subscribe", params ];
      }, this.eth_unsubscribe = function() {
        return [ "eth_unsubscribe", arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ];
      }, this.eth_blockNumber = function() {
        return [ "eth_blockNumber", [], parseInt ];
      }, this.eth_chainId = function() {
        return [ "eth_chainId", [], parseInt ];
      }, this.eth_call = function() {
        return [ "eth_call", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceTxObjCall, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "latest" ] ];
      }, this.eth_estimateGas = function() {
        return [ "eth_estimateGas", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceTxObj ], parseInt ];
      }, this.eth_feeHistory = function() {
        return [ "eth_feeHistory", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "1", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "latest", arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [ "25", "75" ] ] ];
      }, this.eth_gasPrice = function() {
        return [ "eth_gasPrice", [], parseInt ];
      }, this.eth_getBalance = function() {
        return [ "eth_getBalance", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "latest" ], parseInt ];
      }, this.eth_getBlockByHash = function() {
        return [ "eth_getBlockByHash", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1] ] ];
      }, this.eth_getBlockByNumber = function() {
        return [ "eth_getBlockByNumber", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "latest", !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1] ] ];
      }, this.eth_getBlockReceipts = function() {
        return [ "eth_getBlockReceipts", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "latest" ] ];
      }, this.eth_getBlockTransactionCountByHash = function() {
        return [ "eth_getBlockTransactionCountByHash", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ], parseInt ];
      }, this.eth_getBlockTransactionCountByNumber = function() {
        return [ "eth_getBlockTransactionCountByNumber", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "latest" ], parseInt ];
      }, this.eth_getCode = function() {
        return [ "eth_getCode", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "" ] ];
      }, this.eth_getFilterChanges = function() {
        return [ "eth_getFilterChanges", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.eth_getFilterLogs = function() {
        return [ "eth_getFilterLogs", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.eth_getLogs = function() {
        return [ "eth_getLogs", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceGetLogs ] ];
      }, this.eth_getProof = function() {
        return [ "eth_getProof", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ "" ], arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "latest" ] ];
      }, this.eth_getStorageAt = function() {
        return [ "eth_getStorageAt", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceGetStorageAt ] ];
      }, this.eth_getTransactionByBlockHashAndIndex = function() {
        return [ "eth_getTransactionByBlockHashAndIndex", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "0" ] ];
      }, this.eth_getTransactionByBlockNumberAndIndex = function() {
        return [ "eth_getTransactionByBlockNumberAndIndex", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "latest", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "0" ] ];
      }, this.eth_getTransactionByHash = function() {
        return [ "eth_getTransactionByHash", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.eth_getTransactionCount = function() {
        return [ "eth_getTransactionCount", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "latest" ], parseInt ];
      }, this.eth_getTransactionReceipt = function() {
        return [ "eth_getTransactionReceipt", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.eth_getUncleCountByBlockHash = function() {
        return [ "eth_getUncleCountByBlockHash", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ], parseInt ];
      }, this.eth_getUncleCountByBlockNumber = function() {
        return [ "eth_getUncleCountByBlockNumber", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ], parseInt ];
      }, this.eth_hashrate = function() {
        return [ "eth_hashrate", [], parseInt ];
      }, this.eth_maxPriorityFeePerGas = function() {
        return [ "eth_maxPriorityFeePerGas", [], parseInt ];
      }, this.eth_mining = function() {
        return [ "eth_mining", [] ];
      }, this.eth_newBlockFilter = function() {
        return [ "eth_newBlockFilter", [] ];
      }, this.eth_newFilter = function() {
        return [ "eth_newFilter", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceNewFilter ] ];
      }, this.eth_newPendingTransactionFilter = function() {
        return [ "eth_newPendingTransactionFilter", [] ];
      }, this.eth_sendRawTransaction = function() {
        return [ "eth_sendRawTransaction", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.eth_syncing = function() {
        return [ "eth_syncing", [] ];
      }, this.eth_uninstallFilter = function() {
        return [ "eth_uninstallFilter", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.net_listening = function() {
        return [ "net_listening", [] ];
      }, this.net_peerCount = function() {
        return [ "net_peerCount", [], parseInt ];
      }, this.net_version = function() {
        return [ "net_version", [], parseInt ];
      }, this.qn_broadcastRawTransaction = function() {
        return [ "qn_broadcastRawTransaction", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.qn_getBlockWithReceipts = function() {
        return [ "qn_getBlockWithReceipts", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.qn_getReceipts = function() {
        return [ "qn_getReceipts", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.trace_block = function() {
        return [ "trace_block", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "latest" ] ];
      }, this.trace_call = function() {
        return [ "", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceTraceCall, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ "vmTrace", "trace", "stateDiff" ], arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "latest" ] ];
      }, this.trace_callMany = function() {
        return [ "trace_callMany", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "latest" ] ];
      }, this.trace_filter = function() {
        return [ "trace_filter", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceTraceFilter ] ];
      }, this.trace_replayBlockTransactions = function() {
        return [ "trace_replayBlockTransactions", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "pending", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ "vmTrace", "trace", "stateDiff" ] ] ];
      }, this.trace_replayTransaction = function() {
        return [ "trace_replayTransaction", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ "vmTrace", "trace", "stateDiff" ] ] ];
      }, this.trace_transaction = function() {
        return [ "trace_transaction", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.txpool_content = function() {
        return [ "txpool_content", [] ];
      }, this.txpool_inspect = function() {
        return [ "txpool_inspect", [] ];
      }, this.txpool_status = function() {
        return [ "txpool_status", [] ];
      }, this.web3_clientVersion = function() {
        return [ "web3_clientVersion", [] ];
      }, this.web3_sha3 = function() {
        return [ "web3_sha3", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "" ] ];
      }, this.debug_getBadBlocks = function() {
        return [ "debug_getBadBlocks", [] ];
      }, this.debug_storageRangeAt = function() {
        return [ "", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "", arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "", arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "", arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "" ] ];
      }, this.debug_traceBlock = function() {
        return [ "debug_traceBlock", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
          tracer: "callTracer",
          tracerConfig: {
            onlyTopCall: !1
          }
        } ] ];
      }, this.debug_traceBlockByHash = function() {
        return [ "debug_traceBlockByHash", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
          tracer: "callTracer",
          tracerConfig: {
            onlyTopCall: !1
          }
        } ] ];
      }, this.debug_traceBlockByNumber = function() {
        return [ "debug_traceBlockByNumber", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "latest", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
          tracer: "callTracer",
          tracerConfig: {
            onlyTopCall: !1
          }
        } ] ];
      }, this.debug_traceCall = function() {
        return [ "debug_traceCall", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : InterfaceTraceCall, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "latest", arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
          tracer: "callTracer",
          tracerConfig: {
            onlyTopCall: !1
          }
        } ] ];
      }, this.debug_traceTransaction = function() {
        return [ "debug_traceTransaction", [ arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
          tracer: "callTracer",
          tracerConfig: {
            onlyTopCall: !1
          },
          timeout: "5"
        } ] ];
      };
    }, fetch = (__webpack_require__(542006), __webpack_require__(67500), __webpack_require__(410121), 
    __webpack_require__(863051), __webpack_require__(187780));
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    var ConnectHttp = function ConnectHttp() {
      var url = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
      !function(instance, Constructor) {
        if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
      }(this, ConnectHttp), _defineProperty(this, "isReady", (function() {
        return !0;
      })), this.url = url, this.client = {}, this.client.on = function() {}, this.client.request = function() {
        var fn, _ref = (fn = regeneratorRuntime.mark((function _callee(requestMethod, rpcAddress, data) {
          var resultModel;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _context.next = 2, (0, fetch.F)(rpcAddress, requestMethod, data, "rpc");

             case 2:
              return resultModel = _context.sent, _context.abrupt("return", resultModel);

             case 4:
             case "end":
              return _context.stop();
            }
          }), _callee);
        })), function() {
          var self = this, args = arguments;
          return new Promise((function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(void 0);
          }));
        });
        return function(_x, _x2, _x3) {
          return _ref.apply(this, arguments);
        };
      }();
    };
    function web3RpcMethod_typeof(obj) {
      return web3RpcMethod_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, web3RpcMethod_typeof(obj);
    }
    function web3RpcMethod_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function web3RpcMethod_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            web3RpcMethod_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            web3RpcMethod_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, web3RpcMethod_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _classPrivateFieldInitSpec(obj, privateMap, value) {
      !function(obj, privateCollection) {
        if (privateCollection.has(obj)) throw new TypeError("Cannot initialize the same private elements twice on an object");
      }(obj, privateMap), privateMap.set(obj, value);
    }
    function web3RpcMethod_defineProperty(obj, key, value) {
      return (key = web3RpcMethod_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function web3RpcMethod_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== web3RpcMethod_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== web3RpcMethod_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === web3RpcMethod_typeof(key) ? key : String(key);
    }
    function _classPrivateFieldSet(receiver, privateMap, value) {
      return function(receiver, descriptor, value) {
        if (descriptor.set) descriptor.set.call(receiver, value); else {
          if (!descriptor.writable) throw new TypeError("attempted to set read only private field");
          descriptor.value = value;
        }
      }(receiver, _classExtractFieldDescriptor(receiver, privateMap, "set"), value), value;
    }
    function _classPrivateFieldGet(receiver, privateMap) {
      return function(receiver, descriptor) {
        if (descriptor.get) return descriptor.get.call(receiver);
        return descriptor.value;
      }(receiver, _classExtractFieldDescriptor(receiver, privateMap, "get"));
    }
    function _classExtractFieldDescriptor(receiver, privateMap, action) {
      if (!privateMap.has(receiver)) throw new TypeError("attempted to " + action + " private field on non-instance");
      return privateMap.get(receiver);
    }
    var ConnectIpc = __webpack_require__(214386).ConnectIpc, ConnectWs = __webpack_require__(916224).ConnectWs, InterfaceReconnectOpt = {
      autoReconnect: !0,
      delay: 500,
      maxAttempts: Number.MAX_SAFE_INTEGER
    }, _nextId = new WeakMap, _maxSafeNextId = new WeakMap, _incrementNextId = new WeakMap, _returnSend = new WeakMap, Provider = function() {
      function Provider(client) {
        var _this = this;
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, Provider), web3RpcMethod_defineProperty(this, "client", void 0), _classPrivateFieldInitSpec(this, _nextId, {
          writable: !0,
          value: 0
        }), _classPrivateFieldInitSpec(this, _maxSafeNextId, {
          writable: !0,
          value: Number.MAX_SAFE_INTEGER - 100
        }), _classPrivateFieldInitSpec(this, _incrementNextId, {
          writable: !0,
          value: function() {
            return _classPrivateFieldGet(_this, _nextId) >= _classPrivateFieldGet(_this, _maxSafeNextId) && _classPrivateFieldSet(_this, _nextId, 0), 
            _classPrivateFieldSet(_this, _nextId, _classPrivateFieldGet(_this, _nextId) + 1);
          }
        }), _classPrivateFieldInitSpec(this, _returnSend, {
          writable: !0,
          value: function(result, returnFormat) {
            if (void 0 !== result.error) throw result.error.message;
            if (void 0 === returnFormat) return result.result;
            var returnResult = returnFormat(result.result);
            return returnResult || result.result;
          }
        }), web3RpcMethod_defineProperty(this, "isReady", web3RpcMethod_asyncToGenerator(regeneratorRuntime.mark((function _callee() {
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              return _context.next = 2, _this.client.isReady();

             case 2:
              return _context.abrupt("return", _context.sent);

             case 3:
             case "end":
              return _context.stop();
            }
          }), _callee);
        })))), web3RpcMethod_defineProperty(this, "request", function() {
          var _ref2 = web3RpcMethod_asyncToGenerator(regeneratorRuntime.mark((function _callee2(requestMethod, rpcAddress) {
            var payload, _args2 = arguments;
            return regeneratorRuntime.wrap((function(_context2) {
              for (;;) switch (_context2.prev = _context2.next) {
               case 0:
                return payload = _args2.length > 2 && void 0 !== _args2[2] ? _args2[2] : {} || [], 
                _context2.next = 3, _this.client.client.request(requestMethod, rpcAddress, payload);

               case 3:
                return _context2.abrupt("return", _context2.sent);

               case 4:
               case "end":
                return _context2.stop();
              }
            }), _callee2);
          })));
          return function(_x, _x2) {
            return _ref2.apply(this, arguments);
          };
        }()), web3RpcMethod_defineProperty(this, "subscribe", web3RpcMethod_asyncToGenerator(regeneratorRuntime.mark((function _callee4() {
          var args, reconnect, callbackRes, subsId, handle, _args4 = arguments;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return args = _args4.length > 0 && void 0 !== _args4[0] ? _args4[0] : [], reconnect = _args4.length > 1 && void 0 !== _args4[1] && _args4[1], 
              callbackRes = _args4.length > 2 && void 0 !== _args4[2] ? _args4[2] : function(res, subsId) {}, 
              _context4.next = 5, _this.send(args);

             case 5:
              subsId = _context4.sent, handle = function(res) {
                var _res$params;
                (null == res || null === (_res$params = res.params) || void 0 === _res$params ? void 0 : _res$params.subscription) == subsId && callbackRes(res.params.result, subsId);
              }, _this.client.client.on("message", handle), !0 === reconnect && _this.client.client.on("connect", web3RpcMethod_asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
                return regeneratorRuntime.wrap((function(_context3) {
                  for (;;) switch (_context3.prev = _context3.next) {
                   case 0:
                    return _context3.next = 2, _this.send(args);

                   case 2:
                    subsId = _context3.sent;

                   case 3:
                   case "end":
                    return _context3.stop();
                  }
                }), _callee3);
              }))));

             case 9:
             case "end":
              return _context4.stop();
            }
          }), _callee4);
        })))), web3RpcMethod_defineProperty(this, "send", function() {
          var _ref5 = web3RpcMethod_asyncToGenerator(regeneratorRuntime.mark((function _callee5(requestMethod, rpcAddress) {
            var args, id, bodyJsonRpc, result, _args5 = arguments;
            return regeneratorRuntime.wrap((function(_context5) {
              for (;;) switch (_context5.prev = _context5.next) {
               case 0:
                if (args = _args5.length > 2 && void 0 !== _args5[2] ? _args5[2] : [], id = _classPrivateFieldGet(_this, _incrementNextId).call(_this), 
                bodyJsonRpc = {
                  jsonrpc: "2.0",
                  id,
                  method: args[0],
                  params: args[1]
                }, null == rpcAddress || !rpcAddress.startsWith("ws")) {
                  _context5.next = 7;
                  break;
                }
                return _context5.abrupt("return", new Promise((function(resolve, reject) {
                  _this.client.client.send(JSON.stringify(bodyJsonRpc)), _this.client.client.addEventListener("message", (function(data) {
                    _this.client.client.close();
                    try {
                      var _JSON$parse, res = null === (_JSON$parse = JSON.parse(data.data)) || void 0 === _JSON$parse ? void 0 : _JSON$parse.result;
                      resolve(res);
                    } catch (err) {
                      reject();
                    }
                  }));
                })));

               case 7:
                return _context5.next = 9, _this.client.client.request(requestMethod, rpcAddress, bodyJsonRpc);

               case 9:
                return result = _context5.sent, _context5.abrupt("return", _classPrivateFieldGet(_this, _returnSend).call(_this, result, args[2]));

               case 11:
               case "end":
                return _context5.stop();
              }
            }), _callee5);
          })));
          return function(_x3, _x4) {
            return _ref5.apply(this, arguments);
          };
        }()), web3RpcMethod_defineProperty(this, "sendBatch", web3RpcMethod_asyncToGenerator(regeneratorRuntime.mark((function _callee6() {
          var _len, args, _key, bodyJsonRpc, res, _args6 = arguments;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              for (_len = _args6.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = _args6[_key];
              return bodyJsonRpc = args.map((function(it) {
                return _classPrivateFieldGet(_this, _incrementNextId).call(_this), {
                  jsonrpc: "2.0",
                  id: _classPrivateFieldGet(_this, _nextId),
                  method: it[0],
                  params: it[1]
                };
              })), _context6.next = 4, _this.client.client.request(bodyJsonRpc);

             case 4:
              return res = _context6.sent, _context6.abrupt("return", res.map((function(it, index) {
                return _classPrivateFieldGet(_this, _returnSend).call(_this, it, args[index][2]);
              })));

             case 6:
             case "end":
              return _context6.stop();
            }
          }), _callee6);
        })))), this.client = client;
      }
      var Constructor, protoProps, staticProps, _init;
      return Constructor = Provider, protoProps = null, staticProps = [ {
        key: "init",
        value: (_init = web3RpcMethod_asyncToGenerator(regeneratorRuntime.mark((function _callee7() {
          var urlRpc, socketOpt, reconnectOpt, client, _client, _client2, _args7 = arguments;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              if (socketOpt = _args7.length > 1 && void 0 !== _args7[1] ? _args7[1] : {}, reconnectOpt = _args7.length > 2 && void 0 !== _args7[2] ? _args7[2] : InterfaceReconnectOpt, 
              !(urlRpc = _args7.length > 0 && void 0 !== _args7[0] ? _args7[0] : "").startsWith("http")) {
                _context7.next = 10;
                break;
              }
              return this.client = new ConnectHttp(urlRpc, socketOpt), this.subscribe = function() {
                throw "network type http not support subscribe";
              }, client = new ConnectHttp(urlRpc, socketOpt), _context7.abrupt("return", new Provider(client));

             case 10:
              if (!urlRpc.startsWith("ws")) {
                _context7.next = 17;
                break;
              }
              return _context7.next = 13, ConnectWs.init(urlRpc, socketOpt, reconnectOpt);

             case 13:
              return _client = _context7.sent, _context7.abrupt("return", new Provider(_client));

             case 17:
              if (!urlRpc.endsWith(".ipc")) {
                _context7.next = 22;
                break;
              }
              return _client2 = new ConnectIpc(urlRpc, socketOpt, reconnectOpt), _context7.abrupt("return", new Provider(_client2));

             case 22:
              throw "network type is not supported, only support http/ws/.ipc";

             case 23:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function() {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), Provider;
    }(), wallet_wallet = __webpack_require__(131450), maths = __webpack_require__(433861), sha2 = __webpack_require__(400990), lib_esm_bignumber = __webpack_require__(937457), lib_esm = __webpack_require__(455523), bytes_lib_esm = __webpack_require__(838905), hd_keyring_esm = __webpack_require__(53719), dist = __webpack_require__(242005), src = __webpack_require__(747516), toBlobs = __webpack_require__(444391), browser = __webpack_require__(973557), utils = __webpack_require__(788149), esm_wallet_wallet = __webpack_require__(491190), ethereum_dist = __webpack_require__(928635), gas = __webpack_require__(145581), constants = __webpack_require__(153341), Buffer = __webpack_require__(348287).Buffer;
    function evm_rpc_typeof(obj) {
      return evm_rpc_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, evm_rpc_typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          evm_rpc_defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function evm_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function evm_rpc_asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            evm_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            evm_rpc_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function evm_rpc_defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, evm_rpc_toPropertyKey(descriptor.key), descriptor);
      }
    }
    function evm_rpc_defineProperty(obj, key, value) {
      return (key = evm_rpc_toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function evm_rpc_toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== evm_rpc_typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== evm_rpc_typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === evm_rpc_typeof(key) ? key : String(key);
    }
    var EvmRpc = function() {
      function EvmRpc(wasm, totalNetworkDic, networkKey, rpcUrl, evmProvider, evmAdapter) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, EvmRpc), evm_rpc_defineProperty(this, "wasm", void 0), evm_rpc_defineProperty(this, "totalNetworkDic", void 0), 
        evm_rpc_defineProperty(this, "networkKey", void 0), evm_rpc_defineProperty(this, "rpcUrl", void 0), 
        evm_rpc_defineProperty(this, "evmProvider", void 0), evm_rpc_defineProperty(this, "evmAdapter", void 0), 
        this.wasm = wasm, this.totalNetworkDic = totalNetworkDic, this.networkKey = networkKey, 
        this.rpcUrl = rpcUrl, this.evmProvider = evmProvider, this.evmAdapter = evmAdapter;
      }
      var Constructor, protoProps, staticProps, _getContractDecimals, _init, _signEvmNFT, _signEvm, _getEip1559GasPrice, _getEvmSendGasFee, _formatGasFee, _getGasPriceByBlocks, _getGasPriceByApi, _addOtherFees, _getOtherFees, _getL1ContractFee, _getGasLimit, _blob20Inscription, _signEip4844EVMTransaction, _getBlobFeeCap, _getGasPrice, _getCompatibilityTrxBalance, _getEvmBalance;
      return Constructor = EvmRpc, protoProps = [ {
        key: "tron2HexAddress",
        value: function(address) {
          var _this$wasm = this.wasm, HexCoding = _this$wasm.HexCoding, Base58 = _this$wasm.Base58;
          return null != address && address.startsWith("T") ? HexCoding.encode(Base58.decode(address)).substring(2) : address;
        }
      }, {
        key: "defineContract",
        value: function(contractAbi, coinAddress, sender) {
          return new this.evmProvider.eth.Contract(contractAbi, coinAddress, {
            from: sender
          });
        }
      }, {
        key: "getEvmBalance",
        value: (_getEvmBalance = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
          var _network, _network$this$network, token, sender, coinAddress, coinIsMain, tick, _res$data, _res$data$data, res, balance;
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
              if (token = params.token, sender = params.sender, coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress), tick = null == token || null === (_network = token.network) || void 0 === _network || null === (_network$this$network = _network[this.networkKey]) || void 0 === _network$this$network ? void 0 : _network$this$network.tick, 
              "BLOB-20" !== (0, gt_tokens.N8)(token, this.networkKey, "protocolLabel")) {
                _context.next = 12;
                break;
              }
              return _context.next = 8, (0, send_receive.dD)({
                tick,
                address: sender
              });

             case 8:
              return res = _context.sent, _context.abrupt("return", {
                balance: (null == res || null === (_res$data = res.data) || void 0 === _res$data || null === (_res$data$data = _res$data.data) || void 0 === _res$data$data ? void 0 : _res$data$data.balance) || "0"
              });

             case 12:
              return _context.next = 14, this.evmAdapter.getBalance(sender, coinIsMain ? void 0 : coinAddress);

             case 14:
              return balance = _context.sent, _context.abrupt("return", balance);

             case 16:
             case "end":
              return _context.stop();
            }
          }), _callee, this);
        }))), function(_x) {
          return _getEvmBalance.apply(this, arguments);
        })
      }, {
        key: "getCompatibilityTrxBalance",
        value: (_getCompatibilityTrxBalance = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee2(params) {
          var token, sender, coinAddress, coinIsMain, network, networkPreision, _this$tron2HexAddress, _this$tron2HexAddress2, res, _this$networkKey, _this$networkKey2, tick, _res$data2, _res$data2$data, _res, contract, _yield$Promise$all, _yield$Promise$all2, contractDecimals, balance;
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              if (token = params.token, sender = params.sender, coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), 
              coinIsMain = (0, gt_tokens.hT)(coinAddress), network = this.totalNetworkDic[this.networkKey], 
              networkPreision = null == network ? void 0 : network.networkPrecision, "TRX" == this.networkKey && (coinAddress = null === (_this$tron2HexAddress = this.tron2HexAddress(coinAddress)) || void 0 === _this$tron2HexAddress ? void 0 : _this$tron2HexAddress.substring(2), 
              sender = null === (_this$tron2HexAddress2 = this.tron2HexAddress(sender)) || void 0 === _this$tron2HexAddress2 ? void 0 : _this$tron2HexAddress2.substring(2)), 
              !coinIsMain) {
                _context2.next = 17;
                break;
              }
              return _context2.next = 9, this.evmProvider.eth.getBalance(sender);

             case 9:
              if (!(res = _context2.sent)) {
                _context2.next = 14;
                break;
              }
              return _context2.abrupt("return", {
                balance: (0, calculate.dataOperation)(res, Math.pow(10, parseInt(networkPreision)), "/")
              });

             case 14:
              return _context2.abrupt("return", {
                balance: "0"
              });

             case 15:
              _context2.next = 36;
              break;

             case 17:
              if (tick = null == token || null === (_this$networkKey = token[this.networkKey]) || void 0 === _this$networkKey ? void 0 : _this$networkKey.tick, 
              "BLOB-20" !== ((null == token || null === (_this$networkKey2 = token[this.networkKey]) || void 0 === _this$networkKey2 ? void 0 : _this$networkKey2.protocolLabel) || (null == token ? void 0 : token.protocolLabel))) {
                _context2.next = 24;
                break;
              }
              return _context2.next = 22, (0, send_receive.dD)({
                tick,
                address: sender
              });

             case 22:
              return _res = _context2.sent, _context2.abrupt("return", {
                balance: (null == _res || null === (_res$data2 = _res.data) || void 0 === _res$data2 || null === (_res$data2$data = _res$data2.data) || void 0 === _res$data2$data ? void 0 : _res$data2$data.balance) || "0"
              });

             case 24:
              return contract = this.defineContract(EVM_CONTRACT_ABI, coinAddress, sender), _context2.next = 27, 
              Promise.all([ EvmRpc.getContractDecimals(contract), contract.methods.balanceOf(sender).call() ]);

             case 27:
              if (_yield$Promise$all = _context2.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
              contractDecimals = _yield$Promise$all2[0], balance = _yield$Promise$all2[1], contractDecimals) {
                _context2.next = 35;
                break;
              }
              return _context2.abrupt("return", {
                balance: "0"
              });

             case 35:
              return _context2.abrupt("return", {
                balance: (0, calculate.dataOperation)(balance, Math.pow(10, parseInt(contractDecimals)), "/")
              });

             case 36:
             case "end":
              return _context2.stop();
            }
          }), _callee2, this);
        }))), function(_x2) {
          return _getCompatibilityTrxBalance.apply(this, arguments);
        })
      }, {
        key: "getGasPrice",
        value: (_getGasPrice = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee3() {
          var slowB, averageB, fastB, _ref, isTest, isCustom, _this$evmProvider$eth, _this$evmProvider$eth2, _this$evmProvider$eth3, res, _res2$SafeGasPrice, _res2$ProposeGasPrice, _res2$FastGasPrice, _res2, _res3$SafeGasPrice, _res3$ProposeGasPrice, _res3$FastGasPrice, _res3, _res4;
          return regeneratorRuntime.wrap((function(_context3) {
            for (;;) switch (_context3.prev = _context3.next) {
             case 0:
              if (slowB = 1, averageB = 1.1, fastB = 1.2, _ref = this.totalNetworkDic[this.networkKey] || {}, 
              isTest = _ref.isTest, isCustom = _ref.isCustom, "QUAI" !== _ref.chainArchitecture) {
                _context3.next = 11;
                break;
              }
              return _context3.next = 7, null === (_this$evmProvider$eth = this.evmProvider.eth) || void 0 === _this$evmProvider$eth || null === (_this$evmProvider$eth2 = _this$evmProvider$eth.getFeeData) || void 0 === _this$evmProvider$eth2 || null === (_this$evmProvider$eth3 = _this$evmProvider$eth2.call(_this$evmProvider$eth, zones.bo.Cyprus1)) || void 0 === _this$evmProvider$eth3 ? void 0 : _this$evmProvider$eth3.gasPrice;

             case 7:
              return res = _context3.sent, _context3.abrupt("return", [ (0, calculate.cutInteger)((0, 
              calculate.dataOperation)(res, slowB)), (0, calculate.cutInteger)((0, calculate.dataOperation)(res, averageB)), (0, 
              calculate.cutInteger)((0, calculate.dataOperation)(res, fastB)) ]);

             case 11:
              if (!isTest && !isCustom) {
                _context3.next = 18;
                break;
              }
              return _context3.next = 14, (0, send_receive.kF)({
                rpc_url: this.rpcUrl,
                type: isCustom ? 1 : 2
              });

             case 14:
              return _res2 = _context3.sent, _context3.abrupt("return", [ (0, calculate.cutInteger)((0, 
              calculate.dataOperation)(null == _res2 || null === (_res2$SafeGasPrice = _res2.SafeGasPrice) || void 0 === _res2$SafeGasPrice ? void 0 : _res2$SafeGasPrice.toString(), Math.pow(10, 9))), (0, 
              calculate.cutInteger)((0, calculate.dataOperation)(null == _res2 || null === (_res2$ProposeGasPrice = _res2.ProposeGasPrice) || void 0 === _res2$ProposeGasPrice ? void 0 : _res2$ProposeGasPrice.toString(), Math.pow(10, 9))), (0, 
              calculate.cutInteger)((0, calculate.dataOperation)(null == _res2 || null === (_res2$FastGasPrice = _res2.FastGasPrice) || void 0 === _res2$FastGasPrice ? void 0 : _res2$FastGasPrice.toString(), Math.pow(10, 9))) ]);

             case 18:
              if (![ "ETH", "BSC", "MATIC" ].includes(this.networkKey)) {
                _context3.next = 26;
                break;
              }
              return _context3.next = 22, (0, send_receive.Oe)({
                chainName: this.networkKey
              });

             case 22:
              return _res3 = _context3.sent, _context3.abrupt("return", [ (0, calculate.cutInteger)((0, 
              calculate.dataOperation)(null == _res3 || null === (_res3$SafeGasPrice = _res3.SafeGasPrice) || void 0 === _res3$SafeGasPrice ? void 0 : _res3$SafeGasPrice.toString(), Math.pow(10, 9))), (0, 
              calculate.cutInteger)((0, calculate.dataOperation)(null == _res3 || null === (_res3$ProposeGasPrice = _res3.ProposeGasPrice) || void 0 === _res3$ProposeGasPrice ? void 0 : _res3$ProposeGasPrice.toString(), Math.pow(10, 9))), (0, 
              calculate.cutInteger)((0, calculate.dataOperation)(null == _res3 || null === (_res3$FastGasPrice = _res3.FastGasPrice) || void 0 === _res3$FastGasPrice ? void 0 : _res3$FastGasPrice.toString(), Math.pow(10, 9))) ]);

             case 26:
              if ("BRISE" !== this.networkKey) {
                _context3.next = 31;
                break;
              }
              return _context3.abrupt("return", [ (0, calculate.dataOperation)("5000000000000000000", 1), (0, 
              calculate.dataOperation)("5000000000000000000", 1), (0, calculate.dataOperation)("5000000000000000000", 1) ]);

             case 31:
              return _context3.next = 33, this.evmProvider.eth.getGasPrice();

             case 33:
              return _res4 = _context3.sent, _context3.abrupt("return", [ (0, calculate.cutInteger)((0, 
              calculate.dataOperation)(_res4, slowB)), (0, calculate.cutInteger)((0, calculate.dataOperation)(_res4, averageB)), (0, 
              calculate.cutInteger)((0, calculate.dataOperation)(_res4, fastB)) ]);

             case 35:
             case "end":
              return _context3.stop();
            }
          }), _callee3, this);
        }))), function() {
          return _getGasPrice.apply(this, arguments);
        })
      }, {
        key: "getBlobFeeCap",
        value: (_getBlobFeeCap = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee4() {
          var latestBlock, excessBlobGas, blobGasUsed, parentExcessBlobGas;
          return regeneratorRuntime.wrap((function(_context4) {
            for (;;) switch (_context4.prev = _context4.next) {
             case 0:
              return _context4.next = 2, this.evmProvider.eth.getBlock("latest", !0);

             case 2:
              return latestBlock = _context4.sent, excessBlobGas = latestBlock.excessBlobGas, 
              blobGasUsed = latestBlock.blobGasUsed, parentExcessBlobGas = EvmRpc.calcExcessBlobGas(excessBlobGas, blobGasUsed), 
              _context4.abrupt("return", EvmRpc.calcBlobFee(parentExcessBlobGas));

             case 7:
             case "end":
              return _context4.stop();
            }
          }), _callee4, this);
        }))), function() {
          return _getBlobFeeCap.apply(this, arguments);
        })
      }, {
        key: "signEip4844EVMTransaction",
        value: (_signEip4844EVMTransaction = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee5(params) {
          var dataBlobs, privateKey, sender, gasLimitHex, nonce, maxPriorityFeePerGasHex, maxFeePerGasHex, data, chainIdHex, _yield$Promise$all3, _yield$Promise$all4, kzg, maxFeePerBlobGas, blobs, randomValues, blobList, blobVersionedHashes, wallet, rawTransaction;
          return regeneratorRuntime.wrap((function(_context5) {
            for (;;) switch (_context5.prev = _context5.next) {
             case 0:
              return dataBlobs = params.dataBlobs, privateKey = params.privateKey, sender = params.sender, 
              gasLimitHex = params.gasLimitHex, nonce = params.nonce, maxPriorityFeePerGasHex = params.maxPriorityFeePerGasHex, 
              maxFeePerGasHex = params.maxFeePerGasHex, data = params.data, chainIdHex = params.chainIdHex, 
              _context5.next = 3, Promise.all([ (0, browser.N)(), this.getBlobFeeCap() ]);

             case 3:
              return _yield$Promise$all3 = _context5.sent, _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2), 
              kzg = _yield$Promise$all4[0], maxFeePerBlobGas = _yield$Promise$all4[1], blobs = [], 
              dataBlobs ? blobs = dataBlobs : (blobs.push(new Blob), randomValues = EvmRpc.getRandomValues(131072), 
              blobs.push(new Blob([ randomValues ]))), blobList = [], blobVersionedHashes = [], 
              blobs.forEach((function(b) {
                var commit = kzg.blobToKzgCommitment(b), proof = kzg.computeBlobKzgProof(b, commit);
                if (131072 !== b.length) {
                  var padded = new Uint8Array(131072);
                  padded.set(b), b = padded;
                }
                blobList.push({
                  data: (0, utils.hexlify)(b),
                  commitment: (0, utils.hexlify)(commit),
                  proof: (0, utils.hexlify)(proof)
                }), blobVersionedHashes.push(EvmRpc.getVersionedHash(1, commit));
              })), wallet = new wallet_wallet.u(privateKey), _context5.next = 14, wallet.signTransaction({
                type: 3,
                to: sender,
                gasLimit: gasLimitHex,
                maxFeePerBlobGas,
                maxPriorityFeePerGas: maxPriorityFeePerGasHex,
                maxFeePerGas: maxFeePerGasHex,
                data: null != data && data.startsWith("0x") ? data : "0x".concat(data || ""),
                value: "0x0",
                chainId: chainIdHex,
                nonce,
                blobVersionedHashes,
                blobs: blobList,
                kzg
              });

             case 14:
              return rawTransaction = _context5.sent, _context5.abrupt("return", rawTransaction);

             case 16:
             case "end":
              return _context5.stop();
            }
          }), _callee5, this);
        }))), function(_x3) {
          return _signEip4844EVMTransaction.apply(this, arguments);
        })
      }, {
        key: "blob20Inscription",
        value: (_blob20Inscription = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
          var dataBlobs, _params$blobs, blob20blobscription;
          return regeneratorRuntime.wrap((function(_context6) {
            for (;;) switch (_context6.prev = _context6.next) {
             case 0:
              return null != params && params.blobs ? dataBlobs = null == params || null === (_params$blobs = params.blobs) || void 0 === _params$blobs ? void 0 : _params$blobs.map((function(item) {
                return new Uint8Array(Buffer.from(item, "hex"));
              })) : (blob20blobscription = (0, src.lF)({
                contentType: "application/json",
                content: params.json
              }), dataBlobs = (0, toBlobs.w)({
                data: blob20blobscription
              })), _context6.next = 3, this.signEip4844EVMTransaction(_objectSpread(_objectSpread({}, params), {}, {
                dataBlobs
              }));

             case 3:
              return _context6.abrupt("return", _context6.sent);

             case 4:
             case "end":
              return _context6.stop();
            }
          }), _callee6, this);
        }))), function(_x4) {
          return _blob20Inscription.apply(this, arguments);
        })
      }, {
        key: "getGasLimit",
        value: (_getGasLimit = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee7(params) {
          var sender, receiver, protocolLabel, data, token, amount, network, coinAddress, coinIsMain, coinPrecision, sendAmount, requestMethod, provider, interfaceTxObj, ethName, result, res, buildParams, gasLimit;
          return regeneratorRuntime.wrap((function(_context7) {
            for (;;) switch (_context7.prev = _context7.next) {
             case 0:
              if (sender = params.sender, receiver = params.receiver, protocolLabel = params.protocolLabel, 
              data = params.data, token = params.token, amount = params.amount, network = this.totalNetworkDic[this.networkKey], 
              coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), coinIsMain = (0, 
              gt_tokens.hT)(coinAddress), coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              "BLOB-20" !== protocolLabel) {
                _context7.next = 19;
                break;
              }
              return requestMethod = "POST", _context7.next = 10, Provider.init(this.rpcUrl);

             case 10:
              return provider = _context7.sent, interfaceTxObj = {
                from: sender,
                to: receiver,
                data,
                value: sendAmount
              }, ethName = new EthNameSpace, _context7.next = 15, provider.send(requestMethod, this.rpcUrl, ethName.eth_estimateGas(interfaceTxObj));

             case 15:
              return result = _context7.sent, _context7.abrupt("return", {
                gas_used: parseInt((0, calculate.dataOperation)(result, 1.2)),
                approve_gas_used: 0
              });

             case 19:
              if (network.isTest || network.isCustom) {
                _context7.next = 25;
                break;
              }
              return _context7.next = 22, (0, gas.p3)(this.networkKey, {
                from: sender,
                to: coinIsMain ? receiver : coinAddress,
                data: data || "0x",
                value: "0x0"
              }).catch((function() {
                return {
                  gas_used: 0,
                  approve_gas_used: 0
                };
              }));

             case 22:
              if (!((res = _context7.sent).gas_used > 0)) {
                _context7.next = 25;
                break;
              }
              return _context7.abrupt("return", res);

             case 25:
              return buildParams = {
                tokenType: coinIsMain ? "NATIVE" : "ERC20",
                from: sender,
                to: receiver,
                decimals: parseInt(coinPrecision),
                value: amount
              }, coinIsMain || (buildParams.tokenAddress = coinAddress, buildParams.amount = amount), 
              _context7.next = 29, this.evmAdapter.estimateGas(buildParams);

             case 29:
              return gasLimit = _context7.sent, _context7.abrupt("return", {
                gas_used: parseInt((0, calculate.dataOperation)(gasLimit, 1.2)),
                approve_gas_used: 0
              });

             case 31:
             case "end":
              return _context7.stop();
            }
          }), _callee7, this);
        }))), function(_x5) {
          return _getGasLimit.apply(this, arguments);
        })
      }, {
        key: "getL1ContractFee",
        value: (_getL1ContractFee = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee8(l1GasContract, rawTx) {
          var contract, l1Fee;
          return regeneratorRuntime.wrap((function(_context8) {
            for (;;) switch (_context8.prev = _context8.next) {
             case 0:
              return contract = new this.evmProvider.eth.Contract(OPTIMISM_GAS_ORACLE_ABI, l1GasContract), 
              _context8.next = 3, contract.methods.getL1Fee(rawTx).call();

             case 3:
              return l1Fee = _context8.sent, _context8.abrupt("return", l1Fee);

             case 5:
             case "end":
              return _context8.stop();
            }
          }), _callee8, this);
        }))), function(_x6, _x7) {
          return _getL1ContractFee.apply(this, arguments);
        })
      }, {
        key: "getOtherFees",
        value: (_getOtherFees = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee9(_ref2, gasPriceInfo, gasLimit) {
          var _this$totalNetworkDic, _this$totalNetworkDic2, _this$totalNetworkDic3, sender, token, receiver, amount, protocolLabel, coinAddress, coinPrecision, networkChainID, priorityFeePerGas, data, otherFees, l1GasContract, blobFeeCap, blobFeeCapTotal, _gasLimit$gas_used, _gasLimit$gas_used$to, nonce, to, value, sendAmount, sendAmountInteger, contract, _sendAmount, _sendAmountInteger, sendAmountHex, gasPrice, txParams, maxFeePerGas, maxPriorityFeePerGas, rawTx, l1ContractFee;
          return regeneratorRuntime.wrap((function(_context9) {
            for (;;) switch (_context9.prev = _context9.next) {
             case 0:
              if (sender = _ref2.sender, token = _ref2.token, receiver = _ref2.receiver, amount = _ref2.amount, 
              protocolLabel = (0, gt_tokens.N8)(token, this.networkKey, "protocolLabel"), coinAddress = (0, 
              gt_tokens.N8)(token, this.networkKey, "coinAddress"), coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), networkChainID = this.totalNetworkDic[this.networkKey].networkChainID, 
              priorityFeePerGas = (0, calculate.dataOperation)(gasPriceInfo.avg_pri_wei_per_gas, 1e9, "/") || 0, 
              data = "", otherFees = "0", l1GasContract = null === (_this$totalNetworkDic = this.totalNetworkDic) || void 0 === _this$totalNetworkDic || null === (_this$totalNetworkDic2 = _this$totalNetworkDic[this.networkKey]) || void 0 === _this$totalNetworkDic2 || null === (_this$totalNetworkDic3 = _this$totalNetworkDic2.transInfo) || void 0 === _this$totalNetworkDic3 ? void 0 : _this$totalNetworkDic3.l1GasContract, 
              "BLOB-20" !== protocolLabel) {
                _context9.next = 14;
                break;
              }
              return _context9.next = 11, this.getBlobFeeCap();

             case 11:
              blobFeeCap = _context9.sent, blobFeeCapTotal = EvmRpc.getBlobFeeCapTotal(1, blobFeeCap), 
              otherFees = blobFeeCapTotal;

             case 14:
              if (!l1GasContract) {
                _context9.next = 29;
                break;
              }
              return _context9.next = 17, this.evmProvider.eth.getTransactionCount(sender, "latest");

             case 17:
              return nonce = _context9.sent, to = "", value = "", (0, gt_tokens.hT)(coinAddress) ? (to = receiver, 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              sendAmountInteger = (0, calculate.cutInteger)(sendAmount), value = maths.up(sendAmountInteger)) : (contract = this.defineContract(EVM_CONTRACT_ABI, coinAddress, sender), 
              _sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              _sendAmountInteger = (0, calculate.cutInteger)(_sendAmount), sendAmountHex = maths.up(_sendAmountInteger), 
              data = contract.methods.transfer(receiver, sendAmountHex).encodeABI(), to = coinAddress), 
              gasPrice = (0, calculate.dataOperation)(gasPriceInfo.base_wei_fee, gasPriceInfo.avg_pri_wei_per_gas, "+"), 
              txParams = {
                to,
                gasPrice: maths.up(parseInt(gasPrice)),
                gasLimit: maths.up(parseInt((null == gasLimit || null === (_gasLimit$gas_used = gasLimit.gas_used) || void 0 === _gasLimit$gas_used || null === (_gasLimit$gas_used$to = _gasLimit$gas_used.toString) || void 0 === _gasLimit$gas_used$to ? void 0 : _gasLimit$gas_used$to.call(_gasLimit$gas_used)) || "0")),
                value,
                data,
                nonce,
                chainId: lib_esm_bignumber.gH.from(networkChainID).toNumber()
              }, priorityFeePerGas && gasPrice && (txParams.type = 2, maxFeePerGas = maths.up(parseInt((0, 
              bignumber.A)(1.3).multipliedBy(gasPrice).toString())), maxPriorityFeePerGas = maths.up(parseInt(priorityFeePerGas.toString())), 
              txParams.gasPrice = maxFeePerGas, txParams.maxFeePerGas = maxFeePerGas, txParams.maxPriorityFeePerGas = maxPriorityFeePerGas), 
              rawTx = lib_esm.serialize(txParams), _context9.next = 27, this.getL1ContractFee(l1GasContract, rawTx);

             case 27:
              l1ContractFee = _context9.sent, otherFees = (0, calculate.dataOperation)(otherFees, l1ContractFee, "+");

             case 29:
              return _context9.abrupt("return", otherFees);

             case 30:
             case "end":
              return _context9.stop();
            }
          }), _callee9, this);
        }))), function(_x8, _x9, _x10) {
          return _getOtherFees.apply(this, arguments);
        })
      }, {
        key: "addOtherFees",
        value: (_addOtherFees = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee10(params, gasPrice, gasLimit) {
          var otherFeesWei, low_pri_wei_per_gas, avg_pri_wei_per_gas, fast_pri_wei_per_gas, market_price_per_gas_lv2, market_price_per_gas_lv1, market_price_per_gas_lv3;
          return regeneratorRuntime.wrap((function(_context10) {
            for (;;) switch (_context10.prev = _context10.next) {
             case 0:
              return _context10.next = 2, this.getOtherFees(params, gasPrice, gasLimit);

             case 2:
              if (otherFeesWei = _context10.sent, !(0, bignumber.A)(otherFeesWei).gt(0)) {
                _context10.next = 11;
                break;
              }
              return low_pri_wei_per_gas = (0, bignumber.A)(gasPrice.low_pri_wei_per_gas).plus(otherFeesWei).toNumber(), 
              avg_pri_wei_per_gas = (0, bignumber.A)(gasPrice.avg_pri_wei_per_gas).plus(otherFeesWei).toNumber(), 
              fast_pri_wei_per_gas = (0, bignumber.A)(gasPrice.fast_pri_wei_per_gas).plus(otherFeesWei).toNumber(), 
              market_price_per_gas_lv2 = +(0, calculate.dataOperation)((0, calculate.dataOperation)(gasPrice.low_pri_wei_per_gas, gasPrice.avg_pri_wei_per_gas, "+"), gasPrice.fast_pri_wei_per_gas, "+"), 
              market_price_per_gas_lv1 = +(0, calculate.dataOperation)(market_price_per_gas_lv2, 3, "/"), 
              market_price_per_gas_lv3 = +(0, calculate.dataOperation)(market_price_per_gas_lv1, 5), 
              _context10.abrupt("return", _objectSpread(_objectSpread({}, gasPrice), {}, {
                low_pri_wei_per_gas,
                avg_pri_wei_per_gas,
                fast_pri_wei_per_gas,
                market_price_per_gas_lv1,
                market_price_per_gas_lv2,
                market_price_per_gas_lv3
              }));

             case 11:
              return _context10.abrupt("return", gasPrice);

             case 12:
             case "end":
              return _context10.stop();
            }
          }), _callee10, this);
        }))), function(_x11, _x12, _x13) {
          return _addOtherFees.apply(this, arguments);
        })
      }, {
        key: "getGasPriceByApi",
        value: (_getGasPriceByApi = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee11() {
          var res;
          return regeneratorRuntime.wrap((function(_context11) {
            for (;;) switch (_context11.prev = _context11.next) {
             case 0:
              return _context11.next = 2, (0, gas.d6)(this.networkKey).catch((function() {
                return {};
              }));

             case 2:
              if (null == (res = _context11.sent) || !res.low_pri_wei_per_gas) {
                _context11.next = 5;
                break;
              }
              return _context11.abrupt("return", res);

             case 5:
              return _context11.next = 7, this.getGasPriceByBlocks();

             case 7:
              return _context11.abrupt("return", _context11.sent);

             case 8:
             case "end":
              return _context11.stop();
            }
          }), _callee11, this);
        }))), function() {
          return _getGasPriceByApi.apply(this, arguments);
        })
      }, {
        key: "getGasPriceByBlocks",
        value: (_getGasPriceByBlocks = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee12() {
          var _gasPriceList$, _gasPriceList$2, _gasPriceList$3, _gasPriceList$4, network, coinPrice, gasPriceResult, gasPriceList, eip1559GasPriceList, list;
          return regeneratorRuntime.wrap((function(_context12) {
            for (;;) switch (_context12.prev = _context12.next) {
             case 0:
              return network = this.totalNetworkDic[this.networkKey], _context12.next = 3, (0, 
              gt_tokens.I)(network.networkKey);

             case 3:
              return coinPrice = _context12.sent, gasPriceResult = {
                native_coin_price: +coinPrice,
                native_decimal: network.networkPrecision,
                low_pri_cost_time: 60,
                avg_pri_cost_time: 30,
                fast_pri_cost_time: 15
              }, gasPriceList = [], _context12.next = 8, this.getEip1559GasPrice();

             case 8:
              if (null != (eip1559GasPriceList = _context12.sent) && eip1559GasPriceList.length && "BSC" !== this.networkKey) {
                _context12.next = 17;
                break;
              }
              return gasPriceResult.support_eip1559 = !1, _context12.next = 13, this.getGasPrice();

             case 13:
              list = _context12.sent, gasPriceList = null == list ? void 0 : list.map((function(item) {
                return {
                  estimatedGas: item
                };
              })), _context12.next = 19;
              break;

             case 17:
              gasPriceResult.support_eip1559 = !0, gasPriceList = eip1559GasPriceList;

             case 19:
              return gasPriceResult.low_pri_wei_per_gas = +(null === (_gasPriceList$ = gasPriceList[0]) || void 0 === _gasPriceList$ ? void 0 : _gasPriceList$.estimatedGas), 
              gasPriceResult.avg_pri_wei_per_gas = +(null === (_gasPriceList$2 = gasPriceList[1]) || void 0 === _gasPriceList$2 ? void 0 : _gasPriceList$2.estimatedGas), 
              gasPriceResult.fast_pri_wei_per_gas = +(null === (_gasPriceList$3 = gasPriceList[2]) || void 0 === _gasPriceList$3 ? void 0 : _gasPriceList$3.estimatedGas), 
              gasPriceResult.base_wei_fee = gasPriceResult.support_eip1559 && +(null === (_gasPriceList$4 = gasPriceList[0]) || void 0 === _gasPriceList$4 ? void 0 : _gasPriceList$4.baseFeePerGas) || 0, 
              gasPriceResult.market_price_per_gas_lv2 = +(0, calculate.dataOperation)((0, calculate.dataOperation)(gasPriceResult.low_pri_wei_per_gas, gasPriceResult.avg_pri_wei_per_gas, "+"), gasPriceResult.fast_pri_wei_per_gas, "+"), 
              gasPriceResult.market_price_per_gas_lv1 = +(0, calculate.dataOperation)(gasPriceResult.market_price_per_gas_lv2, 3, "/"), 
              gasPriceResult.market_price_per_gas_lv3 = +(0, calculate.dataOperation)(gasPriceResult.market_price_per_gas_lv1, 5), 
              _context12.abrupt("return", gasPriceResult);

             case 27:
             case "end":
              return _context12.stop();
            }
          }), _callee12, this);
        }))), function() {
          return _getGasPriceByBlocks.apply(this, arguments);
        })
      }, {
        key: "formatGasFee",
        value: (_formatGasFee = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee13(params, gasPriceResult, gasLimit) {
          var _feeList, _gasInfo$feeList, _gasInfo$feeList2, _gasInfo$feeList3, _gasInfo$feeList4, _gasInfo$feeList5, _gasInfo$feeList6, network, gasPriceFactor, gasLimitFactor, gasLimitUsed, _ref3, _ref3$low_pri_wei_per, low_pri_wei_per_gas, _ref3$avg_pri_wei_per, avg_pri_wei_per_gas, _ref3$fast_pri_wei_pe, fast_pri_wei_per_gas, _ref3$base_wei_fee, base_wei_fee, native_coin_price, support_eip1559, lowWei, avgWei, fastWei, baseGwei, otherFeesWei, maxBaseFeePerGas, lowGasFee, avgGasFee, fastGasFee, precision, lowTransactionFee, avgTransactionFee, fastTransactionFee, gasInfo, lowMaxFeePerGas, avgMaxFeePerGas, fastMaxFeePerGas, lowMaxGasFee, avgMaxGasFee, fastMaxGasFee, lowMaxPriorityFeePerGas, avgMaxPriorityFeePerGas, fastMaxPriorityFeePerGas;
          return regeneratorRuntime.wrap((function(_context13) {
            for (;;) switch (_context13.prev = _context13.next) {
             case 0:
              return network = this.totalNetworkDic[this.networkKey], gasPriceFactor = EvmRpc.getGasPriceFactor(network), 
              gasLimitFactor = EvmRpc.getGasLimitFactor(network), gasLimitUsed = (0, calculate.dataOperation)(gasLimit.gas_used, gasLimitFactor), 
              _ref3$low_pri_wei_per = (_ref3 = gasPriceResult || {}).low_pri_wei_per_gas, low_pri_wei_per_gas = void 0 === _ref3$low_pri_wei_per ? 0 : _ref3$low_pri_wei_per, 
              _ref3$avg_pri_wei_per = _ref3.avg_pri_wei_per_gas, avg_pri_wei_per_gas = void 0 === _ref3$avg_pri_wei_per ? 0 : _ref3$avg_pri_wei_per, 
              _ref3$fast_pri_wei_pe = _ref3.fast_pri_wei_per_gas, fast_pri_wei_per_gas = void 0 === _ref3$fast_pri_wei_pe ? 0 : _ref3$fast_pri_wei_pe, 
              _ref3$base_wei_fee = _ref3.base_wei_fee, base_wei_fee = void 0 === _ref3$base_wei_fee ? 0 : _ref3$base_wei_fee, 
              native_coin_price = _ref3.native_coin_price, support_eip1559 = _ref3.support_eip1559, 
              lowWei = (0, calculate.dataOperation)(base_wei_fee, low_pri_wei_per_gas, "+") || 0, 
              avgWei = (0, calculate.dataOperation)(base_wei_fee, avg_pri_wei_per_gas, "+") || 0, 
              fastWei = (0, calculate.dataOperation)(base_wei_fee, fast_pri_wei_per_gas, "+") || 0, 
              baseGwei = (0, calculate.dataOperation)(base_wei_fee, 1e9, "/"), [ "GT", "GATE_GATETEST", "GTL_GATETEST", "GATELAYER" ].includes(this.networkKey) && (lowWei = +this.calculateGateGasPrice(lowWei.toString()), 
              avgWei = +this.calculateGateGasPrice(avgWei.toString()), fastWei = +this.calculateGateGasPrice(fastWei.toString())), 
              _context13.next = 12, this.getOtherFees(params, gasPriceResult, gasLimit);

             case 12:
              return otherFeesWei = _context13.sent, maxBaseFeePerGas = baseGwei, lowGasFee = (0, 
              calculate.dataOperation)(lowWei, 1e9, "/"), avgGasFee = (0, calculate.dataOperation)(avgWei, 1e9, "/"), 
              fastGasFee = (0, calculate.dataOperation)(fastWei, 1e9, "/"), precision = Math.pow(10, +network.networkPrecision), 
              lowTransactionFee = (0, calculate.toNonExponential)((0, bignumber.A)(lowWei).times(gasPriceFactor).times(gasLimitUsed).plus(otherFeesWei).div(precision)), 
              avgTransactionFee = (0, calculate.toNonExponential)((0, bignumber.A)(avgWei).times(gasPriceFactor).times(gasLimitUsed).plus(otherFeesWei).div(precision)), 
              fastTransactionFee = (0, calculate.toNonExponential)((0, bignumber.A)(fastWei).times(gasPriceFactor).times(gasLimitUsed).plus(otherFeesWei).div(precision)), 
              gasInfo = _objectSpread(_objectSpread({}, gasPriceResult), {}, {
                gasFee: fastTransactionFee,
                priorityFeePerGas: (0, calculate.dataOperation)(avg_pri_wei_per_gas, 1e9, "/") || 0,
                baseGwei,
                maxBaseFeePerGas,
                gasFeeUnit: "Gwei",
                feeList: (_feeList = {}, evm_rpc_defineProperty(_feeList, constants.SQ.LOW, {
                  gasFee: lowGasFee,
                  gasPrice: lowWei.toString(),
                  transactionFee: lowTransactionFee,
                  transactionFeeUsd: (0, calculate.dataOperation)(lowTransactionFee, native_coin_price),
                  maxPriorityFeePerGas: support_eip1559 ? low_pri_wei_per_gas.toString() : "",
                  maxFeePerGas: support_eip1559 ? lowWei.toString() : ""
                }), evm_rpc_defineProperty(_feeList, constants.SQ.AVG, {
                  gasFee: avgGasFee,
                  gasPrice: avgWei.toString(),
                  transactionFee: avgTransactionFee,
                  transactionFeeUsd: (0, calculate.dataOperation)(avgTransactionFee, native_coin_price),
                  maxPriorityFeePerGas: support_eip1559 ? avg_pri_wei_per_gas.toString() : "",
                  maxFeePerGas: support_eip1559 ? avgWei.toString() : ""
                }), evm_rpc_defineProperty(_feeList, constants.SQ.FAST, {
                  gasFee: fastGasFee,
                  gasPrice: fastWei.toString(),
                  transactionFee: fastTransactionFee,
                  transactionFeeUsd: (0, calculate.dataOperation)(fastTransactionFee, native_coin_price),
                  maxPriorityFeePerGas: support_eip1559 ? fast_pri_wei_per_gas.toString() : "",
                  maxFeePerGas: support_eip1559 ? fastWei.toString() : ""
                }), _feeList),
                gasFeeList: []
              }), lowMaxFeePerGas = (0, calculate.dataOperation)(lowWei, 1.3), avgMaxFeePerGas = (0, 
              calculate.dataOperation)(avgWei, 1.3), fastMaxFeePerGas = (0, calculate.dataOperation)(fastWei, 1.3), 
              lowMaxGasFee = (0, calculate.dataOperation)((0, calculate.dataOperation)(lowMaxFeePerGas, gasLimitUsed), precision, "/"), 
              avgMaxGasFee = (0, calculate.dataOperation)((0, calculate.dataOperation)(avgMaxFeePerGas, gasLimitUsed), precision, "/"), 
              fastMaxGasFee = (0, calculate.dataOperation)((0, calculate.dataOperation)(fastMaxFeePerGas, gasLimitUsed), precision, "/"), 
              lowMaxPriorityFeePerGas = (0, calculate.dataOperation)(lowMaxFeePerGas, 1e9, "/"), 
              avgMaxPriorityFeePerGas = (0, calculate.dataOperation)(avgMaxFeePerGas, 1e9, "/"), 
              fastMaxPriorityFeePerGas = (0, calculate.dataOperation)(fastMaxFeePerGas, 1e9, "/"), 
              gasInfo.gasFeeList = [ {
                gasFee: null === (_gasInfo$feeList = gasInfo.feeList) || void 0 === _gasInfo$feeList ? void 0 : _gasInfo$feeList[constants.SQ.LOW].transactionFee,
                gasPrice: lowWei.toString(),
                otherUnitFeePerGas: parseInt((0, calculate.dataOperation)(low_pri_wei_per_gas, 1e9, "/")).toString() + " ".concat(gasInfo.gasFeeUnit),
                maxFeePerGas: support_eip1559 ? lowMaxFeePerGas : "",
                maxGasFee: lowMaxGasFee,
                otherUnitMaxFeePerGas: lowMaxPriorityFeePerGas + " ".concat(gasInfo.gasFeeUnit),
                maxPriorityFeePerGas: support_eip1559 ? null === (_gasInfo$feeList2 = gasInfo.feeList) || void 0 === _gasInfo$feeList2 ? void 0 : _gasInfo$feeList2[constants.SQ.LOW].maxPriorityFeePerGas : ""
              }, {
                gasFee: null === (_gasInfo$feeList3 = gasInfo.feeList) || void 0 === _gasInfo$feeList3 ? void 0 : _gasInfo$feeList3[constants.SQ.AVG].transactionFee,
                gasPrice: avgWei.toString(),
                otherUnitFeePerGas: parseInt((0, calculate.dataOperation)(avg_pri_wei_per_gas, 1e9, "/")).toString() + " ".concat(gasInfo.gasFeeUnit),
                maxFeePerGas: support_eip1559 ? avgMaxFeePerGas : "",
                maxGasFee: avgMaxGasFee,
                otherUnitMaxFeePerGas: avgMaxPriorityFeePerGas + " ".concat(gasInfo.gasFeeUnit),
                maxPriorityFeePerGas: support_eip1559 ? null === (_gasInfo$feeList4 = gasInfo.feeList) || void 0 === _gasInfo$feeList4 ? void 0 : _gasInfo$feeList4[constants.SQ.AVG].maxPriorityFeePerGas : ""
              }, {
                gasFee: null === (_gasInfo$feeList5 = gasInfo.feeList) || void 0 === _gasInfo$feeList5 ? void 0 : _gasInfo$feeList5[constants.SQ.FAST].transactionFee,
                gasPrice: fastWei.toString(),
                otherUnitFeePerGas: parseInt((0, calculate.dataOperation)(fast_pri_wei_per_gas, 1e9, "/")).toString() + " ".concat(gasInfo.gasFeeUnit),
                maxFeePerGas: support_eip1559 ? fastMaxFeePerGas : "",
                maxGasFee: fastMaxGasFee,
                otherUnitMaxFeePerGas: fastMaxPriorityFeePerGas + " ".concat(gasInfo.gasFeeUnit),
                maxPriorityFeePerGas: support_eip1559 ? null === (_gasInfo$feeList6 = gasInfo.feeList) || void 0 === _gasInfo$feeList6 ? void 0 : _gasInfo$feeList6[constants.SQ.FAST].maxPriorityFeePerGas : ""
              } ], _context13.abrupt("return", gasInfo);

             case 33:
             case "end":
              return _context13.stop();
            }
          }), _callee13, this);
        }))), function(_x14, _x15, _x16) {
          return _formatGasFee.apply(this, arguments);
        })
      }, {
        key: "calculateGateGasPrice",
        value: function(gasPrice) {
          return [ "GT", "GATE_GATETEST", "GTL_GATETEST", "GATELAYER" ].includes(this.networkKey) && (gasPrice = (0, 
          calculate.dataOperation)(gasPrice, Math.pow(10, 9), "/"), gasPrice = Math.round(parseFloat(gasPrice)).toString(), 
          (0, bignumber.A)(gasPrice).isZero() && (gasPrice = "1"), gasPrice = (0, calculate.dataOperation)(Math.round(parseFloat(gasPrice)), Math.pow(10, 9))), 
          gasPrice;
        }
      }, {
        key: "getEvmSendGasFee",
        value: (_getEvmSendGasFee = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee14(params) {
          var _token$network, _token$network$this$n, sender, token, receiver, amount, protocolLabel, coinAddress, coinPrecision, coinIsMain, network, data, contract, sendAmount, sendAmountInteger, sendAmountHex, gasLimit, gasPrice, gasInfo;
          return regeneratorRuntime.wrap((function(_context14) {
            for (;;) switch (_context14.prev = _context14.next) {
             case 0:
              return sender = params.sender, token = params.token, receiver = params.receiver, 
              amount = params.amount, protocolLabel = (0, gt_tokens.N8)(token, this.networkKey, "protocolLabel"), 
              coinAddress = null == token || null === (_token$network = token.network) || void 0 === _token$network || null === (_token$network$this$n = _token$network[this.networkKey]) || void 0 === _token$network$this$n ? void 0 : _token$network$this$n.coinAddress, 
              coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), coinIsMain = (0, gt_tokens.hT)(coinAddress), 
              network = this.totalNetworkDic[this.networkKey], data = "", "BLOB-20" === protocolLabel ? data = EvmRpc.getSendBlob20Data() : coinIsMain || (contract = this.defineContract(EVM_CONTRACT_ABI, coinAddress, sender), 
              sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              sendAmountInteger = (0, calculate.cutInteger)(sendAmount), sendAmountHex = maths.up(sendAmountInteger), 
              data = contract.methods.transfer(receiver, sendAmountHex).encodeABI()), _context14.next = 10, 
              this.getGasLimit({
                protocolLabel,
                sender,
                receiver,
                amount,
                data,
                token
              });

             case 10:
              if (gasLimit = _context14.sent, network.isTest || network.isCustom) {
                _context14.next = 17;
                break;
              }
              return _context14.next = 14, this.getGasPriceByApi();

             case 14:
              gasPrice = _context14.sent, _context14.next = 20;
              break;

             case 17:
              return _context14.next = 19, this.getGasPriceByBlocks();

             case 19:
              gasPrice = _context14.sent;

             case 20:
              return _context14.next = 22, this.formatGasFee(params, gasPrice, gasLimit);

             case 22:
              return gasInfo = _context14.sent, _context14.abrupt("return", _objectSpread(_objectSpread({}, gasInfo), {}, {
                gasLimit
              }));

             case 24:
             case "end":
              return _context14.stop();
            }
          }), _callee14, this);
        }))), function(_x17) {
          return _getEvmSendGasFee.apply(this, arguments);
        })
      }, {
        key: "getEip1559GasPrice",
        value: (_getEip1559GasPrice = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee15() {
          var _feeHistory$reward, chainArchitecture, rewardPercentiles, latestBlock, baseFeePerGas, feeHistory, filterArrary, result, _loop, index;
          return regeneratorRuntime.wrap((function(_context15) {
            for (;;) switch (_context15.prev = _context15.next) {
             case 0:
              return _context15.prev = 0, chainArchitecture = this.totalNetworkDic[this.networkKey].chainArchitecture, 
              rewardPercentiles = [ 25, 50, 75 ], _context15.next = 5, this.evmProvider.eth.getBlock("QUAI" === chainArchitecture ? "" : "latest", !1);

             case 5:
              if (latestBlock = _context15.sent, Object.hasOwn(latestBlock, "baseFeePerGas")) {
                _context15.next = 8;
                break;
              }
              return _context15.abrupt("return", []);

             case 8:
              return baseFeePerGas = latestBlock.baseFeePerGas || 0, _context15.next = 11, this.evmProvider.eth.getFeeHistory(20, "BSC" === this.networkKey ? "pending" : "latest", rewardPercentiles);

             case 11:
              if (feeHistory = _context15.sent, filterArrary = (filterArrary = (null == feeHistory || null === (_feeHistory$reward = feeHistory.reward) || void 0 === _feeHistory$reward ? void 0 : _feeHistory$reward.filter((function(subArray) {
                return subArray.length > 0;
              }))) || []).filter((function(item) {
                return (item = item.filter((function(val) {
                  return (0, bignumber.A)(val).isGreaterThan(0);
                }))).length;
              })), result = [], filterArrary.length > 0) for (_loop = function(index) {
                var priorityFee = filterArrary.map((function(e) {
                  return (0, bignumber.A)(e[index]).toString();
                })).reduce((function(curr, next) {
                  return curr > next ? curr : next;
                })), estimatedGas = (0, bignumber.A)(baseFeePerGas).plus(priorityFee).toString(), maxFee = (0, 
                bignumber.A)(1.3).multipliedBy(estimatedGas).toString();
                result.push({
                  maxPriorityFeePerGas: priorityFee,
                  maxFeePerGas: maxFee,
                  estimatedGas,
                  baseFeePerGas: baseFeePerGas.toString()
                });
              }, index = 0; index < rewardPercentiles.length; index++) _loop(index);
              return _context15.abrupt("return", result);

             case 19:
              return _context15.prev = 19, _context15.t0 = _context15.catch(0), _context15.abrupt("return", []);

             case 22:
             case "end":
              return _context15.stop();
            }
          }), _callee15, this, [ [ 0, 19 ] ]);
        }))), function() {
          return _getEip1559GasPrice.apply(this, arguments);
        })
      }, {
        key: "signEvm",
        value: (_signEvm = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee16(params) {
          var _privateKey, sender, receiver, amount, gasFeeInfo, feeIndex, customGasInfoFormValues, token, options, hardware, mpcWallet, network, chainArchitecture, networkPrecision, networkChainID, networkSimpleSymbol, networkName, _ref4, gasLimit, feeList, support_eip1559, _ref5, _gasPrice, maxFeePerGas, maxPriorityFeePerGas, coinAddress, protocolLabel, tick, coinPrecision, coinIsMain, privateKey, chainIdHex, gasPrice, to, value, data, _value, _valueInteger, contract, sendAmount, sendAmountHex, nonce, gasPriceHex, maxFeePerGasHex, maxPriorityFeePerGasHex, gasLimitFactor, gasLimitUsed, gasLimitHex, signed, blob20SignedTx, json, txParams, rawTx, _hardware$device, uint8Array, sign, _hardware$device2, _hardware$device3, signedRsv, rsv, wallet, _txParams, signer;
          return regeneratorRuntime.wrap((function(_context16) {
            for (;;) switch (_context16.prev = _context16.next) {
             case 0:
              return _privateKey = params.privateKey, sender = params.sender, receiver = params.receiver, 
              amount = params.amount, gasFeeInfo = params.gasFeeInfo, feeIndex = params.feeIndex, 
              customGasInfoFormValues = params.customGasInfoFormValues, token = params.token, 
              options = params.options, hardware = options.hardware, mpcWallet = options.mpcWallet, 
              network = this.totalNetworkDic[this.networkKey], chainArchitecture = network.chainArchitecture, 
              networkPrecision = network.networkPrecision, networkChainID = network.networkChainID, 
              networkSimpleSymbol = network.networkSimpleSymbol, networkName = network.networkName, 
              gasLimit = (_ref4 = gasFeeInfo).gasLimit, feeList = _ref4.feeList, support_eip1559 = _ref4.support_eip1559, 
              _ref5 = (null == feeList ? void 0 : feeList[feeIndex]) || {}, _gasPrice = _ref5.gasPrice, 
              maxFeePerGas = _ref5.maxFeePerGas, maxPriorityFeePerGas = _ref5.maxPriorityFeePerGas, 
              feeIndex === constants.SQ.CUSTOM && (_gasPrice = (0, calculate.dataOperation)((0, 
              calculate.dataOperation)(null == customGasInfoFormValues ? void 0 : customGasInfoFormValues.maxBaseFeePerGas, customGasInfoFormValues.maxPriorityFeePerGas, "+"), 1e9), 
              maxFeePerGas = support_eip1559 ? _gasPrice : "", maxPriorityFeePerGas = support_eip1559 ? (0, 
              calculate.dataOperation)(null == customGasInfoFormValues ? void 0 : customGasInfoFormValues.maxPriorityFeePerGas, 1e9) : ""), 
              maxPriorityFeePerGas && (0, bignumber.A)(maxPriorityFeePerGas).isZero() && (maxPriorityFeePerGas = "1"), 
              coinAddress = (0, gt_tokens.N8)(token, this.networkKey, "coinAddress"), protocolLabel = (0, 
              gt_tokens.N8)(token, this.networkKey, "protocolLabel"), tick = (0, gt_tokens.N8)(token, this.networkKey, "tick"), 
              coinPrecision = (0, gt_tokens.N8)(token, this.networkKey, "coinPrecision") || (0, 
              gt_tokens.N8)(token, this.networkKey, "token_decimal"), coinIsMain = (0, gt_tokens.hT)(coinAddress), 
              privateKey = (0, type_transfer.LL)(_privateKey), chainIdHex = maths.up(networkChainID), 
              gasPrice = _gasPrice, to = "", coinIsMain ? (_value = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(networkPrecision))), 
              _valueInteger = (0, calculate.cutInteger)(_value), value = maths.up(_valueInteger), 
              to = receiver) : "BLOB-20" === protocolLabel ? (to = receiver, data = EvmRpc.getSendBlob20Data()) : (to = coinAddress, 
              contract = this.defineContract(EVM_CONTRACT_ABI, to, sender), sendAmount = (0, calculate.dataOperation)(amount, Math.pow(10, parseInt(coinPrecision))), 
              sendAmountHex = maths.up(sendAmount), data = contract.methods.transfer(receiver, sendAmountHex).encodeABI()), 
              _context16.next = 20, this.evmProvider.eth.getTransactionCount(sender, "latest");

             case 20:
              if (nonce = _context16.sent, gasPriceHex = maths.up((0, calculate.cutInteger)(gasPrice)), 
              maxFeePerGasHex = maxFeePerGas ? maths.up((0, calculate.cutInteger)(maxFeePerGas)) : void 0, 
              maxPriorityFeePerGasHex = maxPriorityFeePerGas ? maths.up((0, calculate.cutInteger)(maxPriorityFeePerGas)) : void 0, 
              gasLimitFactor = EvmRpc.getGasLimitFactor(network), gasLimitUsed = (0, calculate.dataOperation)(gasLimit.gas_used, gasLimitFactor), 
              gasLimitHex = maths.up((0, calculate.cutInteger)(gasLimitUsed)), signed = "", blob20SignedTx = "", 
              "BLOB-20" !== protocolLabel) {
                _context16.next = 34;
                break;
              }
              return json = EvmRpc.getBlob20TransferJson(receiver, amount, tick), _context16.next = 33, 
              this.blob20Inscription({
                privateKey,
                sender,
                gasLimitHex,
                nonce,
                maxPriorityFeePerGasHex,
                maxFeePerGasHex,
                data,
                chainIdHex,
                json
              });

             case 33:
              blob20SignedTx = _context16.sent;

             case 34:
              if (!hardware && !mpcWallet) {
                _context16.next = 52;
                break;
              }
              if (txParams = {
                to,
                gasPrice: gasPriceHex,
                gasLimit: gasLimitHex,
                value,
                data,
                nonce,
                chainId: parseInt(networkChainID)
              }, mpcWallet && maxFeePerGasHex && (txParams.maxFeePerGas = maxFeePerGasHex, txParams.maxPriorityFeePerGas = maxPriorityFeePerGasHex, 
              txParams.type = 2), rawTx = blob20SignedTx || lib_esm.serialize(txParams), !hardware) {
                _context16.next = 49;
                break;
              }
              return uint8Array = bytes_lib_esm.arrayify(rawTx), _context16.next = 42, null == hardware || null === (_hardware$device = hardware.device) || void 0 === _hardware$device ? void 0 : _hardware$device.signTxRaw(networkSimpleSymbol, uint8Array, {
                t: [ {
                  a: coinIsMain ? "" : coinAddress,
                  s: null == token ? void 0 : token.coinSimpleName,
                  d: parseInt(coinPrecision),
                  t: 0
                } ],
                c: [ {
                  t: 0,
                  ca: "ETH",
                  sy: networkSimpleSymbol,
                  d: parseInt(coinPrecision),
                  ch: networkName,
                  ci: parseInt(networkChainID)
                } ]
              });

             case 42:
              if (null == (sign = _context16.sent) || !sign.sign) {
                _context16.next = 49;
                break;
              }
              return _context16.next = 46, null == hardware || null === (_hardware$device2 = hardware.device) || void 0 === _hardware$device2 ? void 0 : _hardware$device2.request(null == hardware ? void 0 : hardware.path, 0, "00");

             case 46:
              signedRsv = _context16.sent, rsv = null == hardware || null === (_hardware$device3 = hardware.device) || void 0 === _hardware$device3 ? void 0 : _hardware$device3.hexToMsgSignature(DEVICE_TYPE.gate, signedRsv, parseInt(networkChainID)), 
              signed = lib_esm.serialize(txParams, rsv);

             case 49:
              _context16.next = 69;
              break;

             case 52:
              if ("BLOB-20" !== protocolLabel) {
                _context16.next = 56;
                break;
              }
              signed = blob20SignedTx, _context16.next = 69;
              break;

             case 56:
              if ("QUAI" !== chainArchitecture) {
                _context16.next = 64;
                break;
              }
              return (wallet = new esm_wallet_wallet.u(privateKey, this.evmProvider.eth)).connect(this.evmProvider.eth), 
              _context16.next = 61, wallet.signTransaction({
                to,
                from: sender,
                chainId: parseInt(networkChainID),
                gasLimit: (0, bignumber.A)(parseInt(gasLimitUsed)).toString(),
                maxPriorityFeePerGas: (0, bignumber.A)(parseInt(gasPrice)).toString(),
                value: (0, bignumber.A)(amount).toString(),
                maxFeePerGas: (0, bignumber.A)(gasPrice).toString(),
                data,
                nonce
              });

             case 61:
              signed = _context16.sent, _context16.next = 69;
              break;

             case 64:
              return _txParams = {
                data: {
                  from: sender,
                  to: receiver,
                  transactionType: support_eip1559 ? "eip1559" : "legacy",
                  tokenType: coinIsMain ? "NATIVE" : "ERC20",
                  value: coinIsMain ? amount : "",
                  tokenAddress: coinIsMain ? "" : coinAddress,
                  amount,
                  decimals: parseInt(coinPrecision),
                  chainId: Number(networkChainID),
                  nonce,
                  gasPrice: BigInt((0, calculate.cutInteger)(gasPrice)),
                  gas: BigInt((0, calculate.cutInteger)(gasLimitUsed)),
                  maxFeePerGas: support_eip1559 ? BigInt((0, calculate.cutInteger)(maxFeePerGasHex)) : void 0,
                  maxPriorityFeePerGas: support_eip1559 ? BigInt((0, calculate.cutInteger)(maxPriorityFeePerGas)) : void 0
                },
                privateKey: privateKey.startsWith("0x") ? privateKey : "0x".concat(privateKey)
              }, signer = new ethereum_dist.bq, _context16.next = 68, signer.signTransaction(_txParams);

             case 68:
              signed = _context16.sent;

             case 69:
              return _context16.abrupt("return", {
                tx: [ signed ],
                nonce,
                rpcUrl: this.rpcUrl
              });

             case 70:
             case "end":
              return _context16.stop();
            }
          }), _callee16, this);
        }))), function(_x18) {
          return _signEvm.apply(this, arguments);
        })
      }, {
        key: "signEvmNFT",
        value: (_signEvmNFT = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee17(params) {
          var _gasInfo$gasPrice, _gasInfo$maxFeePerGas, _gasInfo$gasLimit, nft, gasInfo, privateKey, sender, receiver, tokenType, contractAddress, tokenID, network, chainId, gasPrice, maxFeePerGas, maxPriorityFeePerGas, gasLimit, nonce, transactionType, txParams, signer, signed;
          return regeneratorRuntime.wrap((function(_context17) {
            for (;;) switch (_context17.prev = _context17.next) {
             case 0:
              return nft = params.nft, gasInfo = params.gasInfo, privateKey = params.privateKey, 
              sender = params.sender, receiver = params.receiver, tokenType = nft.tokenType, contractAddress = nft.contractAddress, 
              tokenID = nft.tokenID, network = this.totalNetworkDic[this.networkKey], chainId = network.networkChainID, 
              gasPrice = BigInt(Math.trunc(null !== (_gasInfo$gasPrice = gasInfo.gasPrice) && void 0 !== _gasInfo$gasPrice ? _gasInfo$gasPrice : 0)), 
              maxFeePerGas = BigInt(Math.trunc(null !== (_gasInfo$maxFeePerGas = gasInfo.maxFeePerGas) && void 0 !== _gasInfo$maxFeePerGas ? _gasInfo$maxFeePerGas : 0)), 
              maxPriorityFeePerGas = BigInt(Math.trunc(gasInfo.maxPriorityFeePerGas ? gasInfo.maxPriorityFeePerGas : gasInfo.maxFeePerGas ? 1 : 0)), 
              gasLimit = BigInt(Math.trunc(null !== (_gasInfo$gasLimit = gasInfo.gasLimit) && void 0 !== _gasInfo$gasLimit ? _gasInfo$gasLimit : 0)), 
              _context17.next = 10, this.evmAdapter.getNextNonce(sender);

             case 10:
              return nonce = _context17.sent, transactionType = maxPriorityFeePerGas || maxFeePerGas ? "eip1559" : "legacy", 
              txParams = {
                privateKey: (0, type_transfer.mu)(privateKey),
                data: {
                  tokenType,
                  from: sender,
                  to: receiver,
                  tokenAddress: contractAddress,
                  tokenId: Number(tokenID),
                  amount: "1",
                  nonce,
                  chainId: Number(chainId),
                  transactionType,
                  gas: gasLimit,
                  gasPrice,
                  maxFeePerGas,
                  maxPriorityFeePerGas
                }
              }, signer = new ethereum_dist.bq, _context17.next = 16, signer.signTransaction(txParams);

             case 16:
              return signed = _context17.sent, _context17.abrupt("return", {
                tx: [ signed ],
                nonce,
                rpcUrl: this.rpcUrl
              });

             case 18:
             case "end":
              return _context17.stop();
            }
          }), _callee17, this);
        }))), function(_x19) {
          return _signEvmNFT.apply(this, arguments);
        })
      }, {
        key: "getEvmNFTData",
        value: function(params) {
          var nft = params.nft, sender = params.sender, receiver = params.receiver, contract = new this.evmProvider.eth.Contract("ERC721" === nft.tokenType ? EVM_CONTRACT_ABI_ERC721 : EVM_CONTRACT_ABI_ERC1155, sender), tokenIdP = this.evmProvider.eth.abi.encodeParameter("uint256", nft.tokenID), encodeABI = "";
          if ("ERC721" === nft.tokenType) encodeABI = contract.methods.safeTransferFrom(sender, receiver, tokenIdP).encodeABI(); else {
            var amount = this.evmProvider.eth.abi.encodeParameter("uint256", "1"), data = this.evmProvider.eth.abi.encodeParameter("bytes", "0x00");
            encodeABI = contract.methods.safeTransferFrom(sender, receiver, tokenIdP, amount, data).encodeABI();
          }
          return encodeABI;
        }
      } ], staticProps = [ {
        key: "init",
        value: (_init = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee18(totalNetworkDic, networkKey, rpcUrls, lastGetSuccessRpcTime, dispatch) {
          var wasm, rpcUrl, evmProvider, chainInfo, evmAdapter;
          return regeneratorRuntime.wrap((function(_context18) {
            for (;;) switch (_context18.prev = _context18.next) {
             case 0:
              return _context18.next = 2, (0, wallet_core.t)();

             case 2:
              if (wasm = _context18.sent, rpcUrl = "", !rpcUrls) {
                _context18.next = 8;
                break;
              }
              return _context18.next = 7, (0, gt_networks.gL)(totalNetworkDic, networkKey, null == rpcUrls ? void 0 : rpcUrls[networkKey], lastGetSuccessRpcTime || 0, dispatch);

             case 7:
              rpcUrl = _context18.sent;

             case 8:
              return evmProvider = (0, gt_on_chain.Qp)(networkKey, totalNetworkDic, rpcUrl), chainInfo = (0, 
              gt_on_chain.Qr)(networkKey, totalNetworkDic, rpcUrls), evmAdapter = new ethereum_dist.$d({
                rpcUrl,
                chainId: chainInfo,
                transport: (0, gt_on_chain.et)(rpcUrl)
              }), _context18.abrupt("return", new EvmRpc(wasm, totalNetworkDic, networkKey, rpcUrl, evmProvider, evmAdapter));

             case 12:
             case "end":
              return _context18.stop();
            }
          }), _callee18);
        }))), function(_x20, _x21, _x22, _x23, _x24) {
          return _init.apply(this, arguments);
        })
      }, {
        key: "getContractDecimals",
        value: (_getContractDecimals = evm_rpc_asyncToGenerator(regeneratorRuntime.mark((function _callee19(contract) {
          return regeneratorRuntime.wrap((function(_context19) {
            for (;;) switch (_context19.prev = _context19.next) {
             case 0:
              return _context19.next = 2, contract.methods.decimals().call((function(error, result) {
                return error || result || void 0;
              }));

             case 2:
              return _context19.abrupt("return", _context19.sent);

             case 3:
             case "end":
              return _context19.stop();
            }
          }), _callee19);
        }))), function(_x25) {
          return _getContractDecimals.apply(this, arguments);
        })
      }, {
        key: "fakeExponential",
        value: function(factor, numerator, denominator) {
          for (var output = new bignumber.A(0), accum = (0, bignumber.A)(factor).multipliedBy(denominator), i = new bignumber.A(1); accum.isGreaterThan(0); ) output = output.plus(accum), 
          accum = (accum = accum.multipliedBy(numerator).dividedToIntegerBy(denominator)).dividedToIntegerBy(i), 
          i = i.plus(1);
          return output.dividedToIntegerBy(denominator).toString();
        }
      }, {
        key: "calcExcessBlobGas",
        value: function(parentExcessBlobGas, parentBlobGasUsed) {
          var excessBlobGas = parentExcessBlobGas + parentBlobGasUsed;
          return (0, bignumber.A)(excessBlobGas).isLessThan(EvmRpc.blobTxTargetBlobGasPerBlock) ? "" : (0, 
          bignumber.A)(excessBlobGas).minus(EvmRpc.blobTxTargetBlobGasPerBlock).toString();
        }
      }, {
        key: "calcBlobFee",
        value: function(excessBlobGas) {
          return EvmRpc.fakeExponential(EvmRpc.blobTxMinBlobGasprice, excessBlobGas, EvmRpc.blobTxBlobGaspriceUpdateFraction);
        }
      }, {
        key: "getBlobFeeCapTotal",
        value: function() {
          var blobsCount = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, blobFeeCap = arguments.length > 1 ? arguments[1] : void 0;
          return (0, calculate.dataOperation)(131072 * blobsCount, blobFeeCap);
        }
      }, {
        key: "getSendBlob20Data",
        value: function() {
          return "0x".concat((0, type_transfer.i3)("data:;rule=esip6,"));
        }
      }, {
        key: "getRandomValues",
        value: function(size) {
          var zeroArray = new Uint8Array(size);
          return new Blob([ zeroArray ]);
        }
      }, {
        key: "getVersionedHash",
        value: function(version, hash) {
          for (var versioned = version.toString(16); versioned.length < 2; ) versioned = "0" + versioned;
          return versioned += (0, sha2.s)(hash).substring(4), "0x".concat(versioned);
        }
      }, {
        key: "getEVMAddressFromIOTX",
        value: function(address) {
          try {
            var _from;
            return (0, hd_keyring_esm.BA)(null === (_from = (0, dist.HT)(address)) || void 0 === _from ? void 0 : _from.stringEth());
          } catch (_unused) {
            return "";
          }
        }
      }, {
        key: "getBlob20TransferJson",
        value: function(receiver, amount, ticker) {
          var transfers = [ {
            to: receiver,
            amount: Number(amount)
          } ];
          return '{"protocol":"blob20","token":{"operation":"transfer","ticker":"'.concat(ticker, '","transfers":').concat(JSON.stringify(transfers), "}}");
        }
      } ], protoProps && evm_rpc_defineProperties(Constructor.prototype, protoProps), 
      staticProps && evm_rpc_defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), EvmRpc;
    }();
    evm_rpc_defineProperty(EvmRpc, "blobTxBlobGasPerBlob", 1 << 17), evm_rpc_defineProperty(EvmRpc, "blobTxTargetBlobGasPerBlock", 3 * EvmRpc.blobTxBlobGasPerBlob), 
    evm_rpc_defineProperty(EvmRpc, "blobTxBlobGaspriceUpdateFraction", 3338477), evm_rpc_defineProperty(EvmRpc, "blobTxMinBlobGasprice", 1), 
    evm_rpc_defineProperty(EvmRpc, "getGasPriceFactor", (function(network) {
      return "ETH" === network.networkKey ? 1 : [ "ARB", "BOB", "BASE" ].includes(network.networkKey) ? 6 : [ "MODE" ].includes(network.networkKey) ? 20 : [ "FIL" ].includes(network.networkKey) ? 10 : 2;
    })), evm_rpc_defineProperty(EvmRpc, "getGasLimitFactor", (function(network) {
      return "QUAI" === (null == network ? void 0 : network.chainArchitecture) ? 6 * 1.4 : [ "BLAST", "MERLIN" ].includes(network.networkKey) ? 2.8 : [ "FIL" ].includes(network.networkKey) ? 5.6 : 1.4;
    }));
    const evm_rpc = EvmRpc;
  },
  916224: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
      ConnectWs: () => ConnectWs
    });
    __webpack_require__(505086), __webpack_require__(269193), __webpack_require__(836611), 
    __webpack_require__(487787), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(564216), 
    __webpack_require__(418665), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(207452);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, 
        "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _defineProperty(obj, key, value) {
      return (key = _toPropertyKey(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _toPropertyKey(arg) {
      var key = function(input, hint) {
        if ("object" !== _typeof(input) || null === input) return input;
        var prim = input[Symbol.toPrimitive];
        if (void 0 !== prim) {
          var res = prim.call(input, hint || "default");
          if ("object" !== _typeof(res)) return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === hint ? String : Number)(input);
      }(arg, "string");
      return "symbol" === _typeof(key) ? key : String(key);
    }
    var ConnectWs = function() {
      function ConnectWs(client) {
        !function(instance, Constructor) {
          if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }(this, ConnectWs), _defineProperty(this, "client", null), _defineProperty(this, "isReady", _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
          return regeneratorRuntime.wrap((function(_context) {
            for (;;) switch (_context.prev = _context.next) {
             case 0:
             case "end":
              return _context.stop();
            }
          }), _callee);
        })))), this.client = client;
      }
      var Constructor, protoProps, staticProps, _init;
      return Constructor = ConnectWs, protoProps = null, staticProps = [ {
        key: "init",
        value: (_init = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(url) {
          return regeneratorRuntime.wrap((function(_context2) {
            for (;;) switch (_context2.prev = _context2.next) {
             case 0:
              return _context2.abrupt("return", new Promise((function(resolve) {
                var client = new WebSocket(url);
                client.addEventListener("open", (function() {
                  resolve(new ConnectWs(client));
                }));
              })));

             case 1:
             case "end":
              return _context2.stop();
            }
          }), _callee2);
        }))), function(_x) {
          return _init.apply(this, arguments);
        })
      } ], protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), 
      Object.defineProperty(Constructor, "prototype", {
        writable: !1
      }), ConnectWs;
    }();
  },
  919671: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      A: () => __WEBPACK_DEFAULT_EXPORT__,
      s: () => updateSendBalanceInfo
    });
    var balanceOfSendSlice = (0, __webpack_require__(760258).Z0)({
      name: "balanceOfSend",
      initialState: {
        tokenAssets: 0,
        totalBalance: 0,
        lockBalance: 0,
        coinAvailableNumber: 0,
        isActiveAddr: !1,
        mainCoinBalance: 0
      },
      reducers: {
        updateSendBalanceInfo: function(state, action) {
          return action.payload;
        }
      }
    }), updateSendBalanceInfo = balanceOfSendSlice.actions.updateSendBalanceInfo;
    const __WEBPACK_DEFAULT_EXPORT__ = balanceOfSendSlice.reducer;
  },
  921225: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      IO: () => getBtcPublicKey,
      R$: () => ponyChainKeyChangedToCommonChainKey,
      YA: () => formatMnemonic
    });
    __webpack_require__(207452), __webpack_require__(687136), __webpack_require__(158649), 
    __webpack_require__(868329), __webpack_require__(754989), __webpack_require__(714913), 
    __webpack_require__(505086), __webpack_require__(498741), __webpack_require__(215195), 
    __webpack_require__(929979), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(418665), __webpack_require__(14602), 
    __webpack_require__(504895), __webpack_require__(269193);
    var _wallet__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(620107), _const__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(498050), _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(259159), Buffer = __webpack_require__(348287).Buffer;
    function _readOnlyError(name) {
      throw new TypeError('"' + name + '" is read-only');
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = function(o, minLen) {
          if (!o) return;
          if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          "Object" === n && o.constructor && (n = o.constructor.name);
          if ("Map" === n || "Set" === n) return Array.from(o);
          if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e) {
              throw _e;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e2) {
          didErr = !0, err = _e2;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    var formatMnemonic = function(mnemonic) {
      var _step, words = [], _iterator = _createForOfIteratorHelper(mnemonic.trim().split(" "));
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var _element = _step.value;
          _element && words.push(_element.trim());
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      for (var res = "", _i = 0, _words = words; _i < _words.length; _i++) {
        var element = _words[_i];
        res += " ".concat(element);
      }
      return res.trim();
    }, ponyChainKeyChangedToCommonChainKey = function(ponyChainName) {
      switch (ponyChainName) {
       case "TRX":
        return "TRX";

       case "BNB":
        return "BNB_ORG";

       case "GT":
        return "GT_ORG";
      }
      return ponyChainName;
    }, getBtcPublicKey = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(privateKey) {
        var network, _yield$getWasm2, CoinType, PrivateKey, coinName, privateKeyHex, priv, publicKey, accountPublicKey, _args2 = arguments;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return network = _args2.length > 1 && void 0 !== _args2[1] ? _args2[1] : "BTC", 
            _context2.next = 3, (0, _tallyho_tally_background_lib_utils_wallet_core__WEBPACK_IMPORTED_MODULE_19__.t)();

           case 3:
            return _yield$getWasm2 = _context2.sent, CoinType = _yield$getWasm2.CoinType, PrivateKey = _yield$getWasm2.PrivateKey, 
            coinName = _const__WEBPACK_IMPORTED_MODULE_18__.WALLET_CORE_CHAIN_TO_NAME_MAP[network], 
            (privateKeyHex = (0, _wallet__WEBPACK_IMPORTED_MODULE_17__.XR)(privateKey)).toLowerCase().startsWith("0x") && (privateKeyHex.substring(2), 
            _readOnlyError("privateKeyHex")), priv = PrivateKey.createWithData(Buffer.from(privateKeyHex, "hex")), 
            publicKey = priv.getPublicKey(CoinType[coinName]), accountPublicKey = (0, _wallet__WEBPACK_IMPORTED_MODULE_17__.U5)(publicKey.data()), 
            _context2.abrupt("return", accountPublicKey);

           case 13:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x3) {
        return _ref2.apply(this, arguments);
      };
    }();
  },
  924983: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      EY: () => uint8ArrayToHex,
      JV: () => leToU128,
      My: () => bytesToHex,
      i0: () => strToBytes,
      ld: () => strToBuffer,
      nF: () => remove0x,
      tH: () => u128ToLe
    });
    __webpack_require__(80475), __webpack_require__(259581), __webpack_require__(418665), 
    __webpack_require__(301772), __webpack_require__(505086), __webpack_require__(953746), 
    __webpack_require__(520861), __webpack_require__(571905), __webpack_require__(285213), 
    __webpack_require__(97182), __webpack_require__(512279), __webpack_require__(639302), 
    __webpack_require__(770147), __webpack_require__(866217), __webpack_require__(697966), 
    __webpack_require__(735186), __webpack_require__(135944), __webpack_require__(644787), 
    __webpack_require__(950632), __webpack_require__(552278), __webpack_require__(614245), 
    __webpack_require__(252492), __webpack_require__(193266), __webpack_require__(537192), 
    __webpack_require__(237220), __webpack_require__(482432), __webpack_require__(632483), 
    __webpack_require__(536696), __webpack_require__(458083), __webpack_require__(714913), 
    __webpack_require__(579389), __webpack_require__(906048), __webpack_require__(210557), 
    __webpack_require__(803446), __webpack_require__(433734), __webpack_require__(194009), 
    __webpack_require__(752231), __webpack_require__(339958), __webpack_require__(348825), 
    __webpack_require__(380115), __webpack_require__(754989), __webpack_require__(436148);
    var Buffer = __webpack_require__(348287).Buffer, ArrayBufferToHex = function(arrayBuffer) {
      return Array.prototype.map.call(new Uint8Array(arrayBuffer), (function(x) {
        return ("00" + x.toString(16)).slice(-2);
      })).join("");
    }, bytesToHex = function(bytes) {
      return Buffer.from(bytes).toString("hex");
    }, u32ToHex = function(u32, littleEndian) {
      var buffer = new ArrayBuffer(4);
      return new DataView(buffer).setUint32(0, Number(u32), littleEndian), ArrayBufferToHex(buffer);
    }, u32ToLe = function(u32) {
      return u32ToHex(u32, !0);
    }, leToU128 = function(leHex) {
      var bytes = strToBytes(append0x(leHex)), beHex = "0x".concat(bytes.reduceRight((function(pre, cur) {
        return pre + cur.toString(16).padStart(2, "0");
      }), ""));
      return BigInt(beHex);
    }, u64ToLe = function(u64) {
      var val = u64.toString(16).padStart(16, "0"), viewLeft = u32ToLe("0x".concat(val.slice(8))), viewRight = u32ToLe("0x".concat(val.slice(0, 8)));
      return "".concat(viewLeft).concat(viewRight);
    }, u128ToLe = function(u128) {
      var val = u128.toString(16).padStart(32, "0"), viewLeft = u64ToLe(BigInt("0x".concat(val.slice(16)))), viewRight = u64ToLe(BigInt("0x".concat(val.slice(0, 16))));
      return "".concat(viewLeft).concat(viewRight);
    }, append0x = function(hex) {
      return null != hex && hex.startsWith("0x") ? hex : "0x".concat(hex);
    }, remove0x = function(hex) {
      return hex.startsWith("0x") ? hex.substring(2) : hex;
    }, strToBytes = function(str) {
      var strValue = str;
      return str.startsWith("0x") && (strValue = str.slice(2)), Uint8Array.from(Buffer.from(strValue, "hex"));
    }, uint8ArrayToHex = function(uint8Array) {
      return uint8Array ? Buffer.from(uint8Array).toString("hex") : "";
    }, strToBuffer = function(str) {
      var strValue = str;
      return str.startsWith("0x") && (strValue = str.slice(2)), Buffer.from(strValue, "hex");
    };
  },
  954400: () => {},
  958733: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      e: () => recordData,
      n: () => selectAddress
    });
    __webpack_require__(207452), __webpack_require__(458476), __webpack_require__(658379), 
    __webpack_require__(80475), __webpack_require__(418665), __webpack_require__(505086), 
    __webpack_require__(269193), __webpack_require__(929979), __webpack_require__(14602), 
    __webpack_require__(504895), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(714913), __webpack_require__(498741), 
    __webpack_require__(215195), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(194009), __webpack_require__(815852), __webpack_require__(407899), 
    __webpack_require__(700017), __webpack_require__(110678), __webpack_require__(103101), 
    __webpack_require__(936012);
    var _utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(219740), _crypto_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(532437), _dataUtils__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(845404), _api_api__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(653360), _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(419969), _config__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(289933);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || function(o, minLen) {
        if (!o) return;
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        "Object" === n && o.constructor && (n = o.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(o);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    var selectAddress = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
        var wallet_network, wallet_address, _yield$getSelectedWal, account, accountAddress, netWorkArr, addressArr;
        return regeneratorRuntime.wrap((function(_context) {
          for (;;) switch (_context.prev = _context.next) {
           case 0:
            return wallet_network = "", wallet_address = "", _context.next = 3, (0, _dataUtils__WEBPACK_IMPORTED_MODULE_27__.getSelectedWallet)();

           case 3:
            return _yield$getSelectedWal = _context.sent, account = _yield$getSelectedWal.account, 
            _context.next = 7, (0, _dataUtils__WEBPACK_IMPORTED_MODULE_27__.getAccountAddress)(account, "chainAddress");

           case 7:
            return accountAddress = _context.sent, netWorkArr = [], addressArr = [], accountAddress.forEach((function(el) {
              netWorkArr.push(el.network), addressArr.push(el.address);
            })), wallet_network = netWorkArr.join(","), wallet_address = addressArr.join(","), 
            _context.abrupt("return", {
              wallet_network,
              wallet_address
            });

           case 13:
           case "end":
            return _context.stop();
          }
        }), _callee);
      })));
      return function() {
        return _ref.apply(this, arguments);
      };
    }(), recordData = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(page_type, extraParams) {
        var _yield$Promise$all, _yield$Promise$all2, _yield$Promise$all2$, wallet_network, wallet_address, userInfo, devicetoken, options;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            if (page_type) {
              _context2.next = 2;
              break;
            }
            return _context2.abrupt("return");

           case 2:
            return _context2.next = 4, Promise.all([ selectAddress(), (0, _crypto_js__WEBPACK_IMPORTED_MODULE_26__.pZ)("uid") ]);

           case 4:
            if (_yield$Promise$all = _context2.sent, _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2), 
            _yield$Promise$all2$ = _yield$Promise$all2[0], wallet_network = _yield$Promise$all2$.wallet_network, 
            wallet_address = _yield$Promise$all2$.wallet_address, userInfo = _yield$Promise$all2[1], 
            devicetoken = (0, _crypto_js__WEBPACK_IMPORTED_MODULE_26__.h2)("DeviceToken1")) {
              _context2.next = 17;
              break;
            }
            return options = {
              appId: _config__WEBPACK_IMPORTED_MODULE_30__.B7,
              server: _config__WEBPACK_IMPORTED_MODULE_30__.O8
            }, _context2.next = 15, window._dx.ConstID(options);

           case 15:
            devicetoken = _context2.sent, (0, _crypto_js__WEBPACK_IMPORTED_MODULE_26__.SD)("DeviceToken1", devicetoken, 1);

           case 17:
            return _context2.abrupt("return", _api_api__WEBPACK_IMPORTED_MODULE_28__.walletRecord(_objectSpread(_objectSpread({
              wallet_network,
              wallet_address,
              source: "plug",
              user_id: (null == userInfo ? void 0 : userInfo.checkValue) || "",
              user_terminal: _manifest_manifest_json__WEBPACK_IMPORTED_MODULE_29__.version || "pc",
              user_browser: "google",
              user_system: (0, _utils__WEBPACK_IMPORTED_MODULE_25__.RR)()
            }, extraParams), {}, {
              page_type
            }), {
              deviceToken: devicetoken
            }));

           case 18:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      })));
      return function(_x, _x2) {
        return _ref2.apply(this, arguments);
      };
    }();
  },
  967908: module => {
    function webpackEmptyContext(req) {
      var e = new Error("Cannot find module '" + req + "'");
      throw e.code = "MODULE_NOT_FOUND", e;
    }
    webpackEmptyContext.keys = () => [], webpackEmptyContext.resolve = webpackEmptyContext, 
    webpackEmptyContext.id = 967908, module.exports = webpackEmptyContext;
  },
  984102: () => {},
  985120: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    __webpack_require__.d(__webpack_exports__, {
      Kb: () => handlePostWalletReport,
      em: () => handlePostChangeWallet
    });
    __webpack_require__(207452), __webpack_require__(504895), __webpack_require__(990345), 
    __webpack_require__(259581), __webpack_require__(700017), __webpack_require__(447746), 
    __webpack_require__(43148), __webpack_require__(418665), __webpack_require__(107918), 
    __webpack_require__(505086), __webpack_require__(929979), __webpack_require__(579404), 
    __webpack_require__(39982), __webpack_require__(957399), __webpack_require__(686970), 
    __webpack_require__(811048), __webpack_require__(202236), __webpack_require__(971650), 
    __webpack_require__(326884), __webpack_require__(58710), __webpack_require__(563617), 
    __webpack_require__(383019), __webpack_require__(698657), __webpack_require__(753380), 
    __webpack_require__(14602), __webpack_require__(445708), __webpack_require__(788198), 
    __webpack_require__(727918), __webpack_require__(868900), __webpack_require__(670708), 
    __webpack_require__(532657), __webpack_require__(321452), __webpack_require__(36546), 
    __webpack_require__(291749), __webpack_require__(466754), __webpack_require__(836299), 
    __webpack_require__(143643), __webpack_require__(613053), __webpack_require__(911029), 
    __webpack_require__(569155), __webpack_require__(223070), __webpack_require__(313696), 
    __webpack_require__(80475), __webpack_require__(407899), __webpack_require__(458476), 
    __webpack_require__(658379), __webpack_require__(194009), __webpack_require__(579389), 
    __webpack_require__(380115), __webpack_require__(992157), __webpack_require__(269193), 
    __webpack_require__(118772), __webpack_require__(714913), __webpack_require__(498741), 
    __webpack_require__(215195), __webpack_require__(863534), __webpack_require__(540590), 
    __webpack_require__(564216), __webpack_require__(836611), __webpack_require__(487787), 
    __webpack_require__(815852), __webpack_require__(110678), __webpack_require__(103101), 
    __webpack_require__(936012);
    var _bg_utils_gt_api_account_index__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(724959), _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(639319), _local_storage_shim__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(323101), _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(291842);
    function _typeof(obj) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }
    function _slicedToArray(arr, i) {
      return function(arr) {
        if (Array.isArray(arr)) return arr;
      }(arr) || function(arr, i) {
        var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
        if (null != _i) {
          var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
          try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
              if (Object(_i) !== _i) return;
              _n = !1;
            } else for (;!(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
          } catch (err) {
            _d = !0, _e = err;
          } finally {
            try {
              if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;
            } finally {
              if (_d) throw _e;
            }
          }
          return _arr;
        }
      }(arr, i) || _unsupportedIterableToArray(arr, i) || function() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg), value = info.value;
      } catch (error) {
        return void reject(error);
      }
      info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw);
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise((function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        }));
      };
    }
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter((function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        }))), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
          _defineProperty(target, key, source[key]);
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        }));
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      return (key = function(arg) {
        var key = function(input, hint) {
          if ("object" !== _typeof(input) || null === input) return input;
          var prim = input[Symbol.toPrimitive];
          if (void 0 !== prim) {
            var res = prim.call(input, hint || "default");
            if ("object" !== _typeof(res)) return res;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return ("string" === hint ? String : Number)(input);
        }(arg, "string");
        return "symbol" === _typeof(key) ? key : String(key);
      }(key)) in obj ? Object.defineProperty(obj, key, {
        value,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : obj[key] = value, obj;
    }
    function _createForOfIteratorHelper(o, allowArrayLike) {
      var it = "undefined" != typeof Symbol && o[Symbol.iterator] || o["@@iterator"];
      if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && "number" == typeof o.length) {
          it && (o = it);
          var i = 0, F = function() {};
          return {
            s: F,
            n: function() {
              return i >= o.length ? {
                done: !0
              } : {
                done: !1,
                value: o[i++]
              };
            },
            e: function(_e2) {
              throw _e2;
            },
            f: F
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      var err, normalCompletion = !0, didErr = !1;
      return {
        s: function() {
          it = it.call(o);
        },
        n: function() {
          var step = it.next();
          return normalCompletion = step.done, step;
        },
        e: function(_e3) {
          didErr = !0, err = _e3;
        },
        f: function() {
          try {
            normalCompletion || null == it.return || it.return();
          } finally {
            if (didErr) throw err;
          }
        }
      };
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (o) {
        if ("string" == typeof o) return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        return "Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n ? Array.from(o) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(o, minLen) : void 0;
      }
    }
    function _arrayLikeToArray(arr, len) {
      (null == len || len > arr.length) && (len = arr.length);
      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
      return arr2;
    }
    function filterDuplicateEthAddresses(walletData) {
      var ethAddressMap = new Map, filteredData = JSON.parse(JSON.stringify(walletData));
      return filteredData.wallets = filteredData.wallets.filter((function(wallet) {
        var _step, isDuplicate = !1, _iterator = _createForOfIteratorHelper(wallet.accounts);
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var account = _step.value;
            if (Array.isArray(account.chainAddressList)) {
              var _step3, listLength = account.chainAddressList.length, _iterator3 = _createForOfIteratorHelper(account.chainAddressList);
              try {
                for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                  var addressItem = _step3.value;
                  if ("ETH" === addressItem.networkKey && addressItem.chainAddress) {
                    var ethAddress = addressItem.chainAddress;
                    if (ethAddressMap.has(ethAddress)) {
                      if (ethAddressMap.get(ethAddress) === listLength) {
                        isDuplicate = !0;
                        break;
                      }
                    } else ethAddressMap.set(ethAddress, listLength);
                  }
                }
              } catch (err) {
                _iterator3.e(err);
              } finally {
                _iterator3.f();
              }
              if (isDuplicate) break;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        if (isDuplicate) return !1;
        var _step2, _iterator2 = _createForOfIteratorHelper(wallet.accounts);
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
            var _account = _step2.value;
            if (Array.isArray(_account.chainAddressList)) {
              var _step4, _listLength = _account.chainAddressList.length, _iterator4 = _createForOfIteratorHelper(_account.chainAddressList);
              try {
                for (_iterator4.s(); !(_step4 = _iterator4.n()).done; ) {
                  var _addressItem = _step4.value;
                  "ETH" === _addressItem.networkKey && _addressItem.chainAddress && ethAddressMap.set(_addressItem.chainAddress, _listLength);
                }
              } catch (err) {
                _iterator4.e(err);
              } finally {
                _iterator4.f();
              }
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        return !0;
      })), filteredData;
    }
    var buildReportContent = function(walletAccountData, networks) {
      var evmChainsList = function(networks) {
        return (Array.isArray(networks) ? networks : Object.values(networks)).filter((function(network) {
          return "EVM" === network.chainArchitecture && !network.networkKey.includes("_GATETEST");
        })).map((function(network) {
          return network.networkKey;
        }));
      }(networks), allValidChainsList = function(networks) {
        return (Array.isArray(networks) ? networks : Object.values(networks)).filter((function(network) {
          return !network.networkKey.includes("_GATETEST");
        })).map((function(network) {
          return network.networkKey;
        }));
      }(networks), chainAddressList = [], evmAddresses = new Set;
      for (var chainName in walletAccountData) if (Array.isArray(walletAccountData[chainName]) && 0 !== walletAccountData[chainName].length && allValidChainsList.includes(chainName)) {
        var _step5, isEvm = evmChainsList.includes(chainName), _iterator5 = _createForOfIteratorHelper(walletAccountData[chainName]);
        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done; ) {
            var account = _step5.value;
            if (null != account && account.accountAddress) if (isEvm) {
              var addressLower = account.accountAddress.toLowerCase();
              if (!evmAddresses.has(addressLower)) {
                var _account$accountForma;
                evmAddresses.add(addressLower);
                var evmData = {
                  networkKey: "ETH",
                  accountKey: "ETH",
                  chains: evmChainsList.filter((function(chain) {
                    return Object.keys(walletAccountData).includes(chain);
                  })).join(","),
                  chainAddress: account.accountAddress,
                  accountFormat: null !== (_account$accountForma = account.accountFormat) && void 0 !== _account$accountForma ? _account$accountForma : "",
                  accountName: account.accountName
                };
                chainAddressList.push(evmData);
              }
            } else {
              var _account$accountForma2, networkData = {
                networkKey: chainName,
                accountKey: chainName,
                chainAddress: account.accountAddress,
                chains: chainName,
                accountFormat: null !== (_account$accountForma2 = account.accountFormat) && void 0 !== _account$accountForma2 ? _account$accountForma2 : "",
                accountName: account.accountName
              };
              chainAddressList.push(networkData);
            }
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
      }
      return chainAddressList;
    };
    function convertWalletDataToParams(data, networks, walletIds) {
      var result = {
        wallets: []
      };
      Array.isArray(data) && (walletIds ? data.filter((function(wallet) {
        return walletIds.includes(wallet.walletID);
      })) : data).forEach((function(wallet) {
        var walletItem = {
          walletReportType: "0" === String(wallet.walletCreateType) ? 1 : "1" === String(wallet.walletCreateType) || "2" === String(wallet.walletCreateType) || "3" === String(wallet.walletCreateType) ? 2 : 9,
          walletName: wallet.walletName,
          platformType: "plug",
          walletCreateType: Number(wallet.walletCreateType),
          walletCreateTime: wallet.walletCreateTime || (new Date).getTime(),
          accounts: []
        };
        wallet.walletAccountArr.forEach((function(account) {
          var chainAddressList = buildReportContent(account, networks), accountItem = {
            accountName: account.accountName,
            chainAddressList
          };
          accountItem.chainAddressList.length > 0 && walletItem.accounts.push(accountItem);
        })), walletItem.accounts.length > 0 && result.wallets.push(walletItem);
      }));
      return result;
    }
    function mergeSameTypeChainAddresses(params) {
      return params.map((function(wallet) {
        var updatedAccounts = wallet.accounts.map((function(account) {
          var keysToRemove = new Set, aptChains = "APT", solChains = "SOL";
          account.chainAddressList.forEach((function(item) {
            _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_67__.dQ.includes(item.networkKey) && "APT" !== item.networkKey && (aptChains = "".concat(aptChains, ",").concat(item.networkKey), 
            keysToRemove.add(item.networkKey)), _bg_constants_gt_wallet_config__WEBPACK_IMPORTED_MODULE_67__.cI.includes(item.networkKey) && "SOL" !== item.networkKey && (solChains = "".concat(solChains, ",").concat(item.networkKey), 
            keysToRemove.add(item.networkKey));
          }));
          var filteredChainAddressList = account.chainAddressList.filter((function(item) {
            return !keysToRemove.has(item.networkKey);
          })).map((function(item) {
            return "APT" === item.networkKey ? _objectSpread(_objectSpread({}, item), {}, {
              chains: aptChains
            }) : "SOL" === item.networkKey ? _objectSpread(_objectSpread({}, item), {}, {
              chains: solChains
            }) : item;
          }));
          return _objectSpread(_objectSpread({}, account), {}, {
            chainAddressList: filteredChainAddressList
          });
        }));
        return _objectSpread(_objectSpread({}, wallet), {}, {
          accounts: updatedAccounts
        });
      }));
    }
    function handlePostWalletReport(_x, _x2) {
      return _handlePostWalletReport.apply(this, arguments);
    }
    function _handlePostWalletReport() {
      return _handlePostWalletReport = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(networks, options) {
        var maxRetries, retries, attemptReport, _attemptReport, _args2 = arguments;
        return regeneratorRuntime.wrap((function(_context2) {
          for (;;) switch (_context2.prev = _context2.next) {
           case 0:
            return _attemptReport = function() {
              return (_attemptReport = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
                var localWalletData, params, filteredParams, duplicateMapping, reportedWalletIndices, mappingResult, mergedParams, serverData, _error$details, code;
                return regeneratorRuntime.wrap((function(_context) {
                  for (;;) switch (_context.prev = _context.next) {
                   case 0:
                    return _context.prev = 0, _context.next = 3, (0, _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_65__.fw)();

                   case 3:
                    return localWalletData = _context.sent, (null == options ? void 0 : options.reportType) || (null != options && options.walletIds ? "partial" : "full"), 
                    _context.next = 7, convertWalletDataToParams(localWalletData.walletArr, networks, null == options ? void 0 : options.walletIds);

                   case 7:
                    return params = _context.sent, filteredParams = filterDuplicateEthAddresses(params), 
                    duplicateMapping = new Map, reportedWalletIndices = [], null != options && options.walletIds ? reportedWalletIndices = options.walletIds.map((function(walletId) {
                      return localWalletData.walletArr.findIndex((function(wallet) {
                        return wallet.walletID === walletId;
                      }));
                    })).filter((function(index) {
                      return -1 !== index;
                    })) : (mappingResult = buildDuplicateMapping(params.wallets, filteredParams.wallets, localWalletData.walletArr), 
                    duplicateMapping = mappingResult.duplicateMapping, reportedWalletIndices = mappingResult.reportedWalletIndices), 
                    mergedParams = mergeSameTypeChainAddresses(filteredParams.wallets), _context.next = 15, 
                    (0, _bg_utils_gt_api_account_index__WEBPACK_IMPORTED_MODULE_64__.Cc)({
                      wallets: mergedParams
                    });

                   case 15:
                    if (null == (serverData = _context.sent) || !serverData.wallets) {
                      _context.next = 22;
                      break;
                    }
                    return _context.next = 19, updateReportedWalletIds(localWalletData, serverData.wallets, reportedWalletIndices);

                   case 19:
                    if (null != options && options.walletIds || !(duplicateMapping.size > 0)) {
                      _context.next = 22;
                      break;
                    }
                    return _context.next = 22, updateDuplicateWalletIds(duplicateMapping);

                   case 22:
                    return localStorage.setItem("riskControl", "0"), _context.abrupt("return", !0);

                   case 26:
                    if (_context.prev = 26, _context.t0 = _context.catch(0), !(code = null === _context.t0 || void 0 === _context.t0 || null === (_error$details = _context.t0.details) || void 0 === _error$details ? void 0 : _error$details.code) || "10011107" != code) {
                      _context.next = 33;
                      break;
                    }
                    localStorage.setItem("riskControl", "1"), _context.next = 39;
                    break;

                   case 33:
                    if (localStorage.setItem("riskControl", "0"), !(retries < maxRetries - 1)) {
                      _context.next = 39;
                      break;
                    }
                    return retries++, _context.next = 38, new Promise((function(resolve) {
                      return setTimeout(resolve, 4e3);
                    }));

                   case 38:
                    return _context.abrupt("return", attemptReport());

                   case 39:
                    return _context.abrupt("return", !1);

                   case 40:
                   case "end":
                    return _context.stop();
                  }
                }), _callee, null, [ [ 0, 26 ] ]);
              })))).apply(this, arguments);
            }, attemptReport = function() {
              return _attemptReport.apply(this, arguments);
            }, maxRetries = _args2.length > 2 && void 0 !== _args2[2] ? _args2[2] : 3, retries = 0, 
            _context2.abrupt("return", attemptReport());

           case 5:
           case "end":
            return _context2.stop();
          }
        }), _callee2);
      }))), _handlePostWalletReport.apply(this, arguments);
    }
    function buildDuplicateMapping(originalWallets, filteredWallets, localWalletArr) {
      for (var duplicateMapping = new Map, reportedWalletIndices = [], filteredWalletIndex = 0, i = 0; i < originalWallets.length; i++) filteredWalletIndex < filteredWallets.length && JSON.stringify(originalWallets[i]) === JSON.stringify(filteredWallets[filteredWalletIndex]) && (reportedWalletIndices.push(i), 
      filteredWalletIndex++);
      for (var ethToWalletIndexMap = new Map, _i = 0; _i < localWalletArr.length; _i++) {
        var _step6, _iterator6 = _createForOfIteratorHelper(localWalletArr[_i].walletAccountArr);
        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done; ) {
            var account = _step6.value;
            if (account.ETH && Array.isArray(account.ETH)) {
              var _step7, _iterator7 = _createForOfIteratorHelper(account.ETH);
              try {
                for (_iterator7.s(); !(_step7 = _iterator7.n()).done; ) {
                  var ethAccount = _step7.value;
                  if (null != ethAccount && ethAccount.accountAddress) {
                    var ethAddress = ethAccount.accountAddress.toLowerCase();
                    ethToWalletIndexMap.has(ethAddress) || ethToWalletIndexMap.set(ethAddress, _i);
                  }
                }
              } catch (err) {
                _iterator7.e(err);
              } finally {
                _iterator7.f();
              }
            }
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
      }
      for (var _i2 = 0; _i2 < localWalletArr.length; _i2++) if (!reportedWalletIndices.includes(_i2)) {
        var _step8, isHandled = !1, _iterator8 = _createForOfIteratorHelper(localWalletArr[_i2].walletAccountArr);
        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done; ) {
            var _account2 = _step8.value;
            if (_account2.ETH && Array.isArray(_account2.ETH)) {
              var _step9, _iterator9 = _createForOfIteratorHelper(_account2.ETH);
              try {
                for (_iterator9.s(); !(_step9 = _iterator9.n()).done; ) {
                  var _ethAccount = _step9.value;
                  if (null != _ethAccount && _ethAccount.accountAddress) {
                    var _ethAddress = _ethAccount.accountAddress.toLowerCase();
                    if (ethToWalletIndexMap.has(_ethAddress)) {
                      var mappedIndex = ethToWalletIndexMap.get(_ethAddress);
                      if (reportedWalletIndices.includes(mappedIndex) && mappedIndex !== _i2) {
                        duplicateMapping.set(_i2, mappedIndex), isHandled = !0;
                        break;
                      }
                    }
                  }
                }
              } catch (err) {
                _iterator9.e(err);
              } finally {
                _iterator9.f();
              }
              if (isHandled) break;
            }
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
      }
      return {
        duplicateMapping,
        reportedWalletIndices
      };
    }
    function updateReportedWalletIds(_x3, _x4, _x5) {
      return _updateReportedWalletIds.apply(this, arguments);
    }
    function _updateReportedWalletIds() {
      return (_updateReportedWalletIds = _asyncToGenerator(regeneratorRuntime.mark((function _callee4(localWalletData, serverAccounts, reportedWalletIndices) {
        var updatedWalletArr, finalSelectedWalletDic, i, serverWallet, localWalletIndex;
        return regeneratorRuntime.wrap((function(_context4) {
          for (;;) switch (_context4.prev = _context4.next) {
           case 0:
            updatedWalletArr = JSON.parse(JSON.stringify(localWalletData.walletArr)), finalSelectedWalletDic = _objectSpread({}, localWalletData.selectedWalletDic), 
            i = 0;

           case 3:
            if (!(i < serverAccounts.length)) {
              _context4.next = 11;
              break;
            }
            if (serverWallet = serverAccounts[i], void 0 === (localWalletIndex = reportedWalletIndices[i]) || !updatedWalletArr[localWalletIndex]) {
              _context4.next = 8;
              break;
            }
            return _context4.delegateYield(regeneratorRuntime.mark((function _callee3() {
              var wallet_id, currentWalletID, walletCreateType, accountIndex, account_id, currentAccountID, deletedWalletIdsRaw, deletedWalletIds, newDeletedWalletIds;
              return regeneratorRuntime.wrap((function(_context3) {
                for (;;) switch (_context3.prev = _context3.next) {
                 case 0:
                  if (wallet_id = serverWallet.walletID, currentWalletID = updatedWalletArr[localWalletIndex].walletID, 
                  walletCreateType = updatedWalletArr[localWalletIndex].walletCreateType, wallet_id && (updatedWalletArr[localWalletIndex].walletID = wallet_id), 
                  !(serverWallet.accountID && Array.isArray(serverWallet.accountID) && updatedWalletArr[localWalletIndex].walletAccountArr)) {
                    _context3.next = 23;
                    break;
                  }
                  accountIndex = 0;

                 case 6:
                  if (!(accountIndex < serverWallet.accountID.length)) {
                    _context3.next = 23;
                    break;
                  }
                  if (account_id = serverWallet.accountID[accountIndex], !updatedWalletArr[localWalletIndex].walletAccountArr[accountIndex]) {
                    _context3.next = 20;
                    break;
                  }
                  if (currentAccountID = updatedWalletArr[localWalletIndex].walletAccountArr[accountIndex].accountID, 
                  updatedWalletArr[localWalletIndex].walletAccountArr[accountIndex].accountID = account_id, 
                  !localWalletData.selectedWalletDic || localWalletData.selectedWalletDic.walletID !== currentWalletID || localWalletData.selectedWalletDic.accountID !== currentAccountID) {
                    _context3.next = 20;
                    break;
                  }
                  return _context3.next = 14, _local_storage_shim__WEBPACK_IMPORTED_MODULE_66__.A.getItem("deletedWalletIds");

                 case 14:
                  if (deletedWalletIdsRaw = _context3.sent, deletedWalletIds = [], "string" == typeof deletedWalletIdsRaw) try {
                    deletedWalletIds = JSON.parse(deletedWalletIdsRaw);
                  } catch (_unused) {
                    deletedWalletIds = [];
                  } else Array.isArray(deletedWalletIdsRaw) && (deletedWalletIds = deletedWalletIdsRaw);
                  deletedWalletIds.includes(wallet_id) && (updatedWalletArr[localWalletIndex].walletCloudBackup = !0, 
                  newDeletedWalletIds = deletedWalletIds.filter((function(id) {
                    return id !== wallet_id;
                  })), _local_storage_shim__WEBPACK_IMPORTED_MODULE_66__.A.setItem("deletedWalletIds", JSON.stringify(newDeletedWalletIds))), 
                  finalSelectedWalletDic = _objectSpread(_objectSpread({}, finalSelectedWalletDic), {}, {
                    accountID: account_id,
                    walletID: wallet_id,
                    walletCreateType
                  });

                 case 20:
                  accountIndex++, _context3.next = 6;
                  break;

                 case 23:
                 case "end":
                  return _context3.stop();
                }
              }), _callee3);
            }))(), "t0", 8);

           case 8:
            i++, _context4.next = 3;
            break;

           case 11:
            return _context4.next = 13, (0, _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_65__.YP)(_objectSpread(_objectSpread({}, localWalletData), {}, {
              selectedWalletDic: finalSelectedWalletDic,
              walletArr: updatedWalletArr
            }));

           case 13:
            return _context4.abrupt("return", updatedWalletArr);

           case 14:
           case "end":
            return _context4.stop();
          }
        }), _callee4);
      })))).apply(this, arguments);
    }
    function updateDuplicateWalletIds(_x6) {
      return _updateDuplicateWalletIds.apply(this, arguments);
    }
    function _updateDuplicateWalletIds() {
      return (_updateDuplicateWalletIds = _asyncToGenerator(regeneratorRuntime.mark((function _callee5(duplicateMapping) {
        var localWalletData, updatedWalletArr, finalSelectedWalletDic, _iterator10, _step10, _step10$value, duplicateIndex, originalIndex, originalWallet, duplicateWallet, currentWalletID, i, currentAccountID;
        return regeneratorRuntime.wrap((function(_context5) {
          for (;;) switch (_context5.prev = _context5.next) {
           case 0:
            if (0 !== duplicateMapping.size) {
              _context5.next = 2;
              break;
            }
            return _context5.abrupt("return", !0);

           case 2:
            return _context5.next = 4, (0, _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_65__.fw)();

           case 4:
            localWalletData = _context5.sent, updatedWalletArr = JSON.parse(JSON.stringify(localWalletData.walletArr)), 
            finalSelectedWalletDic = _objectSpread({}, localWalletData.selectedWalletDic), _iterator10 = _createForOfIteratorHelper(duplicateMapping.entries());
            try {
              for (_iterator10.s(); !(_step10 = _iterator10.n()).done; ) if (_step10$value = _slicedToArray(_step10.value, 2), 
              duplicateIndex = _step10$value[0], originalIndex = _step10$value[1], originalWallet = updatedWalletArr[originalIndex], 
              duplicateWallet = updatedWalletArr[duplicateIndex], originalWallet && duplicateWallet) for (currentWalletID = duplicateWallet.walletID, 
              duplicateWallet.walletID = originalWallet.walletID, i = 0; i < Math.min(duplicateWallet.walletAccountArr.length, originalWallet.walletAccountArr.length); i++) currentAccountID = duplicateWallet.walletAccountArr[i].accountID, 
              duplicateWallet.walletAccountArr[i].accountID = originalWallet.walletAccountArr[i].accountID, 
              localWalletData.selectedWalletDic && localWalletData.selectedWalletDic.walletID === currentWalletID && localWalletData.selectedWalletDic.accountID === currentAccountID && (finalSelectedWalletDic = _objectSpread(_objectSpread({}, finalSelectedWalletDic), {}, {
                walletID: originalWallet.walletID,
                accountID: originalWallet.walletAccountArr[i].accountID,
                walletCreateType: duplicateWallet.walletCreateType
              }));
            } catch (err) {
              _iterator10.e(err);
            } finally {
              _iterator10.f();
            }
            return _context5.next = 11, (0, _bg_utils_gt_wallet_helper_data__WEBPACK_IMPORTED_MODULE_65__.YP)(_objectSpread(_objectSpread({}, localWalletData), {}, {
              selectedWalletDic: finalSelectedWalletDic,
              walletArr: updatedWalletArr
            }));

           case 11:
            return _context5.abrupt("return", !0);

           case 12:
           case "end":
            return _context5.stop();
          }
        }), _callee5);
      })))).apply(this, arguments);
    }
    function handlePostChangeWallet(_x7) {
      return _handlePostChangeWallet.apply(this, arguments);
    }
    function _handlePostChangeWallet() {
      return (_handlePostChangeWallet = _asyncToGenerator(regeneratorRuntime.mark((function _callee6(params) {
        var res;
        return regeneratorRuntime.wrap((function(_context6) {
          for (;;) switch (_context6.prev = _context6.next) {
           case 0:
            return _context6.next = 2, (0, _bg_utils_gt_api_account_index__WEBPACK_IMPORTED_MODULE_64__.u9)(params);

           case 2:
            return res = _context6.sent, _context6.abrupt("return", res);

           case 4:
           case "end":
            return _context6.stop();
          }
        }), _callee6);
      })))).apply(this, arguments);
    }
  },
  989513: () => {}
} ]);